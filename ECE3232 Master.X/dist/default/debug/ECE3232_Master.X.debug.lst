

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 05 10:51:35 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 11/01/2024 GMT
    47                           ; 
    48                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F18855 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     0010                     	;# 
    96     0011                     	;# 
    97     0012                     	;# 
    98     0013                     	;# 
    99     0016                     	;# 
   100     0017                     	;# 
   101     0018                     	;# 
   102     001C                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     008C                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0090                     	;# 
   116     0091                     	;# 
   117     0093                     	;# 
   118     0094                     	;# 
   119     0095                     	;# 
   120     0096                     	;# 
   121     0097                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009E                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010E                     	;# 
   133     010F                     	;# 
   134     0110                     	;# 
   135     0110                     	;# 
   136     0111                     	;# 
   137     0112                     	;# 
   138     0112                     	;# 
   139     0113                     	;# 
   140     0114                     	;# 
   141     0114                     	;# 
   142     0115                     	;# 
   143     0116                     	;# 
   144     0116                     	;# 
   145     0117                     	;# 
   146     0119                     	;# 
   147     0119                     	;# 
   148     0119                     	;# 
   149     011A                     	;# 
   150     011A                     	;# 
   151     011A                     	;# 
   152     011B                     	;# 
   153     011B                     	;# 
   154     011B                     	;# 
   155     011B                     	;# 
   156     011B                     	;# 
   157     011C                     	;# 
   158     011C                     	;# 
   159     011C                     	;# 
   160     011D                     	;# 
   161     011D                     	;# 
   162     011D                     	;# 
   163     011E                     	;# 
   164     011E                     	;# 
   165     011E                     	;# 
   166     011F                     	;# 
   167     011F                     	;# 
   168     011F                     	;# 
   169     011F                     	;# 
   170     011F                     	;# 
   171     018C                     	;# 
   172     018D                     	;# 
   173     018E                     	;# 
   174     018F                     	;# 
   175     0190                     	;# 
   176     0191                     	;# 
   177     0192                     	;# 
   178     0196                     	;# 
   179     0197                     	;# 
   180     0198                     	;# 
   181     0199                     	;# 
   182     019A                     	;# 
   183     019B                     	;# 
   184     019C                     	;# 
   185     020C                     	;# 
   186     020C                     	;# 
   187     020D                     	;# 
   188     020E                     	;# 
   189     020F                     	;# 
   190     020F                     	;# 
   191     0210                     	;# 
   192     0210                     	;# 
   193     0211                     	;# 
   194     0211                     	;# 
   195     0212                     	;# 
   196     0212                     	;# 
   197     0213                     	;# 
   198     0214                     	;# 
   199     0215                     	;# 
   200     0215                     	;# 
   201     0216                     	;# 
   202     0216                     	;# 
   203     0217                     	;# 
   204     0217                     	;# 
   205     0218                     	;# 
   206     0218                     	;# 
   207     0219                     	;# 
   208     021A                     	;# 
   209     021B                     	;# 
   210     021B                     	;# 
   211     021C                     	;# 
   212     021C                     	;# 
   213     021D                     	;# 
   214     021D                     	;# 
   215     021E                     	;# 
   216     021F                     	;# 
   217     028C                     	;# 
   218     028C                     	;# 
   219     028D                     	;# 
   220     028D                     	;# 
   221     028E                     	;# 
   222     028F                     	;# 
   223     0290                     	;# 
   224     0290                     	;# 
   225     0291                     	;# 
   226     0292                     	;# 
   227     0292                     	;# 
   228     0293                     	;# 
   229     0293                     	;# 
   230     0294                     	;# 
   231     0295                     	;# 
   232     0296                     	;# 
   233     0296                     	;# 
   234     0297                     	;# 
   235     0298                     	;# 
   236     0298                     	;# 
   237     0299                     	;# 
   238     0299                     	;# 
   239     029A                     	;# 
   240     029B                     	;# 
   241     029C                     	;# 
   242     029C                     	;# 
   243     029D                     	;# 
   244     030C                     	;# 
   245     030C                     	;# 
   246     030D                     	;# 
   247     030E                     	;# 
   248     030F                     	;# 
   249     0310                     	;# 
   250     0310                     	;# 
   251     0311                     	;# 
   252     0312                     	;# 
   253     0313                     	;# 
   254     0314                     	;# 
   255     0314                     	;# 
   256     0315                     	;# 
   257     0316                     	;# 
   258     0317                     	;# 
   259     0318                     	;# 
   260     0318                     	;# 
   261     0319                     	;# 
   262     031A                     	;# 
   263     031B                     	;# 
   264     031C                     	;# 
   265     031C                     	;# 
   266     031D                     	;# 
   267     031E                     	;# 
   268     031F                     	;# 
   269     038C                     	;# 
   270     038C                     	;# 
   271     038D                     	;# 
   272     038E                     	;# 
   273     0390                     	;# 
   274     0390                     	;# 
   275     0391                     	;# 
   276     0392                     	;# 
   277     040C                     	;# 
   278     040D                     	;# 
   279     040E                     	;# 
   280     040F                     	;# 
   281     0410                     	;# 
   282     0411                     	;# 
   283     0416                     	;# 
   284     0416                     	;# 
   285     0417                     	;# 
   286     0418                     	;# 
   287     0418                     	;# 
   288     0419                     	;# 
   289     041A                     	;# 
   290     041A                     	;# 
   291     041B                     	;# 
   292     041C                     	;# 
   293     041C                     	;# 
   294     041D                     	;# 
   295     041E                     	;# 
   296     041F                     	;# 
   297     048C                     	;# 
   298     048C                     	;# 
   299     048D                     	;# 
   300     048E                     	;# 
   301     048F                     	;# 
   302     048F                     	;# 
   303     0490                     	;# 
   304     0491                     	;# 
   305     0492                     	;# 
   306     0492                     	;# 
   307     0493                     	;# 
   308     0494                     	;# 
   309     0495                     	;# 
   310     0495                     	;# 
   311     0496                     	;# 
   312     0497                     	;# 
   313     0498                     	;# 
   314     0499                     	;# 
   315     049A                     	;# 
   316     049B                     	;# 
   317     049C                     	;# 
   318     049D                     	;# 
   319     050C                     	;# 
   320     050C                     	;# 
   321     050D                     	;# 
   322     050E                     	;# 
   323     050F                     	;# 
   324     050F                     	;# 
   325     0510                     	;# 
   326     0511                     	;# 
   327     0512                     	;# 
   328     0512                     	;# 
   329     0513                     	;# 
   330     0514                     	;# 
   331     0515                     	;# 
   332     0515                     	;# 
   333     0516                     	;# 
   334     0517                     	;# 
   335     0518                     	;# 
   336     0519                     	;# 
   337     051A                     	;# 
   338     051B                     	;# 
   339     051C                     	;# 
   340     051D                     	;# 
   341     058C                     	;# 
   342     058C                     	;# 
   343     058D                     	;# 
   344     058E                     	;# 
   345     058F                     	;# 
   346     058F                     	;# 
   347     0590                     	;# 
   348     0591                     	;# 
   349     0592                     	;# 
   350     0593                     	;# 
   351     060C                     	;# 
   352     060D                     	;# 
   353     060E                     	;# 
   354     060F                     	;# 
   355     0610                     	;# 
   356     0611                     	;# 
   357     0612                     	;# 
   358     0613                     	;# 
   359     0614                     	;# 
   360     0616                     	;# 
   361     0617                     	;# 
   362     0618                     	;# 
   363     0619                     	;# 
   364     061A                     	;# 
   365     061B                     	;# 
   366     061C                     	;# 
   367     061D                     	;# 
   368     061E                     	;# 
   369     068C                     	;# 
   370     068D                     	;# 
   371     068E                     	;# 
   372     068F                     	;# 
   373     0690                     	;# 
   374     0691                     	;# 
   375     0692                     	;# 
   376     0693                     	;# 
   377     0694                     	;# 
   378     070C                     	;# 
   379     070D                     	;# 
   380     070E                     	;# 
   381     070F                     	;# 
   382     0710                     	;# 
   383     0711                     	;# 
   384     0712                     	;# 
   385     0713                     	;# 
   386     0714                     	;# 
   387     0716                     	;# 
   388     0717                     	;# 
   389     0718                     	;# 
   390     0719                     	;# 
   391     071A                     	;# 
   392     071B                     	;# 
   393     071C                     	;# 
   394     071D                     	;# 
   395     071E                     	;# 
   396     0796                     	;# 
   397     0797                     	;# 
   398     0798                     	;# 
   399     0799                     	;# 
   400     079A                     	;# 
   401     079B                     	;# 
   402     080C                     	;# 
   403     080D                     	;# 
   404     080E                     	;# 
   405     080F                     	;# 
   406     0810                     	;# 
   407     0811                     	;# 
   408     0812                     	;# 
   409     0813                     	;# 
   410     0814                     	;# 
   411     081A                     	;# 
   412     081B                     	;# 
   413     081C                     	;# 
   414     081D                     	;# 
   415     081E                     	;# 
   416     081F                     	;# 
   417     088C                     	;# 
   418     088D                     	;# 
   419     088E                     	;# 
   420     088F                     	;# 
   421     0890                     	;# 
   422     0891                     	;# 
   423     0892                     	;# 
   424     0893                     	;# 
   425     0895                     	;# 
   426     0896                     	;# 
   427     0897                     	;# 
   428     0898                     	;# 
   429     0899                     	;# 
   430     089A                     	;# 
   431     089B                     	;# 
   432     090C                     	;# 
   433     090E                     	;# 
   434     090F                     	;# 
   435     091F                     	;# 
   436     091F                     	;# 
   437     098F                     	;# 
   438     098F                     	;# 
   439     0990                     	;# 
   440     0991                     	;# 
   441     0992                     	;# 
   442     0993                     	;# 
   443     0994                     	;# 
   444     0995                     	;# 
   445     0996                     	;# 
   446     0997                     	;# 
   447     0E0F                     	;# 
   448     0E10                     	;# 
   449     0E11                     	;# 
   450     0E12                     	;# 
   451     0E13                     	;# 
   452     0E14                     	;# 
   453     0E15                     	;# 
   454     0E16                     	;# 
   455     0E17                     	;# 
   456     0E18                     	;# 
   457     0E19                     	;# 
   458     0E1A                     	;# 
   459     0E1B                     	;# 
   460     0E1C                     	;# 
   461     0E1D                     	;# 
   462     0E1E                     	;# 
   463     0E1F                     	;# 
   464     0E20                     	;# 
   465     0E21                     	;# 
   466     0E22                     	;# 
   467     0E23                     	;# 
   468     0E24                     	;# 
   469     0E25                     	;# 
   470     0E26                     	;# 
   471     0E27                     	;# 
   472     0E28                     	;# 
   473     0E29                     	;# 
   474     0E2A                     	;# 
   475     0E2B                     	;# 
   476     0E2C                     	;# 
   477     0E2D                     	;# 
   478     0E2E                     	;# 
   479     0E2F                     	;# 
   480     0E30                     	;# 
   481     0E31                     	;# 
   482     0E32                     	;# 
   483     0E33                     	;# 
   484     0E34                     	;# 
   485     0E35                     	;# 
   486     0E36                     	;# 
   487     0E37                     	;# 
   488     0E8F                     	;# 
   489     0E90                     	;# 
   490     0E91                     	;# 
   491     0E92                     	;# 
   492     0E93                     	;# 
   493     0E94                     	;# 
   494     0E95                     	;# 
   495     0E96                     	;# 
   496     0E97                     	;# 
   497     0E9C                     	;# 
   498     0E9D                     	;# 
   499     0E9E                     	;# 
   500     0EA1                     	;# 
   501     0EA2                     	;# 
   502     0EA3                     	;# 
   503     0EA4                     	;# 
   504     0EA5                     	;# 
   505     0EA9                     	;# 
   506     0EAA                     	;# 
   507     0EAB                     	;# 
   508     0EAC                     	;# 
   509     0EB1                     	;# 
   510     0EB2                     	;# 
   511     0EB3                     	;# 
   512     0EB8                     	;# 
   513     0EB9                     	;# 
   514     0EBA                     	;# 
   515     0EBB                     	;# 
   516     0EBC                     	;# 
   517     0EBD                     	;# 
   518     0EBE                     	;# 
   519     0EC3                     	;# 
   520     0EC5                     	;# 
   521     0EC6                     	;# 
   522     0EC7                     	;# 
   523     0EC8                     	;# 
   524     0EC9                     	;# 
   525     0ECA                     	;# 
   526     0ECB                     	;# 
   527     0ECC                     	;# 
   528     0F10                     	;# 
   529     0F11                     	;# 
   530     0F12                     	;# 
   531     0F13                     	;# 
   532     0F14                     	;# 
   533     0F15                     	;# 
   534     0F16                     	;# 
   535     0F17                     	;# 
   536     0F18                     	;# 
   537     0F19                     	;# 
   538     0F1A                     	;# 
   539     0F1B                     	;# 
   540     0F1C                     	;# 
   541     0F1D                     	;# 
   542     0F1E                     	;# 
   543     0F1F                     	;# 
   544     0F20                     	;# 
   545     0F21                     	;# 
   546     0F22                     	;# 
   547     0F23                     	;# 
   548     0F24                     	;# 
   549     0F25                     	;# 
   550     0F26                     	;# 
   551     0F27                     	;# 
   552     0F38                     	;# 
   553     0F39                     	;# 
   554     0F3A                     	;# 
   555     0F3B                     	;# 
   556     0F3C                     	;# 
   557     0F3D                     	;# 
   558     0F3E                     	;# 
   559     0F3F                     	;# 
   560     0F40                     	;# 
   561     0F41                     	;# 
   562     0F43                     	;# 
   563     0F44                     	;# 
   564     0F45                     	;# 
   565     0F46                     	;# 
   566     0F47                     	;# 
   567     0F48                     	;# 
   568     0F49                     	;# 
   569     0F4A                     	;# 
   570     0F4B                     	;# 
   571     0F4C                     	;# 
   572     0F4E                     	;# 
   573     0F4F                     	;# 
   574     0F50                     	;# 
   575     0F51                     	;# 
   576     0F52                     	;# 
   577     0F53                     	;# 
   578     0F54                     	;# 
   579     0F55                     	;# 
   580     0F56                     	;# 
   581     0F57                     	;# 
   582     0F65                     	;# 
   583     0F68                     	;# 
   584     0F69                     	;# 
   585     0F6A                     	;# 
   586     0F6B                     	;# 
   587     0FE4                     	;# 
   588     0FE5                     	;# 
   589     0FE6                     	;# 
   590     0FE7                     	;# 
   591     0FE8                     	;# 
   592     0FE9                     	;# 
   593     0FEA                     	;# 
   594     0FEB                     	;# 
   595     0FED                     	;# 
   596     0FEE                     	;# 
   597     0FEF                     	;# 
   598     0000                     	;# 
   599     0001                     	;# 
   600     0002                     	;# 
   601     0003                     	;# 
   602     0004                     	;# 
   603     0005                     	;# 
   604     0006                     	;# 
   605     0007                     	;# 
   606     0008                     	;# 
   607     0009                     	;# 
   608     000A                     	;# 
   609     000B                     	;# 
   610     000C                     	;# 
   611     000D                     	;# 
   612     000E                     	;# 
   613     0010                     	;# 
   614     0011                     	;# 
   615     0012                     	;# 
   616     0013                     	;# 
   617     0016                     	;# 
   618     0017                     	;# 
   619     0018                     	;# 
   620     001C                     	;# 
   621     001C                     	;# 
   622     001D                     	;# 
   623     001D                     	;# 
   624     001E                     	;# 
   625     001F                     	;# 
   626     008C                     	;# 
   627     008C                     	;# 
   628     008D                     	;# 
   629     008E                     	;# 
   630     008E                     	;# 
   631     008F                     	;# 
   632     0090                     	;# 
   633     0090                     	;# 
   634     0091                     	;# 
   635     0093                     	;# 
   636     0094                     	;# 
   637     0095                     	;# 
   638     0096                     	;# 
   639     0097                     	;# 
   640     0098                     	;# 
   641     0099                     	;# 
   642     009A                     	;# 
   643     009B                     	;# 
   644     009C                     	;# 
   645     009D                     	;# 
   646     009E                     	;# 
   647     010C                     	;# 
   648     010D                     	;# 
   649     010E                     	;# 
   650     010E                     	;# 
   651     010F                     	;# 
   652     0110                     	;# 
   653     0110                     	;# 
   654     0111                     	;# 
   655     0112                     	;# 
   656     0112                     	;# 
   657     0113                     	;# 
   658     0114                     	;# 
   659     0114                     	;# 
   660     0115                     	;# 
   661     0116                     	;# 
   662     0116                     	;# 
   663     0117                     	;# 
   664     0119                     	;# 
   665     0119                     	;# 
   666     0119                     	;# 
   667     011A                     	;# 
   668     011A                     	;# 
   669     011A                     	;# 
   670     011B                     	;# 
   671     011B                     	;# 
   672     011B                     	;# 
   673     011B                     	;# 
   674     011B                     	;# 
   675     011C                     	;# 
   676     011C                     	;# 
   677     011C                     	;# 
   678     011D                     	;# 
   679     011D                     	;# 
   680     011D                     	;# 
   681     011E                     	;# 
   682     011E                     	;# 
   683     011E                     	;# 
   684     011F                     	;# 
   685     011F                     	;# 
   686     011F                     	;# 
   687     011F                     	;# 
   688     011F                     	;# 
   689     018C                     	;# 
   690     018D                     	;# 
   691     018E                     	;# 
   692     018F                     	;# 
   693     0190                     	;# 
   694     0191                     	;# 
   695     0192                     	;# 
   696     0196                     	;# 
   697     0197                     	;# 
   698     0198                     	;# 
   699     0199                     	;# 
   700     019A                     	;# 
   701     019B                     	;# 
   702     019C                     	;# 
   703     020C                     	;# 
   704     020C                     	;# 
   705     020D                     	;# 
   706     020E                     	;# 
   707     020F                     	;# 
   708     020F                     	;# 
   709     0210                     	;# 
   710     0210                     	;# 
   711     0211                     	;# 
   712     0211                     	;# 
   713     0212                     	;# 
   714     0212                     	;# 
   715     0213                     	;# 
   716     0214                     	;# 
   717     0215                     	;# 
   718     0215                     	;# 
   719     0216                     	;# 
   720     0216                     	;# 
   721     0217                     	;# 
   722     0217                     	;# 
   723     0218                     	;# 
   724     0218                     	;# 
   725     0219                     	;# 
   726     021A                     	;# 
   727     021B                     	;# 
   728     021B                     	;# 
   729     021C                     	;# 
   730     021C                     	;# 
   731     021D                     	;# 
   732     021D                     	;# 
   733     021E                     	;# 
   734     021F                     	;# 
   735     028C                     	;# 
   736     028C                     	;# 
   737     028D                     	;# 
   738     028D                     	;# 
   739     028E                     	;# 
   740     028F                     	;# 
   741     0290                     	;# 
   742     0290                     	;# 
   743     0291                     	;# 
   744     0292                     	;# 
   745     0292                     	;# 
   746     0293                     	;# 
   747     0293                     	;# 
   748     0294                     	;# 
   749     0295                     	;# 
   750     0296                     	;# 
   751     0296                     	;# 
   752     0297                     	;# 
   753     0298                     	;# 
   754     0298                     	;# 
   755     0299                     	;# 
   756     0299                     	;# 
   757     029A                     	;# 
   758     029B                     	;# 
   759     029C                     	;# 
   760     029C                     	;# 
   761     029D                     	;# 
   762     030C                     	;# 
   763     030C                     	;# 
   764     030D                     	;# 
   765     030E                     	;# 
   766     030F                     	;# 
   767     0310                     	;# 
   768     0310                     	;# 
   769     0311                     	;# 
   770     0312                     	;# 
   771     0313                     	;# 
   772     0314                     	;# 
   773     0314                     	;# 
   774     0315                     	;# 
   775     0316                     	;# 
   776     0317                     	;# 
   777     0318                     	;# 
   778     0318                     	;# 
   779     0319                     	;# 
   780     031A                     	;# 
   781     031B                     	;# 
   782     031C                     	;# 
   783     031C                     	;# 
   784     031D                     	;# 
   785     031E                     	;# 
   786     031F                     	;# 
   787     038C                     	;# 
   788     038C                     	;# 
   789     038D                     	;# 
   790     038E                     	;# 
   791     0390                     	;# 
   792     0390                     	;# 
   793     0391                     	;# 
   794     0392                     	;# 
   795     040C                     	;# 
   796     040D                     	;# 
   797     040E                     	;# 
   798     040F                     	;# 
   799     0410                     	;# 
   800     0411                     	;# 
   801     0416                     	;# 
   802     0416                     	;# 
   803     0417                     	;# 
   804     0418                     	;# 
   805     0418                     	;# 
   806     0419                     	;# 
   807     041A                     	;# 
   808     041A                     	;# 
   809     041B                     	;# 
   810     041C                     	;# 
   811     041C                     	;# 
   812     041D                     	;# 
   813     041E                     	;# 
   814     041F                     	;# 
   815     048C                     	;# 
   816     048C                     	;# 
   817     048D                     	;# 
   818     048E                     	;# 
   819     048F                     	;# 
   820     048F                     	;# 
   821     0490                     	;# 
   822     0491                     	;# 
   823     0492                     	;# 
   824     0492                     	;# 
   825     0493                     	;# 
   826     0494                     	;# 
   827     0495                     	;# 
   828     0495                     	;# 
   829     0496                     	;# 
   830     0497                     	;# 
   831     0498                     	;# 
   832     0499                     	;# 
   833     049A                     	;# 
   834     049B                     	;# 
   835     049C                     	;# 
   836     049D                     	;# 
   837     050C                     	;# 
   838     050C                     	;# 
   839     050D                     	;# 
   840     050E                     	;# 
   841     050F                     	;# 
   842     050F                     	;# 
   843     0510                     	;# 
   844     0511                     	;# 
   845     0512                     	;# 
   846     0512                     	;# 
   847     0513                     	;# 
   848     0514                     	;# 
   849     0515                     	;# 
   850     0515                     	;# 
   851     0516                     	;# 
   852     0517                     	;# 
   853     0518                     	;# 
   854     0519                     	;# 
   855     051A                     	;# 
   856     051B                     	;# 
   857     051C                     	;# 
   858     051D                     	;# 
   859     058C                     	;# 
   860     058C                     	;# 
   861     058D                     	;# 
   862     058E                     	;# 
   863     058F                     	;# 
   864     058F                     	;# 
   865     0590                     	;# 
   866     0591                     	;# 
   867     0592                     	;# 
   868     0593                     	;# 
   869     060C                     	;# 
   870     060D                     	;# 
   871     060E                     	;# 
   872     060F                     	;# 
   873     0610                     	;# 
   874     0611                     	;# 
   875     0612                     	;# 
   876     0613                     	;# 
   877     0614                     	;# 
   878     0616                     	;# 
   879     0617                     	;# 
   880     0618                     	;# 
   881     0619                     	;# 
   882     061A                     	;# 
   883     061B                     	;# 
   884     061C                     	;# 
   885     061D                     	;# 
   886     061E                     	;# 
   887     068C                     	;# 
   888     068D                     	;# 
   889     068E                     	;# 
   890     068F                     	;# 
   891     0690                     	;# 
   892     0691                     	;# 
   893     0692                     	;# 
   894     0693                     	;# 
   895     0694                     	;# 
   896     070C                     	;# 
   897     070D                     	;# 
   898     070E                     	;# 
   899     070F                     	;# 
   900     0710                     	;# 
   901     0711                     	;# 
   902     0712                     	;# 
   903     0713                     	;# 
   904     0714                     	;# 
   905     0716                     	;# 
   906     0717                     	;# 
   907     0718                     	;# 
   908     0719                     	;# 
   909     071A                     	;# 
   910     071B                     	;# 
   911     071C                     	;# 
   912     071D                     	;# 
   913     071E                     	;# 
   914     0796                     	;# 
   915     0797                     	;# 
   916     0798                     	;# 
   917     0799                     	;# 
   918     079A                     	;# 
   919     079B                     	;# 
   920     080C                     	;# 
   921     080D                     	;# 
   922     080E                     	;# 
   923     080F                     	;# 
   924     0810                     	;# 
   925     0811                     	;# 
   926     0812                     	;# 
   927     0813                     	;# 
   928     0814                     	;# 
   929     081A                     	;# 
   930     081B                     	;# 
   931     081C                     	;# 
   932     081D                     	;# 
   933     081E                     	;# 
   934     081F                     	;# 
   935     088C                     	;# 
   936     088D                     	;# 
   937     088E                     	;# 
   938     088F                     	;# 
   939     0890                     	;# 
   940     0891                     	;# 
   941     0892                     	;# 
   942     0893                     	;# 
   943     0895                     	;# 
   944     0896                     	;# 
   945     0897                     	;# 
   946     0898                     	;# 
   947     0899                     	;# 
   948     089A                     	;# 
   949     089B                     	;# 
   950     090C                     	;# 
   951     090E                     	;# 
   952     090F                     	;# 
   953     091F                     	;# 
   954     091F                     	;# 
   955     098F                     	;# 
   956     098F                     	;# 
   957     0990                     	;# 
   958     0991                     	;# 
   959     0992                     	;# 
   960     0993                     	;# 
   961     0994                     	;# 
   962     0995                     	;# 
   963     0996                     	;# 
   964     0997                     	;# 
   965     0E0F                     	;# 
   966     0E10                     	;# 
   967     0E11                     	;# 
   968     0E12                     	;# 
   969     0E13                     	;# 
   970     0E14                     	;# 
   971     0E15                     	;# 
   972     0E16                     	;# 
   973     0E17                     	;# 
   974     0E18                     	;# 
   975     0E19                     	;# 
   976     0E1A                     	;# 
   977     0E1B                     	;# 
   978     0E1C                     	;# 
   979     0E1D                     	;# 
   980     0E1E                     	;# 
   981     0E1F                     	;# 
   982     0E20                     	;# 
   983     0E21                     	;# 
   984     0E22                     	;# 
   985     0E23                     	;# 
   986     0E24                     	;# 
   987     0E25                     	;# 
   988     0E26                     	;# 
   989     0E27                     	;# 
   990     0E28                     	;# 
   991     0E29                     	;# 
   992     0E2A                     	;# 
   993     0E2B                     	;# 
   994     0E2C                     	;# 
   995     0E2D                     	;# 
   996     0E2E                     	;# 
   997     0E2F                     	;# 
   998     0E30                     	;# 
   999     0E31                     	;# 
  1000     0E32                     	;# 
  1001     0E33                     	;# 
  1002     0E34                     	;# 
  1003     0E35                     	;# 
  1004     0E36                     	;# 
  1005     0E37                     	;# 
  1006     0E8F                     	;# 
  1007     0E90                     	;# 
  1008     0E91                     	;# 
  1009     0E92                     	;# 
  1010     0E93                     	;# 
  1011     0E94                     	;# 
  1012     0E95                     	;# 
  1013     0E96                     	;# 
  1014     0E97                     	;# 
  1015     0E9C                     	;# 
  1016     0E9D                     	;# 
  1017     0E9E                     	;# 
  1018     0EA1                     	;# 
  1019     0EA2                     	;# 
  1020     0EA3                     	;# 
  1021     0EA4                     	;# 
  1022     0EA5                     	;# 
  1023     0EA9                     	;# 
  1024     0EAA                     	;# 
  1025     0EAB                     	;# 
  1026     0EAC                     	;# 
  1027     0EB1                     	;# 
  1028     0EB2                     	;# 
  1029     0EB3                     	;# 
  1030     0EB8                     	;# 
  1031     0EB9                     	;# 
  1032     0EBA                     	;# 
  1033     0EBB                     	;# 
  1034     0EBC                     	;# 
  1035     0EBD                     	;# 
  1036     0EBE                     	;# 
  1037     0EC3                     	;# 
  1038     0EC5                     	;# 
  1039     0EC6                     	;# 
  1040     0EC7                     	;# 
  1041     0EC8                     	;# 
  1042     0EC9                     	;# 
  1043     0ECA                     	;# 
  1044     0ECB                     	;# 
  1045     0ECC                     	;# 
  1046     0F10                     	;# 
  1047     0F11                     	;# 
  1048     0F12                     	;# 
  1049     0F13                     	;# 
  1050     0F14                     	;# 
  1051     0F15                     	;# 
  1052     0F16                     	;# 
  1053     0F17                     	;# 
  1054     0F18                     	;# 
  1055     0F19                     	;# 
  1056     0F1A                     	;# 
  1057     0F1B                     	;# 
  1058     0F1C                     	;# 
  1059     0F1D                     	;# 
  1060     0F1E                     	;# 
  1061     0F1F                     	;# 
  1062     0F20                     	;# 
  1063     0F21                     	;# 
  1064     0F22                     	;# 
  1065     0F23                     	;# 
  1066     0F24                     	;# 
  1067     0F25                     	;# 
  1068     0F26                     	;# 
  1069     0F27                     	;# 
  1070     0F38                     	;# 
  1071     0F39                     	;# 
  1072     0F3A                     	;# 
  1073     0F3B                     	;# 
  1074     0F3C                     	;# 
  1075     0F3D                     	;# 
  1076     0F3E                     	;# 
  1077     0F3F                     	;# 
  1078     0F40                     	;# 
  1079     0F41                     	;# 
  1080     0F43                     	;# 
  1081     0F44                     	;# 
  1082     0F45                     	;# 
  1083     0F46                     	;# 
  1084     0F47                     	;# 
  1085     0F48                     	;# 
  1086     0F49                     	;# 
  1087     0F4A                     	;# 
  1088     0F4B                     	;# 
  1089     0F4C                     	;# 
  1090     0F4E                     	;# 
  1091     0F4F                     	;# 
  1092     0F50                     	;# 
  1093     0F51                     	;# 
  1094     0F52                     	;# 
  1095     0F53                     	;# 
  1096     0F54                     	;# 
  1097     0F55                     	;# 
  1098     0F56                     	;# 
  1099     0F57                     	;# 
  1100     0F65                     	;# 
  1101     0F68                     	;# 
  1102     0F69                     	;# 
  1103     0F6A                     	;# 
  1104     0F6B                     	;# 
  1105     0FE4                     	;# 
  1106     0FE5                     	;# 
  1107     0FE6                     	;# 
  1108     0FE7                     	;# 
  1109     0FE8                     	;# 
  1110     0FE9                     	;# 
  1111     0FEA                     	;# 
  1112     0FEB                     	;# 
  1113     0FED                     	;# 
  1114     0FEE                     	;# 
  1115     0FEF                     	;# 
  1116                           
  1117                           	psect	idataBANK0
  1118     00F9                     __pidataBANK0:
  1119                           
  1120                           ;initializer for _IR_base
  1121     00F9  3400               	retlw	0
  1122     00FA  34B2               	retlw	178
  1123                           
  1124                           ;initializer for _speed_inc
  1125     00FB  3419               	retlw	25
  1126     00FC  3400               	retlw	0
  1127                           
  1128                           ;initializer for _slow
  1129     00FD  3432               	retlw	50
  1130     00FE  3400               	retlw	0
  1131                           
  1132                           ;initializer for _fast
  1133     00FF  3464               	retlw	100
  1134     0100  3400               	retlw	0
  1135                           
  1136                           ;initializer for _line_colour
  1137     0101  34C0               	retlw	192
  1138     0102  348E               	retlw	142
  1139                           
  1140                           ;initializer for _rpin
  1141     0103  340A               	retlw	10
  1142                           
  1143                           ;initializer for _mpin
  1144     0104  3409               	retlw	9
  1145                           
  1146                           ;initializer for _lpin
  1147     0105  340B               	retlw	11
  1148                           
  1149                           ;initializer for _starting
  1150     0106  3401               	retlw	1
  1151                           
  1152                           	psect	idataBANK1
  1153     01F1                     __pidataBANK1:
  1154                           
  1155                           ;initializer for transmit_repair@F11768
  1156     01F1  34FE               	retlw	254
  1157     01F2  3419               	retlw	25
  1158     01F3  3401               	retlw	1
  1159     01F4  3409               	retlw	9
  1160     01F5  3401               	retlw	1
  1161     01F6  3400               	retlw	0
  1162                           
  1163                           ;initializer for request_repair@F11765
  1164     01F7  34FE               	retlw	254
  1165     01F8  3419               	retlw	25
  1166     01F9  3403               	retlw	3
  1167     01FA  3409               	retlw	9
  1168     01FB  3400               	retlw	0
  1169     01FC  3400               	retlw	0
  1170                           
  1171                           ;initializer for transmit_shield_code@F11762
  1172     01FD  34FE               	retlw	254
  1173     01FE  3419               	retlw	25
  1174     01FF  3402               	retlw	2
  1175     0200  3409               	retlw	9
  1176     0201  3400               	retlw	0
  1177     0202  3400               	retlw	0
  1178                           
  1179                           ;initializer for user_data_send@F11732
  1180     0203  34FE               	retlw	254
  1181     0204  3419               	retlw	25
  1182     0205  3401               	retlw	1
  1183     0206  3405               	retlw	5
  1184     0207  3400               	retlw	0
  1185     0208  3400               	retlw	0
  1186                           
  1187                           ;initializer for PCLS_info_send@F11724
  1188     0209  34FE               	retlw	254
  1189     020A  3419               	retlw	25
  1190     020B  3401               	retlw	1
  1191     020C  3404               	retlw	4
  1192     020D  3400               	retlw	0
  1193     020E  3400               	retlw	0
  1194                           
  1195                           ;initializer for _speed_dec
  1196     020F  3419               	retlw	25
  1197     0210  3400               	retlw	0
  1198     0016                     _LATAbits	set	22
  1199     0011                     _TRISAbits	set	17
  1200     008C                     _ADRESL	set	140
  1201     008D                     _ADRESH	set	141
  1202     0093                     _ADCON0bits	set	147
  1203     009E                     _ADPCH	set	158
  1204     009D                     _ADACQ	set	157
  1205     009C                     _ADPRE	set	156
  1206     009A                     _ADREF	set	154
  1207     0098                     _ADCLK	set	152
  1208     0093                     _ADCON0	set	147
  1209     0119                     _RCREG	set	281
  1210     011B                     _SP1BRGLbits	set	283
  1211     011F                     _BAUD1CONbits	set	287
  1212     011D                     _RC1STAbits	set	285
  1213     011E                     _TX1STAbits	set	286
  1214     011A                     _TXREG	set	282
  1215     070D                     _PIR1bits	set	1805
  1216     070F                     _PIR3bits	set	1807
  1217     0F38                     _ANSELAbits	set	3896
  1218     0F26                     _RC6PPS	set	3878
  1219     0F4E                     _ANSELCbits	set	3918
  1220                           
  1221                           	psect	cinit
  1222     07CD                     start_initialization:	
  1223                           ; #config settings
  1224                           
  1225     07CD                     __initialization:
  1226                           
  1227                           ; Initialize objects allocated to BANK0
  1228     07CD  30F9               	movlw	low __pidataBANK0
  1229     07CE  0084               	movwf	4
  1230     07CF  3080               	movlw	(high __pidataBANK0)| (0+128)
  1231     07D0  0085               	movwf	5
  1232     07D1  3061               	movlw	low __pdataBANK0
  1233     07D2  0086               	movwf	6
  1234     07D3  3000               	movlw	high __pdataBANK0
  1235     07D4  0087               	movwf	7
  1236     07D5  300E               	movlw	14
  1237     07D6  3180  20DB  3187   	fcall	init_ram
  1238                           
  1239                           ; Initialize objects allocated to BANK1
  1240     07D9  30F1               	movlw	low __pidataBANK1
  1241     07DA  0084               	movwf	4
  1242     07DB  3081               	movlw	(high __pidataBANK1)| (0+128)
  1243     07DC  0085               	movwf	5
  1244     07DD  30C7               	movlw	low __pdataBANK1
  1245     07DE  0086               	movwf	6
  1246     07DF  3000               	movlw	high __pdataBANK1
  1247     07E0  0087               	movwf	7
  1248     07E1  3020               	movlw	32
  1249     07E2  3180  20DB  3187   	fcall	init_ram
  1250                           
  1251                           ; Clear objects allocated to BANK0
  1252     07E5  3044               	movlw	low __pbssBANK0
  1253     07E6  0084               	movwf	4
  1254     07E7  3000               	movlw	high __pbssBANK0
  1255     07E8  0085               	movwf	5
  1256     07E9  301D               	movlw	29
  1257     07EA  3180  20D5  3187   	fcall	clear_ram0
  1258                           
  1259                           ; Clear objects allocated to BANK1
  1260     07ED  30A0               	movlw	low __pbssBANK1
  1261     07EE  0084               	movwf	4
  1262     07EF  3000               	movlw	high __pbssBANK1
  1263     07F0  0085               	movwf	5
  1264     07F1  3027               	movlw	39
  1265     07F2  3180  20D5  3187   	fcall	clear_ram0
  1266                           
  1267                           ; Clear objects allocated to BANK2
  1268     07F5  3020               	movlw	low __pbssBANK2
  1269     07F6  0084               	movwf	4
  1270     07F7  3001               	movlw	high __pbssBANK2
  1271     07F8  0085               	movwf	5
  1272     07F9  3014               	movlw	20
  1273     07FA  3180  20D5  3187   	fcall	clear_ram0
  1274     07FD                     end_of_initialization:	
  1275                           ;End of C runtime variable initialization code
  1276                           
  1277     07FD                     __end_of__initialization:
  1278     07FD  0020               	movlb	0
  1279     07FE  3184  2C1B         	ljmp	_main	;jump to C main() function
  1280                           
  1281                           	psect	bssBANK0
  1282     0044                     __pbssBANK0:
  1283     0044                     _y_vec:
  1284     0044                     	ds	2
  1285     0046                     _health:
  1286     0046                     	ds	2
  1287     0048                     _potB:
  1288     0048                     	ds	2
  1289     004A                     _potA:
  1290     004A                     	ds	2
  1291     004C                     _swD:
  1292     004C                     	ds	2
  1293     004E                     _swC:
  1294     004E                     	ds	2
  1295     0050                     _swB:
  1296     0050                     	ds	2
  1297     0052                     _swA:
  1298     0052                     	ds	2
  1299     0054                     _joy_lx:
  1300     0054                     	ds	2
  1301     0056                     _joy_ly:
  1302     0056                     	ds	2
  1303     0058                     _joy_ry:
  1304     0058                     	ds	2
  1305     005A                     _joy_rx:
  1306     005A                     	ds	2
  1307     005C                     _auto_switch:
  1308     005C                     	ds	1
  1309     005D                     _repair_flag:
  1310     005D                     	ds	1
  1311     005E                     _shield_flag:
  1312     005E                     	ds	1
  1313     005F                     _playerID:
  1314     005F                     	ds	1
  1315     0060                     _teamID:
  1316     0060                     	ds	1
  1317                           
  1318                           	psect	dataBANK0
  1319     0061                     __pdataBANK0:
  1320     0061                     _IR_base:
  1321     0061                     	ds	2
  1322     0063                     _speed_inc:
  1323     0063                     	ds	2
  1324     0065                     _slow:
  1325     0065                     	ds	2
  1326     0067                     _fast:
  1327     0067                     	ds	2
  1328     0069                     _line_colour:
  1329     0069                     	ds	2
  1330     006B                     _rpin:
  1331     006B                     	ds	1
  1332     006C                     _mpin:
  1333     006C                     	ds	1
  1334     006D                     _lpin:
  1335     006D                     	ds	1
  1336     006E                     _starting:
  1337     006E                     	ds	1
  1338                           
  1339                           	psect	bssBANK1
  1340     00A0                     __pbssBANK1:
  1341     00A0                     motor@F11744:
  1342     00A0                     	ds	10
  1343     00AA                     ore_type@F11786:
  1344     00AA                     	ds	7
  1345     00B1                     shoot_laser@F11759:
  1346     00B1                     	ds	7
  1347     00B8                     set_laser@F11755:
  1348     00B8                     	ds	7
  1349     00BF                     custom_laser@F11774:
  1350     00BF                     	ds	6
  1351     00C5                     _x_vec:
  1352     00C5                     	ds	2
  1353                           
  1354                           	psect	dataBANK1
  1355     00C7                     __pdataBANK1:
  1356     00C7                     transmit_repair@F11768:
  1357     00C7                     	ds	6
  1358     00CD                     request_repair@F11765:
  1359     00CD                     	ds	6
  1360     00D3                     transmit_shield_code@F11762:
  1361     00D3                     	ds	6
  1362     00D9                     user_data_send@F11732:
  1363     00D9                     	ds	6
  1364     00DF                     PCLS_info_send@F11724:
  1365     00DF                     	ds	6
  1366     00E5                     _speed_dec:
  1367     00E5                     	ds	2
  1368                           
  1369                           	psect	bssBANK2
  1370     0120                     __pbssBANK2:
  1371     0120                     surface_exploration@F11782:
  1372     0120                     	ds	10
  1373     012A                     servo@F11751:
  1374     012A                     	ds	10
  1375                           
  1376                           	psect	inittext
  1377     00DB                     init_ram:
  1378     00DB  00FE               	movwf	btemp
  1379     00DC                     initloop:
  1380     00DC  0012               	moviw fsr0++
  1381     00DD  001E               	movwi fsr1++
  1382     00DE  0BFE               	decfsz	btemp,f
  1383     00DF  28DC               	goto	initloop
  1384     00E0  3400               	retlw	0
  1385                           
  1386                           	psect	clrtext
  1387     00D5                     clear_ram0:	
  1388                           ;	Called with FSR0 containing the base address, and
  1389                           ;	WREG with the size to clear
  1390                           
  1391     00D5  0064               	clrwdt	;clear the watchdog before getting into this loop
  1392     00D6                     clrloop0:
  1393     00D6  0180               	clrf	0	;clear RAM location pointed to by FSR
  1394     00D7  3101               	addfsr 0,1
  1395     00D8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1396     00D9  28D6               	goto	clrloop0	;have we reached the end yet?
  1397     00DA  3400               	retlw	0	;all done for this memory range, return
  1398                           
  1399                           	psect	cstackCOMMON
  1400     0070                     __pcstackCOMMON:
  1401     0070                     ?_tx_wait:
  1402     0070                     ??_tx_wait:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405     0070                     ?_rx_wait:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408     0070                     ??_rx_wait:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411     0070                     ?_UART_init:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414     0070                     ??_UART_init:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417     0070                     ?_PCLS_info_send:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420     0070                     ?_PCLS_info_receive:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423     0070                     ?_PCLS_info:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426     0070                     ?_user_data_send:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429     0070                     ?_user_data_receive:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432     0070                     ?_user_data:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435     0070                     ?_set_laser:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438     0070                     ?_shoot_laser:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441     0070                     ?_transmit_shield_code:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444     0070                     ?_drive:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447     0070                     ?_ADC_init:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450     0070                     ??_ADC_init:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453     0070                     ?_line_follower:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456     0070                     ?_IR_init:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459     0070                     ?_IR:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462     0070                     ?_shield_code:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465     0070                     ?_main:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468     0070                     ?_abs:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471     0070                     ?_read_adc:	
  1472                           ; 2 bytes @ 0x0
  1473                           
  1474     0070                     ?___lwdiv:	
  1475                           ; 2 bytes @ 0x0
  1476                           
  1477     0070                     tx_wait@count:	
  1478                           ; 2 bytes @ 0x0
  1479                           
  1480     0070                     rx_wait@count:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483     0070                     ___lwdiv@divisor:	
  1484                           ; 2 bytes @ 0x0
  1485                           
  1486     0070                     abs@a:	
  1487                           ; 2 bytes @ 0x0
  1488                           
  1489                           
  1490                           ; 2 bytes @ 0x0
  1491     0070                     	ds	2
  1492     0072                     ??_abs:
  1493     0072                     ?_UART_send:	
  1494                           ; 1 bytes @ 0x2
  1495                           
  1496     0072                     ??_PCLS_info_receive:	
  1497                           ; 1 bytes @ 0x2
  1498                           
  1499     0072                     ??_read_adc:	
  1500                           ; 1 bytes @ 0x2
  1501                           
  1502     0072                     UART_send@size:	
  1503                           ; 1 bytes @ 0x2
  1504                           
  1505     0072                     ___lwdiv@dividend:	
  1506                           ; 2 bytes @ 0x2
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x2
  1510     0072                     	ds	2
  1511     0074                     ??_UART_send:
  1512     0074                     ??___lwdiv:	
  1513                           ; 1 bytes @ 0x4
  1514                           
  1515     0074                     ?___awdiv:	
  1516                           ; 1 bytes @ 0x4
  1517                           
  1518     0074                     ___awdiv@divisor:	
  1519                           ; 2 bytes @ 0x4
  1520                           
  1521                           
  1522                           ; 2 bytes @ 0x4
  1523     0074                     	ds	1
  1524     0075                     read_adc@sensor:
  1525     0075                     ___lwdiv@quotient:	
  1526                           ; 1 bytes @ 0x5
  1527                           
  1528                           
  1529                           ; 2 bytes @ 0x5
  1530     0075                     	ds	1
  1531     0076                     UART_send@message:
  1532     0076                     read_adc@ADC_val:	
  1533                           ; 1 bytes @ 0x6
  1534                           
  1535     0076                     ___awdiv@dividend:	
  1536                           ; 2 bytes @ 0x6
  1537                           
  1538                           
  1539                           ; 2 bytes @ 0x6
  1540     0076                     	ds	1
  1541     0077                     UART_send@i:
  1542     0077                     ___lwdiv@counter:	
  1543                           ; 1 bytes @ 0x7
  1544                           
  1545                           
  1546                           ; 1 bytes @ 0x7
  1547     0077                     	ds	1
  1548     0078                     ??_PCLS_info_send:
  1549     0078                     ??_user_data_send:	
  1550                           ; 1 bytes @ 0x8
  1551                           
  1552     0078                     ??_user_data_receive:	
  1553                           ; 1 bytes @ 0x8
  1554                           
  1555     0078                     ?_motor:	
  1556                           ; 1 bytes @ 0x8
  1557                           
  1558     0078                     ??_set_laser:	
  1559                           ; 1 bytes @ 0x8
  1560                           
  1561     0078                     ??_shoot_laser:	
  1562                           ; 1 bytes @ 0x8
  1563                           
  1564     0078                     ??_transmit_shield_code:	
  1565                           ; 1 bytes @ 0x8
  1566                           
  1567     0078                     ??_line_follower:	
  1568                           ; 1 bytes @ 0x8
  1569                           
  1570     0078                     ??_IR_init:	
  1571                           ; 1 bytes @ 0x8
  1572                           
  1573     0078                     ??_IR:	
  1574                           ; 1 bytes @ 0x8
  1575                           
  1576     0078                     ??___awdiv:	
  1577                           ; 1 bytes @ 0x8
  1578                           
  1579     0078                     motor@pwmA:	
  1580                           ; 1 bytes @ 0x8
  1581                           
  1582     0078                     line_follower@l_val:	
  1583                           ; 1 bytes @ 0x8
  1584                           
  1585                           
  1586                           ; 2 bytes @ 0x8
  1587     0078                     	ds	1
  1588     0079                     ??_PCLS_info:
  1589     0079                     motor@dirB:	
  1590                           ; 1 bytes @ 0x9
  1591                           
  1592     0079                     ___awdiv@counter:	
  1593                           ; 1 bytes @ 0x9
  1594                           
  1595     0079                     IR@ADC_val:	
  1596                           ; 1 bytes @ 0x9
  1597                           
  1598                           
  1599                           ; 2 bytes @ 0x9
  1600     0079                     	ds	1
  1601     007A                     motor@pwmB:
  1602     007A                     ___awdiv@sign:	
  1603                           ; 1 bytes @ 0xA
  1604                           
  1605     007A                     line_follower@m_val:	
  1606                           ; 1 bytes @ 0xA
  1607                           
  1608                           
  1609                           ; 2 bytes @ 0xA
  1610     007A                     	ds	1
  1611     007B                     ??_user_data:
  1612     007B                     ??_motor:	
  1613                           ; 1 bytes @ 0xB
  1614                           
  1615     007B                     ___awdiv@quotient:	
  1616                           ; 1 bytes @ 0xB
  1617                           
  1618                           
  1619                           ; 2 bytes @ 0xB
  1620     007B                     	ds	1
  1621     007C                     ??_shield_code:
  1622     007C                     line_follower@r_val:	
  1623                           ; 1 bytes @ 0xC
  1624                           
  1625                           
  1626                           ; 2 bytes @ 0xC
  1627     007C                     	ds	1
  1628     007D                     ??___wmul:
  1629                           
  1630                           ; 1 bytes @ 0xD
  1631     007D                     	ds	1
  1632     007E                     ??_main:
  1633                           
  1634                           	psect	cstackBANK0
  1635     0020                     __pcstackBANK0:	
  1636                           ; 1 bytes @ 0xE
  1637                           
  1638     0020                     ?___wmul:
  1639     0020                     motor@dirA:	
  1640                           ; 2 bytes @ 0x0
  1641                           
  1642     0020                     set_laser@en:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0020                     shoot_laser@en:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0020                     ___wmul@multiplier:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0020                     PCLS_info_send@11725:	
  1652                           ; 2 bytes @ 0x0
  1653                           
  1654     0020                     user_data_send@11733:	
  1655                           ; 6 bytes @ 0x0
  1656                           
  1657     0020                     transmit_shield_code@11763:	
  1658                           ; 6 bytes @ 0x0
  1659                           
  1660     0020                     PCLS_info_receive@r:	
  1661                           ; 6 bytes @ 0x0
  1662                           
  1663     0020                     user_data_receive@r:	
  1664                           ; 12 bytes @ 0x0
  1665                           
  1666                           
  1667                           ; 26 bytes @ 0x0
  1668     0020                     	ds	1
  1669     0021                     set_laser@11756:
  1670     0021                     shoot_laser@11760:	
  1671                           ; 7 bytes @ 0x1
  1672                           
  1673     0021                     motor@11745:	
  1674                           ; 7 bytes @ 0x1
  1675                           
  1676                           
  1677                           ; 10 bytes @ 0x1
  1678     0021                     	ds	1
  1679     0022                     ___wmul@multiplicand:
  1680                           
  1681                           ; 2 bytes @ 0x2
  1682     0022                     	ds	2
  1683     0024                     ___wmul@product:
  1684                           
  1685                           ; 2 bytes @ 0x4
  1686     0024                     	ds	7
  1687     002B                     ?_Vdrive:
  1688     002B                     Vdrive@y:	
  1689                           ; 1 bytes @ 0xB
  1690                           
  1691                           
  1692                           ; 2 bytes @ 0xB
  1693     002B                     	ds	1
  1694     002C                     PCLS_info_receive@s:
  1695                           
  1696                           ; 1 bytes @ 0xC
  1697     002C                     	ds	1
  1698     002D                     PCLS_info_receive@j:
  1699     002D                     Vdrive@x:	
  1700                           ; 1 bytes @ 0xD
  1701                           
  1702                           
  1703                           ; 2 bytes @ 0xD
  1704     002D                     	ds	2
  1705     002F                     ??_Vdrive:
  1706                           
  1707                           ; 1 bytes @ 0xF
  1708     002F                     	ds	2
  1709     0031                     Vdrive@left_dir:
  1710                           
  1711                           ; 1 bytes @ 0x11
  1712     0031                     	ds	1
  1713     0032                     Vdrive@right_dir:
  1714                           
  1715                           ; 1 bytes @ 0x12
  1716     0032                     	ds	1
  1717     0033                     Vdrive@l_motor:
  1718                           
  1719                           ; 2 bytes @ 0x13
  1720     0033                     	ds	2
  1721     0035                     Vdrive@r_motor:
  1722                           
  1723                           ; 2 bytes @ 0x15
  1724     0035                     	ds	5
  1725     003A                     user_data_receive@s:
  1726                           
  1727                           ; 1 bytes @ 0x1A
  1728     003A                     	ds	1
  1729     003B                     user_data_receive@j:
  1730                           
  1731                           ; 1 bytes @ 0x1B
  1732     003B                     	ds	1
  1733     003C                     ??_drive:
  1734                           
  1735                           ; 1 bytes @ 0x1C
  1736     003C                     	ds	2
  1737     003E                     drive@x:
  1738                           
  1739                           ; 2 bytes @ 0x1E
  1740     003E                     	ds	2
  1741     0040                     drive@y:
  1742                           
  1743                           ; 2 bytes @ 0x20
  1744     0040                     	ds	2
  1745     0042                     drive@dir:
  1746                           
  1747                           ; 2 bytes @ 0x22
  1748     0042                     	ds	2
  1749                           
  1750                           	psect	maintext
  1751     041B                     __pmaintext:	
  1752 ;;
  1753 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1754 ;;
  1755 ;; *************** function _main *****************
  1756 ;; Defined at:
  1757 ;;		line 28 in file "Master.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : B1F/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels required when called: 5
  1777 ;; This function calls:
  1778 ;;		_ADC_init
  1779 ;;		_IR
  1780 ;;		_IR_init
  1781 ;;		_UART_init
  1782 ;;		_drive
  1783 ;;		_line_follower
  1784 ;;		_read_adc
  1785 ;;		_shield_code
  1786 ;;		_user_data
  1787 ;; This function is called by:
  1788 ;;		Startup code after reset
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792     041B                     _main:	
  1793                           ;psect for function _main
  1794                           
  1795     041B                     l2127:	
  1796                           ;incstack = 0
  1797                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1798                           
  1799                           
  1800                           ;Master.c: 29: 
  1801     041B  3181  2117  3184   	fcall	_UART_init
  1802     041E                     l2129:
  1803                           
  1804                           ;Master.c: 30:     drive();
  1805     041E  3181  2138  3184   	fcall	_user_data
  1806     0421                     l2131:
  1807                           
  1808                           ;Master.c: 31: 
  1809     0421  3181  2107  3184   	fcall	_ADC_init
  1810     0424                     l2133:
  1811                           
  1812                           ;Master.c: 33: }
  1813     0424  0020               	movlb	0	; select bank0
  1814     0425  0850               	movf	_swB,w	;volatile
  1815     0426  0451               	iorwf	_swB+1,w	;volatile
  1816     0427  1903               	btfsc	3,2
  1817     0428  2C2A               	goto	u1811
  1818     0429  2C2B               	goto	u1810
  1819     042A                     u1811:
  1820     042A  2C59               	goto	l2153
  1821     042B                     u1810:
  1822     042B                     l2135:
  1823     042B  3009               	movlw	9
  1824     042C  3182  2211  3184   	fcall	_read_adc
  1825     042F  0870               	movf	?_read_adc,w
  1826     0430  3E00               	addlw	0
  1827     0431  0020               	movlb	0	; select bank0
  1828     0432  00E9               	movwf	_line_colour	;volatile
  1829     0433  30FF               	movlw	255
  1830     0434  3D71               	addwfc	?_read_adc+1,w
  1831     0435  00EA               	movwf	_line_colour+1	;volatile
  1832     0436  2C3D               	goto	l2141
  1833     0437                     l2137:
  1834     0437  3184  24CA  3184   	fcall	_line_follower
  1835     043A                     l2139:
  1836     043A  3181  2138  3184   	fcall	_user_data
  1837     043D                     l2141:
  1838     043D  0020               	movlb	0	; select bank0
  1839     043E  0850               	movf	_swB,w	;volatile
  1840     043F  0451               	iorwf	_swB+1,w	;volatile
  1841     0440  1D03               	btfss	3,2
  1842     0441  2C43               	goto	u1821
  1843     0442  2C44               	goto	u1820
  1844     0443                     u1821:
  1845     0443  2C37               	goto	l2137
  1846     0444                     u1820:
  1847     0444  2C59               	goto	l2153
  1848     0445                     l2143:
  1849     0445  3180  20E1  3184   	fcall	_IR_init
  1850     0448                     l2145:
  1851     0448  3183  2351  3184   	fcall	_drive
  1852     044B  2C52               	goto	l2151
  1853     044C                     l2147:
  1854     044C  3182  2261  3184   	fcall	_IR
  1855     044F                     l2149:
  1856     044F  3181  2138  3184   	fcall	_user_data
  1857     0452                     l2151:
  1858     0452  0020               	movlb	0	; select bank0
  1859     0453  084C               	movf	_swD,w	;volatile
  1860     0454  044D               	iorwf	_swD+1,w	;volatile
  1861     0455  1D03               	btfss	3,2
  1862     0456  2C58               	goto	u1831
  1863     0457  2C59               	goto	u1830
  1864     0458                     u1831:
  1865     0458  2C4C               	goto	l2147
  1866     0459                     u1830:
  1867     0459                     l2153:
  1868     0459  3002               	movlw	2
  1869     045A  064E               	xorwf	_swC,w	;volatile
  1870     045B  044F               	iorwf	_swC+1,w	;volatile
  1871     045C  1903               	btfsc	3,2
  1872     045D  2C5F               	goto	u1841
  1873     045E  2C60               	goto	u1840
  1874     045F                     u1841:
  1875     045F  2C45               	goto	l2143
  1876     0460                     u1840:
  1877     0460                     l2155:
  1878     0460  3183  23CD  3184   	fcall	_shield_code
  1879     0463  3181  2138  3184   	fcall	_user_data
  1880     0466  3183  2351  3184   	fcall	_drive
  1881     0469                     l334:
  1882     0469  3180  2802         	ljmp	start
  1883     046B                     __end_of_main:
  1884                           
  1885                           	psect	text1
  1886     03CD                     __ptext1:	
  1887 ;; *************** function _shield_code *****************
  1888 ;; Defined at:
  1889 ;;		line 10 in file "./SheildCode.h"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;Total ram usage:        2 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 4
  1910 ;; This function calls:
  1911 ;;		_PCLS_info
  1912 ;;		_set_laser
  1913 ;;		_shoot_laser
  1914 ;;		_transmit_shield_code
  1915 ;;		_user_data
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921     03CD                     _shield_code:	
  1922                           ;psect for function _shield_code
  1923                           
  1924     03CD                     l1997:	
  1925                           ;incstack = 0
  1926                           ; Regs used in _shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1927                           
  1928                           
  1929                           ;./SheildCode.h: 11:             _delay((unsigned long)((100)*(400000/4000.0)));
  1930     03CD  3180  20ED  3183   	fcall	_PCLS_info
  1931     03D0                     l1999:
  1932                           
  1933                           ;./SheildCode.h: 12:             shoot_laser(1);
  1934     03D0  3007               	movlw	7
  1935     03D1  00FC               	movwf	??_shield_code
  1936     03D2  307D               	movlw	125
  1937     03D3                     u1857:
  1938     03D3  0B89               	decfsz	9,f
  1939     03D4  2BD3               	goto	u1857
  1940     03D5  0BFC               	decfsz	??_shield_code,f
  1941     03D6  2BD3               	goto	u1857
  1942     03D7  0000               	nop
  1943     03D8                     l2001:
  1944                           
  1945                           ;./SheildCode.h: 13:    transmit_shield_code();
  1946     03D8  3001               	movlw	1
  1947     03D9  0020               	movlb	0	; select bank0
  1948     03DA  00DE               	movwf	_shield_flag	;volatile
  1949     03DB                     l2003:
  1950                           
  1951                           ;./SheildCode.h: 14:             _delay((unsigned long)((100)*(400000/4000.0)));
  1952     03DB  085E               	movf	_shield_flag,w	;volatile
  1953     03DC  1903               	btfsc	3,2
  1954     03DD  2BDF               	goto	u1661
  1955     03DE  2BE0               	goto	u1660
  1956     03DF                     u1661:
  1957     03DF  2C1A               	goto	l319
  1958     03E0                     u1660:
  1959     03E0                     l2005:
  1960                           
  1961                           ;./SheildCode.h: 15:             set_laser(0);
  1962     03E0  3181  2138  3183   	fcall	_user_data
  1963     03E3                     l2007:
  1964                           
  1965                           ;./SheildCode.h: 16:             _delay((unsigned long)((6000)*(400000/4000.0)));
  1966     03E3  3007               	movlw	7
  1967     03E4  00FC               	movwf	??_shield_code
  1968     03E5  307D               	movlw	125
  1969     03E6                     u1867:
  1970     03E6  0B89               	decfsz	9,f
  1971     03E7  2BE6               	goto	u1867
  1972     03E8  0BFC               	decfsz	??_shield_code,f
  1973     03E9  2BE6               	goto	u1867
  1974     03EA  0000               	nop
  1975     03EB                     l2009:
  1976                           
  1977                           ;./SheildCode.h: 17:   }
  1978     03EB  0020               	movlb	0	; select bank0
  1979     03EC  0852               	movf	_swA,w	;volatile
  1980     03ED  0453               	iorwf	_swA+1,w	;volatile
  1981     03EE  1903               	btfsc	3,2
  1982     03EF  2BF1               	goto	u1671
  1983     03F0  2BF2               	goto	u1670
  1984     03F1                     u1671:
  1985     03F1  2C1A               	goto	l319
  1986     03F2                     u1670:
  1987     03F2                     l2011:
  1988                           
  1989                           ;./SheildCode.h: 18:  }
  1990     03F2  3001               	movlw	1
  1991     03F3  3182  228B  3183   	fcall	_set_laser
  1992     03F6                     l2013:
  1993                           
  1994                           ;./SheildCode.h: 19: }
  1995     03F6  300D               	movlw	13
  1996     03F7  00FC               	movwf	??_shield_code
  1997     03F8  30FC               	movlw	252
  1998     03F9                     u1877:
  1999     03F9  0B89               	decfsz	9,f
  2000     03FA  2BF9               	goto	u1877
  2001     03FB  0BFC               	decfsz	??_shield_code,f
  2002     03FC  2BF9               	goto	u1877
  2003     03FD                     l2015:
  2004     03FD  3001               	movlw	1
  2005     03FE  3182  22B7  3183   	fcall	_shoot_laser
  2006     0401                     l2017:
  2007     0401  3181  21B5  3183   	fcall	_transmit_shield_code
  2008     0404                     l2019:
  2009     0404  300D               	movlw	13
  2010     0405  00FC               	movwf	??_shield_code
  2011     0406  30FC               	movlw	252
  2012     0407                     u1887:
  2013     0407  0B89               	decfsz	9,f
  2014     0408  2C07               	goto	u1887
  2015     0409  0BFC               	decfsz	??_shield_code,f
  2016     040A  2C07               	goto	u1887
  2017     040B  3000               	movlw	0
  2018     040C  3182  228B  3183   	fcall	_set_laser
  2019     040F                     l2021:
  2020     040F  3004               	movlw	4
  2021     0410  00FD               	movwf	??_shield_code+1
  2022     0411  300C               	movlw	12
  2023     0412  00FC               	movwf	??_shield_code
  2024     0413  3034               	movlw	52
  2025     0414                     u1897:
  2026     0414  0B89               	decfsz	9,f
  2027     0415  2C14               	goto	u1897
  2028     0416  0BFC               	decfsz	??_shield_code,f
  2029     0417  2C14               	goto	u1897
  2030     0418  0BFD               	decfsz	??_shield_code+1,f
  2031     0419  2C14               	goto	u1897
  2032     041A                     l319:
  2033     041A  0008               	return
  2034     041B                     __end_of_shield_code:
  2035                           
  2036                           	psect	text2
  2037     01B5                     __ptext2:	
  2038 ;; *************** function _transmit_shield_code *****************
  2039 ;; Defined at:
  2040 ;;		line 228 in file "./Commands.h"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  11763           6    0[BANK0 ] volatile unsigned char [
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2055 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2057 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2058 ;;Total ram usage:        7 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 2
  2061 ;; This function calls:
  2062 ;;		_UART_send
  2063 ;; This function is called by:
  2064 ;;		_shield_code
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068     01B5                     _transmit_shield_code:	
  2069                           ;psect for function _transmit_shield_code
  2070                           
  2071     01B5                     l1877:	
  2072                           ;incstack = 0
  2073                           ; Regs used in _transmit_shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2074                           
  2075     01B5                     l1879:	
  2076                           ;./Commands.h: 230: {
  2077                           
  2078     01B5  30D3               	movlw	low transmit_shield_code@F11762
  2079     01B6  0086               	movwf	6
  2080     01B7  3000               	movlw	high transmit_shield_code@F11762
  2081     01B8  0087               	movwf	7
  2082     01B9  3020               	movlw	low transmit_shield_code@11763
  2083     01BA  0084               	movwf	4
  2084     01BB  3000               	movlw	high transmit_shield_code@11763
  2085     01BC  0085               	movwf	5
  2086     01BD  3006               	movlw	6
  2087     01BE  00F8               	movwf	??_transmit_shield_code
  2088     01BF                     u1450:
  2089     01BF  0016               	moviw fsr1++
  2090     01C0  001A               	movwi fsr0++
  2091     01C1  0BF8               	decfsz	??_transmit_shield_code,f
  2092     01C2  29BF               	goto	u1450
  2093     01C3                     l1881:
  2094     01C3  3006               	movlw	6
  2095     01C4  00F2               	movwf	UART_send@size
  2096     01C5  3000               	movlw	0
  2097     01C6  00F3               	movwf	UART_send@size+1
  2098     01C7  3020               	movlw	(low (transmit_shield_code@11763| 0))& (0+255)
  2099     01C8  3182  2238  3181   	fcall	_UART_send
  2100     01CB  3A00               	xorlw	0
  2101     01CC  1903               	skipnz
  2102     01CD  29CF               	goto	u1461
  2103     01CE  29D0               	goto	u1460
  2104     01CF                     u1461:
  2105     01CF  29B5               	goto	l1879
  2106     01D0                     u1460:
  2107     01D0                     l188:
  2108     01D0  0008               	return
  2109     01D1                     __end_of_transmit_shield_code:
  2110                           
  2111                           	psect	text3
  2112     02B7                     __ptext3:	
  2113 ;; *************** function _shoot_laser *****************
  2114 ;; Defined at:
  2115 ;;		line 223 in file "./Commands.h"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  en              1    wreg     unsigned char 
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  en              1    0[BANK0 ] unsigned char 
  2120 ;;  11760           7    1[BANK0 ] volatile unsigned char [
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2131 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2132 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2133 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2134 ;;Total ram usage:        9 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 2
  2137 ;; This function calls:
  2138 ;;		_UART_send
  2139 ;; This function is called by:
  2140 ;;		_shield_code
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144     02B7                     _shoot_laser:	
  2145                           ;psect for function _shoot_laser
  2146                           
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _shoot_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2150                           ;shoot_laser@en stored from wreg
  2151     02B7  0020               	movlb	0	; select bank0
  2152     02B8  00A0               	movwf	shoot_laser@en
  2153     02B9                     l1857:
  2154     02B9                     l1859:	
  2155                           ;./Commands.h: 223: ;./Commands.h: 224: void surface_exploration(unsigned char taskID_l,
      +                           unsigned char taskID_u, unsigned char value_l, unsigned char value_u);./Commands.h: 225
      +                          : {
  2156                           
  2157     02B9  30B1               	movlw	low shoot_laser@F11759
  2158     02BA  0086               	movwf	6
  2159     02BB  3000               	movlw	high shoot_laser@F11759
  2160     02BC  0087               	movwf	7
  2161     02BD  3021               	movlw	low shoot_laser@11760
  2162     02BE  0084               	movwf	4
  2163     02BF  3000               	movlw	high shoot_laser@11760
  2164     02C0  0085               	movwf	5
  2165     02C1  3007               	movlw	7
  2166     02C2  00F8               	movwf	??_shoot_laser
  2167     02C3                     u1430:
  2168     02C3  0016               	moviw fsr1++
  2169     02C4  001A               	movwi fsr0++
  2170     02C5  0BF8               	decfsz	??_shoot_laser,f
  2171     02C6  2AC3               	goto	u1430
  2172     02C7                     l1861:
  2173     02C7  30FE               	movlw	254
  2174     02C8  0020               	movlb	0	; select bank0
  2175     02C9  00A1               	movwf	shoot_laser@11760	;volatile
  2176     02CA                     l1863:
  2177     02CA  3019               	movlw	25
  2178     02CB  00A2               	movwf	shoot_laser@11760+1	;volatile
  2179     02CC                     l1865:
  2180     02CC  3001               	movlw	1
  2181     02CD  00A3               	movwf	shoot_laser@11760+2	;volatile
  2182     02CE                     l1867:
  2183     02CE  3009               	movlw	9
  2184     02CF  00A4               	movwf	shoot_laser@11760+3	;volatile
  2185     02D0                     l1869:
  2186     02D0  3001               	movlw	1
  2187     02D1  00A5               	movwf	shoot_laser@11760+4	;volatile
  2188     02D2                     l1871:
  2189     02D2  01A6               	clrf	shoot_laser@11760+5	;volatile
  2190     02D3                     l1873:
  2191     02D3  0820               	movf	shoot_laser@en,w
  2192     02D4  00A7               	movwf	shoot_laser@11760+6	;volatile
  2193     02D5                     l1875:
  2194     02D5  3007               	movlw	7
  2195     02D6  00F2               	movwf	UART_send@size
  2196     02D7  3000               	movlw	0
  2197     02D8  00F3               	movwf	UART_send@size+1
  2198     02D9  3021               	movlw	(low (shoot_laser@11760| 0))& (0+255)
  2199     02DA  3182  2238  3182   	fcall	_UART_send
  2200     02DD  3A00               	xorlw	0
  2201     02DE  1903               	skipnz
  2202     02DF  2AE1               	goto	u1441
  2203     02E0  2AE2               	goto	u1440
  2204     02E1                     u1441:
  2205     02E1  2AB9               	goto	l1859
  2206     02E2                     u1440:
  2207     02E2                     l180:
  2208     02E2  0008               	return
  2209     02E3                     __end_of_shoot_laser:
  2210                           
  2211                           	psect	text4
  2212     028B                     __ptext4:	
  2213 ;; *************** function _set_laser *****************
  2214 ;; Defined at:
  2215 ;;		line 218 in file "./Commands.h"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  en              1    wreg     unsigned char 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  en              1    0[BANK0 ] unsigned char 
  2220 ;;  11756           7    1[BANK0 ] volatile unsigned char [
  2221 ;; Return value:  Size  Location     Type
  2222 ;;                  1    wreg      void 
  2223 ;; Registers used:
  2224 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2225 ;; Tracked objects:
  2226 ;;		On entry : 0/0
  2227 ;;		On exit  : 0/0
  2228 ;;		Unchanged: 0/0
  2229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2231 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2233 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2234 ;;Total ram usage:        9 bytes
  2235 ;; Hardware stack levels used: 1
  2236 ;; Hardware stack levels required when called: 2
  2237 ;; This function calls:
  2238 ;;		_UART_send
  2239 ;; This function is called by:
  2240 ;;		_shield_code
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244     028B                     _set_laser:	
  2245                           ;psect for function _set_laser
  2246                           
  2247                           
  2248                           ;incstack = 0
  2249                           ; Regs used in _set_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2250                           ;set_laser@en stored from wreg
  2251     028B  0020               	movlb	0	; select bank0
  2252     028C  00A0               	movwf	set_laser@en
  2253     028D                     l1837:
  2254     028D                     l1839:	
  2255                           ;./Commands.h: 218:     int size=size_lower;;./Commands.h: 219:     size += size_upper <
      +                          < 8;;./Commands.h: 220:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x8
      +                          1, 0x09, size_lower, size_upper}, 6)){}
  2256                           
  2257     028D  30B8               	movlw	low set_laser@F11755
  2258     028E  0086               	movwf	6
  2259     028F  3000               	movlw	high set_laser@F11755
  2260     0290  0087               	movwf	7
  2261     0291  3021               	movlw	low set_laser@11756
  2262     0292  0084               	movwf	4
  2263     0293  3000               	movlw	high set_laser@11756
  2264     0294  0085               	movwf	5
  2265     0295  3007               	movlw	7
  2266     0296  00F8               	movwf	??_set_laser
  2267     0297                     u1410:
  2268     0297  0016               	moviw fsr1++
  2269     0298  001A               	movwi fsr0++
  2270     0299  0BF8               	decfsz	??_set_laser,f
  2271     029A  2A97               	goto	u1410
  2272     029B                     l1841:
  2273     029B  30FE               	movlw	254
  2274     029C  0020               	movlb	0	; select bank0
  2275     029D  00A1               	movwf	set_laser@11756	;volatile
  2276     029E                     l1843:
  2277     029E  3019               	movlw	25
  2278     029F  00A2               	movwf	set_laser@11756+1	;volatile
  2279     02A0                     l1845:
  2280     02A0  3001               	movlw	1
  2281     02A1  00A3               	movwf	set_laser@11756+2	;volatile
  2282     02A2                     l1847:
  2283     02A2  3008               	movlw	8
  2284     02A3  00A4               	movwf	set_laser@11756+3	;volatile
  2285     02A4                     l1849:
  2286     02A4  3001               	movlw	1
  2287     02A5  00A5               	movwf	set_laser@11756+4	;volatile
  2288     02A6                     l1851:
  2289     02A6  01A6               	clrf	set_laser@11756+5	;volatile
  2290     02A7                     l1853:
  2291     02A7  0820               	movf	set_laser@en,w
  2292     02A8  00A7               	movwf	set_laser@11756+6	;volatile
  2293     02A9                     l1855:
  2294     02A9  3007               	movlw	7
  2295     02AA  00F2               	movwf	UART_send@size
  2296     02AB  3000               	movlw	0
  2297     02AC  00F3               	movwf	UART_send@size+1
  2298     02AD  3021               	movlw	(low (set_laser@11756| 0))& (0+255)
  2299     02AE  3182  2238  3182   	fcall	_UART_send
  2300     02B1  3A00               	xorlw	0
  2301     02B2  1903               	skipnz
  2302     02B3  2AB5               	goto	u1421
  2303     02B4  2AB6               	goto	u1420
  2304     02B5                     u1421:
  2305     02B5  2A8D               	goto	l1839
  2306     02B6                     u1420:
  2307     02B6                     l172:
  2308     02B6  0008               	return
  2309     02B7                     __end_of_set_laser:
  2310                           
  2311                           	psect	text5
  2312     00ED                     __ptext5:	
  2313 ;; *************** function _PCLS_info *****************
  2314 ;; Defined at:
  2315 ;;		line 126 in file "./Commands.h"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;		None
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2333 ;;Total ram usage:        0 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; Hardware stack levels required when called: 3
  2336 ;; This function calls:
  2337 ;;		_PCLS_info_receive
  2338 ;;		_PCLS_info_send
  2339 ;; This function is called by:
  2340 ;;		_shield_code
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344     00ED                     _PCLS_info:	
  2345                           ;psect for function _PCLS_info
  2346                           
  2347     00ED                     l1823:	
  2348                           ;incstack = 0
  2349                           ; Regs used in _PCLS_info: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2350                           
  2351                           
  2352                           ;./Commands.h: 128: 
  2353     00ED  3181  2199  3180   	fcall	_PCLS_info_send
  2354     00F0                     l1827:	
  2355                           ;./Commands.h: 129:     joy_rx = r[6];
  2356                           
  2357                           
  2358                           ;./Commands.h: 129:     joy_rx = r[6];
  2359     00F0  3183  238F  3180   	fcall	_PCLS_info_receive
  2360     00F3  3A00               	xorlw	0
  2361     00F4  1903               	skipnz
  2362     00F5  28F7               	goto	u1391
  2363     00F6  28F8               	goto	u1390
  2364     00F7                     u1391:
  2365     00F7  28ED               	goto	l1823
  2366     00F8                     u1390:
  2367     00F8                     l122:
  2368     00F8  0008               	return
  2369     00F9                     __end_of_PCLS_info:
  2370                           
  2371                           	psect	text6
  2372     0199                     __ptext6:	
  2373 ;; *************** function _PCLS_info_send *****************
  2374 ;; Defined at:
  2375 ;;		line 96 in file "./Commands.h"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  11725           6    0[BANK0 ] volatile unsigned char [
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2390 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2392 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2393 ;;Total ram usage:        7 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 2
  2396 ;; This function calls:
  2397 ;;		_UART_send
  2398 ;; This function is called by:
  2399 ;;		_PCLS_info
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403     0199                     _PCLS_info_send:	
  2404                           ;psect for function _PCLS_info_send
  2405                           
  2406     0199                     l1635:	
  2407                           ;incstack = 0
  2408                           ; Regs used in _PCLS_info_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2409                           
  2410     0199                     l1637:	
  2411                           ;./Commands.h: 98: 
  2412                           
  2413     0199  30DF               	movlw	low PCLS_info_send@F11724
  2414     019A  0086               	movwf	6
  2415     019B  3000               	movlw	high PCLS_info_send@F11724
  2416     019C  0087               	movwf	7
  2417     019D  3020               	movlw	low PCLS_info_send@11725
  2418     019E  0084               	movwf	4
  2419     019F  3000               	movlw	high PCLS_info_send@11725
  2420     01A0  0085               	movwf	5
  2421     01A1  3006               	movlw	6
  2422     01A2  00F8               	movwf	??_PCLS_info_send
  2423     01A3                     u1060:
  2424     01A3  0016               	moviw fsr1++
  2425     01A4  001A               	movwi fsr0++
  2426     01A5  0BF8               	decfsz	??_PCLS_info_send,f
  2427     01A6  29A3               	goto	u1060
  2428     01A7                     l1639:
  2429     01A7  3006               	movlw	6
  2430     01A8  00F2               	movwf	UART_send@size
  2431     01A9  3000               	movlw	0
  2432     01AA  00F3               	movwf	UART_send@size+1
  2433     01AB  3020               	movlw	(low (PCLS_info_send@11725| 0))& (0+255)
  2434     01AC  3182  2238  3181   	fcall	_UART_send
  2435     01AF  3A00               	xorlw	0
  2436     01B0  1903               	skipnz
  2437     01B1  29B3               	goto	u1071
  2438     01B2  29B4               	goto	u1070
  2439     01B3                     u1071:
  2440     01B3  2999               	goto	l1637
  2441     01B4                     u1070:
  2442     01B4                     l108:
  2443     01B4  0008               	return
  2444     01B5                     __end_of_PCLS_info_send:
  2445                           
  2446                           	psect	text7
  2447     038F                     __ptext7:	
  2448 ;; *************** function _PCLS_info_receive *****************
  2449 ;; Defined at:
  2450 ;;		line 101 in file "./Commands.h"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  r              12    0[BANK0 ] volatile unsigned char [
  2455 ;;  j               1   13[BANK0 ] volatile unsigned char 
  2456 ;;  s               1   12[BANK0 ] volatile unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      unsigned char 
  2459 ;; Registers used:
  2460 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2467 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2468 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;      Totals:         3      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;Total ram usage:       17 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 1
  2473 ;; This function calls:
  2474 ;;		_rx_wait
  2475 ;; This function is called by:
  2476 ;;		_PCLS_info
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480     038F                     _PCLS_info_receive:	
  2481                           ;psect for function _PCLS_info_receive
  2482                           
  2483     038F                     l1641:	
  2484                           ;incstack = 0
  2485                           ; Regs used in _PCLS_info_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2486                           
  2487                           
  2488                           ;./Commands.h: 103:     {
  2489     038F  300C               	movlw	12
  2490     0390  0020               	movlb	0	; select bank0
  2491     0391  00AC               	movwf	PCLS_info_receive@s	;volatile
  2492     0392                     l1643:
  2493                           
  2494                           ;./Commands.h: 105:     }
  2495     0392  01AD               	clrf	PCLS_info_receive@j	;volatile
  2496     0393  2BAC               	goto	l1655
  2497     0394                     l1645:
  2498                           
  2499                           ;./Commands.h: 106: };./Commands.h: 107: 
  2500     0394  3181  2164  3183   	fcall	_rx_wait
  2501     0397  3A00               	xorlw	0
  2502     0398  1903               	skipnz
  2503     0399  2B9B               	goto	u1081
  2504     039A  2B9C               	goto	u1080
  2505     039B                     u1081:
  2506     039B  2BA5               	goto	l1649
  2507     039C                     u1080:
  2508     039C                     l1647:
  2509                           
  2510                           ;./Commands.h: 108: void user_data_send();./Commands.h: 109: {
  2511     039C  0020               	movlb	0	; select bank0
  2512     039D  082D               	movf	PCLS_info_receive@j,w
  2513     039E  3E20               	addlw	(low (PCLS_info_receive@r| 0))& (0+255)
  2514     039F  0086               	movwf	6
  2515     03A0  0187               	clrf	7
  2516     03A1  0022               	movlb	2	; select bank2
  2517     03A2  0819               	movf	25,w	;volatile
  2518     03A3  0081               	movwf	1
  2519                           
  2520                           ;./Commands.h: 110:     while(!UART_send((volatile unsigned char []) {0xFE, 0x19, 0x01, 
      +                          0x05, 0x00, 0x00}, 6)){}
  2521     03A4  2BA7               	goto	l1653
  2522     03A5                     l1649:
  2523                           
  2524                           ;./Commands.h: 112: ;./Commands.h: 113: volatile unsigned char user_data_receive()
  2525     03A5  3000               	movlw	0
  2526     03A6  2BCC               	goto	l115
  2527     03A7                     l1653:
  2528                           
  2529                           ;./Commands.h: 115:     volatile char s=26, j, r[26];
  2530     03A7  3001               	movlw	1
  2531     03A8  00F2               	movwf	??_PCLS_info_receive
  2532     03A9  0872               	movf	??_PCLS_info_receive,w
  2533     03AA  0020               	movlb	0	; select bank0
  2534     03AB  07AD               	addwf	PCLS_info_receive@j,f	;volatile
  2535     03AC                     l1655:
  2536     03AC  082C               	movf	PCLS_info_receive@s,w	;volatile
  2537     03AD  022D               	subwf	PCLS_info_receive@j,w	;volatile
  2538     03AE  1C03               	skipc
  2539     03AF  2BB1               	goto	u1091
  2540     03B0  2BB2               	goto	u1090
  2541     03B1                     u1091:
  2542     03B1  2B94               	goto	l1645
  2543     03B2                     u1090:
  2544     03B2                     l1657:
  2545                           
  2546                           ;./Commands.h: 117:     for (j=0; j < s; j++)
  2547     03B2  0826               	movf	PCLS_info_receive@r+6,w	;volatile
  2548     03B3  00E0               	movwf	_teamID	;volatile
  2549                           
  2550                           ;./Commands.h: 118:     {
  2551     03B4  0827               	movf	PCLS_info_receive@r+7,w	;volatile
  2552     03B5  00DF               	movwf	_playerID	;volatile
  2553                           
  2554                           ;./Commands.h: 119:         if (rx_wait())
  2555     03B6  0828               	movf	PCLS_info_receive@r+8,w	;volatile
  2556     03B7  00F2               	movwf	??_PCLS_info_receive
  2557     03B8  01F3               	clrf	??_PCLS_info_receive+1
  2558     03B9  0872               	movf	??_PCLS_info_receive,w
  2559     03BA  00C6               	movwf	_health	;volatile
  2560     03BB  0873               	movf	??_PCLS_info_receive+1,w
  2561     03BC  00C7               	movwf	_health+1	;volatile
  2562                           
  2563                           ;./Commands.h: 120:         {
  2564     03BD  0829               	movf	PCLS_info_receive@r+9,w	;volatile
  2565     03BE  00F2               	movwf	??_PCLS_info_receive
  2566     03BF  01F3               	clrf	??_PCLS_info_receive+1
  2567     03C0  0872               	movf	??_PCLS_info_receive,w
  2568     03C1  00F3               	movwf	??_PCLS_info_receive+1
  2569     03C2  01F2               	clrf	??_PCLS_info_receive
  2570     03C3  0872               	movf	??_PCLS_info_receive,w
  2571     03C4  07C6               	addwf	_health,f	;volatile
  2572     03C5  0873               	movf	??_PCLS_info_receive+1,w
  2573     03C6  3DC7               	addwfc	_health+1,f	;volatile
  2574                           
  2575                           ;./Commands.h: 121:             r[j] = RCREG;
  2576     03C7  082A               	movf	PCLS_info_receive@r+10,w	;volatile
  2577     03C8  00DE               	movwf	_shield_flag	;volatile
  2578                           
  2579                           ;./Commands.h: 122:         }
  2580     03C9  082B               	movf	PCLS_info_receive@r+11,w	;volatile
  2581     03CA  00DD               	movwf	_repair_flag	;volatile
  2582                           
  2583                           ;./Commands.h: 123:         else
  2584     03CB  3001               	movlw	1
  2585     03CC                     l115:
  2586     03CC  0008               	return
  2587     03CD                     __end_of_PCLS_info_receive:
  2588                           
  2589                           	psect	text8
  2590     04CA                     __ptext8:	
  2591 ;; *************** function _line_follower *****************
  2592 ;; Defined at:
  2593 ;;		line 46 in file "./Line Follower.h"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  r_val           2   12[COMMON] volatile unsigned int 
  2598 ;;  m_val           2   10[COMMON] volatile unsigned int 
  2599 ;;  l_val           2    8[COMMON] volatile unsigned int 
  2600 ;; Return value:  Size  Location     Type
  2601 ;;                  1    wreg      void 
  2602 ;; Registers used:
  2603 ;;		wreg, pclath, cstack
  2604 ;; Tracked objects:
  2605 ;;		On entry : 0/0
  2606 ;;		On exit  : 0/0
  2607 ;;		Unchanged: 0/0
  2608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2613 ;;Total ram usage:        6 bytes
  2614 ;; Hardware stack levels used: 1
  2615 ;; Hardware stack levels required when called: 1
  2616 ;; This function calls:
  2617 ;;		_read_adc
  2618 ;; This function is called by:
  2619 ;;		_main
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623     04CA                     _line_follower:	
  2624                           ;psect for function _line_follower
  2625                           
  2626     04CA                     l1953:	
  2627                           ;incstack = 0
  2628                           ; Regs used in _line_follower: [wreg+pclath+cstack]
  2629                           
  2630                           
  2631                           ;./Line Follower.h: 48:     l_val = read_adc(lpin);;./Line Follower.h: 50:     while(ADC
      +                          ON0bits.ADGO){}
  2632     04CA  0020               	movlb	0	; select bank0
  2633     04CB  1011               	bcf	17,0	;volatile
  2634                           
  2635                           ;./Line Follower.h: 51:     m_val = read_adc(mpin);
  2636     04CC  1091               	bcf	17,1	;volatile
  2637                           
  2638                           ;./Line Follower.h: 52:     ADCON0bits.ADGO = 1;
  2639     04CD  1111               	bcf	17,2	;volatile
  2640                           
  2641                           ;./Line Follower.h: 54:     r_val = read_adc(rpin);
  2642     04CE  0021               	movlb	1	; select bank1
  2643     04CF  1413               	bsf	19,0	;volatile
  2644     04D0                     l289:	
  2645                           ;./Line Follower.h: 55: 
  2646                           
  2647     04D0  1813               	btfsc	19,0	;volatile
  2648     04D1  2CD3               	goto	u1591
  2649     04D2  2CD4               	goto	u1590
  2650     04D3                     u1591:
  2651     04D3  2CD0               	goto	l289
  2652     04D4                     u1590:
  2653     04D4                     l1955:
  2654                           
  2655                           ;./Line Follower.h: 56:     if(m_val < line_colour)
  2656     04D4  300B               	movlw	11
  2657     04D5  3182  2211  3184   	fcall	_read_adc
  2658     04D8  0871               	movf	?_read_adc+1,w
  2659     04D9  00F9               	movwf	line_follower@l_val+1	;volatile
  2660     04DA  0870               	movf	?_read_adc,w
  2661     04DB  00F8               	movwf	line_follower@l_val	;volatile
  2662     04DC                     l1957:
  2663                           
  2664                           ;./Line Follower.h: 57:     {
  2665     04DC  0021               	movlb	1	; select bank1
  2666     04DD  1413               	bsf	19,0	;volatile
  2667     04DE                     l292:	
  2668                           ;./Line Follower.h: 58:    y_vec = fast;
  2669                           
  2670     04DE  1813               	btfsc	19,0	;volatile
  2671     04DF  2CE1               	goto	u1601
  2672     04E0  2CE2               	goto	u1600
  2673     04E1                     u1601:
  2674     04E1  2CDE               	goto	l292
  2675     04E2                     u1600:
  2676     04E2                     l1959:
  2677                           
  2678                           ;./Line Follower.h: 59:         LATAbits.LATA1 = 1;
  2679     04E2  3009               	movlw	9
  2680     04E3  3182  2211  3184   	fcall	_read_adc
  2681     04E6  0871               	movf	?_read_adc+1,w
  2682     04E7  00FB               	movwf	line_follower@m_val+1	;volatile
  2683     04E8  0870               	movf	?_read_adc,w
  2684     04E9  00FA               	movwf	line_follower@m_val	;volatile
  2685     04EA                     l1961:
  2686                           
  2687                           ;./Line Follower.h: 60:     }
  2688     04EA  0021               	movlb	1	; select bank1
  2689     04EB  1413               	bsf	19,0	;volatile
  2690     04EC                     l295:	
  2691                           ;./Line Follower.h: 61:     else
  2692                           
  2693     04EC  1813               	btfsc	19,0	;volatile
  2694     04ED  2CEF               	goto	u1611
  2695     04EE  2CF0               	goto	u1610
  2696     04EF                     u1611:
  2697     04EF  2CEC               	goto	l295
  2698     04F0                     u1610:
  2699     04F0                     l1963:
  2700                           
  2701                           ;./Line Follower.h: 62:     {
  2702     04F0  300A               	movlw	10
  2703     04F1  3182  2211  3184   	fcall	_read_adc
  2704     04F4  0871               	movf	?_read_adc+1,w
  2705     04F5  00FD               	movwf	line_follower@r_val+1	;volatile
  2706     04F6  0870               	movf	?_read_adc,w
  2707     04F7  00FC               	movwf	line_follower@r_val	;volatile
  2708     04F8                     l1965:
  2709                           
  2710                           ;./Line Follower.h: 64:         LATAbits.LATA1 = 0;
  2711     04F8  0020               	movlb	0	; select bank0
  2712     04F9  086A               	movf	_line_colour+1,w	;volatile
  2713     04FA  027B               	subwf	line_follower@m_val+1,w	;volatile
  2714     04FB  1D03               	skipz
  2715     04FC  2CFF               	goto	u1625
  2716     04FD  0869               	movf	_line_colour,w	;volatile
  2717     04FE  027A               	subwf	line_follower@m_val,w	;volatile
  2718     04FF                     u1625:
  2719     04FF  1803               	skipnc
  2720     0500  2D02               	goto	u1621
  2721     0501  2D03               	goto	u1620
  2722     0502                     u1621:
  2723     0502  2D09               	goto	l1971
  2724     0503                     u1620:
  2725     0503                     l1967:
  2726                           
  2727                           ;./Line Follower.h: 65:     };./Line Follower.h: 66: 
  2728     0503  0868               	movf	_fast+1,w	;volatile
  2729     0504  00C5               	movwf	_y_vec+1	;volatile
  2730     0505  0867               	movf	_fast,w	;volatile
  2731     0506  00C4               	movwf	_y_vec	;volatile
  2732     0507                     l1969:
  2733                           
  2734                           ;./Line Follower.h: 67:     if(l_val < line_colour)
  2735     0507  1496               	bsf	22,1	;volatile
  2736                           
  2737                           ;./Line Follower.h: 68:     {
  2738     0508  2D0E               	goto	l299
  2739     0509                     l1971:
  2740                           
  2741                           ;./Line Follower.h: 70:         LATAbits.LATA2 = 1;;./Line Follower.h: 71:     }
  2742     0509  0866               	movf	_slow+1,w	;volatile
  2743     050A  00C5               	movwf	_y_vec+1	;volatile
  2744     050B  0865               	movf	_slow,w	;volatile
  2745     050C  00C4               	movwf	_y_vec	;volatile
  2746     050D                     l1973:
  2747                           
  2748                           ;./Line Follower.h: 72:     else {LATAbits.LATA2 = 0;}
  2749     050D  1096               	bcf	22,1	;volatile
  2750     050E                     l299:	
  2751                           ;./Line Follower.h: 73: 
  2752                           
  2753                           
  2754                           ;./Line Follower.h: 75:     {
  2755     050E  086A               	movf	_line_colour+1,w	;volatile
  2756     050F  0279               	subwf	line_follower@l_val+1,w	;volatile
  2757     0510  1D03               	skipz
  2758     0511  2D14               	goto	u1635
  2759     0512  0869               	movf	_line_colour,w	;volatile
  2760     0513  0278               	subwf	line_follower@l_val,w	;volatile
  2761     0514                     u1635:
  2762     0514  1803               	skipnc
  2763     0515  2D17               	goto	u1631
  2764     0516  2D18               	goto	u1630
  2765     0517                     u1631:
  2766     0517  2D1E               	goto	l300
  2767     0518                     u1630:
  2768     0518                     l1975:
  2769                           
  2770                           ;./Line Follower.h: 76:    y_vec += speed_inc;;./Line Follower.h: 77:         LATAbits.L
      +                          ATA0 = 1;
  2771     0518  0863               	movf	_speed_inc,w	;volatile
  2772     0519  02C4               	subwf	_y_vec,f	;volatile
  2773     051A  0864               	movf	_speed_inc+1,w	;volatile
  2774     051B  3BC5               	subwfb	_y_vec+1,f	;volatile
  2775     051C                     l1977:
  2776                           
  2777                           ;./Line Follower.h: 78:     }
  2778     051C  1516               	bsf	22,2	;volatile
  2779                           
  2780                           ;./Line Follower.h: 79:     else {LATAbits.LATA0 = 0;}
  2781     051D  2D1F               	goto	l1979
  2782     051E                     l300:	
  2783                           ;./Line Follower.h: 80: 
  2784                           
  2785     051E  1116               	bcf	22,2	;volatile
  2786     051F                     l1979:
  2787                           
  2788                           ;./Line Follower.h: 82:     PIR1bits.ADIF = 0;
  2789     051F  086A               	movf	_line_colour+1,w	;volatile
  2790     0520  027D               	subwf	line_follower@r_val+1,w	;volatile
  2791     0521  1D03               	skipz
  2792     0522  2D25               	goto	u1645
  2793     0523  0869               	movf	_line_colour,w	;volatile
  2794     0524  027C               	subwf	line_follower@r_val,w	;volatile
  2795     0525                     u1645:
  2796     0525  1803               	skipnc
  2797     0526  2D28               	goto	u1641
  2798     0527  2D29               	goto	u1640
  2799     0528                     u1641:
  2800     0528  2D2F               	goto	l302
  2801     0529                     u1640:
  2802     0529                     l1981:
  2803                           
  2804                           ;./Line Follower.h: 83:     ADCON0bits.ADGO = 1;;./Line Follower.h: 84: }
  2805     0529  0863               	movf	_speed_inc,w	;volatile
  2806     052A  07C4               	addwf	_y_vec,f	;volatile
  2807     052B  0864               	movf	_speed_inc+1,w	;volatile
  2808     052C  3DC5               	addwfc	_y_vec+1,f	;volatile
  2809     052D                     l1983:
  2810     052D  1416               	bsf	22,0	;volatile
  2811     052E  2D30               	goto	l303
  2812     052F                     l302:
  2813     052F  1016               	bcf	22,0	;volatile
  2814     0530                     l303:
  2815     0530  002E               	movlb	14	; select bank14
  2816     0531  100D               	bcf	13,0	;volatile
  2817     0532  0021               	movlb	1	; select bank1
  2818     0533  1413               	bsf	19,0	;volatile
  2819     0534                     l304:
  2820     0534  0008               	return
  2821     0535                     __end_of_line_follower:
  2822                           
  2823                           	psect	text9
  2824     0351                     __ptext9:	
  2825 ;; *************** function _drive *****************
  2826 ;; Defined at:
  2827 ;;		line 62 in file "./Driving.h"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  dir             2   34[BANK0 ] volatile int 
  2832 ;;  y               2   32[BANK0 ] volatile int 
  2833 ;;  x               2   30[BANK0 ] volatile int 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2844 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2846 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2847 ;;Total ram usage:        8 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 4
  2850 ;; This function calls:
  2851 ;;		_Vdrive
  2852 ;;		___wmul
  2853 ;;		_user_data
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     0351                     _drive:	
  2860                           ;psect for function _drive
  2861                           
  2862     0351                     l1931:	
  2863                           ;incstack = 0
  2864                           ; Regs used in _drive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2865                           
  2866                           
  2867                           ;./Driving.h: 64:     x = (joy_rx - 50)*2;;./Driving.h: 65:     y = dir * (joy_ly);;./Dr
      +                          iving.h: 67:     Vdrive(y, x);
  2868     0351  3181  2138  3183   	fcall	_user_data
  2869     0354                     l1933:
  2870     0354  3000               	movlw	0
  2871     0355  0020               	movlb	0	; select bank0
  2872     0356  0259               	subwf	_joy_ry+1,w	;volatile
  2873     0357  301A               	movlw	26
  2874     0358  1903               	skipnz
  2875     0359  0258               	subwf	_joy_ry,w	;volatile
  2876     035A  1C03               	skipc
  2877     035B  2B5D               	goto	u1581
  2878     035C  2B5E               	goto	u1580
  2879     035D                     u1581:
  2880     035D  2B63               	goto	l1937
  2881     035E                     u1580:
  2882     035E                     l1935:
  2883     035E  3001               	movlw	1
  2884     035F  00C2               	movwf	drive@dir	;volatile
  2885     0360  3000               	movlw	0
  2886     0361  00C3               	movwf	drive@dir+1	;volatile
  2887     0362  2B67               	goto	l1939
  2888     0363                     l1937:
  2889     0363  30FF               	movlw	255
  2890     0364  00C2               	movwf	drive@dir	;volatile
  2891     0365  30FF               	movlw	255
  2892     0366  00C3               	movwf	drive@dir+1	;volatile
  2893     0367                     l1939:
  2894     0367  085B               	movf	_joy_rx+1,w	;volatile
  2895     0368  00BD               	movwf	??_drive+1
  2896     0369  085A               	movf	_joy_rx,w	;volatile
  2897     036A  00BC               	movwf	??_drive
  2898     036B  35BC               	lslf	??_drive,f
  2899     036C  0DBD               	rlf	??_drive+1,f
  2900     036D  083C               	movf	??_drive,w
  2901     036E  3E9C               	addlw	156
  2902     036F  00BE               	movwf	drive@x	;volatile
  2903     0370  30FF               	movlw	255
  2904     0371  3D3D               	addwfc	??_drive+1,w
  2905     0372  00BF               	movwf	drive@x+1	;volatile
  2906     0373                     l1941:
  2907     0373  0843               	movf	drive@dir+1,w	;volatile
  2908     0374  00A1               	movwf	___wmul@multiplier+1
  2909     0375  0842               	movf	drive@dir,w	;volatile
  2910     0376  00A0               	movwf	___wmul@multiplier
  2911     0377  0857               	movf	_joy_ly+1,w	;volatile
  2912     0378  00A3               	movwf	___wmul@multiplicand+1
  2913     0379  0856               	movf	_joy_ly,w	;volatile
  2914     037A  00A2               	movwf	___wmul@multiplicand
  2915     037B  3181  21D1  3183   	fcall	___wmul
  2916     037E  0020               	movlb	0	; select bank0
  2917     037F  0821               	movf	?___wmul+1,w
  2918     0380  00C1               	movwf	drive@y+1	;volatile
  2919     0381  0820               	movf	?___wmul,w
  2920     0382  00C0               	movwf	drive@y	;volatile
  2921     0383                     l1943:
  2922     0383  0841               	movf	drive@y+1,w	;volatile
  2923     0384  00AC               	movwf	Vdrive@y+1
  2924     0385  0840               	movf	drive@y,w	;volatile
  2925     0386  00AB               	movwf	Vdrive@y
  2926     0387  083F               	movf	drive@x+1,w	;volatile
  2927     0388  00AE               	movwf	Vdrive@x+1
  2928     0389  083E               	movf	drive@x,w	;volatile
  2929     038A  00AD               	movwf	Vdrive@x
  2930     038B  3185  2535  3183   	fcall	_Vdrive
  2931     038E                     l253:
  2932     038E  0008               	return
  2933     038F                     __end_of_drive:
  2934                           
  2935                           	psect	text10
  2936     0138                     __ptext10:	
  2937 ;; *************** function _user_data *****************
  2938 ;; Defined at:
  2939 ;;		line 198 in file "./Commands.h"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2955 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;Total ram usage:        1 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 3
  2960 ;; This function calls:
  2961 ;;		_user_data_receive
  2962 ;;		_user_data_send
  2963 ;; This function is called by:
  2964 ;;		_drive
  2965 ;;		_shield_code
  2966 ;;		_main
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970     0138                     _user_data:	
  2971                           ;psect for function _user_data
  2972                           
  2973     0138                     l1829:	
  2974                           ;incstack = 0
  2975                           ; Regs used in _user_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2976                           
  2977                           
  2978                           ;./Commands.h: 200: 
  2979     0138  3181  217D  3181   	fcall	_user_data_send
  2980     013B                     l1833:	
  2981                           ;./Commands.h: 201: void transmit_shield_code()
  2982                           
  2983                           
  2984                           ;./Commands.h: 201: void transmit_shield_code()
  2985     013B  3186  265D  3181   	fcall	_user_data_receive
  2986     013E  3A00               	xorlw	0
  2987     013F  1903               	skipnz
  2988     0140  2942               	goto	u1401
  2989     0141  2943               	goto	u1400
  2990     0142                     u1401:
  2991     0142  2938               	goto	l1829
  2992     0143                     u1400:
  2993     0143                     l1835:
  2994                           
  2995                           ;./Commands.h: 205: 
  2996     0143  300D               	movlw	13
  2997     0144  00FB               	movwf	??_user_data
  2998     0145  30FC               	movlw	252
  2999     0146                     u1907:
  3000     0146  0B89               	decfsz	9,f
  3001     0147  2946               	goto	u1907
  3002     0148  0BFB               	decfsz	??_user_data,f
  3003     0149  2946               	goto	u1907
  3004     014A                     l148:
  3005     014A  0008               	return
  3006     014B                     __end_of_user_data:
  3007                           
  3008                           	psect	text11
  3009     017D                     __ptext11:	
  3010 ;; *************** function _user_data_send *****************
  3011 ;; Defined at:
  3012 ;;		line 135 in file "./Commands.h"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  11733           6    0[BANK0 ] volatile unsigned char [
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;Total ram usage:        7 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 2
  3033 ;; This function calls:
  3034 ;;		_UART_send
  3035 ;; This function is called by:
  3036 ;;		_user_data
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040     017D                     _user_data_send:	
  3041                           ;psect for function _user_data_send
  3042                           
  3043     017D                     l1661:	
  3044                           ;incstack = 0
  3045                           ; Regs used in _user_data_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3046                           
  3047     017D                     l1663:	
  3048                           ;./Commands.h: 137:     joy_ry /= 10;
  3049                           
  3050     017D  30D9               	movlw	low user_data_send@F11732
  3051     017E  0086               	movwf	6
  3052     017F  3000               	movlw	high user_data_send@F11732
  3053     0180  0087               	movwf	7
  3054     0181  3020               	movlw	low user_data_send@11733
  3055     0182  0084               	movwf	4
  3056     0183  3000               	movlw	high user_data_send@11733
  3057     0184  0085               	movwf	5
  3058     0185  3006               	movlw	6
  3059     0186  00F8               	movwf	??_user_data_send
  3060     0187                     u1100:
  3061     0187  0016               	moviw fsr1++
  3062     0188  001A               	movwi fsr0++
  3063     0189  0BF8               	decfsz	??_user_data_send,f
  3064     018A  2987               	goto	u1100
  3065     018B                     l1665:
  3066     018B  3006               	movlw	6
  3067     018C  00F2               	movwf	UART_send@size
  3068     018D  3000               	movlw	0
  3069     018E  00F3               	movwf	UART_send@size+1
  3070     018F  3020               	movlw	(low (user_data_send@11733| 0))& (0+255)
  3071     0190  3182  2238  3181   	fcall	_UART_send
  3072     0193  3A00               	xorlw	0
  3073     0194  1903               	skipnz
  3074     0195  2997               	goto	u1111
  3075     0196  2998               	goto	u1110
  3076     0197                     u1111:
  3077     0197  297D               	goto	l1663
  3078     0198                     u1110:
  3079     0198                     l130:
  3080     0198  0008               	return
  3081     0199                     __end_of_user_data_send:
  3082                           
  3083                           	psect	text12
  3084     065D                     __ptext12:	
  3085 ;; *************** function _user_data_receive *****************
  3086 ;; Defined at:
  3087 ;;		line 140 in file "./Commands.h"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;		None
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  r              26    0[BANK0 ] volatile unsigned char [
  3092 ;;  j               1   27[BANK0 ] volatile unsigned char 
  3093 ;;  s               1   26[BANK0 ] volatile unsigned char 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      unsigned char 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3104 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3105 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3106 ;;      Totals:         3      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3107 ;;Total ram usage:       31 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 1
  3110 ;; This function calls:
  3111 ;;		___lwdiv
  3112 ;;		_rx_wait
  3113 ;; This function is called by:
  3114 ;;		_user_data
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118     065D                     _user_data_receive:	
  3119                           ;psect for function _user_data_receive
  3120                           
  3121     065D                     l1667:	
  3122                           ;incstack = 0
  3123                           ; Regs used in _user_data_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3124                           
  3125                           
  3126                           ;./Commands.h: 142:     joy_ly /= 10;
  3127     065D  301A               	movlw	26
  3128     065E  0020               	movlb	0	; select bank0
  3129     065F  00BA               	movwf	user_data_receive@s	;volatile
  3130     0660                     l1669:
  3131                           
  3132                           ;./Commands.h: 144:     joy_lx = r[12];
  3133     0660  01BB               	clrf	user_data_receive@j	;volatile
  3134     0661  2E7A               	goto	l1681
  3135     0662                     l1671:
  3136                           
  3137                           ;./Commands.h: 145:     joy_lx += r[13] << 8;;./Commands.h: 146:     joy_lx -= 1000;
  3138     0662  3181  2164  3186   	fcall	_rx_wait
  3139     0665  3A00               	xorlw	0
  3140     0666  1903               	skipnz
  3141     0667  2E69               	goto	u1121
  3142     0668  2E6A               	goto	u1120
  3143     0669                     u1121:
  3144     0669  2E73               	goto	l1675
  3145     066A                     u1120:
  3146     066A                     l1673:
  3147                           
  3148                           ;./Commands.h: 147:     joy_lx /= 10;;./Commands.h: 148: 
  3149     066A  0020               	movlb	0	; select bank0
  3150     066B  083B               	movf	user_data_receive@j,w
  3151     066C  3E20               	addlw	(low (user_data_receive@r| 0))& (0+255)
  3152     066D  0086               	movwf	6
  3153     066E  0187               	clrf	7
  3154     066F  0022               	movlb	2	; select bank2
  3155     0670  0819               	movf	25,w	;volatile
  3156     0671  0081               	movwf	1
  3157                           
  3158                           ;./Commands.h: 149:     swA = r[14];
  3159     0672  2E75               	goto	l1679
  3160     0673                     l1675:
  3161                           
  3162                           ;./Commands.h: 151:     swA = swA > 1500;;./Commands.h: 152:     swB = r[16];
  3163     0673  3000               	movlw	0
  3164     0674  2FCC               	goto	l137
  3165     0675                     l1679:
  3166                           
  3167                           ;./Commands.h: 154:     swB = swB > 1500;
  3168     0675  3001               	movlw	1
  3169     0676  00F8               	movwf	??_user_data_receive
  3170     0677  0878               	movf	??_user_data_receive,w
  3171     0678  0020               	movlb	0	; select bank0
  3172     0679  07BB               	addwf	user_data_receive@j,f	;volatile
  3173     067A                     l1681:
  3174     067A  083A               	movf	user_data_receive@s,w	;volatile
  3175     067B  023B               	subwf	user_data_receive@j,w	;volatile
  3176     067C  1C03               	skipc
  3177     067D  2E7F               	goto	u1131
  3178     067E  2E80               	goto	u1130
  3179     067F                     u1131:
  3180     067F  2E62               	goto	l1671
  3181     0680                     u1130:
  3182     0680                     l1683:
  3183                           
  3184                           ;./Commands.h: 156:     swC += r[19] << 8;
  3185     0680  0826               	movf	user_data_receive@r+6,w	;volatile
  3186     0681  00F8               	movwf	??_user_data_receive
  3187     0682  01F9               	clrf	??_user_data_receive+1
  3188     0683  0878               	movf	??_user_data_receive,w
  3189     0684  00DA               	movwf	_joy_rx	;volatile
  3190     0685  0879               	movf	??_user_data_receive+1,w
  3191     0686  00DB               	movwf	_joy_rx+1	;volatile
  3192                           
  3193                           ;./Commands.h: 157:     if(swC == 1000){swC = 0;}
  3194     0687  0827               	movf	user_data_receive@r+7,w	;volatile
  3195     0688  00F8               	movwf	??_user_data_receive
  3196     0689  01F9               	clrf	??_user_data_receive+1
  3197     068A  0878               	movf	??_user_data_receive,w
  3198     068B  00F9               	movwf	??_user_data_receive+1
  3199     068C  01F8               	clrf	??_user_data_receive
  3200     068D  0878               	movf	??_user_data_receive,w
  3201     068E  07DA               	addwf	_joy_rx,f	;volatile
  3202     068F  0879               	movf	??_user_data_receive+1,w
  3203     0690  3DDB               	addwfc	_joy_rx+1,f	;volatile
  3204                           
  3205                           ;./Commands.h: 158:     else{if(swC == 1500){swC = 1;}
  3206     0691  30E8               	movlw	232
  3207     0692  02DA               	subwf	_joy_rx,f	;volatile
  3208     0693  3003               	movlw	3
  3209     0694  3BDB               	subwfb	_joy_rx+1,f	;volatile
  3210     0695                     l1685:
  3211                           
  3212                           ;./Commands.h: 159:     else {swC = 2;}}
  3213     0695  300A               	movlw	10
  3214     0696  00F0               	movwf	___lwdiv@divisor
  3215     0697  3000               	movlw	0
  3216     0698  00F1               	movwf	___lwdiv@divisor+1
  3217     0699  085B               	movf	_joy_rx+1,w	;volatile
  3218     069A  00F3               	movwf	___lwdiv@dividend+1
  3219     069B  085A               	movf	_joy_rx,w	;volatile
  3220     069C  00F2               	movwf	___lwdiv@dividend
  3221     069D  3183  2315  3186   	fcall	___lwdiv
  3222     06A0  0871               	movf	?___lwdiv+1,w
  3223     06A1  0020               	movlb	0	; select bank0
  3224     06A2  00DB               	movwf	_joy_rx+1	;volatile
  3225     06A3  0870               	movf	?___lwdiv,w
  3226     06A4  00DA               	movwf	_joy_rx	;volatile
  3227     06A5                     l1687:
  3228                           
  3229                           ;./Commands.h: 161:     swD += r[21] << 8;
  3230     06A5  0828               	movf	user_data_receive@r+8,w	;volatile
  3231     06A6  00F8               	movwf	??_user_data_receive
  3232     06A7  01F9               	clrf	??_user_data_receive+1
  3233     06A8  0878               	movf	??_user_data_receive,w
  3234     06A9  00D8               	movwf	_joy_ry	;volatile
  3235     06AA  0879               	movf	??_user_data_receive+1,w
  3236     06AB  00D9               	movwf	_joy_ry+1	;volatile
  3237     06AC                     l1689:
  3238                           
  3239                           ;./Commands.h: 162:     swD = swD > 1500;
  3240     06AC  0829               	movf	user_data_receive@r+9,w	;volatile
  3241     06AD  00F8               	movwf	??_user_data_receive
  3242     06AE  01F9               	clrf	??_user_data_receive+1
  3243     06AF  0878               	movf	??_user_data_receive,w
  3244     06B0  00F9               	movwf	??_user_data_receive+1
  3245     06B1  01F8               	clrf	??_user_data_receive
  3246     06B2  0878               	movf	??_user_data_receive,w
  3247     06B3  07D8               	addwf	_joy_ry,f	;volatile
  3248     06B4  0879               	movf	??_user_data_receive+1,w
  3249     06B5  3DD9               	addwfc	_joy_ry+1,f	;volatile
  3250     06B6                     l1691:
  3251                           
  3252                           ;./Commands.h: 163: 
  3253     06B6  30E8               	movlw	232
  3254     06B7  02D8               	subwf	_joy_ry,f	;volatile
  3255     06B8  3003               	movlw	3
  3256     06B9  3BD9               	subwfb	_joy_ry+1,f	;volatile
  3257                           
  3258                           ;./Commands.h: 164:     potA = r[22];
  3259     06BA  300A               	movlw	10
  3260     06BB  00F0               	movwf	___lwdiv@divisor
  3261     06BC  3000               	movlw	0
  3262     06BD  00F1               	movwf	___lwdiv@divisor+1
  3263     06BE  0859               	movf	_joy_ry+1,w	;volatile
  3264     06BF  00F3               	movwf	___lwdiv@dividend+1
  3265     06C0  0858               	movf	_joy_ry,w	;volatile
  3266     06C1  00F2               	movwf	___lwdiv@dividend
  3267     06C2  3183  2315  3186   	fcall	___lwdiv
  3268     06C5  0871               	movf	?___lwdiv+1,w
  3269     06C6  0020               	movlb	0	; select bank0
  3270     06C7  00D9               	movwf	_joy_ry+1	;volatile
  3271     06C8  0870               	movf	?___lwdiv,w
  3272     06C9  00D8               	movwf	_joy_ry	;volatile
  3273     06CA                     l1693:
  3274                           
  3275                           ;./Commands.h: 166:     potB = r[24];
  3276     06CA  082A               	movf	user_data_receive@r+10,w	;volatile
  3277     06CB  00F8               	movwf	??_user_data_receive
  3278     06CC  01F9               	clrf	??_user_data_receive+1
  3279     06CD  0878               	movf	??_user_data_receive,w
  3280     06CE  00D6               	movwf	_joy_ly	;volatile
  3281     06CF  0879               	movf	??_user_data_receive+1,w
  3282     06D0  00D7               	movwf	_joy_ly+1	;volatile
  3283     06D1                     l1695:
  3284                           
  3285                           ;./Commands.h: 167:     potB += r[25] << 8;
  3286     06D1  082B               	movf	user_data_receive@r+11,w	;volatile
  3287     06D2  00F8               	movwf	??_user_data_receive
  3288     06D3  01F9               	clrf	??_user_data_receive+1
  3289     06D4  0878               	movf	??_user_data_receive,w
  3290     06D5  00F9               	movwf	??_user_data_receive+1
  3291     06D6  01F8               	clrf	??_user_data_receive
  3292     06D7  0878               	movf	??_user_data_receive,w
  3293     06D8  07D6               	addwf	_joy_ly,f	;volatile
  3294     06D9  0879               	movf	??_user_data_receive+1,w
  3295     06DA  3DD7               	addwfc	_joy_ly+1,f	;volatile
  3296     06DB                     l1697:
  3297                           
  3298                           ;./Commands.h: 168:     return 1;
  3299     06DB  30E8               	movlw	232
  3300     06DC  02D6               	subwf	_joy_ly,f	;volatile
  3301     06DD  3003               	movlw	3
  3302     06DE  3BD7               	subwfb	_joy_ly+1,f	;volatile
  3303     06DF                     l1699:
  3304                           
  3305                           ;./Commands.h: 169: }
  3306     06DF  300A               	movlw	10
  3307     06E0  00F0               	movwf	___lwdiv@divisor
  3308     06E1  3000               	movlw	0
  3309     06E2  00F1               	movwf	___lwdiv@divisor+1
  3310     06E3  0857               	movf	_joy_ly+1,w	;volatile
  3311     06E4  00F3               	movwf	___lwdiv@dividend+1
  3312     06E5  0856               	movf	_joy_ly,w	;volatile
  3313     06E6  00F2               	movwf	___lwdiv@dividend
  3314     06E7  3183  2315  3186   	fcall	___lwdiv
  3315     06EA  0871               	movf	?___lwdiv+1,w
  3316     06EB  0020               	movlb	0	; select bank0
  3317     06EC  00D7               	movwf	_joy_ly+1	;volatile
  3318     06ED  0870               	movf	?___lwdiv,w
  3319     06EE  00D6               	movwf	_joy_ly	;volatile
  3320                           
  3321                           ;./Commands.h: 171: void user_data()
  3322     06EF  082C               	movf	user_data_receive@r+12,w	;volatile
  3323     06F0  00F8               	movwf	??_user_data_receive
  3324     06F1  01F9               	clrf	??_user_data_receive+1
  3325     06F2  0878               	movf	??_user_data_receive,w
  3326     06F3  00D4               	movwf	_joy_lx	;volatile
  3327     06F4  0879               	movf	??_user_data_receive+1,w
  3328     06F5  00D5               	movwf	_joy_lx+1	;volatile
  3329                           
  3330                           ;./Commands.h: 172: {
  3331     06F6  082D               	movf	user_data_receive@r+13,w	;volatile
  3332     06F7  00F8               	movwf	??_user_data_receive
  3333     06F8  01F9               	clrf	??_user_data_receive+1
  3334     06F9  0878               	movf	??_user_data_receive,w
  3335     06FA  00F9               	movwf	??_user_data_receive+1
  3336     06FB  01F8               	clrf	??_user_data_receive
  3337     06FC  0878               	movf	??_user_data_receive,w
  3338     06FD  07D4               	addwf	_joy_lx,f	;volatile
  3339     06FE  0879               	movf	??_user_data_receive+1,w
  3340     06FF  3DD5               	addwfc	_joy_lx+1,f	;volatile
  3341                           
  3342                           ;./Commands.h: 173:     user_data_send();
  3343     0700  30E8               	movlw	232
  3344     0701  02D4               	subwf	_joy_lx,f	;volatile
  3345     0702  3003               	movlw	3
  3346     0703  3BD5               	subwfb	_joy_lx+1,f	;volatile
  3347     0704                     l1701:
  3348                           
  3349                           ;./Commands.h: 174:     while(!user_data_receive())
  3350     0704  300A               	movlw	10
  3351     0705  00F0               	movwf	___lwdiv@divisor
  3352     0706  3000               	movlw	0
  3353     0707  00F1               	movwf	___lwdiv@divisor+1
  3354     0708  0855               	movf	_joy_lx+1,w	;volatile
  3355     0709  00F3               	movwf	___lwdiv@dividend+1
  3356     070A  0854               	movf	_joy_lx,w	;volatile
  3357     070B  00F2               	movwf	___lwdiv@dividend
  3358     070C  3183  2315  3186   	fcall	___lwdiv
  3359     070F  0871               	movf	?___lwdiv+1,w
  3360     0710  0020               	movlb	0	; select bank0
  3361     0711  00D5               	movwf	_joy_lx+1	;volatile
  3362     0712  0870               	movf	?___lwdiv,w
  3363     0713  00D4               	movwf	_joy_lx	;volatile
  3364     0714                     l1703:
  3365                           
  3366                           ;./Commands.h: 176:         user_data_send();
  3367     0714  082E               	movf	user_data_receive@r+14,w	;volatile
  3368     0715  00F8               	movwf	??_user_data_receive
  3369     0716  01F9               	clrf	??_user_data_receive+1
  3370     0717  0878               	movf	??_user_data_receive,w
  3371     0718  00D2               	movwf	_swA	;volatile
  3372     0719  0879               	movf	??_user_data_receive+1,w
  3373     071A  00D3               	movwf	_swA+1	;volatile
  3374     071B                     l1705:
  3375                           
  3376                           ;./Commands.h: 177:     }
  3377     071B  082F               	movf	user_data_receive@r+15,w	;volatile
  3378     071C  00F8               	movwf	??_user_data_receive
  3379     071D  01F9               	clrf	??_user_data_receive+1
  3380     071E  0878               	movf	??_user_data_receive,w
  3381     071F  00F9               	movwf	??_user_data_receive+1
  3382     0720  01F8               	clrf	??_user_data_receive
  3383     0721  0878               	movf	??_user_data_receive,w
  3384     0722  07D2               	addwf	_swA,f	;volatile
  3385     0723  0879               	movf	??_user_data_receive+1,w
  3386     0724  3DD3               	addwfc	_swA+1,f	;volatile
  3387     0725                     l1707:
  3388                           
  3389                           ;./Commands.h: 178:     _delay((unsigned long)((100)*(400000/4000.0)));
  3390     0725  3005               	movlw	5
  3391     0726  0253               	subwf	_swA+1,w	;volatile
  3392     0727  30DD               	movlw	221
  3393     0728  1903               	skipnz
  3394     0729  0252               	subwf	_swA,w	;volatile
  3395     072A  1803               	skipnc
  3396     072B  2F2D               	goto	u1141
  3397     072C  2F2F               	goto	u1140
  3398     072D                     u1141:
  3399     072D  3001               	movlw	1
  3400     072E  2F30               	goto	u1150
  3401     072F                     u1140:
  3402     072F  3000               	movlw	0
  3403     0730                     u1150:
  3404     0730  00F8               	movwf	??_user_data_receive
  3405     0731  01F9               	clrf	??_user_data_receive+1
  3406     0732  0878               	movf	??_user_data_receive,w
  3407     0733  00D2               	movwf	_swA	;volatile
  3408     0734  0879               	movf	??_user_data_receive+1,w
  3409     0735  00D3               	movwf	_swA+1	;volatile
  3410     0736                     l1709:
  3411                           
  3412                           ;./Commands.h: 179: }
  3413     0736  0830               	movf	user_data_receive@r+16,w	;volatile
  3414     0737  00F8               	movwf	??_user_data_receive
  3415     0738  01F9               	clrf	??_user_data_receive+1
  3416     0739  0878               	movf	??_user_data_receive,w
  3417     073A  00D0               	movwf	_swB	;volatile
  3418     073B  0879               	movf	??_user_data_receive+1,w
  3419     073C  00D1               	movwf	_swB+1	;volatile
  3420     073D                     l1711:
  3421                           
  3422                           ;./Commands.h: 180: 
  3423     073D  0831               	movf	user_data_receive@r+17,w	;volatile
  3424     073E  00F8               	movwf	??_user_data_receive
  3425     073F  01F9               	clrf	??_user_data_receive+1
  3426     0740  0878               	movf	??_user_data_receive,w
  3427     0741  00F9               	movwf	??_user_data_receive+1
  3428     0742  01F8               	clrf	??_user_data_receive
  3429     0743  0878               	movf	??_user_data_receive,w
  3430     0744  07D0               	addwf	_swB,f	;volatile
  3431     0745  0879               	movf	??_user_data_receive+1,w
  3432     0746  3DD1               	addwfc	_swB+1,f	;volatile
  3433     0747                     l1713:
  3434                           
  3435                           ;./Commands.h: 181: void motor(unsigned char dirA, unsigned char pwmA, unsigned char dir
      +                          B, unsigned char pwmB)
  3436     0747  3005               	movlw	5
  3437     0748  0251               	subwf	_swB+1,w	;volatile
  3438     0749  30DD               	movlw	221
  3439     074A  1903               	skipnz
  3440     074B  0250               	subwf	_swB,w	;volatile
  3441     074C  1803               	skipnc
  3442     074D  2F4F               	goto	u1161
  3443     074E  2F51               	goto	u1160
  3444     074F                     u1161:
  3445     074F  3001               	movlw	1
  3446     0750  2F52               	goto	u1170
  3447     0751                     u1160:
  3448     0751  3000               	movlw	0
  3449     0752                     u1170:
  3450     0752  00F8               	movwf	??_user_data_receive
  3451     0753  01F9               	clrf	??_user_data_receive+1
  3452     0754  0878               	movf	??_user_data_receive,w
  3453     0755  00D0               	movwf	_swB	;volatile
  3454     0756  0879               	movf	??_user_data_receive+1,w
  3455     0757  00D1               	movwf	_swB+1	;volatile
  3456     0758                     l1715:
  3457                           
  3458                           ;./Commands.h: 182: {
  3459     0758  0832               	movf	user_data_receive@r+18,w	;volatile
  3460     0759  00F8               	movwf	??_user_data_receive
  3461     075A  01F9               	clrf	??_user_data_receive+1
  3462     075B  0878               	movf	??_user_data_receive,w
  3463     075C  00CE               	movwf	_swC	;volatile
  3464     075D  0879               	movf	??_user_data_receive+1,w
  3465     075E  00CF               	movwf	_swC+1	;volatile
  3466     075F                     l1717:
  3467                           
  3468                           ;./Commands.h: 183:     while (!UART_send((volatile unsigned char []) {0xFE, 0x19, 0x01,
      +                           0x06, 0x04, 0x00, dirA, pwmA, dirB, pwmB}, 10)){}
  3469     075F  0833               	movf	user_data_receive@r+19,w	;volatile
  3470     0760  00F8               	movwf	??_user_data_receive
  3471     0761  01F9               	clrf	??_user_data_receive+1
  3472     0762  0878               	movf	??_user_data_receive,w
  3473     0763  00F9               	movwf	??_user_data_receive+1
  3474     0764  01F8               	clrf	??_user_data_receive
  3475     0765  0878               	movf	??_user_data_receive,w
  3476     0766  07CE               	addwf	_swC,f	;volatile
  3477     0767  0879               	movf	??_user_data_receive+1,w
  3478     0768  3DCF               	addwfc	_swC+1,f	;volatile
  3479     0769                     l1719:
  3480                           
  3481                           ;./Commands.h: 184: }
  3482     0769  30E8               	movlw	232
  3483     076A  064E               	xorwf	_swC,w	;volatile
  3484     076B  3003               	movlw	3
  3485     076C  1903               	skipnz
  3486     076D  064F               	xorwf	_swC+1,w	;volatile
  3487     076E  1D03               	btfss	3,2
  3488     076F  2F71               	goto	u1181
  3489     0770  2F72               	goto	u1180
  3490     0771                     u1181:
  3491     0771  2F75               	goto	l1723
  3492     0772                     u1180:
  3493     0772                     l1721:
  3494     0772  01CE               	clrf	_swC	;volatile
  3495     0773  01CF               	clrf	_swC+1	;volatile
  3496     0774  2F87               	goto	l140
  3497     0775                     l1723:
  3498     0775  30DC               	movlw	220
  3499     0776  064E               	xorwf	_swC,w	;volatile
  3500     0777  3005               	movlw	5
  3501     0778  1903               	skipnz
  3502     0779  064F               	xorwf	_swC+1,w	;volatile
  3503     077A  1D03               	btfss	3,2
  3504     077B  2F7D               	goto	u1191
  3505     077C  2F7E               	goto	u1190
  3506     077D                     u1191:
  3507     077D  2F83               	goto	l1727
  3508     077E                     u1190:
  3509     077E                     l1725:
  3510     077E  3001               	movlw	1
  3511     077F  00CE               	movwf	_swC	;volatile
  3512     0780  3000               	movlw	0
  3513     0781  00CF               	movwf	_swC+1	;volatile
  3514     0782  2F87               	goto	l140
  3515     0783                     l1727:
  3516     0783  3002               	movlw	2
  3517     0784  00CE               	movwf	_swC	;volatile
  3518     0785  3000               	movlw	0
  3519     0786  00CF               	movwf	_swC+1	;volatile
  3520     0787                     l140:
  3521                           
  3522                           ;./Commands.h: 187: {
  3523     0787  0834               	movf	user_data_receive@r+20,w	;volatile
  3524     0788  00F8               	movwf	??_user_data_receive
  3525     0789  01F9               	clrf	??_user_data_receive+1
  3526     078A  0878               	movf	??_user_data_receive,w
  3527     078B  00CC               	movwf	_swD	;volatile
  3528     078C  0879               	movf	??_user_data_receive+1,w
  3529     078D  00CD               	movwf	_swD+1	;volatile
  3530                           
  3531                           ;./Commands.h: 188:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0
      +                          x07, 0x04, 0x00, s1, s2, s3, s4}, 10)){}
  3532     078E  0835               	movf	user_data_receive@r+21,w	;volatile
  3533     078F  00F8               	movwf	??_user_data_receive
  3534     0790  01F9               	clrf	??_user_data_receive+1
  3535     0791  0878               	movf	??_user_data_receive,w
  3536     0792  00F9               	movwf	??_user_data_receive+1
  3537     0793  01F8               	clrf	??_user_data_receive
  3538     0794  0878               	movf	??_user_data_receive,w
  3539     0795  07CC               	addwf	_swD,f	;volatile
  3540     0796  0879               	movf	??_user_data_receive+1,w
  3541     0797  3DCD               	addwfc	_swD+1,f	;volatile
  3542                           
  3543                           ;./Commands.h: 189: }
  3544     0798  3005               	movlw	5
  3545     0799  024D               	subwf	_swD+1,w	;volatile
  3546     079A  30DD               	movlw	221
  3547     079B  1903               	skipnz
  3548     079C  024C               	subwf	_swD,w	;volatile
  3549     079D  1803               	skipnc
  3550     079E  2FA0               	goto	u1201
  3551     079F  2FA2               	goto	u1200
  3552     07A0                     u1201:
  3553     07A0  3001               	movlw	1
  3554     07A1  2FA3               	goto	u1210
  3555     07A2                     u1200:
  3556     07A2  3000               	movlw	0
  3557     07A3                     u1210:
  3558     07A3  00F8               	movwf	??_user_data_receive
  3559     07A4  01F9               	clrf	??_user_data_receive+1
  3560     07A5  0878               	movf	??_user_data_receive,w
  3561     07A6  00CC               	movwf	_swD	;volatile
  3562     07A7  0879               	movf	??_user_data_receive+1,w
  3563     07A8  00CD               	movwf	_swD+1	;volatile
  3564                           
  3565                           ;./Commands.h: 191: void set_laser(unsigned char en)
  3566     07A9  0836               	movf	user_data_receive@r+22,w	;volatile
  3567     07AA  00F8               	movwf	??_user_data_receive
  3568     07AB  01F9               	clrf	??_user_data_receive+1
  3569     07AC  0878               	movf	??_user_data_receive,w
  3570     07AD  00CA               	movwf	_potA	;volatile
  3571     07AE  0879               	movf	??_user_data_receive+1,w
  3572     07AF  00CB               	movwf	_potA+1	;volatile
  3573                           
  3574                           ;./Commands.h: 192: {
  3575     07B0  0837               	movf	user_data_receive@r+23,w	;volatile
  3576     07B1  00F8               	movwf	??_user_data_receive
  3577     07B2  01F9               	clrf	??_user_data_receive+1
  3578     07B3  0878               	movf	??_user_data_receive,w
  3579     07B4  00F9               	movwf	??_user_data_receive+1
  3580     07B5  01F8               	clrf	??_user_data_receive
  3581     07B6  0878               	movf	??_user_data_receive,w
  3582     07B7  07CA               	addwf	_potA,f	;volatile
  3583     07B8  0879               	movf	??_user_data_receive+1,w
  3584     07B9  3DCB               	addwfc	_potA+1,f	;volatile
  3585                           
  3586                           ;./Commands.h: 193:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0
      +                          x08, 0x01, 0x00, en}, 7)){}
  3587     07BA  0838               	movf	user_data_receive@r+24,w	;volatile
  3588     07BB  00F8               	movwf	??_user_data_receive
  3589     07BC  01F9               	clrf	??_user_data_receive+1
  3590     07BD  0878               	movf	??_user_data_receive,w
  3591     07BE  00C8               	movwf	_potB	;volatile
  3592     07BF  0879               	movf	??_user_data_receive+1,w
  3593     07C0  00C9               	movwf	_potB+1	;volatile
  3594                           
  3595                           ;./Commands.h: 194: }
  3596     07C1  0839               	movf	user_data_receive@r+25,w	;volatile
  3597     07C2  00F8               	movwf	??_user_data_receive
  3598     07C3  01F9               	clrf	??_user_data_receive+1
  3599     07C4  0878               	movf	??_user_data_receive,w
  3600     07C5  00F9               	movwf	??_user_data_receive+1
  3601     07C6  01F8               	clrf	??_user_data_receive
  3602     07C7  0878               	movf	??_user_data_receive,w
  3603     07C8  07C8               	addwf	_potB,f	;volatile
  3604     07C9  0879               	movf	??_user_data_receive+1,w
  3605     07CA  3DC9               	addwfc	_potB+1,f	;volatile
  3606                           
  3607                           ;./Commands.h: 195: 
  3608     07CB  3001               	movlw	1
  3609     07CC                     l137:
  3610     07CC  0008               	return
  3611     07CD                     __end_of_user_data_receive:
  3612                           
  3613                           	psect	text13
  3614     0164                     __ptext13:	
  3615 ;; *************** function _rx_wait *****************
  3616 ;; Defined at:
  3617 ;;		line 49 in file "./Commands.h"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;		None
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  count           2    0[COMMON] volatile unsigned int 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  1    wreg      unsigned char 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3635 ;;Total ram usage:        2 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_PCLS_info_receive
  3641 ;;		_user_data_receive
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645     0164                     _rx_wait:	
  3646                           ;psect for function _rx_wait
  3647                           
  3648     0164                     l1573:	
  3649                           ;incstack = 0
  3650                           ; Regs used in _rx_wait: [wreg+status,2+status,0]
  3651                           
  3652                           
  3653                           ;./Commands.h: 51: void UART_init();./Commands.h: 52: {
  3654     0164  30E8               	movlw	232
  3655     0165  00F0               	movwf	rx_wait@count	;volatile
  3656     0166  3003               	movlw	3
  3657     0167  00F1               	movwf	rx_wait@count+1	;volatile
  3658     0168                     l1575:
  3659     0168  0870               	movf	rx_wait@count,w	;volatile
  3660     0169  0471               	iorwf	rx_wait@count+1,w	;volatile
  3661     016A  1D03               	btfss	3,2
  3662     016B  296D               	goto	u951
  3663     016C  296E               	goto	u950
  3664     016D                     u951:
  3665     016D  296F               	goto	l87
  3666     016E                     u950:
  3667     016E  297B               	goto	l1587
  3668     016F                     l87:
  3669                           
  3670                           ;./Commands.h: 53:     ANSELCbits.ANSC6 = 0;;./Commands.h: 54:     ANSELCbits.ANSC7 = 0;
  3671     016F  002E               	movlb	14	; select bank14
  3672     0170  1E8F               	btfss	15,5	;volatile
  3673     0171  2973               	goto	u961
  3674     0172  2974               	goto	u960
  3675     0173                     u961:
  3676     0173  2976               	goto	l1583
  3677     0174                     u960:
  3678     0174                     l1579:
  3679                           
  3680                           ;./Commands.h: 55: ;./Commands.h: 56:     TX1STAbits.SYNC = 0;
  3681     0174  3001               	movlw	1
  3682     0175  297C               	goto	l90
  3683     0176                     l1583:
  3684                           
  3685                           ;./Commands.h: 58:     RC1STAbits.SPEN = 1;
  3686     0176  3001               	movlw	1
  3687     0177  02F0               	subwf	rx_wait@count,f	;volatile
  3688     0178  3000               	movlw	0
  3689     0179  3BF1               	subwfb	rx_wait@count+1,f	;volatile
  3690     017A  2968               	goto	l1575
  3691     017B                     l1587:
  3692                           
  3693                           ;./Commands.h: 59:     RC1STAbits.CREN = 1;
  3694     017B  3000               	movlw	0
  3695     017C                     l90:
  3696     017C  0008               	return
  3697     017D                     __end_of_rx_wait:
  3698                           
  3699                           	psect	text14
  3700     0315                     __ptext14:	
  3701 ;; *************** function ___lwdiv *****************
  3702 ;; Defined at:
  3703 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3704 ;; Parameters:    Size  Location     Type
  3705 ;;  divisor         2    0[COMMON] unsigned int 
  3706 ;;  dividend        2    2[COMMON] unsigned int 
  3707 ;; Auto vars:     Size  Location     Type
  3708 ;;  quotient        2    5[COMMON] unsigned int 
  3709 ;;  counter         1    7[COMMON] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  2    0[COMMON] unsigned int 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3719 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;Total ram usage:        8 bytes
  3724 ;; Hardware stack levels used: 1
  3725 ;; This function calls:
  3726 ;;		Nothing
  3727 ;; This function is called by:
  3728 ;;		_user_data_receive
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732     0315                     ___lwdiv:	
  3733                           ;psect for function ___lwdiv
  3734                           
  3735     0315                     l1609:	
  3736                           ;incstack = 0
  3737                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3738                           
  3739     0315  01F5               	clrf	___lwdiv@quotient
  3740     0316  01F6               	clrf	___lwdiv@quotient+1
  3741     0317                     l1611:
  3742     0317  0870               	movf	___lwdiv@divisor,w
  3743     0318  0471               	iorwf	___lwdiv@divisor+1,w
  3744     0319  1903               	btfsc	3,2
  3745     031A  2B1C               	goto	u991
  3746     031B  2B1D               	goto	u990
  3747     031C                     u991:
  3748     031C  2B4C               	goto	l1631
  3749     031D                     u990:
  3750     031D                     l1613:
  3751     031D  01F7               	clrf	___lwdiv@counter
  3752     031E  0AF7               	incf	___lwdiv@counter,f
  3753     031F  2B29               	goto	l1619
  3754     0320                     l1615:
  3755     0320  3001               	movlw	1
  3756     0321                     u1005:
  3757     0321  35F0               	lslf	___lwdiv@divisor,f
  3758     0322  0DF1               	rlf	___lwdiv@divisor+1,f
  3759     0323  0B89               	decfsz	9,f
  3760     0324  2B21               	goto	u1005
  3761     0325                     l1617:
  3762     0325  3001               	movlw	1
  3763     0326  00F4               	movwf	??___lwdiv
  3764     0327  0874               	movf	??___lwdiv,w
  3765     0328  07F7               	addwf	___lwdiv@counter,f
  3766     0329                     l1619:
  3767     0329  1FF1               	btfss	___lwdiv@divisor+1,7
  3768     032A  2B2C               	goto	u1011
  3769     032B  2B2D               	goto	u1010
  3770     032C                     u1011:
  3771     032C  2B20               	goto	l1615
  3772     032D                     u1010:
  3773     032D                     l1621:
  3774     032D  3001               	movlw	1
  3775     032E                     u1025:
  3776     032E  35F5               	lslf	___lwdiv@quotient,f
  3777     032F  0DF6               	rlf	___lwdiv@quotient+1,f
  3778     0330  0B89               	decfsz	9,f
  3779     0331  2B2E               	goto	u1025
  3780     0332  0871               	movf	___lwdiv@divisor+1,w
  3781     0333  0273               	subwf	___lwdiv@dividend+1,w
  3782     0334  1D03               	skipz
  3783     0335  2B38               	goto	u1035
  3784     0336  0870               	movf	___lwdiv@divisor,w
  3785     0337  0272               	subwf	___lwdiv@dividend,w
  3786     0338                     u1035:
  3787     0338  1C03               	skipc
  3788     0339  2B3B               	goto	u1031
  3789     033A  2B3C               	goto	u1030
  3790     033B                     u1031:
  3791     033B  2B41               	goto	l1627
  3792     033C                     u1030:
  3793     033C                     l1623:
  3794     033C  0870               	movf	___lwdiv@divisor,w
  3795     033D  02F2               	subwf	___lwdiv@dividend,f
  3796     033E  0871               	movf	___lwdiv@divisor+1,w
  3797     033F  3BF3               	subwfb	___lwdiv@dividend+1,f
  3798     0340                     l1625:
  3799     0340  1475               	bsf	___lwdiv@quotient,0
  3800     0341                     l1627:
  3801     0341  3001               	movlw	1
  3802     0342                     u1045:
  3803     0342  36F1               	lsrf	___lwdiv@divisor+1,f
  3804     0343  0CF0               	rrf	___lwdiv@divisor,f
  3805     0344  0B89               	decfsz	9,f
  3806     0345  2B42               	goto	u1045
  3807     0346                     l1629:
  3808     0346  3001               	movlw	1
  3809     0347  02F7               	subwf	___lwdiv@counter,f
  3810     0348  1D03               	btfss	3,2
  3811     0349  2B4B               	goto	u1051
  3812     034A  2B4C               	goto	u1050
  3813     034B                     u1051:
  3814     034B  2B2D               	goto	l1621
  3815     034C                     u1050:
  3816     034C                     l1631:
  3817     034C  0876               	movf	___lwdiv@quotient+1,w
  3818     034D  00F1               	movwf	?___lwdiv+1
  3819     034E  0875               	movf	___lwdiv@quotient,w
  3820     034F  00F0               	movwf	?___lwdiv
  3821     0350                     l766:
  3822     0350  0008               	return
  3823     0351                     __end_of___lwdiv:
  3824                           
  3825                           	psect	text15
  3826     0535                     __ptext15:	
  3827 ;; *************** function _Vdrive *****************
  3828 ;; Defined at:
  3829 ;;		line 10 in file "./Driving.h"
  3830 ;; Parameters:    Size  Location     Type
  3831 ;;  y               2   11[BANK0 ] int 
  3832 ;;  x               2   13[BANK0 ] int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  r_motor         2   21[BANK0 ] volatile int 
  3835 ;;  l_motor         2   19[BANK0 ] volatile int 
  3836 ;;  right_dir       1   18[BANK0 ] volatile unsigned char 
  3837 ;;  left_dir        1   17[BANK0 ] volatile unsigned char 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  1    wreg      void 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3847 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3848 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3849 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3850 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3851 ;;Total ram usage:       12 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 3
  3854 ;; This function calls:
  3855 ;;		___awdiv
  3856 ;;		___wmul
  3857 ;;		_abs
  3858 ;;		_motor
  3859 ;; This function is called by:
  3860 ;;		_drive
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0535                     _Vdrive:	
  3865                           ;psect for function _Vdrive
  3866                           
  3867     0535                     l1883:	
  3868                           ;incstack = 0
  3869                           ; Regs used in _Vdrive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3870                           
  3871                           
  3872                           ;./Driving.h: 10:         r_motor = y + x;;./Driving.h: 11:     };./Driving.h: 12:     e
      +                          lse{if(x < 0 && y > 0);./Driving.h: 13:     {;./Driving.h: 15:         r_motor = y + (x*
      +                          2);
  3873     0535  0020               	movlb	0	; select bank0
  3874     0536  082E               	movf	Vdrive@x+1,w
  3875     0537  3A80               	xorlw	128
  3876     0538  00AF               	movwf	??_Vdrive
  3877     0539  3080               	movlw	128
  3878     053A  022F               	subwf	??_Vdrive,w
  3879     053B  1D03               	skipz
  3880     053C  2D3F               	goto	u1475
  3881     053D  3001               	movlw	1
  3882     053E  022D               	subwf	Vdrive@x,w
  3883     053F                     u1475:
  3884     053F  1C03               	skipc
  3885     0540  2D42               	goto	u1471
  3886     0541  2D43               	goto	u1470
  3887     0542                     u1471:
  3888     0542  2D65               	goto	l234
  3889     0543                     u1470:
  3890     0543                     l1885:
  3891     0543  0020               	movlb	0	; select bank0
  3892     0544  082C               	movf	Vdrive@y+1,w
  3893     0545  3A80               	xorlw	128
  3894     0546  00AF               	movwf	??_Vdrive
  3895     0547  3080               	movlw	128
  3896     0548  022F               	subwf	??_Vdrive,w
  3897     0549  1D03               	skipz
  3898     054A  2D4D               	goto	u1485
  3899     054B  3001               	movlw	1
  3900     054C  022B               	subwf	Vdrive@y,w
  3901     054D                     u1485:
  3902     054D  1C03               	skipc
  3903     054E  2D50               	goto	u1481
  3904     054F  2D51               	goto	u1480
  3905     0550                     u1481:
  3906     0550  2D65               	goto	l234
  3907     0551                     u1480:
  3908     0551                     l1887:
  3909                           
  3910                           ;./Driving.h: 16:     };./Driving.h: 17:     else
  3911     0551  0020               	movlb	0	; select bank0
  3912     0552  082E               	movf	Vdrive@x+1,w
  3913     0553  00B0               	movwf	??_Vdrive+1
  3914     0554  082D               	movf	Vdrive@x,w
  3915     0555  00AF               	movwf	??_Vdrive
  3916     0556  35AF               	lslf	??_Vdrive,f
  3917     0557  0DB0               	rlf	??_Vdrive+1,f
  3918     0558  082F               	movf	??_Vdrive,w
  3919     0559  022B               	subwf	Vdrive@y,w
  3920     055A  00B3               	movwf	Vdrive@l_motor	;volatile
  3921     055B  0830               	movf	??_Vdrive+1,w
  3922     055C  3B2C               	subwfb	Vdrive@y+1,w
  3923     055D  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3924                           
  3925                           ;./Driving.h: 18:     {
  3926     055E  082D               	movf	Vdrive@x,w
  3927     055F  072B               	addwf	Vdrive@y,w
  3928     0560  00B5               	movwf	Vdrive@r_motor	;volatile
  3929     0561  082E               	movf	Vdrive@x+1,w
  3930     0562  3D2C               	addwfc	Vdrive@y+1,w
  3931     0563  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3932                           
  3933                           ;./Driving.h: 19:         l_motor = y - x;
  3934     0564  2D98               	goto	l1895
  3935     0565                     l234:	
  3936                           ;./Driving.h: 20:         r_motor = y + x;
  3937                           
  3938     0565  0020               	movlb	0	; select bank0
  3939     0566  1FAE               	btfss	Vdrive@x+1,7
  3940     0567  2D69               	goto	u1491
  3941     0568  2D6A               	goto	u1490
  3942     0569                     u1491:
  3943     0569  2D8B               	goto	l1893
  3944     056A                     u1490:
  3945     056A                     l1889:
  3946     056A  082C               	movf	Vdrive@y+1,w
  3947     056B  3A80               	xorlw	128
  3948     056C  00AF               	movwf	??_Vdrive
  3949     056D  3080               	movlw	128
  3950     056E  022F               	subwf	??_Vdrive,w
  3951     056F  1D03               	skipz
  3952     0570  2D73               	goto	u1505
  3953     0571  3001               	movlw	1
  3954     0572  022B               	subwf	Vdrive@y,w
  3955     0573                     u1505:
  3956     0573  1C03               	skipc
  3957     0574  2D76               	goto	u1501
  3958     0575  2D77               	goto	u1500
  3959     0576                     u1501:
  3960     0576  2D8B               	goto	l1893
  3961     0577                     u1500:
  3962     0577                     l1891:
  3963                           
  3964                           ;./Driving.h: 21:     }};./Driving.h: 22: 
  3965     0577  0020               	movlb	0	; select bank0
  3966     0578  082D               	movf	Vdrive@x,w
  3967     0579  022B               	subwf	Vdrive@y,w
  3968     057A  00B3               	movwf	Vdrive@l_motor	;volatile
  3969     057B  082E               	movf	Vdrive@x+1,w
  3970     057C  3B2C               	subwfb	Vdrive@y+1,w
  3971     057D  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3972                           
  3973                           ;./Driving.h: 23: 
  3974     057E  082E               	movf	Vdrive@x+1,w
  3975     057F  00B0               	movwf	??_Vdrive+1
  3976     0580  082D               	movf	Vdrive@x,w
  3977     0581  00AF               	movwf	??_Vdrive
  3978     0582  35AF               	lslf	??_Vdrive,f
  3979     0583  0DB0               	rlf	??_Vdrive+1,f
  3980     0584  082B               	movf	Vdrive@y,w
  3981     0585  072F               	addwf	??_Vdrive,w
  3982     0586  00B5               	movwf	Vdrive@r_motor	;volatile
  3983     0587  082C               	movf	Vdrive@y+1,w
  3984     0588  3D30               	addwfc	??_Vdrive+1,w
  3985     0589  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3986                           
  3987                           ;./Driving.h: 24:     if (l_motor > 100 || l_motor < -100)
  3988     058A  2D98               	goto	l1895
  3989     058B                     l1893:
  3990                           
  3991                           ;./Driving.h: 26:         l_motor = (l_motor/abs(l_motor)) * 100;;./Driving.h: 27:     }
  3992     058B  0020               	movlb	0	; select bank0
  3993     058C  082D               	movf	Vdrive@x,w
  3994     058D  022B               	subwf	Vdrive@y,w
  3995     058E  00B3               	movwf	Vdrive@l_motor	;volatile
  3996     058F  082E               	movf	Vdrive@x+1,w
  3997     0590  3B2C               	subwfb	Vdrive@y+1,w
  3998     0591  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3999                           
  4000                           ;./Driving.h: 28:     if (r_motor > 100 || r_motor < -100)
  4001     0592  082D               	movf	Vdrive@x,w
  4002     0593  072B               	addwf	Vdrive@y,w
  4003     0594  00B5               	movwf	Vdrive@r_motor	;volatile
  4004     0595  082E               	movf	Vdrive@x+1,w
  4005     0596  3D2C               	addwfc	Vdrive@y+1,w
  4006     0597  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4007     0598                     l1895:
  4008                           
  4009                           ;./Driving.h: 32: 
  4010     0598  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4011     0599  3A80               	xorlw	128
  4012     059A  00AF               	movwf	??_Vdrive
  4013     059B  3080               	movlw	128
  4014     059C  022F               	subwf	??_Vdrive,w
  4015     059D  1D03               	skipz
  4016     059E  2DA1               	goto	u1515
  4017     059F  3065               	movlw	101
  4018     05A0  0233               	subwf	Vdrive@l_motor,w	;volatile
  4019     05A1                     u1515:
  4020     05A1  1803               	skipnc
  4021     05A2  2DA4               	goto	u1511
  4022     05A3  2DA5               	goto	u1510
  4023     05A4                     u1511:
  4024     05A4  2DB3               	goto	l1899
  4025     05A5                     u1510:
  4026     05A5                     l1897:
  4027     05A5  0020               	movlb	0	; select bank0
  4028     05A6  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4029     05A7  3A80               	xorlw	128
  4030     05A8  00AF               	movwf	??_Vdrive
  4031     05A9  307F               	movlw	127
  4032     05AA  022F               	subwf	??_Vdrive,w
  4033     05AB  1D03               	skipz
  4034     05AC  2DAF               	goto	u1525
  4035     05AD  309C               	movlw	156
  4036     05AE  0233               	subwf	Vdrive@l_motor,w	;volatile
  4037     05AF                     u1525:
  4038     05AF  1803               	skipnc
  4039     05B0  2DB2               	goto	u1521
  4040     05B1  2DB3               	goto	u1520
  4041     05B2                     u1521:
  4042     05B2  2DD8               	goto	l1901
  4043     05B3                     u1520:
  4044     05B3                     l1899:
  4045                           
  4046                           ;./Driving.h: 33:     if (l_motor > 0);./Driving.h: 34:     {
  4047     05B3  0020               	movlb	0	; select bank0
  4048     05B4  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4049     05B5  00F1               	movwf	abs@a+1
  4050     05B6  0833               	movf	Vdrive@l_motor,w	;volatile
  4051     05B7  00F0               	movwf	abs@a
  4052     05B8  3181  2127  3185   	fcall	_abs
  4053     05BB  0871               	movf	?_abs+1,w
  4054     05BC  00F5               	movwf	___awdiv@divisor+1
  4055     05BD  0870               	movf	?_abs,w
  4056     05BE  00F4               	movwf	___awdiv@divisor
  4057     05BF  0020               	movlb	0	; select bank0
  4058     05C0  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4059     05C1  00F7               	movwf	___awdiv@dividend+1
  4060     05C2  0833               	movf	Vdrive@l_motor,w	;volatile
  4061     05C3  00F6               	movwf	___awdiv@dividend
  4062     05C4  3184  246B  3185   	fcall	___awdiv
  4063     05C7  0875               	movf	?___awdiv+1,w
  4064     05C8  0020               	movlb	0	; select bank0
  4065     05C9  00A1               	movwf	___wmul@multiplier+1
  4066     05CA  0874               	movf	?___awdiv,w
  4067     05CB  00A0               	movwf	___wmul@multiplier
  4068     05CC  3064               	movlw	100
  4069     05CD  00A2               	movwf	___wmul@multiplicand
  4070     05CE  3000               	movlw	0
  4071     05CF  00A3               	movwf	___wmul@multiplicand+1
  4072     05D0  3181  21D1  3185   	fcall	___wmul
  4073     05D3  0020               	movlb	0	; select bank0
  4074     05D4  0821               	movf	?___wmul+1,w
  4075     05D5  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4076     05D6  0820               	movf	?___wmul,w
  4077     05D7  00B3               	movwf	Vdrive@l_motor	;volatile
  4078     05D8                     l1901:
  4079                           
  4080                           ;./Driving.h: 36:     }
  4081     05D8  0020               	movlb	0	; select bank0
  4082     05D9  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4083     05DA  3A80               	xorlw	128
  4084     05DB  00AF               	movwf	??_Vdrive
  4085     05DC  3080               	movlw	128
  4086     05DD  022F               	subwf	??_Vdrive,w
  4087     05DE  1D03               	skipz
  4088     05DF  2DE2               	goto	u1535
  4089     05E0  3065               	movlw	101
  4090     05E1  0235               	subwf	Vdrive@r_motor,w	;volatile
  4091     05E2                     u1535:
  4092     05E2  1803               	skipnc
  4093     05E3  2DE5               	goto	u1531
  4094     05E4  2DE6               	goto	u1530
  4095     05E5                     u1531:
  4096     05E5  2DF4               	goto	l1905
  4097     05E6                     u1530:
  4098     05E6                     l1903:
  4099     05E6  0020               	movlb	0	; select bank0
  4100     05E7  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4101     05E8  3A80               	xorlw	128
  4102     05E9  00AF               	movwf	??_Vdrive
  4103     05EA  307F               	movlw	127
  4104     05EB  022F               	subwf	??_Vdrive,w
  4105     05EC  1D03               	skipz
  4106     05ED  2DF0               	goto	u1545
  4107     05EE  309C               	movlw	156
  4108     05EF  0235               	subwf	Vdrive@r_motor,w	;volatile
  4109     05F0                     u1545:
  4110     05F0  1803               	skipnc
  4111     05F1  2DF3               	goto	u1541
  4112     05F2  2DF4               	goto	u1540
  4113     05F3                     u1541:
  4114     05F3  2E19               	goto	l1907
  4115     05F4                     u1540:
  4116     05F4                     l1905:
  4117                           
  4118                           ;./Driving.h: 37:     else;./Driving.h: 38:     {
  4119     05F4  0020               	movlb	0	; select bank0
  4120     05F5  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4121     05F6  00F1               	movwf	abs@a+1
  4122     05F7  0835               	movf	Vdrive@r_motor,w	;volatile
  4123     05F8  00F0               	movwf	abs@a
  4124     05F9  3181  2127  3185   	fcall	_abs
  4125     05FC  0871               	movf	?_abs+1,w
  4126     05FD  00F5               	movwf	___awdiv@divisor+1
  4127     05FE  0870               	movf	?_abs,w
  4128     05FF  00F4               	movwf	___awdiv@divisor
  4129     0600  0020               	movlb	0	; select bank0
  4130     0601  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4131     0602  00F7               	movwf	___awdiv@dividend+1
  4132     0603  0835               	movf	Vdrive@r_motor,w	;volatile
  4133     0604  00F6               	movwf	___awdiv@dividend
  4134     0605  3184  246B  3185   	fcall	___awdiv
  4135     0608  0875               	movf	?___awdiv+1,w
  4136     0609  0020               	movlb	0	; select bank0
  4137     060A  00A1               	movwf	___wmul@multiplier+1
  4138     060B  0874               	movf	?___awdiv,w
  4139     060C  00A0               	movwf	___wmul@multiplier
  4140     060D  3064               	movlw	100
  4141     060E  00A2               	movwf	___wmul@multiplicand
  4142     060F  3000               	movlw	0
  4143     0610  00A3               	movwf	___wmul@multiplicand+1
  4144     0611  3181  21D1  3185   	fcall	___wmul
  4145     0614  0020               	movlb	0	; select bank0
  4146     0615  0821               	movf	?___wmul+1,w
  4147     0616  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4148     0617  0820               	movf	?___wmul,w
  4149     0618  00B5               	movwf	Vdrive@r_motor	;volatile
  4150     0619                     l1907:
  4151                           
  4152                           ;./Driving.h: 41: 
  4153     0619  0020               	movlb	0	; select bank0
  4154     061A  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4155     061B  3A80               	xorlw	128
  4156     061C  00AF               	movwf	??_Vdrive
  4157     061D  3080               	movlw	128
  4158     061E  022F               	subwf	??_Vdrive,w
  4159     061F  1D03               	skipz
  4160     0620  2E23               	goto	u1555
  4161     0621  3001               	movlw	1
  4162     0622  0233               	subwf	Vdrive@l_motor,w	;volatile
  4163     0623                     u1555:
  4164     0623  1C03               	skipc
  4165     0624  2E26               	goto	u1551
  4166     0625  2E27               	goto	u1550
  4167     0626                     u1551:
  4168     0626  2E2B               	goto	l1911
  4169     0627                     u1550:
  4170     0627                     l1909:
  4171                           
  4172                           ;./Driving.h: 42:     if (r_motor > 0);./Driving.h: 43:     {
  4173     0627  3001               	movlw	1
  4174     0628  0020               	movlb	0	; select bank0
  4175     0629  00B1               	movwf	Vdrive@left_dir	;volatile
  4176                           
  4177                           ;./Driving.h: 44:         right_dir = 1;
  4178     062A  2E2E               	goto	l245
  4179     062B                     l1911:
  4180                           
  4181                           ;./Driving.h: 46:     else;./Driving.h: 47:     {
  4182     062B  3002               	movlw	2
  4183     062C  0020               	movlb	0	; select bank0
  4184     062D  00B1               	movwf	Vdrive@left_dir	;volatile
  4185     062E                     l245:	
  4186                           ;./Driving.h: 48:         right_dir = 2;
  4187                           
  4188                           
  4189                           ;./Driving.h: 50: 
  4190     062E  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4191     062F  3A80               	xorlw	128
  4192     0630  00AF               	movwf	??_Vdrive
  4193     0631  3080               	movlw	128
  4194     0632  022F               	subwf	??_Vdrive,w
  4195     0633  1D03               	skipz
  4196     0634  2E37               	goto	u1565
  4197     0635  3001               	movlw	1
  4198     0636  0235               	subwf	Vdrive@r_motor,w	;volatile
  4199     0637                     u1565:
  4200     0637  1C03               	skipc
  4201     0638  2E3A               	goto	u1561
  4202     0639  2E3B               	goto	u1560
  4203     063A                     u1561:
  4204     063A  2E3F               	goto	l1915
  4205     063B                     u1560:
  4206     063B                     l1913:
  4207                           
  4208                           ;./Driving.h: 51:     motor(left_dir, abs(l_motor), right_dir, abs(r_motor));;./Driving.
      +                          h: 52: }
  4209     063B  3001               	movlw	1
  4210     063C  0020               	movlb	0	; select bank0
  4211     063D  00B2               	movwf	Vdrive@right_dir	;volatile
  4212                           
  4213                           ;./Driving.h: 53: 
  4214     063E  2E42               	goto	l1917
  4215     063F                     l1915:
  4216                           
  4217                           ;./Driving.h: 55: {;./Driving.h: 56:     volatile int dir;
  4218     063F  3002               	movlw	2
  4219     0640  0020               	movlb	0	; select bank0
  4220     0641  00B2               	movwf	Vdrive@right_dir	;volatile
  4221     0642                     l1917:
  4222                           
  4223                           ;./Driving.h: 59:     user_data();
  4224     0642  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4225     0643  00F1               	movwf	abs@a+1
  4226     0644  0833               	movf	Vdrive@l_motor,w	;volatile
  4227     0645  00F0               	movwf	abs@a
  4228     0646  3181  2127  3185   	fcall	_abs
  4229     0649  0870               	movf	?_abs,w
  4230     064A  00F8               	movwf	motor@pwmA
  4231     064B  0020               	movlb	0	; select bank0
  4232     064C  0832               	movf	Vdrive@right_dir,w	;volatile
  4233     064D  00F9               	movwf	motor@dirB
  4234     064E  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4235     064F  00F1               	movwf	abs@a+1
  4236     0650  0835               	movf	Vdrive@r_motor,w	;volatile
  4237     0651  00F0               	movwf	abs@a
  4238     0652  3181  2127  3185   	fcall	_abs
  4239     0655  0870               	movf	?_abs,w
  4240     0656  00FA               	movwf	motor@pwmB
  4241     0657  0020               	movlb	0	; select bank0
  4242     0658  0831               	movf	Vdrive@left_dir,w	;volatile
  4243     0659  3182  22E3  3185   	fcall	_motor
  4244     065C                     l248:
  4245     065C  0008               	return
  4246     065D                     __end_of_Vdrive:
  4247                           
  4248                           	psect	text16
  4249     02E3                     __ptext16:	
  4250 ;; *************** function _motor *****************
  4251 ;; Defined at:
  4252 ;;		line 208 in file "./Commands.h"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  dirA            1    wreg     unsigned char 
  4255 ;;  pwmA            1    8[COMMON] unsigned char 
  4256 ;;  dirB            1    9[COMMON] unsigned char 
  4257 ;;  pwmB            1   10[COMMON] unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  dirA            1    0[BANK0 ] unsigned char 
  4260 ;;  11745          10    1[BANK0 ] volatile unsigned char [
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4270 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;Total ram usage:       15 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; Hardware stack levels required when called: 2
  4277 ;; This function calls:
  4278 ;;		_UART_send
  4279 ;; This function is called by:
  4280 ;;		_Vdrive
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284     02E3                     _motor:	
  4285                           ;psect for function _motor
  4286                           
  4287                           
  4288                           ;incstack = 0
  4289                           ; Regs used in _motor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4290                           ;motor@dirA stored from wreg
  4291     02E3  0020               	movlb	0	; select bank0
  4292     02E4  00A0               	movwf	motor@dirA
  4293     02E5                     l1731:
  4294     02E5                     l1733:	
  4295                           ;./Commands.h: 208:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x03, 0
      +                          x09, 0x00, 0x00}, 6)){};./Commands.h: 209: };./Commands.h: 210: 
  4296                           
  4297     02E5  30A0               	movlw	low motor@F11744
  4298     02E6  0086               	movwf	6
  4299     02E7  3000               	movlw	high motor@F11744
  4300     02E8  0087               	movwf	7
  4301     02E9  3021               	movlw	low motor@11745
  4302     02EA  0084               	movwf	4
  4303     02EB  3000               	movlw	high motor@11745
  4304     02EC  0085               	movwf	5
  4305     02ED  300A               	movlw	10
  4306     02EE  00FB               	movwf	??_motor
  4307     02EF                     u1220:
  4308     02EF  0016               	moviw fsr1++
  4309     02F0  001A               	movwi fsr0++
  4310     02F1  0BFB               	decfsz	??_motor,f
  4311     02F2  2AEF               	goto	u1220
  4312     02F3                     l1735:
  4313     02F3  30FE               	movlw	254
  4314     02F4  0020               	movlb	0	; select bank0
  4315     02F5  00A1               	movwf	motor@11745	;volatile
  4316     02F6                     l1737:
  4317     02F6  3019               	movlw	25
  4318     02F7  00A2               	movwf	motor@11745+1	;volatile
  4319     02F8                     l1739:
  4320     02F8  3001               	movlw	1
  4321     02F9  00A3               	movwf	motor@11745+2	;volatile
  4322     02FA                     l1741:
  4323     02FA  3006               	movlw	6
  4324     02FB  00A4               	movwf	motor@11745+3	;volatile
  4325     02FC                     l1743:
  4326     02FC  3004               	movlw	4
  4327     02FD  00A5               	movwf	motor@11745+4	;volatile
  4328     02FE                     l1745:
  4329     02FE  01A6               	clrf	motor@11745+5	;volatile
  4330     02FF                     l1747:
  4331     02FF  0820               	movf	motor@dirA,w
  4332     0300  00A7               	movwf	motor@11745+6	;volatile
  4333     0301                     l1749:
  4334     0301  0878               	movf	motor@pwmA,w
  4335     0302  00A8               	movwf	motor@11745+7	;volatile
  4336     0303                     l1751:
  4337     0303  0879               	movf	motor@dirB,w
  4338     0304  00A9               	movwf	motor@11745+8	;volatile
  4339     0305                     l1753:
  4340     0305  087A               	movf	motor@pwmB,w
  4341     0306  00AA               	movwf	motor@11745+9	;volatile
  4342     0307                     l1755:
  4343     0307  300A               	movlw	10
  4344     0308  00F2               	movwf	UART_send@size
  4345     0309  3000               	movlw	0
  4346     030A  00F3               	movwf	UART_send@size+1
  4347     030B  3021               	movlw	(low (motor@11745| 0))& (0+255)
  4348     030C  3182  2238  3182   	fcall	_UART_send
  4349     030F  3A00               	xorlw	0
  4350     0310  1903               	skipnz
  4351     0311  2B13               	goto	u1231
  4352     0312  2B14               	goto	u1230
  4353     0313                     u1231:
  4354     0313  2AE5               	goto	l1733
  4355     0314                     u1230:
  4356     0314                     l156:
  4357     0314  0008               	return
  4358     0315                     __end_of_motor:
  4359                           
  4360                           	psect	text17
  4361     0238                     __ptext17:	
  4362 ;; *************** function _UART_send *****************
  4363 ;; Defined at:
  4364 ;;		line 62 in file "./Commands.h"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  message         1    wreg     PTR volatile unsigned ch
  4367 ;;		 -> ore_type@11787(7), surface_exploration@11783(10), custom_laser@11775(6), transmit_repair@11769(6), 
  4368 ;;		 -> request_repair@11766(6), transmit_shield_code@11763(6), shoot_laser@11760(7), set_laser@11756(7), 
  4369 ;;		 -> servo@11752(10), motor@11745(10), user_data_send@11733(6), PCLS_info_send@11725(6), 
  4370 ;;  size            2    2[COMMON] unsigned int 
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;  message         1    6[COMMON] PTR volatile unsigned ch
  4373 ;;		 -> ore_type@11787(7), surface_exploration@11783(10), custom_laser@11775(6), transmit_repair@11769(6), 
  4374 ;;		 -> request_repair@11766(6), transmit_shield_code@11763(6), shoot_laser@11760(7), set_laser@11756(7), 
  4375 ;;		 -> servo@11752(10), motor@11745(10), user_data_send@11733(6), PCLS_info_send@11725(6), 
  4376 ;;  i               1    7[COMMON] volatile unsigned char 
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      unsigned char 
  4379 ;; Registers used:
  4380 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4387 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4389 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;Total ram usage:        6 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; Hardware stack levels required when called: 1
  4393 ;; This function calls:
  4394 ;;		_tx_wait
  4395 ;; This function is called by:
  4396 ;;		_PCLS_info_send
  4397 ;;		_user_data_send
  4398 ;;		_motor
  4399 ;;		_set_laser
  4400 ;;		_shoot_laser
  4401 ;;		_transmit_shield_code
  4402 ;;		_servo
  4403 ;;		_request_repair
  4404 ;;		_transmit_repair
  4405 ;;		_custom_laser
  4406 ;;		_surface_exploration
  4407 ;;		_ore_type
  4408 ;; This function uses a non-reentrant model
  4409 ;;
  4410                           
  4411     0238                     _UART_send:	
  4412                           ;psect for function _UART_send
  4413                           
  4414                           
  4415                           ;incstack = 0
  4416                           ; Regs used in _UART_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4417                           ;UART_send@message stored from wreg
  4418     0238  00F6               	movwf	UART_send@message
  4419     0239                     l1591:
  4420                           
  4421                           ;./Commands.h: 62: ;./Commands.h: 63:     BAUD1CONbits.BRG16 = 1;;./Commands.h: 64:     
      +                          SP1BRGLbits.SP1BRGL = 0x44;;./Commands.h: 66:     RC6PPS = 0x10;
  4422     0239  01F7               	clrf	UART_send@i	;volatile
  4423     023A  2A52               	goto	l1603
  4424     023B                     l1593:
  4425                           
  4426                           ;./Commands.h: 67: };./Commands.h: 68: 
  4427     023B  3181  214B  3182   	fcall	_tx_wait
  4428     023E  3A00               	xorlw	0
  4429     023F  1D03               	skipz
  4430     0240  2A42               	goto	u971
  4431     0241  2A43               	goto	u970
  4432     0242                     u971:
  4433     0242  2A45               	goto	l1599
  4434     0243                     u970:
  4435     0243                     l1595:
  4436                           
  4437                           ;./Commands.h: 69: void PCLS_info_send();./Commands.h: 70: {
  4438     0243  3000               	movlw	0
  4439     0244  2A60               	goto	l96
  4440     0245                     l1599:
  4441                           
  4442                           ;./Commands.h: 72: }
  4443     0245  0877               	movf	UART_send@i,w
  4444     0246  0776               	addwf	UART_send@message,w
  4445     0247  00F4               	movwf	??_UART_send
  4446     0248  0874               	movf	??_UART_send,w
  4447     0249  0086               	movwf	6
  4448     024A  0187               	clrf	7
  4449     024B  0801               	movf	1,w
  4450     024C  0022               	movlb	2	; select bank2
  4451     024D  009A               	movwf	26	;volatile
  4452     024E                     l1601:
  4453                           
  4454                           ;./Commands.h: 73: 
  4455     024E  3001               	movlw	1
  4456     024F  00F4               	movwf	??_UART_send
  4457     0250  0874               	movf	??_UART_send,w
  4458     0251  07F7               	addwf	UART_send@i,f	;volatile
  4459     0252                     l1603:
  4460     0252  0877               	movf	UART_send@i,w	;volatile
  4461     0253  00F4               	movwf	??_UART_send
  4462     0254  01F5               	clrf	??_UART_send+1
  4463     0255  0873               	movf	UART_send@size+1,w
  4464     0256  0275               	subwf	??_UART_send+1,w
  4465     0257  1D03               	skipz
  4466     0258  2A5B               	goto	u985
  4467     0259  0872               	movf	UART_send@size,w
  4468     025A  0274               	subwf	??_UART_send,w
  4469     025B                     u985:
  4470     025B  1C03               	skipc
  4471     025C  2A5E               	goto	u981
  4472     025D  2A5F               	goto	u980
  4473     025E                     u981:
  4474     025E  2A3B               	goto	l1593
  4475     025F                     u980:
  4476     025F                     l1605:
  4477                           
  4478                           ;./Commands.h: 75: {
  4479     025F  3001               	movlw	1
  4480     0260                     l96:
  4481     0260  0008               	return
  4482     0261                     __end_of_UART_send:
  4483                           
  4484                           	psect	text18
  4485     014B                     __ptext18:	
  4486 ;; *************** function _tx_wait *****************
  4487 ;; Defined at:
  4488 ;;		line 36 in file "./Commands.h"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;		None
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  count           2    0[COMMON] volatile unsigned int 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      unsigned char 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;Total ram usage:        2 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; This function calls:
  4509 ;;		Nothing
  4510 ;; This function is called by:
  4511 ;;		_UART_send
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515     014B                     _tx_wait:	
  4516                           ;psect for function _tx_wait
  4517                           
  4518     014B                     l1555:	
  4519                           ;incstack = 0
  4520                           ; Regs used in _tx_wait: [wreg+status,2+status,0]
  4521                           
  4522                           
  4523                           ;./Commands.h: 38: ;./Commands.h: 39:     for (i=0; i < size; i++)
  4524     014B  30E8               	movlw	232
  4525     014C  00F0               	movwf	tx_wait@count	;volatile
  4526     014D  3003               	movlw	3
  4527     014E  00F1               	movwf	tx_wait@count+1	;volatile
  4528     014F                     l1557:
  4529     014F  0870               	movf	tx_wait@count,w	;volatile
  4530     0150  0471               	iorwf	tx_wait@count+1,w	;volatile
  4531     0151  1D03               	btfss	3,2
  4532     0152  2954               	goto	u931
  4533     0153  2955               	goto	u930
  4534     0154                     u931:
  4535     0154  2956               	goto	l81
  4536     0155                     u930:
  4537     0155  2962               	goto	l1569
  4538     0156                     l81:
  4539                           
  4540                           ;./Commands.h: 40:     {;./Commands.h: 41:         if(!tx_wait())
  4541     0156  002E               	movlb	14	; select bank14
  4542     0157  1E0F               	btfss	15,4	;volatile
  4543     0158  295A               	goto	u941
  4544     0159  295B               	goto	u940
  4545     015A                     u941:
  4546     015A  295D               	goto	l1565
  4547     015B                     u940:
  4548     015B                     l1561:
  4549                           
  4550                           ;./Commands.h: 42:         {;./Commands.h: 43:             return 0;
  4551     015B  3001               	movlw	1
  4552     015C  2963               	goto	l84
  4553     015D                     l1565:
  4554                           
  4555                           ;./Commands.h: 45:         TXREG = message[i];
  4556     015D  3001               	movlw	1
  4557     015E  02F0               	subwf	tx_wait@count,f	;volatile
  4558     015F  3000               	movlw	0
  4559     0160  3BF1               	subwfb	tx_wait@count+1,f	;volatile
  4560     0161  294F               	goto	l1557
  4561     0162                     l1569:
  4562                           
  4563                           ;./Commands.h: 46:     }
  4564     0162  3000               	movlw	0
  4565     0163                     l84:
  4566     0163  0008               	return
  4567     0164                     __end_of_tx_wait:
  4568                           
  4569                           	psect	text19
  4570     0127                     __ptext19:	
  4571 ;; *************** function _abs *****************
  4572 ;; Defined at:
  4573 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  a               2    0[COMMON] int 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  2    0[COMMON] int 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;Total ram usage:        4 bytes
  4592 ;; Hardware stack levels used: 1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_Vdrive
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600     0127                     _abs:	
  4601                           ;psect for function _abs
  4602                           
  4603     0127                     l1757:	
  4604                           ;incstack = 0
  4605                           ; Regs used in _abs: [wreg+status,2+status,0]
  4606                           
  4607     0127  1BF1               	btfsc	abs@a+1,7
  4608     0128  292A               	goto	u1241
  4609     0129  292B               	goto	u1240
  4610     012A                     u1241:
  4611     012A  292C               	goto	l1761
  4612     012B                     u1240:
  4613     012B                     l1759:
  4614     012B  2937               	goto	l949
  4615     012C                     l1761:
  4616     012C  0970               	comf	abs@a,w
  4617     012D  00F2               	movwf	??_abs
  4618     012E  0971               	comf	abs@a+1,w
  4619     012F  00F3               	movwf	??_abs+1
  4620     0130  0AF2               	incf	??_abs,f
  4621     0131  1903               	skipnz
  4622     0132  0AF3               	incf	??_abs+1,f
  4623     0133  0872               	movf	??_abs,w
  4624     0134  00F0               	movwf	?_abs
  4625     0135  0873               	movf	??_abs+1,w
  4626     0136  00F1               	movwf	?_abs+1
  4627     0137                     l949:
  4628     0137  0008               	return
  4629     0138                     __end_of_abs:
  4630                           
  4631                           	psect	text20
  4632     01D1                     __ptext20:	
  4633 ;; *************** function ___wmul *****************
  4634 ;; Defined at:
  4635 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4638 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  product         2    4[BANK0 ] unsigned int 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  2    0[BANK0 ] unsigned int 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4650 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;Total ram usage:        6 bytes
  4655 ;; Hardware stack levels used: 1
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_Vdrive
  4660 ;;		_drive
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664     01D1                     ___wmul:	
  4665                           ;psect for function ___wmul
  4666                           
  4667     01D1                     l1765:	
  4668                           ;incstack = 0
  4669                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4670                           
  4671     01D1  0020               	movlb	0	; select bank0
  4672     01D2  01A4               	clrf	___wmul@product
  4673     01D3  01A5               	clrf	___wmul@product+1
  4674     01D4                     l1767:
  4675     01D4  1C20               	btfss	___wmul@multiplier,0
  4676     01D5  29D7               	goto	u1251
  4677     01D6  29D8               	goto	u1250
  4678     01D7                     u1251:
  4679     01D7  29DC               	goto	l486
  4680     01D8                     u1250:
  4681     01D8                     l1769:
  4682     01D8  0822               	movf	___wmul@multiplicand,w
  4683     01D9  07A4               	addwf	___wmul@product,f
  4684     01DA  0823               	movf	___wmul@multiplicand+1,w
  4685     01DB  3DA5               	addwfc	___wmul@product+1,f
  4686     01DC                     l486:
  4687     01DC  3001               	movlw	1
  4688     01DD                     u1265:
  4689     01DD  35A2               	lslf	___wmul@multiplicand,f
  4690     01DE  0DA3               	rlf	___wmul@multiplicand+1,f
  4691     01DF  0B89               	decfsz	9,f
  4692     01E0  29DD               	goto	u1265
  4693     01E1                     l1771:
  4694     01E1  3001               	movlw	1
  4695     01E2                     u1275:
  4696     01E2  36A1               	lsrf	___wmul@multiplier+1,f
  4697     01E3  0CA0               	rrf	___wmul@multiplier,f
  4698     01E4  0B89               	decfsz	9,f
  4699     01E5  29E2               	goto	u1275
  4700     01E6                     l1773:
  4701     01E6  0820               	movf	___wmul@multiplier,w
  4702     01E7  0421               	iorwf	___wmul@multiplier+1,w
  4703     01E8  1D03               	btfss	3,2
  4704     01E9  29EB               	goto	u1281
  4705     01EA  29EC               	goto	u1280
  4706     01EB                     u1281:
  4707     01EB  29D4               	goto	l1767
  4708     01EC                     u1280:
  4709     01EC                     l1775:
  4710     01EC  0825               	movf	___wmul@product+1,w
  4711     01ED  00A1               	movwf	?___wmul+1
  4712     01EE  0824               	movf	___wmul@product,w
  4713     01EF  00A0               	movwf	?___wmul
  4714     01F0                     l488:
  4715     01F0  0008               	return
  4716     01F1                     __end_of___wmul:
  4717                           
  4718                           	psect	text21
  4719     046B                     __ptext21:	
  4720 ;; *************** function ___awdiv *****************
  4721 ;; Defined at:
  4722 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  divisor         2    4[COMMON] int 
  4725 ;;  dividend        2    6[COMMON] int 
  4726 ;; Auto vars:     Size  Location     Type
  4727 ;;  quotient        2   11[COMMON] int 
  4728 ;;  sign            1   10[COMMON] unsigned char 
  4729 ;;  counter         1    9[COMMON] unsigned char 
  4730 ;; Return value:  Size  Location     Type
  4731 ;;                  2    4[COMMON] int 
  4732 ;; Registers used:
  4733 ;;		wreg, status,2, status,0
  4734 ;; Tracked objects:
  4735 ;;		On entry : 0/0
  4736 ;;		On exit  : 0/0
  4737 ;;		Unchanged: 0/0
  4738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4740 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4742 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4743 ;;Total ram usage:        9 bytes
  4744 ;; Hardware stack levels used: 1
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_Vdrive
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752     046B                     ___awdiv:	
  4753                           ;psect for function ___awdiv
  4754                           
  4755     046B                     l1779:	
  4756                           ;incstack = 0
  4757                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4758                           
  4759     046B  01FA               	clrf	___awdiv@sign
  4760     046C                     l1781:
  4761     046C  1FF5               	btfss	___awdiv@divisor+1,7
  4762     046D  2C6F               	goto	u1291
  4763     046E  2C70               	goto	u1290
  4764     046F                     u1291:
  4765     046F  2C77               	goto	l1787
  4766     0470                     u1290:
  4767     0470                     l1783:
  4768     0470  09F4               	comf	___awdiv@divisor,f
  4769     0471  09F5               	comf	___awdiv@divisor+1,f
  4770     0472  0AF4               	incf	___awdiv@divisor,f
  4771     0473  1903               	skipnz
  4772     0474  0AF5               	incf	___awdiv@divisor+1,f
  4773     0475                     l1785:
  4774     0475  01FA               	clrf	___awdiv@sign
  4775     0476  0AFA               	incf	___awdiv@sign,f
  4776     0477                     l1787:
  4777     0477  1FF7               	btfss	___awdiv@dividend+1,7
  4778     0478  2C7A               	goto	u1301
  4779     0479  2C7B               	goto	u1300
  4780     047A                     u1301:
  4781     047A  2C84               	goto	l1793
  4782     047B                     u1300:
  4783     047B                     l1789:
  4784     047B  09F6               	comf	___awdiv@dividend,f
  4785     047C  09F7               	comf	___awdiv@dividend+1,f
  4786     047D  0AF6               	incf	___awdiv@dividend,f
  4787     047E  1903               	skipnz
  4788     047F  0AF7               	incf	___awdiv@dividend+1,f
  4789     0480                     l1791:
  4790     0480  3001               	movlw	1
  4791     0481  00F8               	movwf	??___awdiv
  4792     0482  0878               	movf	??___awdiv,w
  4793     0483  06FA               	xorwf	___awdiv@sign,f
  4794     0484                     l1793:
  4795     0484  01FB               	clrf	___awdiv@quotient
  4796     0485  01FC               	clrf	___awdiv@quotient+1
  4797     0486                     l1795:
  4798     0486  0874               	movf	___awdiv@divisor,w
  4799     0487  0475               	iorwf	___awdiv@divisor+1,w
  4800     0488  1903               	btfsc	3,2
  4801     0489  2C8B               	goto	u1311
  4802     048A  2C8C               	goto	u1310
  4803     048B                     u1311:
  4804     048B  2CBB               	goto	l1815
  4805     048C                     u1310:
  4806     048C                     l1797:
  4807     048C  01F9               	clrf	___awdiv@counter
  4808     048D  0AF9               	incf	___awdiv@counter,f
  4809     048E  2C98               	goto	l1803
  4810     048F                     l1799:
  4811     048F  3001               	movlw	1
  4812     0490                     u1325:
  4813     0490  35F4               	lslf	___awdiv@divisor,f
  4814     0491  0DF5               	rlf	___awdiv@divisor+1,f
  4815     0492  0B89               	decfsz	9,f
  4816     0493  2C90               	goto	u1325
  4817     0494                     l1801:
  4818     0494  3001               	movlw	1
  4819     0495  00F8               	movwf	??___awdiv
  4820     0496  0878               	movf	??___awdiv,w
  4821     0497  07F9               	addwf	___awdiv@counter,f
  4822     0498                     l1803:
  4823     0498  1FF5               	btfss	___awdiv@divisor+1,7
  4824     0499  2C9B               	goto	u1331
  4825     049A  2C9C               	goto	u1330
  4826     049B                     u1331:
  4827     049B  2C8F               	goto	l1799
  4828     049C                     u1330:
  4829     049C                     l1805:
  4830     049C  3001               	movlw	1
  4831     049D                     u1345:
  4832     049D  35FB               	lslf	___awdiv@quotient,f
  4833     049E  0DFC               	rlf	___awdiv@quotient+1,f
  4834     049F  0B89               	decfsz	9,f
  4835     04A0  2C9D               	goto	u1345
  4836     04A1  0875               	movf	___awdiv@divisor+1,w
  4837     04A2  0277               	subwf	___awdiv@dividend+1,w
  4838     04A3  1D03               	skipz
  4839     04A4  2CA7               	goto	u1355
  4840     04A5  0874               	movf	___awdiv@divisor,w
  4841     04A6  0276               	subwf	___awdiv@dividend,w
  4842     04A7                     u1355:
  4843     04A7  1C03               	skipc
  4844     04A8  2CAA               	goto	u1351
  4845     04A9  2CAB               	goto	u1350
  4846     04AA                     u1351:
  4847     04AA  2CB0               	goto	l1811
  4848     04AB                     u1350:
  4849     04AB                     l1807:
  4850     04AB  0874               	movf	___awdiv@divisor,w
  4851     04AC  02F6               	subwf	___awdiv@dividend,f
  4852     04AD  0875               	movf	___awdiv@divisor+1,w
  4853     04AE  3BF7               	subwfb	___awdiv@dividend+1,f
  4854     04AF                     l1809:
  4855     04AF  147B               	bsf	___awdiv@quotient,0
  4856     04B0                     l1811:
  4857     04B0  3001               	movlw	1
  4858     04B1                     u1365:
  4859     04B1  36F5               	lsrf	___awdiv@divisor+1,f
  4860     04B2  0CF4               	rrf	___awdiv@divisor,f
  4861     04B3  0B89               	decfsz	9,f
  4862     04B4  2CB1               	goto	u1365
  4863     04B5                     l1813:
  4864     04B5  3001               	movlw	1
  4865     04B6  02F9               	subwf	___awdiv@counter,f
  4866     04B7  1D03               	btfss	3,2
  4867     04B8  2CBA               	goto	u1371
  4868     04B9  2CBB               	goto	u1370
  4869     04BA                     u1371:
  4870     04BA  2C9C               	goto	l1805
  4871     04BB                     u1370:
  4872     04BB                     l1815:
  4873     04BB  087A               	movf	___awdiv@sign,w
  4874     04BC  1903               	btfsc	3,2
  4875     04BD  2CBF               	goto	u1381
  4876     04BE  2CC0               	goto	u1380
  4877     04BF                     u1381:
  4878     04BF  2CC5               	goto	l1819
  4879     04C0                     u1380:
  4880     04C0                     l1817:
  4881     04C0  09FB               	comf	___awdiv@quotient,f
  4882     04C1  09FC               	comf	___awdiv@quotient+1,f
  4883     04C2  0AFB               	incf	___awdiv@quotient,f
  4884     04C3  1903               	skipnz
  4885     04C4  0AFC               	incf	___awdiv@quotient+1,f
  4886     04C5                     l1819:
  4887     04C5  087C               	movf	___awdiv@quotient+1,w
  4888     04C6  00F5               	movwf	?___awdiv+1
  4889     04C7  087B               	movf	___awdiv@quotient,w
  4890     04C8  00F4               	movwf	?___awdiv
  4891     04C9                     l639:
  4892     04C9  0008               	return
  4893     04CA                     __end_of___awdiv:
  4894                           
  4895                           	psect	text22
  4896     0117                     __ptext22:	
  4897 ;; *************** function _UART_init *****************
  4898 ;; Defined at:
  4899 ;;		line 78 in file "./Commands.h"
  4900 ;; Parameters:    Size  Location     Type
  4901 ;;		None
  4902 ;; Auto vars:     Size  Location     Type
  4903 ;;		None
  4904 ;; Return value:  Size  Location     Type
  4905 ;;                  1    wreg      void 
  4906 ;; Registers used:
  4907 ;;		wreg
  4908 ;; Tracked objects:
  4909 ;;		On entry : 0/0
  4910 ;;		On exit  : 0/0
  4911 ;;		Unchanged: 0/0
  4912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4917 ;;Total ram usage:        0 bytes
  4918 ;; Hardware stack levels used: 1
  4919 ;; This function calls:
  4920 ;;		Nothing
  4921 ;; This function is called by:
  4922 ;;		_main
  4923 ;; This function uses a non-reentrant model
  4924 ;;
  4925                           
  4926     0117                     _UART_init:	
  4927                           ;psect for function _UART_init
  4928                           
  4929     0117                     l1927:	
  4930                           ;incstack = 0
  4931                           ; Regs used in _UART_init: [wreg]
  4932                           
  4933                           
  4934                           ;./Commands.h: 80:         if (rx_wait())
  4935     0117  003E               	movlb	30	; select bank30
  4936     0118  134E               	bcf	78,6	;volatile
  4937                           
  4938                           ;./Commands.h: 81:         {
  4939     0119  13CE               	bcf	78,7	;volatile
  4940                           
  4941                           ;./Commands.h: 83:         }
  4942     011A  0022               	movlb	2	; select bank2
  4943     011B  121E               	bcf	30,4	;volatile
  4944                           
  4945                           ;./Commands.h: 84:         else
  4946     011C  169E               	bsf	30,5	;volatile
  4947                           
  4948                           ;./Commands.h: 85:         {
  4949     011D  179D               	bsf	29,7	;volatile
  4950                           
  4951                           ;./Commands.h: 86:             return 0;
  4952     011E  161D               	bsf	29,4	;volatile
  4953                           
  4954                           ;./Commands.h: 88:     }
  4955     011F  151E               	bsf	30,2	;volatile
  4956                           
  4957                           ;./Commands.h: 90:     teamID = r[6];
  4958     0120  159F               	bsf	31,3	;volatile
  4959     0121                     l1929:
  4960                           
  4961                           ;./Commands.h: 91:     playerID = r[7];
  4962     0121  3044               	movlw	68
  4963     0122  009B               	movwf	27	;volatile
  4964                           
  4965                           ;./Commands.h: 93:     health += r[9] << 8;
  4966     0123  3010               	movlw	16
  4967     0124  003E               	movlb	30	; select bank30
  4968     0125  00A6               	movwf	38	;volatile
  4969     0126                     l100:
  4970     0126  0008               	return
  4971     0127                     __end_of_UART_init:
  4972                           
  4973                           	psect	text23
  4974     00E1                     __ptext23:	
  4975 ;; *************** function _IR_init *****************
  4976 ;; Defined at:
  4977 ;;		line 12 in file "./IR.h"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0, pclath, cstack
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4995 ;;Total ram usage:        0 bytes
  4996 ;; Hardware stack levels used: 1
  4997 ;; Hardware stack levels required when called: 1
  4998 ;; This function calls:
  4999 ;;		_read_adc
  5000 ;; This function is called by:
  5001 ;;		_main
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005     00E1                     _IR_init:	
  5006                           ;psect for function _IR_init
  5007                           
  5008     00E1                     l1985:	
  5009                           ;incstack = 0
  5010                           ; Regs used in _IR_init: [wreg+status,2+status,0+pclath+cstack]
  5011                           
  5012                           
  5013                           ;./IR.h: 14:     TRISAbits.TRISA1 = 0;
  5014     00E1  300C               	movlw	12
  5015     00E2  3182  2211  3180   	fcall	_read_adc
  5016     00E5  0870               	movf	?_read_adc,w
  5017     00E6  3EC0               	addlw	192
  5018     00E7  0020               	movlb	0	; select bank0
  5019     00E8  00E1               	movwf	_IR_base	;volatile
  5020     00E9  30FF               	movlw	255
  5021     00EA  3D71               	addwfc	?_read_adc+1,w
  5022     00EB  00E2               	movwf	_IR_base+1	;volatile
  5023     00EC                     l309:
  5024     00EC  0008               	return
  5025     00ED                     __end_of_IR_init:
  5026                           
  5027                           	psect	text24
  5028     0261                     __ptext24:	
  5029 ;; *************** function _IR *****************
  5030 ;; Defined at:
  5031 ;;		line 17 in file "./IR.h"
  5032 ;; Parameters:    Size  Location     Type
  5033 ;;		None
  5034 ;; Auto vars:     Size  Location     Type
  5035 ;;  ADC_val         2    9[COMMON] volatile unsigned int 
  5036 ;; Return value:  Size  Location     Type
  5037 ;;                  1    wreg      void 
  5038 ;; Registers used:
  5039 ;;		wreg, pclath, cstack
  5040 ;; Tracked objects:
  5041 ;;		On entry : 0/0
  5042 ;;		On exit  : 0/0
  5043 ;;		Unchanged: 0/0
  5044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5048 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5049 ;;Total ram usage:        3 bytes
  5050 ;; Hardware stack levels used: 1
  5051 ;; Hardware stack levels required when called: 1
  5052 ;; This function calls:
  5053 ;;		_read_adc
  5054 ;; This function is called by:
  5055 ;;		_main
  5056 ;; This function uses a non-reentrant model
  5057 ;;
  5058                           
  5059     0261                     _IR:	
  5060                           ;psect for function _IR
  5061                           
  5062     0261                     l1987:	
  5063                           ;incstack = 0
  5064                           ; Regs used in _IR: [wreg+pclath+cstack]
  5065                           
  5066                           
  5067                           ;./IR.h: 19:     if (ADC_val > IR_base);./IR.h: 21:         LATAbits.LATA1 = 1;
  5068     0261  0020               	movlb	0	; select bank0
  5069     0262  1011               	bcf	17,0	;volatile
  5070                           
  5071                           ;./IR.h: 22:         LATAbits.LATA1 = 1;
  5072     0263  1091               	bcf	17,1	;volatile
  5073                           
  5074                           ;./IR.h: 23:         LATAbits.LATA2 = 1;
  5075     0264  1111               	bcf	17,2	;volatile
  5076                           
  5077                           ;./IR.h: 24:         LATAbits.LATA3 = 1;
  5078     0265  1191               	bcf	17,3	;volatile
  5079     0266                     l1989:
  5080                           
  5081                           ;./IR.h: 26:     else
  5082     0266  300C               	movlw	12
  5083     0267  3182  2211  3182   	fcall	_read_adc
  5084     026A  0871               	movf	?_read_adc+1,w
  5085     026B  00FA               	movwf	IR@ADC_val+1	;volatile
  5086     026C  0870               	movf	?_read_adc,w
  5087     026D  00F9               	movwf	IR@ADC_val	;volatile
  5088     026E                     l1991:
  5089                           
  5090                           ;./IR.h: 27:     {
  5091     026E  087A               	movf	IR@ADC_val+1,w	;volatile
  5092     026F  0020               	movlb	0	; select bank0
  5093     0270  0262               	subwf	_IR_base+1,w	;volatile
  5094     0271  1D03               	skipz
  5095     0272  2A75               	goto	u1655
  5096     0273  0879               	movf	IR@ADC_val,w	;volatile
  5097     0274  0261               	subwf	_IR_base,w	;volatile
  5098     0275                     u1655:
  5099     0275  1803               	skipnc
  5100     0276  2A78               	goto	u1651
  5101     0277  2A79               	goto	u1650
  5102     0278                     u1651:
  5103     0278  2A7E               	goto	l312
  5104     0279                     u1650:
  5105     0279                     l1993:
  5106                           
  5107                           ;./IR.h: 28:         LATAbits.LATA0 = 0;;./IR.h: 29:         LATAbits.LATA1 = 0;
  5108     0279  1496               	bsf	22,1	;volatile
  5109                           
  5110                           ;./IR.h: 30:         LATAbits.LATA2 = 0;
  5111     027A  1496               	bsf	22,1	;volatile
  5112                           
  5113                           ;./IR.h: 31:         LATAbits.LATA3 = 0;
  5114     027B  1516               	bsf	22,2	;volatile
  5115                           
  5116                           ;./IR.h: 32:         _delay((unsigned long)((50)*(400000/4000.0)));
  5117     027C  1596               	bsf	22,3	;volatile
  5118                           
  5119                           ;./IR.h: 33:     }
  5120     027D  2A8A               	goto	l314
  5121     027E                     l312:	
  5122                           ;./IR.h: 34: }
  5123                           
  5124     027E  1016               	bcf	22,0	;volatile
  5125     027F  1096               	bcf	22,1	;volatile
  5126     0280  1116               	bcf	22,2	;volatile
  5127     0281  1196               	bcf	22,3	;volatile
  5128     0282                     l1995:
  5129     0282  3007               	movlw	7
  5130     0283  00F8               	movwf	??_IR
  5131     0284  307D               	movlw	125
  5132     0285                     u1917:
  5133     0285  0B89               	decfsz	9,f
  5134     0286  2A85               	goto	u1917
  5135     0287  0BF8               	decfsz	??_IR,f
  5136     0288  2A85               	goto	u1917
  5137     0289  0000               	nop
  5138     028A                     l314:
  5139     028A  0008               	return
  5140     028B                     __end_of_IR:
  5141                           
  5142                           	psect	text25
  5143     0211                     __ptext25:	
  5144 ;; *************** function _read_adc *****************
  5145 ;; Defined at:
  5146 ;;		line 32 in file "./Line Follower.h"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;  sensor          1    wreg     unsigned char 
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  sensor          1    5[COMMON] unsigned char 
  5151 ;;  ADC_val         2    6[COMMON] volatile unsigned int 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  2    0[COMMON] int 
  5154 ;; Registers used:
  5155 ;;		wreg
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5161 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;Total ram usage:        8 bytes
  5166 ;; Hardware stack levels used: 1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_line_follower
  5171 ;;		_IR_init
  5172 ;;		_IR
  5173 ;;		_main
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177     0211                     _read_adc:	
  5178                           ;psect for function _read_adc
  5179                           
  5180                           
  5181                           ;incstack = 0
  5182                           ; Regs used in _read_adc: [wreg]
  5183                           ;read_adc@sensor stored from wreg
  5184     0211  00F5               	movwf	read_adc@sensor
  5185     0212                     l1919:
  5186                           
  5187                           ;./Line Follower.h: 32:  while(ADCON0bits.ADGO){};./Line Follower.h: 33:     ADC_val = A
      +                          DRESH << 8;;./Line Follower.h: 34:     ADC_val += ADRESL;;./Line Follower.h: 36: }
  5188     0212  0875               	movf	read_adc@sensor,w
  5189     0213  0021               	movlb	1	; select bank1
  5190     0214  009E               	movwf	30	;volatile
  5191     0215                     l1921:
  5192                           
  5193                           ;./Line Follower.h: 37: 
  5194     0215  1413               	bsf	19,0	;volatile
  5195                           
  5196                           ;./Line Follower.h: 38: void line_follower()
  5197     0216  300D               	movlw	13
  5198     0217  00F2               	movwf	??_read_adc
  5199     0218  30FC               	movlw	252
  5200     0219                     u1927:
  5201     0219  0B89               	decfsz	9,f
  5202     021A  2A19               	goto	u1927
  5203     021B  0BF2               	decfsz	??_read_adc,f
  5204     021C  2A19               	goto	u1927
  5205     021D                     l283:	
  5206                           ;./Line Follower.h: 40:     volatile unsigned int l_val, m_val, r_val;
  5207                           
  5208     021D  0021               	movlb	1	; select bank1
  5209     021E  1813               	btfsc	19,0	;volatile
  5210     021F  2A21               	goto	u1571
  5211     0220  2A22               	goto	u1570
  5212     0221                     u1571:
  5213     0221  2A1D               	goto	l283
  5214     0222                     u1570:
  5215     0222                     l1923:
  5216                           
  5217                           ;./Line Follower.h: 41: 
  5218     0222  080D               	movf	13,w	;volatile
  5219     0223  00F2               	movwf	??_read_adc
  5220     0224  01F3               	clrf	??_read_adc+1
  5221     0225  0872               	movf	??_read_adc,w
  5222     0226  00F3               	movwf	??_read_adc+1
  5223     0227  01F2               	clrf	??_read_adc
  5224     0228  0872               	movf	??_read_adc,w
  5225     0229  00F6               	movwf	read_adc@ADC_val	;volatile
  5226     022A  0873               	movf	??_read_adc+1,w
  5227     022B  00F7               	movwf	read_adc@ADC_val+1	;volatile
  5228                           
  5229                           ;./Line Follower.h: 42:     TRISAbits.TRISA0 = 0;
  5230     022C  080C               	movf	12,w	;volatile
  5231     022D  00F2               	movwf	??_read_adc
  5232     022E  01F3               	clrf	??_read_adc+1
  5233     022F  0872               	movf	??_read_adc,w
  5234     0230  07F6               	addwf	read_adc@ADC_val,f	;volatile
  5235     0231  0873               	movf	??_read_adc+1,w
  5236     0232  3DF7               	addwfc	read_adc@ADC_val+1,f	;volatile
  5237                           
  5238                           ;./Line Follower.h: 43:     TRISAbits.TRISA1 = 0;
  5239     0233  0877               	movf	read_adc@ADC_val+1,w	;volatile
  5240     0234  00F1               	movwf	?_read_adc+1
  5241     0235  0876               	movf	read_adc@ADC_val,w	;volatile
  5242     0236  00F0               	movwf	?_read_adc
  5243     0237                     l286:
  5244     0237  0008               	return
  5245     0238                     __end_of_read_adc:
  5246                           
  5247                           	psect	text26
  5248     0107                     __ptext26:	
  5249 ;; *************** function _ADC_init *****************
  5250 ;; Defined at:
  5251 ;;		line 18 in file "./Line Follower.h"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_main
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278     0107                     _ADC_init:	
  5279                           ;psect for function _ADC_init
  5280                           
  5281     0107                     l1945:	
  5282                           ;incstack = 0
  5283                           ; Regs used in _ADC_init: [wreg+status,2]
  5284                           
  5285                           
  5286                           ;./Line Follower.h: 20: 
  5287     0107  0020               	movlb	0	; select bank0
  5288     0108  1091               	bcf	17,1	;volatile
  5289                           
  5290                           ;./Line Follower.h: 21:     ADPCH = 0b1011;
  5291     0109  003E               	movlb	30	; select bank30
  5292     010A  1438               	bsf	56,0	;volatile
  5293     010B                     l1947:
  5294                           
  5295                           ;./Line Follower.h: 23: 
  5296     010B  3091               	movlw	145
  5297     010C  0021               	movlb	1	; select bank1
  5298     010D  0093               	movwf	19	;volatile
  5299                           
  5300                           ;./Line Follower.h: 24: int read_adc(char sensor)
  5301     010E  30FF               	movlw	255
  5302     010F  0098               	movwf	24	;volatile
  5303     0110                     l1949:
  5304                           
  5305                           ;./Line Follower.h: 25: {
  5306     0110  019A               	clrf	26	;volatile
  5307     0111                     l1951:
  5308                           
  5309                           ;./Line Follower.h: 26:  volatile unsigned int ADC_val;
  5310     0111  019C               	clrf	28	;volatile
  5311                           
  5312                           ;./Line Follower.h: 27: 
  5313     0112  303F               	movlw	63
  5314     0113  009D               	movwf	29	;volatile
  5315                           
  5316                           ;./Line Follower.h: 29:  ADCON0bits.ADGO = 1;
  5317     0114  300B               	movlw	11
  5318     0115  009E               	movwf	30	;volatile
  5319     0116                     l280:
  5320     0116  0008               	return
  5321     0117                     __end_of_ADC_init:
  5322     007E                     btemp	set	126	;btemp
  5323     007E                     wtemp0	set	126
  5324                           
  5325                           	psect	config
  5326                           
  5327                           ;Config register CONFIG1 @ 0x8007
  5328                           ;	External Oscillator mode selection bits
  5329                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  5330                           ;	Power-up default value for COSC bits
  5331                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  5332                           ;	Clock Out Enable bit
  5333                           ;	CLKOUTEN = ON, CLKOUT function is enabled; FOSC/4 clock appears at OSC2
  5334                           ;	Clock Switch Enable bit
  5335                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5336                           ;	Fail-Safe Clock Monitor Enable bit
  5337                           ;	FCMEN = ON, FSCM timer enabled
  5338     8007                     	org	32775
  5339     8007  3E8F               	dw	16015
  5340                           
  5341                           ;Config register CONFIG3 @ 0x8009
  5342                           ;	WDT Period Select bits
  5343                           ;	WDTCPS = 0x1F, unprogrammed default
  5344                           ;	WDT operating mode
  5345                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5346                           ;	WDT Window Select bits
  5347                           ;	WDTCWS = 0x7, unprogrammed default
  5348                           ;	WDT input clock selector
  5349                           ;	WDTCCS = 0x7, unprogrammed default
  5350     8009                     	org	32777
  5351     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        46
    BSS         88
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      79
    BANK1            80      0      71
    BANK2            80      0      20
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send@message	PTR volatile unsigned char  size(1) Largest target is 10
		 -> custom_laser@11775(COMMON[6]), motor@11745(BANK0[10]), ore_type@11787(COMMON[7]), PCLS_info_send@11725(BANK0[6]), 
		 -> request_repair@11766(COMMON[6]), servo@11752(COMMON[10]), set_laser@11756(BANK0[7]), shoot_laser@11760(BANK0[7]), 
		 -> surface_exploration@11783(COMMON[10]), transmit_repair@11769(COMMON[6]), transmit_shield_code@11763(BANK0[6]), user_data_send@11733(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_line_follower
    _main->_shield_code
    _shield_code->_user_data
    _transmit_shield_code->_UART_send
    _shoot_laser->_UART_send
    _set_laser->_UART_send
    _PCLS_info->_PCLS_info_send
    _PCLS_info_send->_UART_send
    _PCLS_info_receive->_rx_wait
    _line_follower->_read_adc
    _user_data->_user_data_receive
    _user_data_send->_UART_send
    _user_data_receive->___lwdiv
    _Vdrive->___awdiv
    _motor->_UART_send
    _UART_send->_tx_wait
    ___wmul->___awdiv
    ___awdiv->_abs
    _IR_init->_read_adc
    _IR->_read_adc

Critical Paths under _main in BANK0

    _main->_drive
    _PCLS_info->_PCLS_info_receive
    _user_data->_user_data_receive
    _Vdrive->_motor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21107
                           _ADC_init
                                 _IR
                            _IR_init
                          _UART_init
                              _drive
                      _line_follower
                           _read_adc
                        _shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _shield_code                                          2     2      0    9865
                                             12 COMMON     2     2      0
                          _PCLS_info
                          _set_laser
                        _shoot_laser
               _transmit_shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (2) _transmit_shield_code                                 7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _shoot_laser                                          9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _set_laser                                            9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _PCLS_info                                            0     0      0    1854
                  _PCLS_info_receive
                     _PCLS_info_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_receive                                   17    17      0     277
                                              2 COMMON     3     3      0
                                              0 BANK0     14    14      0
                            _rx_wait
 ---------------------------------------------------------------------------------
 (1) _line_follower                                        6     6      0     115
                                              8 COMMON     6     6      0
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _drive                                                8     8      0    8020
                                             28 BANK0      8     8      0
                             _Vdrive
                             ___wmul
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _user_data                                            1     1      0    2946
                                             11 COMMON     1     1      0
                  _user_data_receive
                     _user_data_send
 ---------------------------------------------------------------------------------
 (2) _user_data_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _user_data_receive                                   31    31      0    1369
                                              8 COMMON     3     3      0
                                              0 BANK0     28    28      0
                            ___lwdiv
                            _rx_wait
 ---------------------------------------------------------------------------------
 (3) _rx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Vdrive                                              12     8      4    4456
                                             11 BANK0     12     8      4
                            ___awdiv
                             ___wmul
                                _abs
                              _motor
 ---------------------------------------------------------------------------------
 (3) _motor                                               15    12      3    2110
                                              8 COMMON     4     1      3
                                              0 BANK0     11    11      0
                          _UART_send
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_send                                            6     4      2    1553
                                              2 COMMON     6     4      2
                            _tx_wait
 ---------------------------------------------------------------------------------
 (4) _tx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     370
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              4 COMMON     9     5      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_init                                              0     0      0      46
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _IR                                                   3     3      0      69
                                              8 COMMON     3     3      0
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             8     6      2      46
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _IR
     _read_adc
   _IR_init
     _read_adc
   _UART_init
   _drive
     _Vdrive
       ___awdiv
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
         _abs (ARG)
       _abs
       _motor
         _UART_send
           _tx_wait
         _abs (ARG)
     ___wmul
     _user_data
       _user_data_receive
         ___lwdiv
         _rx_wait
       _user_data_send
         _UART_send
   _line_follower
     _read_adc
   _read_adc
   _shield_code
     _PCLS_info
       _PCLS_info_receive
         _rx_wait
       _PCLS_info_send
         _UART_send
     _set_laser
       _UART_send
     _shoot_laser
       _UART_send
     _transmit_shield_code
       _UART_send
     _user_data
   _user_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      14       9       25.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 05 10:51:35 2024

                          l81 0156                            l90 017C                            l84 0163  
                          l87 016F                            l96 0260                            _IR 0261  
                ___awdiv@sign 007A           ___wmul@multiplicand 0022     __end_of_user_data_receive 07CD  
                         ?_IR 0070                           l100 0126                           l130 0198  
                         l122 00F8                           l115 03CC                           l140 0787  
                         l300 051E                           l108 01B4                           l302 052F  
                         l303 0530                           l312 027E                           l304 0534  
                         l137 07CC                           l314 028A                           l234 0565  
                         l156 0314                           l148 014A                           l172 02B6  
                         l180 02E2                           l309 00EC                           l245 062E  
                         l253 038E                           l334 0469                           l319 041A  
                         l280 0116                           l248 065C                           l283 021D  
                         l292 04DE                           l188 01D0                           l286 0237  
                         l295 04EC                           l289 04D0                           l299 050E  
                         l486 01DC                           l639 04C9                           l488 01F0  
                         l766 0350                           l949 0137                           u930 0155  
                         u931 0154                           u940 015B                           u941 015A  
                         u950 016E                           u951 016D                           u960 0174  
                         u961 0173                           u970 0243                           u971 0242  
                         u980 025F                           u981 025E                           u990 031D  
                         u991 031C                           u985 025B                           _abs 0127  
                         _swA 0052                           _swB 0050                           _swC 004E  
                         _swD 004C                           wreg 0009                          ??_IR 0078  
                _BAUD1CONbits 011F                          l2001 03D8                          l2011 03F2  
                        l2003 03DB                          ?_abs 0070                          l2021 040F  
                        l2013 03F6                          l2005 03E0                          l2015 03FD  
                        l2007 03E3                          l2017 0401                          l2009 03EB  
                        l2019 0404                          l2131 0421                          l2141 043D  
                        l2133 0424                          l2151 0452                          l2143 0445  
                        l2135 042B                          l2127 041B                          l1601 024E  
                        l2145 0448                          l2137 0437                          l2153 0459  
                        l2129 041E                          l1603 0252                          l1611 0317  
                        l2155 0460                          l2147 044C                          l2139 043A  
                        l1605 025F                          l1621 032D                          l1613 031D  
                        l1701 0704                          l2149 044F                          l1623 033C  
                        l1615 0320                          l1631 034C                          l1711 073D  
                        l1703 0714                          l1801 0494                          l1561 015B  
                        l1625 0340                          l1617 0325                          l1609 0315  
                        l1721 0772                          l1713 0747                          l1705 071B  
                        l1641 038F                          l1811 04B0                          l1803 0498  
                        l1555 014B                          l1731 02E5                          l1627 0341  
                        l1619 0329                          l1723 0775                          l1715 0758  
                        l1707 0725                          l1643 0392                          l1635 0199  
                        l1813 04B5                          l1805 049C                          l1565 015D  
                        l1557 014F                          l1741 02FA                          l1733 02E5  
                        l1901 05D8                          l1629 0346                          l1573 0164  
                        l1725 077E                          l1717 075F                          l1709 0736  
                        l1661 017D                          l1653 03A7                          l1645 0394  
                        l1637 0199                          l1807 04AB                          l1815 04BB  
                        l1591 0239                          l1751 0303                          l1743 02FC  
                        l1735 02F3                          l1911 062B                          l1903 05E6  
                        l1583 0176                          l1575 0168                          l1727 0783  
                        l1719 0769                          l1671 0662                          l1663 017D  
                        l1647 039C                          l1655 03AC                          l1639 01A7  
                        l1823 00ED                          l1921 0215                          l1817 04C0  
                        l1809 04AF                          l1761 012C                          l1569 0162  
                        l1593 023B                          l1753 0305                          l1745 02FE  
                        l1737 02F6                          l1913 063B                          l1905 05F4  
                        l1673 066A                          l1681 067A                          l1665 018B  
                        l1833 013B                          l1657 03B2                          l1649 03A5  
                        l1841 029B                          l1923 0222                          l1819 04C5  
                        l1771 01E1                          l1595 0243                          l1755 0307  
                        l1747 02FF                          l1739 02F8                          l1915 063F  
                        l1907 0619                          l1579 0174                          l1587 017B  
                        l1691 06B6                          l1683 0680                          l1675 0673  
                        l1667 065D                          l1835 0143                          l1931 0351  
                        l1827 00F0                          l1851 02A6                          l1843 029E  
                        l1781 046C                          l1773 01E6                          l1765 01D1  
                        l1757 0127                          l1749 0301                          l1917 0642  
                        l1909 0627                          l1693 06CA                          l1685 0695  
                        l1669 0660                          l1829 0138                          l1941 0373  
                        l1933 0354                          l1853 02A7                          l1845 02A0  
                        l1837 028D                          l1861 02C7                          l1951 0111  
                        l1919 0212                          l1927 0117                          l1791 0480  
                        l1783 0470                          l1775 01EC                          l1767 01D4  
                        l1759 012B                          l1599 0245                          l1695 06D1  
                        l1687 06A5                          l1679 0675                          l1943 0383  
                        l1935 035E                          l1855 02A9                          l1847 02A2  
                        l1839 028D                          l1871 02D2                          l1863 02CA  
                        l1945 0107                          l1929 0121                          l1793 0484  
                        l1785 0475                          l1769 01D8                          l1697 06DB  
                        l1689 06AC                          l1937 0363                          l1961 04EA  
                        l1953 04CA                          l1849 02A4                          l1873 02D3  
                        l1865 02CC                          l1857 02B9                          l1881 01C3  
                        l1947 010B                          l1795 0486                          l1787 0477  
                        l1779 046B                          l1891 0577                          l1883 0535  
                        l1699 06DF                          l1939 0367                          l1971 0509  
                        l1963 04F0                          l1955 04D4                          l1875 02D5  
                        l1867 02CE                          l1859 02B9                          l1949 0110  
                        l1797 048C                          l1789 047B                          l1893 058B  
                        l1885 0543                          l1981 0529                          l1973 050D  
                        l1965 04F8                          l1957 04DC                          l1869 02D0  
                        l1877 01B5                          l1991 026E                          l1799 048F  
                        l1895 0598                          l1887 0551                          l1983 052D  
                        l1975 0518                          l1967 0503                          l1959 04E2  
                        l1879 01B5                          l1993 0279                          l1985 00E1  
                        l1897 05A5                          l1889 056A                          l1977 051C  
                        l1969 0507                          l1995 0282                          l1987 0261  
                        l1899 05B3                          l1979 051F                          l1989 0266  
                        l1997 03CD                          l1999 03D0                          u1010 032D  
                        u1011 032C                          u1100 0187                          u1005 0321  
                        u1030 033C                          u1110 0198                          u1031 033B  
                        u1111 0197                          u1200 07A2                          u1120 066A  
                        u1025 032E                          u1201 07A0                          u1121 0669  
                        u1050 034C                          u1210 07A3                          u1130 0680  
                        u1051 034B                          u1035 0338                          u1131 067F  
                        u1300 047B                          u1220 02EF                          u1140 072F  
                        u1060 01A3                          u1301 047A                          u1045 0342  
                        u1141 072D                          u1310 048C                          u1230 0314  
                        u1150 0730                          u1070 01B4                          u1311 048B  
                        u1231 0313                          u1071 01B3                          u1240 012B  
                        u1160 0751                          u1400 0143                          u1080 039C  
                        u1241 012A                          u1161 074F                          u1401 0142  
                        u1081 039B                          u1330 049C                          u1250 01D8  
                        u1170 0752                          u1090 03B2                          u1410 0297  
                        u1331 049B                          u1251 01D7                          u1091 03B1  
                        u1500 0577                          u1180 0772                          u1420 02B6  
                        u1325 0490                          u1501 0576                          u1181 0771  
                        u1421 02B5                          u1350 04AB                          u1510 05A5  
                        u1190 077E                          u1430 02C3                          u1351 04AA  
                        u1511 05A4                          u1191 077D                          u1280 01EC  
                        u1520 05B3                          u1600 04E2                          u1440 02E2  
                        u1345 049D                          u1281 01EB                          u1265 01DD  
                        u1521 05B2                          u1505 0573                          u1601 04E1  
                        u1441 02E1                          u1370 04BB                          u1290 0470  
                        u1530 05E6                          u1610 04F0                          u1450 01BF  
                        u1371 04BA                          u1355 04A7                          u1291 046F  
                        u1275 01E2                          u1531 05E5                          u1515 05A1  
                        u1611 04EF                          u1380 04C0                          u1540 05F4  
                        u1620 0503                          u1460 01D0                          u1381 04BF  
                        u1365 04B1                          u1541 05F3                          u1525 05AF  
                        u1621 0502                          u1461 01CF                          u1550 0627  
                        u1470 0543                          u1630 0518                          u1390 00F8  
                        u1551 0626                          u1535 05E2                          u1471 0542  
                        u1631 0517                          u1391 00F7                          u1560 063B  
                        u1480 0551                          u1640 0529                          u1561 063A  
                        u1545 05F0                          u1481 0550                          u1641 0528  
                        u1625 04FF                          u1570 0222                          u1650 0279  
                        u1490 056A                          u1810 042B                          u1571 0221  
                        u1651 0278                          u1555 0623                          u1491 0569  
                        u1475 053F                          u1635 0514                          u1811 042A  
                        u1580 035E                          u1660 03E0                          u1820 0444  
                        u1565 0637                          u1485 054D                          u1581 035D  
                        u1645 0525                          u1661 03DF                          u1821 0443  
                        u1590 04D4                          u1670 03F2                          u1830 0459  
                        u1655 0275                          u1591 04D3                          u1671 03F1  
                        u1831 0458                          u1840 0460                          u1841 045F  
                        u1907 0146                          u1917 0285                          u1927 0219  
                        u1857 03D3                          u1867 03E6                          u1877 03F9  
                        u1887 0407                          u1897 0414                          abs@a 0070  
                        _fast 0067                          _main 041B                          _lpin 006D  
                        _potA 004A                          _potB 0048                          _mpin 006C  
                        _rpin 006B                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          _slow 0065  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
             __end_of_IR_init 00ED                          start 0002              __end_of_ADC_init 0117  
__end_of_transmit_shield_code 01D1                         ??_abs 0072     surface_exploration@F11782 0120  
               shoot_laser@en 0020                         _ADACQ 009D                         ?_main 0070  
                       _ADCLK 0098                         _ADPCH 009E                         _ADREF 009A  
             __end_of___awdiv 04CA                         _ADPRE 009C               ___awdiv@divisor 0074  
             __end_of___lwdiv 0351               ___awdiv@counter 0079                         _RCREG 0119  
                       _TXREG 011A                         _drive 0351                         _motor 02E3  
                       _x_vec 00C5                         _y_vec 0044                         status 0003  
             __end_of_rx_wait 017D                         wtemp0 007E               __end_of_tx_wait 0164  
             __initialization 07CD                  __end_of_main 046B                        ??_main 007E  
         PCLS_info_send@11725 0020              ??_PCLS_info_send 0078                        _ADCON0 0093  
                      ?_drive 0070                        _ADRESH 008D                        _ADRESL 008C  
                   ??_IR_init 0078              ___awdiv@dividend 0076                        ?_motor 0078  
                      _RC6PPS 0F26             __end_of_PCLS_info 00F9                  ?_shield_code 0070  
                      _Vdrive 0535                        ___wmul 01D1             __end_of_UART_init 0127  
                   ??___awdiv 0078             __end_of_UART_send 0261                        _health 0046  
                   ??___lwdiv 0074              __end_of_read_adc 0238                        _teamID 0060  
            ___awdiv@quotient 007B                        _joy_lx 0054                        _joy_ly 0056  
                      _joy_rx 005A                        _joy_ry 0058                        drive@x 003E  
                      drive@y 0040                     ?_ADC_init 0070             _PCLS_info_receive 038F  
                   ??_rx_wait 0070                     ??_tx_wait 0070                  rx_wait@count 0070  
                ?_shoot_laser 0070            ?_PCLS_info_receive 0070          _transmit_shield_code 01B5  
           shoot_laser@F11759 00B1                     IR@ADC_val 0079       __end_of__initialization 07FD  
         ??_PCLS_info_receive 0072                __pcstackCOMMON 0070            custom_laser@F11774 00BF  
                __pidataBANK0 00F9                  __pidataBANK1 01F1          request_repair@F11765 00CD  
               __end_of_drive 038F                 __end_of_motor 0315                    __end_of_IR 028B  
   __end_of_PCLS_info_receive 03CD                 _line_follower 04CA                    ??_ADC_init 0070  
                     ??_drive 003C         ?_transmit_shield_code 0070                       ??_motor 007B  
                  __pbssBANK0 0044                    __pbssBANK1 00A0                    __pbssBANK2 0120  
        PCLS_info_send@F11724 00DF                    __pmaintext 041B                       ?_Vdrive 002B  
                     ?___wmul 0020                ?_line_follower 0070                ore_type@F11786 00AA  
              _user_data_send 017D                       _IR_base 0061                       _IR_init 00E1  
                tx_wait@count 0070                     ?_read_adc 0070               Vdrive@right_dir 0032  
                 motor@F11744 00A0                       Vdrive@x 002D                       Vdrive@y 002B  
                     ___awdiv 046B                       ___lwdiv 0315                       __ptext1 03CD  
                     __ptext2 01B5                       __ptext3 02B7                       __ptext4 028B  
                     __ptext5 00ED                       __ptext6 0199                       __ptext7 038F  
                     __ptext8 04CA                       __ptext9 0351               read_adc@ADC_val 0076  
              set_laser@11756 0021        __end_of_user_data_send 0199     transmit_shield_code@11763 0020  
                 set_laser@en 0020                   servo@F11751 012A        ??_transmit_shield_code 0078  
                     _rx_wait 0164                       clrloop0 00D6                       _tx_wait 014B  
        end_of_initialization 07FD                       init_ram 00DB                    ??_read_adc 0072  
                     initloop 00DC             __end_of_set_laser 02B7    transmit_shield_code@F11762 00D3  
                   _PCLS_info 00ED             __end_of_user_data 014B            user_data_receive@j 003B  
          user_data_receive@r 0020            user_data_receive@s 003A                     _UART_init 0117  
                   _UART_send 0238               ??_line_follower 0078               ?_user_data_send 0070  
                   _TRISAbits 0011                    ?_PCLS_info 0070                __end_of_Vdrive 065D  
              __end_of___wmul 01F1                    ?_UART_init 0070                    ?_UART_send 0072  
         start_initialization 07CD                   __end_of_abs 0138            PCLS_info_receive@j 002D  
          PCLS_info_receive@r 0020            PCLS_info_receive@s 002C                      ??_Vdrive 002F  
                    ??___wmul 007D                   __pdataBANK0 0061                   __pdataBANK1 00C7  
            shoot_laser@11760 0021                     ___latbits 0002                 __pcstackBANK0 0020  
            UART_send@message 0076                      ?_IR_init 0070                   ??_PCLS_info 0079  
            ___lwdiv@dividend 0072                      ?___awdiv 0074                      ?___lwdiv 0070  
              Vdrive@left_dir 0031                   ??_UART_init 0070                   ??_UART_send 0074  
                  motor@11745 0021                      _ADC_init 0107              ___lwdiv@quotient 0075  
                    ?_rx_wait 0070                      ?_tx_wait 0070                 ??_shield_code 007C  
              ___wmul@product 0024                      _LATAbits 0016                     clear_ram0 00D5  
                  UART_send@i 0077                      _PIR1bits 070D                      _PIR3bits 070F  
                   _set_laser 028B                     _speed_dec 00E5                     _speed_inc 0063  
            ??_user_data_send 0078                    _ADCON0bits 0093                read_adc@sensor 0075  
           ___wmul@multiplier 0020                     _user_data 0138                 ??_shoot_laser 0078  
              _PCLS_info_send 0199                   _auto_switch 005C                    ?_set_laser 0070  
         __end_of_shield_code 041B            line_follower@l_val 0078            line_follower@m_val 007A  
          line_follower@r_val 007C                   _SP1BRGLbits 011B                    _ANSELAbits 0F38  
                  _ANSELCbits 0F4E                   _line_colour 0069                    ?_user_data 0070  
       __end_of_line_follower 0535                 UART_send@size 0072               ___lwdiv@divisor 0070  
             ___lwdiv@counter 0077                      __ptext10 0138                      __ptext11 017D  
                    __ptext20 01D1                      __ptext12 065D                      __ptext21 046B  
                    __ptext13 0164                      __ptext22 0117                      __ptext14 0315  
                    __ptext23 00E1                      __ptext15 0535                      __ptext24 0261  
                    __ptext16 02E3                      __ptext25 0211                      __ptext17 0238  
                    __ptext26 0107                      __ptext18 014B                      __ptext19 0127  
      __end_of_PCLS_info_send 01B5                 Vdrive@l_motor 0033                 Vdrive@r_motor 0035  
                    _read_adc 0211           __end_of_shoot_laser 02E3                     motor@dirA 0020  
                   motor@dirB 0079                     motor@pwmA 0078                     motor@pwmB 007A  
             set_laser@F11755 00B8                      _playerID 005F                    _RC1STAbits 011D  
                    _starting 006E                      drive@dir 0042                   _repair_flag 005D  
        user_data_send@F11732 00D9               ?_PCLS_info_send 0070                   _shield_code 03CD  
                 _shield_flag 005E                   ??_set_laser 0078           user_data_send@11733 0020  
           _user_data_receive 065D                   ??_user_data 007B            ?_user_data_receive 0070  
                  _TX1STAbits 011E         transmit_repair@F11768 00C7                   _shoot_laser 02B7  
         ??_user_data_receive 0078  
