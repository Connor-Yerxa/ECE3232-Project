

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Apr 05 17:10:47 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Version 2.40
    47                           ; Generated 04/07/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F18855 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     001C                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     008C                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0110                     	;# 
   136     0110                     	;# 
   137     0111                     	;# 
   138     0112                     	;# 
   139     0112                     	;# 
   140     0113                     	;# 
   141     0114                     	;# 
   142     0114                     	;# 
   143     0115                     	;# 
   144     0116                     	;# 
   145     0116                     	;# 
   146     0117                     	;# 
   147     0119                     	;# 
   148     0119                     	;# 
   149     0119                     	;# 
   150     011A                     	;# 
   151     011A                     	;# 
   152     011A                     	;# 
   153     011B                     	;# 
   154     011B                     	;# 
   155     011B                     	;# 
   156     011B                     	;# 
   157     011B                     	;# 
   158     011C                     	;# 
   159     011C                     	;# 
   160     011C                     	;# 
   161     011D                     	;# 
   162     011D                     	;# 
   163     011D                     	;# 
   164     011E                     	;# 
   165     011E                     	;# 
   166     011E                     	;# 
   167     011F                     	;# 
   168     011F                     	;# 
   169     011F                     	;# 
   170     011F                     	;# 
   171     011F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     018E                     	;# 
   175     018F                     	;# 
   176     0190                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0196                     	;# 
   180     0197                     	;# 
   181     0198                     	;# 
   182     0199                     	;# 
   183     019A                     	;# 
   184     019B                     	;# 
   185     019C                     	;# 
   186     020C                     	;# 
   187     020C                     	;# 
   188     020D                     	;# 
   189     020E                     	;# 
   190     020F                     	;# 
   191     020F                     	;# 
   192     0210                     	;# 
   193     0210                     	;# 
   194     0211                     	;# 
   195     0211                     	;# 
   196     0212                     	;# 
   197     0212                     	;# 
   198     0213                     	;# 
   199     0214                     	;# 
   200     0215                     	;# 
   201     0215                     	;# 
   202     0216                     	;# 
   203     0216                     	;# 
   204     0217                     	;# 
   205     0217                     	;# 
   206     0218                     	;# 
   207     0218                     	;# 
   208     0219                     	;# 
   209     021A                     	;# 
   210     021B                     	;# 
   211     021B                     	;# 
   212     021C                     	;# 
   213     021C                     	;# 
   214     021D                     	;# 
   215     021D                     	;# 
   216     021E                     	;# 
   217     021F                     	;# 
   218     028C                     	;# 
   219     028C                     	;# 
   220     028D                     	;# 
   221     028D                     	;# 
   222     028E                     	;# 
   223     028F                     	;# 
   224     0290                     	;# 
   225     0290                     	;# 
   226     0291                     	;# 
   227     0292                     	;# 
   228     0292                     	;# 
   229     0293                     	;# 
   230     0293                     	;# 
   231     0294                     	;# 
   232     0295                     	;# 
   233     0296                     	;# 
   234     0296                     	;# 
   235     0297                     	;# 
   236     0298                     	;# 
   237     0298                     	;# 
   238     0299                     	;# 
   239     0299                     	;# 
   240     029A                     	;# 
   241     029B                     	;# 
   242     029C                     	;# 
   243     029C                     	;# 
   244     029D                     	;# 
   245     030C                     	;# 
   246     030C                     	;# 
   247     030D                     	;# 
   248     030E                     	;# 
   249     030F                     	;# 
   250     0310                     	;# 
   251     0310                     	;# 
   252     0311                     	;# 
   253     0312                     	;# 
   254     0313                     	;# 
   255     0314                     	;# 
   256     0314                     	;# 
   257     0315                     	;# 
   258     0316                     	;# 
   259     0317                     	;# 
   260     0318                     	;# 
   261     0318                     	;# 
   262     0319                     	;# 
   263     031A                     	;# 
   264     031B                     	;# 
   265     031C                     	;# 
   266     031C                     	;# 
   267     031D                     	;# 
   268     031E                     	;# 
   269     031F                     	;# 
   270     038C                     	;# 
   271     038C                     	;# 
   272     038D                     	;# 
   273     038E                     	;# 
   274     0390                     	;# 
   275     0390                     	;# 
   276     0391                     	;# 
   277     0392                     	;# 
   278     040C                     	;# 
   279     040D                     	;# 
   280     040E                     	;# 
   281     040F                     	;# 
   282     0410                     	;# 
   283     0411                     	;# 
   284     0416                     	;# 
   285     0416                     	;# 
   286     0417                     	;# 
   287     0418                     	;# 
   288     0418                     	;# 
   289     0419                     	;# 
   290     041A                     	;# 
   291     041A                     	;# 
   292     041B                     	;# 
   293     041C                     	;# 
   294     041C                     	;# 
   295     041D                     	;# 
   296     041E                     	;# 
   297     041F                     	;# 
   298     048C                     	;# 
   299     048C                     	;# 
   300     048D                     	;# 
   301     048E                     	;# 
   302     048F                     	;# 
   303     048F                     	;# 
   304     0490                     	;# 
   305     0491                     	;# 
   306     0492                     	;# 
   307     0492                     	;# 
   308     0493                     	;# 
   309     0494                     	;# 
   310     0495                     	;# 
   311     0495                     	;# 
   312     0496                     	;# 
   313     0497                     	;# 
   314     0498                     	;# 
   315     0499                     	;# 
   316     049A                     	;# 
   317     049B                     	;# 
   318     049C                     	;# 
   319     049D                     	;# 
   320     050C                     	;# 
   321     050C                     	;# 
   322     050D                     	;# 
   323     050E                     	;# 
   324     050F                     	;# 
   325     050F                     	;# 
   326     0510                     	;# 
   327     0511                     	;# 
   328     0512                     	;# 
   329     0512                     	;# 
   330     0513                     	;# 
   331     0514                     	;# 
   332     0515                     	;# 
   333     0515                     	;# 
   334     0516                     	;# 
   335     0517                     	;# 
   336     0518                     	;# 
   337     0519                     	;# 
   338     051A                     	;# 
   339     051B                     	;# 
   340     051C                     	;# 
   341     051D                     	;# 
   342     058C                     	;# 
   343     058C                     	;# 
   344     058D                     	;# 
   345     058E                     	;# 
   346     058F                     	;# 
   347     058F                     	;# 
   348     0590                     	;# 
   349     0591                     	;# 
   350     0592                     	;# 
   351     0593                     	;# 
   352     060C                     	;# 
   353     060D                     	;# 
   354     060E                     	;# 
   355     060F                     	;# 
   356     0610                     	;# 
   357     0611                     	;# 
   358     0612                     	;# 
   359     0613                     	;# 
   360     0614                     	;# 
   361     0616                     	;# 
   362     0617                     	;# 
   363     0618                     	;# 
   364     0619                     	;# 
   365     061A                     	;# 
   366     061B                     	;# 
   367     061C                     	;# 
   368     061D                     	;# 
   369     061E                     	;# 
   370     068C                     	;# 
   371     068D                     	;# 
   372     068E                     	;# 
   373     068F                     	;# 
   374     0690                     	;# 
   375     0691                     	;# 
   376     0692                     	;# 
   377     0693                     	;# 
   378     0694                     	;# 
   379     070C                     	;# 
   380     070D                     	;# 
   381     070E                     	;# 
   382     070F                     	;# 
   383     0710                     	;# 
   384     0711                     	;# 
   385     0712                     	;# 
   386     0713                     	;# 
   387     0714                     	;# 
   388     0716                     	;# 
   389     0717                     	;# 
   390     0718                     	;# 
   391     0719                     	;# 
   392     071A                     	;# 
   393     071B                     	;# 
   394     071C                     	;# 
   395     071D                     	;# 
   396     071E                     	;# 
   397     0796                     	;# 
   398     0797                     	;# 
   399     0798                     	;# 
   400     0799                     	;# 
   401     079A                     	;# 
   402     079B                     	;# 
   403     080C                     	;# 
   404     080D                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0811                     	;# 
   409     0812                     	;# 
   410     0813                     	;# 
   411     0814                     	;# 
   412     081A                     	;# 
   413     081B                     	;# 
   414     081C                     	;# 
   415     081D                     	;# 
   416     081E                     	;# 
   417     081F                     	;# 
   418     088C                     	;# 
   419     088D                     	;# 
   420     088E                     	;# 
   421     088F                     	;# 
   422     0890                     	;# 
   423     0891                     	;# 
   424     0892                     	;# 
   425     0893                     	;# 
   426     0895                     	;# 
   427     0896                     	;# 
   428     0897                     	;# 
   429     0898                     	;# 
   430     0899                     	;# 
   431     089A                     	;# 
   432     089B                     	;# 
   433     090C                     	;# 
   434     090E                     	;# 
   435     090F                     	;# 
   436     091F                     	;# 
   437     091F                     	;# 
   438     098F                     	;# 
   439     098F                     	;# 
   440     0990                     	;# 
   441     0991                     	;# 
   442     0992                     	;# 
   443     0993                     	;# 
   444     0994                     	;# 
   445     0995                     	;# 
   446     0996                     	;# 
   447     0997                     	;# 
   448     0E0F                     	;# 
   449     0E10                     	;# 
   450     0E11                     	;# 
   451     0E12                     	;# 
   452     0E13                     	;# 
   453     0E14                     	;# 
   454     0E15                     	;# 
   455     0E16                     	;# 
   456     0E17                     	;# 
   457     0E18                     	;# 
   458     0E19                     	;# 
   459     0E1A                     	;# 
   460     0E1B                     	;# 
   461     0E1C                     	;# 
   462     0E1D                     	;# 
   463     0E1E                     	;# 
   464     0E1F                     	;# 
   465     0E20                     	;# 
   466     0E21                     	;# 
   467     0E22                     	;# 
   468     0E23                     	;# 
   469     0E24                     	;# 
   470     0E25                     	;# 
   471     0E26                     	;# 
   472     0E27                     	;# 
   473     0E28                     	;# 
   474     0E29                     	;# 
   475     0E2A                     	;# 
   476     0E2B                     	;# 
   477     0E2C                     	;# 
   478     0E2D                     	;# 
   479     0E2E                     	;# 
   480     0E2F                     	;# 
   481     0E30                     	;# 
   482     0E31                     	;# 
   483     0E32                     	;# 
   484     0E33                     	;# 
   485     0E34                     	;# 
   486     0E35                     	;# 
   487     0E36                     	;# 
   488     0E37                     	;# 
   489     0E8F                     	;# 
   490     0E90                     	;# 
   491     0E91                     	;# 
   492     0E92                     	;# 
   493     0E93                     	;# 
   494     0E94                     	;# 
   495     0E95                     	;# 
   496     0E96                     	;# 
   497     0E97                     	;# 
   498     0E9C                     	;# 
   499     0E9D                     	;# 
   500     0E9E                     	;# 
   501     0EA1                     	;# 
   502     0EA2                     	;# 
   503     0EA3                     	;# 
   504     0EA4                     	;# 
   505     0EA5                     	;# 
   506     0EA9                     	;# 
   507     0EAA                     	;# 
   508     0EAB                     	;# 
   509     0EAC                     	;# 
   510     0EB1                     	;# 
   511     0EB2                     	;# 
   512     0EB3                     	;# 
   513     0EB8                     	;# 
   514     0EB9                     	;# 
   515     0EBA                     	;# 
   516     0EBB                     	;# 
   517     0EBC                     	;# 
   518     0EBD                     	;# 
   519     0EBE                     	;# 
   520     0EC3                     	;# 
   521     0EC5                     	;# 
   522     0EC6                     	;# 
   523     0EC7                     	;# 
   524     0EC8                     	;# 
   525     0EC9                     	;# 
   526     0ECA                     	;# 
   527     0ECB                     	;# 
   528     0ECC                     	;# 
   529     0F10                     	;# 
   530     0F11                     	;# 
   531     0F12                     	;# 
   532     0F13                     	;# 
   533     0F14                     	;# 
   534     0F15                     	;# 
   535     0F16                     	;# 
   536     0F17                     	;# 
   537     0F18                     	;# 
   538     0F19                     	;# 
   539     0F1A                     	;# 
   540     0F1B                     	;# 
   541     0F1C                     	;# 
   542     0F1D                     	;# 
   543     0F1E                     	;# 
   544     0F1F                     	;# 
   545     0F20                     	;# 
   546     0F21                     	;# 
   547     0F22                     	;# 
   548     0F23                     	;# 
   549     0F24                     	;# 
   550     0F25                     	;# 
   551     0F26                     	;# 
   552     0F27                     	;# 
   553     0F38                     	;# 
   554     0F39                     	;# 
   555     0F3A                     	;# 
   556     0F3B                     	;# 
   557     0F3C                     	;# 
   558     0F3D                     	;# 
   559     0F3E                     	;# 
   560     0F3F                     	;# 
   561     0F40                     	;# 
   562     0F41                     	;# 
   563     0F43                     	;# 
   564     0F44                     	;# 
   565     0F45                     	;# 
   566     0F46                     	;# 
   567     0F47                     	;# 
   568     0F48                     	;# 
   569     0F49                     	;# 
   570     0F4A                     	;# 
   571     0F4B                     	;# 
   572     0F4C                     	;# 
   573     0F4E                     	;# 
   574     0F4F                     	;# 
   575     0F50                     	;# 
   576     0F51                     	;# 
   577     0F52                     	;# 
   578     0F53                     	;# 
   579     0F54                     	;# 
   580     0F55                     	;# 
   581     0F56                     	;# 
   582     0F57                     	;# 
   583     0F65                     	;# 
   584     0F68                     	;# 
   585     0F69                     	;# 
   586     0F6A                     	;# 
   587     0F6B                     	;# 
   588     0FE4                     	;# 
   589     0FE5                     	;# 
   590     0FE6                     	;# 
   591     0FE7                     	;# 
   592     0FE8                     	;# 
   593     0FE9                     	;# 
   594     0FEA                     	;# 
   595     0FEB                     	;# 
   596     0FED                     	;# 
   597     0FEE                     	;# 
   598     0FEF                     	;# 
   599     0000                     	;# 
   600     0001                     	;# 
   601     0002                     	;# 
   602     0003                     	;# 
   603     0004                     	;# 
   604     0005                     	;# 
   605     0006                     	;# 
   606     0007                     	;# 
   607     0008                     	;# 
   608     0009                     	;# 
   609     000A                     	;# 
   610     000B                     	;# 
   611     000C                     	;# 
   612     000D                     	;# 
   613     000E                     	;# 
   614     0010                     	;# 
   615     0011                     	;# 
   616     0012                     	;# 
   617     0013                     	;# 
   618     0016                     	;# 
   619     0017                     	;# 
   620     0018                     	;# 
   621     001C                     	;# 
   622     001C                     	;# 
   623     001D                     	;# 
   624     001D                     	;# 
   625     001E                     	;# 
   626     001F                     	;# 
   627     008C                     	;# 
   628     008C                     	;# 
   629     008D                     	;# 
   630     008E                     	;# 
   631     008E                     	;# 
   632     008F                     	;# 
   633     0090                     	;# 
   634     0090                     	;# 
   635     0091                     	;# 
   636     0093                     	;# 
   637     0094                     	;# 
   638     0095                     	;# 
   639     0096                     	;# 
   640     0097                     	;# 
   641     0098                     	;# 
   642     0099                     	;# 
   643     009A                     	;# 
   644     009B                     	;# 
   645     009C                     	;# 
   646     009D                     	;# 
   647     009E                     	;# 
   648     010C                     	;# 
   649     010D                     	;# 
   650     010E                     	;# 
   651     010E                     	;# 
   652     010F                     	;# 
   653     0110                     	;# 
   654     0110                     	;# 
   655     0111                     	;# 
   656     0112                     	;# 
   657     0112                     	;# 
   658     0113                     	;# 
   659     0114                     	;# 
   660     0114                     	;# 
   661     0115                     	;# 
   662     0116                     	;# 
   663     0116                     	;# 
   664     0117                     	;# 
   665     0119                     	;# 
   666     0119                     	;# 
   667     0119                     	;# 
   668     011A                     	;# 
   669     011A                     	;# 
   670     011A                     	;# 
   671     011B                     	;# 
   672     011B                     	;# 
   673     011B                     	;# 
   674     011B                     	;# 
   675     011B                     	;# 
   676     011C                     	;# 
   677     011C                     	;# 
   678     011C                     	;# 
   679     011D                     	;# 
   680     011D                     	;# 
   681     011D                     	;# 
   682     011E                     	;# 
   683     011E                     	;# 
   684     011E                     	;# 
   685     011F                     	;# 
   686     011F                     	;# 
   687     011F                     	;# 
   688     011F                     	;# 
   689     011F                     	;# 
   690     018C                     	;# 
   691     018D                     	;# 
   692     018E                     	;# 
   693     018F                     	;# 
   694     0190                     	;# 
   695     0191                     	;# 
   696     0192                     	;# 
   697     0196                     	;# 
   698     0197                     	;# 
   699     0198                     	;# 
   700     0199                     	;# 
   701     019A                     	;# 
   702     019B                     	;# 
   703     019C                     	;# 
   704     020C                     	;# 
   705     020C                     	;# 
   706     020D                     	;# 
   707     020E                     	;# 
   708     020F                     	;# 
   709     020F                     	;# 
   710     0210                     	;# 
   711     0210                     	;# 
   712     0211                     	;# 
   713     0211                     	;# 
   714     0212                     	;# 
   715     0212                     	;# 
   716     0213                     	;# 
   717     0214                     	;# 
   718     0215                     	;# 
   719     0215                     	;# 
   720     0216                     	;# 
   721     0216                     	;# 
   722     0217                     	;# 
   723     0217                     	;# 
   724     0218                     	;# 
   725     0218                     	;# 
   726     0219                     	;# 
   727     021A                     	;# 
   728     021B                     	;# 
   729     021B                     	;# 
   730     021C                     	;# 
   731     021C                     	;# 
   732     021D                     	;# 
   733     021D                     	;# 
   734     021E                     	;# 
   735     021F                     	;# 
   736     028C                     	;# 
   737     028C                     	;# 
   738     028D                     	;# 
   739     028D                     	;# 
   740     028E                     	;# 
   741     028F                     	;# 
   742     0290                     	;# 
   743     0290                     	;# 
   744     0291                     	;# 
   745     0292                     	;# 
   746     0292                     	;# 
   747     0293                     	;# 
   748     0293                     	;# 
   749     0294                     	;# 
   750     0295                     	;# 
   751     0296                     	;# 
   752     0296                     	;# 
   753     0297                     	;# 
   754     0298                     	;# 
   755     0298                     	;# 
   756     0299                     	;# 
   757     0299                     	;# 
   758     029A                     	;# 
   759     029B                     	;# 
   760     029C                     	;# 
   761     029C                     	;# 
   762     029D                     	;# 
   763     030C                     	;# 
   764     030C                     	;# 
   765     030D                     	;# 
   766     030E                     	;# 
   767     030F                     	;# 
   768     0310                     	;# 
   769     0310                     	;# 
   770     0311                     	;# 
   771     0312                     	;# 
   772     0313                     	;# 
   773     0314                     	;# 
   774     0314                     	;# 
   775     0315                     	;# 
   776     0316                     	;# 
   777     0317                     	;# 
   778     0318                     	;# 
   779     0318                     	;# 
   780     0319                     	;# 
   781     031A                     	;# 
   782     031B                     	;# 
   783     031C                     	;# 
   784     031C                     	;# 
   785     031D                     	;# 
   786     031E                     	;# 
   787     031F                     	;# 
   788     038C                     	;# 
   789     038C                     	;# 
   790     038D                     	;# 
   791     038E                     	;# 
   792     0390                     	;# 
   793     0390                     	;# 
   794     0391                     	;# 
   795     0392                     	;# 
   796     040C                     	;# 
   797     040D                     	;# 
   798     040E                     	;# 
   799     040F                     	;# 
   800     0410                     	;# 
   801     0411                     	;# 
   802     0416                     	;# 
   803     0416                     	;# 
   804     0417                     	;# 
   805     0418                     	;# 
   806     0418                     	;# 
   807     0419                     	;# 
   808     041A                     	;# 
   809     041A                     	;# 
   810     041B                     	;# 
   811     041C                     	;# 
   812     041C                     	;# 
   813     041D                     	;# 
   814     041E                     	;# 
   815     041F                     	;# 
   816     048C                     	;# 
   817     048C                     	;# 
   818     048D                     	;# 
   819     048E                     	;# 
   820     048F                     	;# 
   821     048F                     	;# 
   822     0490                     	;# 
   823     0491                     	;# 
   824     0492                     	;# 
   825     0492                     	;# 
   826     0493                     	;# 
   827     0494                     	;# 
   828     0495                     	;# 
   829     0495                     	;# 
   830     0496                     	;# 
   831     0497                     	;# 
   832     0498                     	;# 
   833     0499                     	;# 
   834     049A                     	;# 
   835     049B                     	;# 
   836     049C                     	;# 
   837     049D                     	;# 
   838     050C                     	;# 
   839     050C                     	;# 
   840     050D                     	;# 
   841     050E                     	;# 
   842     050F                     	;# 
   843     050F                     	;# 
   844     0510                     	;# 
   845     0511                     	;# 
   846     0512                     	;# 
   847     0512                     	;# 
   848     0513                     	;# 
   849     0514                     	;# 
   850     0515                     	;# 
   851     0515                     	;# 
   852     0516                     	;# 
   853     0517                     	;# 
   854     0518                     	;# 
   855     0519                     	;# 
   856     051A                     	;# 
   857     051B                     	;# 
   858     051C                     	;# 
   859     051D                     	;# 
   860     058C                     	;# 
   861     058C                     	;# 
   862     058D                     	;# 
   863     058E                     	;# 
   864     058F                     	;# 
   865     058F                     	;# 
   866     0590                     	;# 
   867     0591                     	;# 
   868     0592                     	;# 
   869     0593                     	;# 
   870     060C                     	;# 
   871     060D                     	;# 
   872     060E                     	;# 
   873     060F                     	;# 
   874     0610                     	;# 
   875     0611                     	;# 
   876     0612                     	;# 
   877     0613                     	;# 
   878     0614                     	;# 
   879     0616                     	;# 
   880     0617                     	;# 
   881     0618                     	;# 
   882     0619                     	;# 
   883     061A                     	;# 
   884     061B                     	;# 
   885     061C                     	;# 
   886     061D                     	;# 
   887     061E                     	;# 
   888     068C                     	;# 
   889     068D                     	;# 
   890     068E                     	;# 
   891     068F                     	;# 
   892     0690                     	;# 
   893     0691                     	;# 
   894     0692                     	;# 
   895     0693                     	;# 
   896     0694                     	;# 
   897     070C                     	;# 
   898     070D                     	;# 
   899     070E                     	;# 
   900     070F                     	;# 
   901     0710                     	;# 
   902     0711                     	;# 
   903     0712                     	;# 
   904     0713                     	;# 
   905     0714                     	;# 
   906     0716                     	;# 
   907     0717                     	;# 
   908     0718                     	;# 
   909     0719                     	;# 
   910     071A                     	;# 
   911     071B                     	;# 
   912     071C                     	;# 
   913     071D                     	;# 
   914     071E                     	;# 
   915     0796                     	;# 
   916     0797                     	;# 
   917     0798                     	;# 
   918     0799                     	;# 
   919     079A                     	;# 
   920     079B                     	;# 
   921     080C                     	;# 
   922     080D                     	;# 
   923     080E                     	;# 
   924     080F                     	;# 
   925     0810                     	;# 
   926     0811                     	;# 
   927     0812                     	;# 
   928     0813                     	;# 
   929     0814                     	;# 
   930     081A                     	;# 
   931     081B                     	;# 
   932     081C                     	;# 
   933     081D                     	;# 
   934     081E                     	;# 
   935     081F                     	;# 
   936     088C                     	;# 
   937     088D                     	;# 
   938     088E                     	;# 
   939     088F                     	;# 
   940     0890                     	;# 
   941     0891                     	;# 
   942     0892                     	;# 
   943     0893                     	;# 
   944     0895                     	;# 
   945     0896                     	;# 
   946     0897                     	;# 
   947     0898                     	;# 
   948     0899                     	;# 
   949     089A                     	;# 
   950     089B                     	;# 
   951     090C                     	;# 
   952     090E                     	;# 
   953     090F                     	;# 
   954     091F                     	;# 
   955     091F                     	;# 
   956     098F                     	;# 
   957     098F                     	;# 
   958     0990                     	;# 
   959     0991                     	;# 
   960     0992                     	;# 
   961     0993                     	;# 
   962     0994                     	;# 
   963     0995                     	;# 
   964     0996                     	;# 
   965     0997                     	;# 
   966     0E0F                     	;# 
   967     0E10                     	;# 
   968     0E11                     	;# 
   969     0E12                     	;# 
   970     0E13                     	;# 
   971     0E14                     	;# 
   972     0E15                     	;# 
   973     0E16                     	;# 
   974     0E17                     	;# 
   975     0E18                     	;# 
   976     0E19                     	;# 
   977     0E1A                     	;# 
   978     0E1B                     	;# 
   979     0E1C                     	;# 
   980     0E1D                     	;# 
   981     0E1E                     	;# 
   982     0E1F                     	;# 
   983     0E20                     	;# 
   984     0E21                     	;# 
   985     0E22                     	;# 
   986     0E23                     	;# 
   987     0E24                     	;# 
   988     0E25                     	;# 
   989     0E26                     	;# 
   990     0E27                     	;# 
   991     0E28                     	;# 
   992     0E29                     	;# 
   993     0E2A                     	;# 
   994     0E2B                     	;# 
   995     0E2C                     	;# 
   996     0E2D                     	;# 
   997     0E2E                     	;# 
   998     0E2F                     	;# 
   999     0E30                     	;# 
  1000     0E31                     	;# 
  1001     0E32                     	;# 
  1002     0E33                     	;# 
  1003     0E34                     	;# 
  1004     0E35                     	;# 
  1005     0E36                     	;# 
  1006     0E37                     	;# 
  1007     0E8F                     	;# 
  1008     0E90                     	;# 
  1009     0E91                     	;# 
  1010     0E92                     	;# 
  1011     0E93                     	;# 
  1012     0E94                     	;# 
  1013     0E95                     	;# 
  1014     0E96                     	;# 
  1015     0E97                     	;# 
  1016     0E9C                     	;# 
  1017     0E9D                     	;# 
  1018     0E9E                     	;# 
  1019     0EA1                     	;# 
  1020     0EA2                     	;# 
  1021     0EA3                     	;# 
  1022     0EA4                     	;# 
  1023     0EA5                     	;# 
  1024     0EA9                     	;# 
  1025     0EAA                     	;# 
  1026     0EAB                     	;# 
  1027     0EAC                     	;# 
  1028     0EB1                     	;# 
  1029     0EB2                     	;# 
  1030     0EB3                     	;# 
  1031     0EB8                     	;# 
  1032     0EB9                     	;# 
  1033     0EBA                     	;# 
  1034     0EBB                     	;# 
  1035     0EBC                     	;# 
  1036     0EBD                     	;# 
  1037     0EBE                     	;# 
  1038     0EC3                     	;# 
  1039     0EC5                     	;# 
  1040     0EC6                     	;# 
  1041     0EC7                     	;# 
  1042     0EC8                     	;# 
  1043     0EC9                     	;# 
  1044     0ECA                     	;# 
  1045     0ECB                     	;# 
  1046     0ECC                     	;# 
  1047     0F10                     	;# 
  1048     0F11                     	;# 
  1049     0F12                     	;# 
  1050     0F13                     	;# 
  1051     0F14                     	;# 
  1052     0F15                     	;# 
  1053     0F16                     	;# 
  1054     0F17                     	;# 
  1055     0F18                     	;# 
  1056     0F19                     	;# 
  1057     0F1A                     	;# 
  1058     0F1B                     	;# 
  1059     0F1C                     	;# 
  1060     0F1D                     	;# 
  1061     0F1E                     	;# 
  1062     0F1F                     	;# 
  1063     0F20                     	;# 
  1064     0F21                     	;# 
  1065     0F22                     	;# 
  1066     0F23                     	;# 
  1067     0F24                     	;# 
  1068     0F25                     	;# 
  1069     0F26                     	;# 
  1070     0F27                     	;# 
  1071     0F38                     	;# 
  1072     0F39                     	;# 
  1073     0F3A                     	;# 
  1074     0F3B                     	;# 
  1075     0F3C                     	;# 
  1076     0F3D                     	;# 
  1077     0F3E                     	;# 
  1078     0F3F                     	;# 
  1079     0F40                     	;# 
  1080     0F41                     	;# 
  1081     0F43                     	;# 
  1082     0F44                     	;# 
  1083     0F45                     	;# 
  1084     0F46                     	;# 
  1085     0F47                     	;# 
  1086     0F48                     	;# 
  1087     0F49                     	;# 
  1088     0F4A                     	;# 
  1089     0F4B                     	;# 
  1090     0F4C                     	;# 
  1091     0F4E                     	;# 
  1092     0F4F                     	;# 
  1093     0F50                     	;# 
  1094     0F51                     	;# 
  1095     0F52                     	;# 
  1096     0F53                     	;# 
  1097     0F54                     	;# 
  1098     0F55                     	;# 
  1099     0F56                     	;# 
  1100     0F57                     	;# 
  1101     0F65                     	;# 
  1102     0F68                     	;# 
  1103     0F69                     	;# 
  1104     0F6A                     	;# 
  1105     0F6B                     	;# 
  1106     0FE4                     	;# 
  1107     0FE5                     	;# 
  1108     0FE6                     	;# 
  1109     0FE7                     	;# 
  1110     0FE8                     	;# 
  1111     0FE9                     	;# 
  1112     0FEA                     	;# 
  1113     0FEB                     	;# 
  1114     0FED                     	;# 
  1115     0FEE                     	;# 
  1116     0FEF                     	;# 
  1117                           
  1118                           	psect	idataBANK0
  1119     006D                     __pidataBANK0:
  1120                           
  1121                           ;initializer for _IR_base
  1122     006D  3400               	retlw	0
  1123     006E  34B2               	retlw	178
  1124                           
  1125                           ;initializer for _speed_inc
  1126     006F  3432               	retlw	50
  1127     0070  3400               	retlw	0
  1128                           
  1129                           ;initializer for _slow
  1130     0071  3496               	retlw	150
  1131     0072  3400               	retlw	0
  1132                           
  1133                           ;initializer for _fast
  1134     0073  34AF               	retlw	175
  1135     0074  3400               	retlw	0
  1136                           
  1137                           ;initializer for _line_colour
  1138     0075  34C0               	retlw	192
  1139     0076  348E               	retlw	142
  1140                           
  1141                           ;initializer for _r_vec
  1142     0077  3464               	retlw	100
  1143     0078  3400               	retlw	0
  1144                           
  1145                           ;initializer for _l_vec
  1146     0079  3464               	retlw	100
  1147     007A  3400               	retlw	0
  1148                           
  1149                           ;initializer for _rpin
  1150     007B  340A               	retlw	10
  1151                           
  1152                           ;initializer for _mpin
  1153     007C  3409               	retlw	9
  1154                           
  1155                           ;initializer for _lpin
  1156     007D  340B               	retlw	11
  1157                           
  1158                           ;initializer for _starting
  1159     007E  3401               	retlw	1
  1160                           
  1161                           	psect	idataBANK1
  1162     0132                     __pidataBANK1:
  1163                           
  1164                           ;initializer for transmit_repair@F11764
  1165     0132  34FE               	retlw	254
  1166     0133  3419               	retlw	25
  1167     0134  3401               	retlw	1
  1168     0135  3409               	retlw	9
  1169     0136  3401               	retlw	1
  1170     0137  3400               	retlw	0
  1171                           
  1172                           ;initializer for request_repair@F11761
  1173     0138  34FE               	retlw	254
  1174     0139  3419               	retlw	25
  1175     013A  3403               	retlw	3
  1176     013B  3409               	retlw	9
  1177     013C  3400               	retlw	0
  1178     013D  3400               	retlw	0
  1179                           
  1180                           ;initializer for transmit_shield_code@F11758
  1181     013E  34FE               	retlw	254
  1182     013F  3419               	retlw	25
  1183     0140  3402               	retlw	2
  1184     0141  3409               	retlw	9
  1185     0142  3400               	retlw	0
  1186     0143  3400               	retlw	0
  1187                           
  1188                           ;initializer for user_data_send@F11728
  1189     0144  34FE               	retlw	254
  1190     0145  3419               	retlw	25
  1191     0146  3401               	retlw	1
  1192     0147  3405               	retlw	5
  1193     0148  3400               	retlw	0
  1194     0149  3400               	retlw	0
  1195                           
  1196                           ;initializer for PCLS_info_send@F11720
  1197     014A  34FE               	retlw	254
  1198     014B  3419               	retlw	25
  1199     014C  3401               	retlw	1
  1200     014D  3404               	retlw	4
  1201     014E  3400               	retlw	0
  1202     014F  3400               	retlw	0
  1203     0016                     _LATAbits	set	22
  1204     0011                     _TRISAbits	set	17
  1205     008C                     _ADRESL	set	140
  1206     008D                     _ADRESH	set	141
  1207     0093                     _ADCON0bits	set	147
  1208     009E                     _ADPCH	set	158
  1209     009D                     _ADACQ	set	157
  1210     009C                     _ADPRE	set	156
  1211     009A                     _ADREF	set	154
  1212     0098                     _ADCLK	set	152
  1213     0093                     _ADCON0	set	147
  1214     0119                     _RCREG	set	281
  1215     011B                     _SP1BRGLbits	set	283
  1216     011F                     _BAUD1CONbits	set	287
  1217     011D                     _RC1STAbits	set	285
  1218     011E                     _TX1STAbits	set	286
  1219     011A                     _TXREG	set	282
  1220     070D                     _PIR1bits	set	1805
  1221     070F                     _PIR3bits	set	1807
  1222     0F38                     _ANSELAbits	set	3896
  1223     0F26                     _RC6PPS	set	3878
  1224     0F4E                     _ANSELCbits	set	3918
  1225                           
  1226                           	psect	cinit
  1227     07CD                     start_initialization:	
  1228                           ; #config settings
  1229                           
  1230     07CD                     __initialization:
  1231                           
  1232                           ; Initialize objects allocated to BANK0
  1233     07CD  306D               	movlw	low __pidataBANK0
  1234     07CE  0084               	movwf	4
  1235     07CF  3080               	movlw	(high __pidataBANK0)| (0+128)
  1236     07D0  0085               	movwf	5
  1237     07D1  305E               	movlw	low __pdataBANK0
  1238     07D2  0086               	movwf	6
  1239     07D3  3000               	movlw	high __pdataBANK0
  1240     07D4  0087               	movwf	7
  1241     07D5  3012               	movlw	18
  1242     07D6  3180  202F  3187   	fcall	init_ram
  1243                           
  1244                           ; Initialize objects allocated to BANK1
  1245     07D9  3032               	movlw	low __pidataBANK1
  1246     07DA  0084               	movwf	4
  1247     07DB  3081               	movlw	(high __pidataBANK1)| (0+128)
  1248     07DC  0085               	movwf	5
  1249     07DD  30C9               	movlw	low __pdataBANK1
  1250     07DE  0086               	movwf	6
  1251     07DF  3000               	movlw	high __pdataBANK1
  1252     07E0  0087               	movwf	7
  1253     07E1  301E               	movlw	30
  1254     07E2  3180  202F  3187   	fcall	init_ram
  1255                           
  1256                           ; Clear objects allocated to BANK0
  1257     07E5  3044               	movlw	low __pbssBANK0
  1258     07E6  0084               	movwf	4
  1259     07E7  3000               	movlw	high __pbssBANK0
  1260     07E8  0085               	movwf	5
  1261     07E9  301A               	movlw	26
  1262     07EA  3180  2029  3187   	fcall	clear_ram0
  1263                           
  1264                           ; Clear objects allocated to BANK1
  1265     07ED  30A0               	movlw	low __pbssBANK1
  1266     07EE  0084               	movwf	4
  1267     07EF  3000               	movlw	high __pbssBANK1
  1268     07F0  0085               	movwf	5
  1269     07F1  3029               	movlw	41
  1270     07F2  3180  2029  3187   	fcall	clear_ram0
  1271                           
  1272                           ; Clear objects allocated to BANK2
  1273     07F5  3020               	movlw	low __pbssBANK2
  1274     07F6  0084               	movwf	4
  1275     07F7  3001               	movlw	high __pbssBANK2
  1276     07F8  0085               	movwf	5
  1277     07F9  3014               	movlw	20
  1278     07FA  3180  2029  3187   	fcall	clear_ram0
  1279     07FD                     end_of_initialization:	
  1280                           ;End of C runtime variable initialization code
  1281                           
  1282     07FD                     __end_of__initialization:
  1283     07FD  0020               	movlb	0
  1284     07FE  3183  2B72         	ljmp	_main	;jump to C main() function
  1285                           
  1286                           	psect	bssBANK0
  1287     0044                     __pbssBANK0:
  1288     0044                     _potA:
  1289     0044                     	ds	2
  1290     0046                     _swD:
  1291     0046                     	ds	2
  1292     0048                     _swC:
  1293     0048                     	ds	2
  1294     004A                     _swB:
  1295     004A                     	ds	2
  1296     004C                     _swA:
  1297     004C                     	ds	2
  1298     004E                     _joy_lx:
  1299     004E                     	ds	2
  1300     0050                     _joy_ly:
  1301     0050                     	ds	2
  1302     0052                     _joy_ry:
  1303     0052                     	ds	2
  1304     0054                     _joy_rx:
  1305     0054                     	ds	2
  1306     0056                     _serA:
  1307     0056                     	ds	1
  1308     0057                     _auto_switch:
  1309     0057                     	ds	1
  1310     0058                     _r_dir:
  1311     0058                     	ds	1
  1312     0059                     _l_dir:
  1313     0059                     	ds	1
  1314     005A                     _repair_flag:
  1315     005A                     	ds	1
  1316     005B                     _shield_flag:
  1317     005B                     	ds	1
  1318     005C                     _playerID:
  1319     005C                     	ds	1
  1320     005D                     _teamID:
  1321     005D                     	ds	1
  1322                           
  1323                           	psect	dataBANK0
  1324     005E                     __pdataBANK0:
  1325     005E                     _IR_base:
  1326     005E                     	ds	2
  1327     0060                     _speed_inc:
  1328     0060                     	ds	2
  1329     0062                     _slow:
  1330     0062                     	ds	2
  1331     0064                     _fast:
  1332     0064                     	ds	2
  1333     0066                     _line_colour:
  1334     0066                     	ds	2
  1335     0068                     _r_vec:
  1336     0068                     	ds	2
  1337     006A                     _l_vec:
  1338     006A                     	ds	2
  1339     006C                     _rpin:
  1340     006C                     	ds	1
  1341     006D                     _mpin:
  1342     006D                     	ds	1
  1343     006E                     _lpin:
  1344     006E                     	ds	1
  1345     006F                     _starting:
  1346     006F                     	ds	1
  1347                           
  1348                           	psect	bssBANK1
  1349     00A0                     __pbssBANK1:
  1350     00A0                     motor@F11740:
  1351     00A0                     	ds	10
  1352     00AA                     ore_type@F11782:
  1353     00AA                     	ds	7
  1354     00B1                     shoot_laser@F11755:
  1355     00B1                     	ds	7
  1356     00B8                     set_laser@F11751:
  1357     00B8                     	ds	7
  1358     00BF                     custom_laser@F11770:
  1359     00BF                     	ds	6
  1360     00C5                     _health:
  1361     00C5                     	ds	2
  1362     00C7                     _potB:
  1363     00C7                     	ds	2
  1364                           
  1365                           	psect	dataBANK1
  1366     00C9                     __pdataBANK1:
  1367     00C9                     transmit_repair@F11764:
  1368     00C9                     	ds	6
  1369     00CF                     request_repair@F11761:
  1370     00CF                     	ds	6
  1371     00D5                     transmit_shield_code@F11758:
  1372     00D5                     	ds	6
  1373     00DB                     user_data_send@F11728:
  1374     00DB                     	ds	6
  1375     00E1                     PCLS_info_send@F11720:
  1376     00E1                     	ds	6
  1377                           
  1378                           	psect	bssBANK2
  1379     0120                     __pbssBANK2:
  1380     0120                     surface_exploration@F11778:
  1381     0120                     	ds	10
  1382     012A                     servo@F11747:
  1383     012A                     	ds	10
  1384                           
  1385                           	psect	inittext
  1386     002F                     init_ram:
  1387     002F  00FE               	movwf	btemp
  1388     0030                     initloop:
  1389     0030  0012               	moviw fsr0++
  1390     0031  001E               	movwi fsr1++
  1391     0032  0BFE               	decfsz	btemp,f
  1392     0033  2830               	goto	initloop
  1393     0034  3400               	retlw	0
  1394                           
  1395                           	psect	clrtext
  1396     0029                     clear_ram0:	
  1397                           ;	Called with FSR0 containing the base address, and
  1398                           ;	WREG with the size to clear
  1399                           
  1400     0029  0064               	clrwdt	;clear the watchdog before getting into this loop
  1401     002A                     clrloop0:
  1402     002A  0180               	clrf	0	;clear RAM location pointed to by FSR
  1403     002B  3101               	addfsr 0,1
  1404     002C  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1405     002D  282A               	goto	clrloop0	;have we reached the end yet?
  1406     002E  3400               	retlw	0	;all done for this memory range, return
  1407                           
  1408                           	psect	cstackCOMMON
  1409     0070                     __pcstackCOMMON:
  1410     0070                     ?_tx_wait:
  1411     0070                     ??_tx_wait:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414     0070                     ?_rx_wait:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417     0070                     ??_rx_wait:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420     0070                     ?_UART_init:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423     0070                     ??_UART_init:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426     0070                     ?_PCLS_info_send:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429     0070                     ?_PCLS_info_receive:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432     0070                     ?_PCLS_info:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435     0070                     ?_user_data_send:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438     0070                     ?_user_data_receive:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441     0070                     ?_user_data:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444     0070                     ?_set_laser:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447     0070                     ?_shoot_laser:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450     0070                     ?_transmit_shield_code:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453     0070                     ?_drive:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456     0070                     ?_ADC_init:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459     0070                     ??_ADC_init:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462     0070                     ?_line_follower:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465     0070                     ?_IR_init:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468     0070                     ?_IR:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471     0070                     ?_shield_code:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474     0070                     ?_main:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477     0070                     ?_abs:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480     0070                     ?_read_adc:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483     0070                     ?___lwdiv:	
  1484                           ; 2 bytes @ 0x0
  1485                           
  1486     0070                     tx_wait@count:	
  1487                           ; 2 bytes @ 0x0
  1488                           
  1489     0070                     rx_wait@count:	
  1490                           ; 2 bytes @ 0x0
  1491                           
  1492     0070                     ___lwdiv@divisor:	
  1493                           ; 2 bytes @ 0x0
  1494                           
  1495     0070                     abs@a:	
  1496                           ; 2 bytes @ 0x0
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0x0
  1500     0070                     	ds	2
  1501     0072                     ??_abs:
  1502     0072                     ?_UART_send:	
  1503                           ; 1 bytes @ 0x2
  1504                           
  1505     0072                     ??_PCLS_info_receive:	
  1506                           ; 1 bytes @ 0x2
  1507                           
  1508     0072                     ??_read_adc:	
  1509                           ; 1 bytes @ 0x2
  1510                           
  1511     0072                     UART_send@size:	
  1512                           ; 1 bytes @ 0x2
  1513                           
  1514     0072                     ___lwdiv@dividend:	
  1515                           ; 2 bytes @ 0x2
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0x2
  1519     0072                     	ds	2
  1520     0074                     ??_UART_send:
  1521     0074                     ??___lwdiv:	
  1522                           ; 1 bytes @ 0x4
  1523                           
  1524     0074                     ?___awdiv:	
  1525                           ; 1 bytes @ 0x4
  1526                           
  1527     0074                     ___awdiv@divisor:	
  1528                           ; 2 bytes @ 0x4
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x4
  1532     0074                     	ds	1
  1533     0075                     read_adc@sensor:
  1534     0075                     ___lwdiv@quotient:	
  1535                           ; 1 bytes @ 0x5
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x5
  1539     0075                     	ds	1
  1540     0076                     UART_send@message:
  1541     0076                     read_adc@ADC_val:	
  1542                           ; 1 bytes @ 0x6
  1543                           
  1544     0076                     ___awdiv@dividend:	
  1545                           ; 2 bytes @ 0x6
  1546                           
  1547                           
  1548                           ; 2 bytes @ 0x6
  1549     0076                     	ds	1
  1550     0077                     UART_send@i:
  1551     0077                     ___lwdiv@counter:	
  1552                           ; 1 bytes @ 0x7
  1553                           
  1554                           
  1555                           ; 1 bytes @ 0x7
  1556     0077                     	ds	1
  1557     0078                     ??_PCLS_info_send:
  1558     0078                     ??_user_data_send:	
  1559                           ; 1 bytes @ 0x8
  1560                           
  1561     0078                     ??_user_data_receive:	
  1562                           ; 1 bytes @ 0x8
  1563                           
  1564     0078                     ?_motor:	
  1565                           ; 1 bytes @ 0x8
  1566                           
  1567     0078                     ??_set_laser:	
  1568                           ; 1 bytes @ 0x8
  1569                           
  1570     0078                     ??_shoot_laser:	
  1571                           ; 1 bytes @ 0x8
  1572                           
  1573     0078                     ??_transmit_shield_code:	
  1574                           ; 1 bytes @ 0x8
  1575                           
  1576     0078                     ??_IR_init:	
  1577                           ; 1 bytes @ 0x8
  1578                           
  1579     0078                     ??_IR:	
  1580                           ; 1 bytes @ 0x8
  1581                           
  1582     0078                     ??___awdiv:	
  1583                           ; 1 bytes @ 0x8
  1584                           
  1585     0078                     motor@pwmA:	
  1586                           ; 1 bytes @ 0x8
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0x8
  1590     0078                     	ds	1
  1591     0079                     ??_PCLS_info:
  1592     0079                     motor@dirB:	
  1593                           ; 1 bytes @ 0x9
  1594                           
  1595     0079                     ___awdiv@counter:	
  1596                           ; 1 bytes @ 0x9
  1597                           
  1598                           
  1599                           ; 1 bytes @ 0x9
  1600     0079                     	ds	1
  1601     007A                     motor@pwmB:
  1602     007A                     ___awdiv@sign:	
  1603                           ; 1 bytes @ 0xA
  1604                           
  1605     007A                     IR@ADC_val:	
  1606                           ; 1 bytes @ 0xA
  1607                           
  1608                           
  1609                           ; 2 bytes @ 0xA
  1610     007A                     	ds	1
  1611     007B                     ??_user_data:
  1612     007B                     ??_motor:	
  1613                           ; 1 bytes @ 0xB
  1614                           
  1615     007B                     ___awdiv@quotient:	
  1616                           ; 1 bytes @ 0xB
  1617                           
  1618                           
  1619                           ; 2 bytes @ 0xB
  1620     007B                     	ds	1
  1621     007C                     ??_line_follower:
  1622     007C                     ??_shield_code:	
  1623                           ; 1 bytes @ 0xC
  1624                           
  1625                           
  1626                           ; 1 bytes @ 0xC
  1627     007C                     	ds	1
  1628     007D                     ??___wmul:
  1629                           
  1630                           ; 1 bytes @ 0xD
  1631     007D                     	ds	1
  1632     007E                     ??_main:
  1633                           
  1634                           	psect	cstackBANK0
  1635     0020                     __pcstackBANK0:	
  1636                           ; 1 bytes @ 0xE
  1637                           
  1638     0020                     ?___wmul:
  1639     0020                     motor@dirA:	
  1640                           ; 2 bytes @ 0x0
  1641                           
  1642     0020                     set_laser@en:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0020                     shoot_laser@en:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0020                     ___wmul@multiplier:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0020                     PCLS_info_send@11721:	
  1652                           ; 2 bytes @ 0x0
  1653                           
  1654     0020                     user_data_send@11729:	
  1655                           ; 6 bytes @ 0x0
  1656                           
  1657     0020                     transmit_shield_code@11759:	
  1658                           ; 6 bytes @ 0x0
  1659                           
  1660     0020                     PCLS_info_receive@r:	
  1661                           ; 6 bytes @ 0x0
  1662                           
  1663     0020                     user_data_receive@r:	
  1664                           ; 12 bytes @ 0x0
  1665                           
  1666                           
  1667                           ; 26 bytes @ 0x0
  1668     0020                     	ds	1
  1669     0021                     set_laser@11752:
  1670     0021                     shoot_laser@11756:	
  1671                           ; 7 bytes @ 0x1
  1672                           
  1673     0021                     motor@11741:	
  1674                           ; 7 bytes @ 0x1
  1675                           
  1676                           
  1677                           ; 10 bytes @ 0x1
  1678     0021                     	ds	1
  1679     0022                     ___wmul@multiplicand:
  1680                           
  1681                           ; 2 bytes @ 0x2
  1682     0022                     	ds	2
  1683     0024                     ___wmul@product:
  1684                           
  1685                           ; 2 bytes @ 0x4
  1686     0024                     	ds	7
  1687     002B                     ?_Vdrive:
  1688     002B                     Vdrive@y:	
  1689                           ; 1 bytes @ 0xB
  1690                           
  1691     002B                     line_follower@l_val:	
  1692                           ; 2 bytes @ 0xB
  1693                           
  1694                           
  1695                           ; 2 bytes @ 0xB
  1696     002B                     	ds	1
  1697     002C                     PCLS_info_receive@s:
  1698                           
  1699                           ; 1 bytes @ 0xC
  1700     002C                     	ds	1
  1701     002D                     PCLS_info_receive@j:
  1702     002D                     Vdrive@x:	
  1703                           ; 1 bytes @ 0xD
  1704                           
  1705     002D                     line_follower@m_val:	
  1706                           ; 2 bytes @ 0xD
  1707                           
  1708                           
  1709                           ; 2 bytes @ 0xD
  1710     002D                     	ds	2
  1711     002F                     ??_Vdrive:
  1712     002F                     line_follower@r_val:	
  1713                           ; 1 bytes @ 0xF
  1714                           
  1715                           
  1716                           ; 2 bytes @ 0xF
  1717     002F                     	ds	2
  1718     0031                     Vdrive@left_dir:
  1719                           
  1720                           ; 1 bytes @ 0x11
  1721     0031                     	ds	1
  1722     0032                     Vdrive@right_dir:
  1723                           
  1724                           ; 1 bytes @ 0x12
  1725     0032                     	ds	1
  1726     0033                     Vdrive@l_motor:
  1727                           
  1728                           ; 2 bytes @ 0x13
  1729     0033                     	ds	2
  1730     0035                     Vdrive@r_motor:
  1731                           
  1732                           ; 2 bytes @ 0x15
  1733     0035                     	ds	5
  1734     003A                     user_data_receive@s:
  1735                           
  1736                           ; 1 bytes @ 0x1A
  1737     003A                     	ds	1
  1738     003B                     user_data_receive@j:
  1739                           
  1740                           ; 1 bytes @ 0x1B
  1741     003B                     	ds	1
  1742     003C                     ??_drive:
  1743                           
  1744                           ; 1 bytes @ 0x1C
  1745     003C                     	ds	2
  1746     003E                     drive@x:
  1747                           
  1748                           ; 2 bytes @ 0x1E
  1749     003E                     	ds	2
  1750     0040                     drive@y:
  1751                           
  1752                           ; 2 bytes @ 0x20
  1753     0040                     	ds	2
  1754     0042                     drive@dir:
  1755                           
  1756                           ; 2 bytes @ 0x22
  1757     0042                     	ds	2
  1758                           
  1759                           	psect	maintext
  1760     0372                     __pmaintext:	
  1761 ;;
  1762 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1763 ;;
  1764 ;; *************** function _main *****************
  1765 ;; Defined at:
  1766 ;;		line 37 in file "Master.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : B1F/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels required when called: 5
  1786 ;; This function calls:
  1787 ;;		_ADC_init
  1788 ;;		_IR
  1789 ;;		_IR_init
  1790 ;;		_UART_init
  1791 ;;		_drive
  1792 ;;		_line_follower
  1793 ;;		_read_adc
  1794 ;;		_shield_code
  1795 ;;		_user_data
  1796 ;; This function is called by:
  1797 ;;		Startup code after reset
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801     0372                     _main:	
  1802                           ;psect for function _main
  1803                           
  1804     0372                     l2174:	
  1805                           ;incstack = 0
  1806                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1807                           
  1808     0372  3180  205D  3183   	fcall	_UART_init
  1809     0375                     l2176:
  1810     0375  3180  207F  3183   	fcall	_user_data
  1811     0378                     l2178:
  1812     0378  3180  204D  3183   	fcall	_ADC_init
  1813     037B                     l2180:
  1814     037B  0020               	movlb	0	; select bank0
  1815     037C  084A               	movf	_swB,w	;volatile
  1816     037D  044B               	iorwf	_swB+1,w	;volatile
  1817     037E  1903               	btfsc	3,2
  1818     037F  2B81               	goto	u1891
  1819     0380  2B82               	goto	u1890
  1820     0381                     u1891:
  1821     0381  2BB0               	goto	l2198
  1822     0382                     u1890:
  1823     0382                     l2182:
  1824     0382  3009               	movlw	9
  1825     0383  3181  2170  3183   	fcall	_read_adc
  1826     0386  0870               	movf	?_read_adc,w
  1827     0387  3E00               	addlw	0
  1828     0388  0020               	movlb	0	; select bank0
  1829     0389  00E6               	movwf	_line_colour	;volatile
  1830     038A  30FF               	movlw	255
  1831     038B  3D71               	addwfc	?_read_adc+1,w
  1832     038C  00E7               	movwf	_line_colour+1	;volatile
  1833     038D  2B94               	goto	l2186
  1834     038E                     l2184:
  1835     038E  3184  241E  3183   	fcall	_line_follower
  1836     0391  3180  207F  3183   	fcall	_user_data
  1837     0394                     l2186:
  1838     0394  0020               	movlb	0	; select bank0
  1839     0395  084A               	movf	_swB,w	;volatile
  1840     0396  044B               	iorwf	_swB+1,w	;volatile
  1841     0397  1D03               	btfss	3,2
  1842     0398  2B9A               	goto	u1901
  1843     0399  2B9B               	goto	u1900
  1844     039A                     u1901:
  1845     039A  2B8E               	goto	l2184
  1846     039B                     u1900:
  1847     039B  2BB0               	goto	l2198
  1848     039C                     l2188:
  1849     039C  3180  2035  3183   	fcall	_IR_init
  1850     039F                     l2190:
  1851     039F  3182  22B4  3183   	fcall	_drive
  1852     03A2  2BA9               	goto	l2196
  1853     03A3                     l2192:
  1854     03A3  3182  2218  3183   	fcall	_IR
  1855     03A6                     l2194:
  1856     03A6  3180  207F  3183   	fcall	_user_data
  1857     03A9                     l2196:
  1858     03A9  0020               	movlb	0	; select bank0
  1859     03AA  0846               	movf	_swD,w	;volatile
  1860     03AB  0447               	iorwf	_swD+1,w	;volatile
  1861     03AC  1D03               	btfss	3,2
  1862     03AD  2BAF               	goto	u1911
  1863     03AE  2BB0               	goto	u1910
  1864     03AF                     u1911:
  1865     03AF  2BA3               	goto	l2192
  1866     03B0                     u1910:
  1867     03B0                     l2198:
  1868     03B0  3002               	movlw	2
  1869     03B1  0648               	xorwf	_swC,w	;volatile
  1870     03B2  0449               	iorwf	_swC+1,w	;volatile
  1871     03B3  1903               	btfsc	3,2
  1872     03B4  2BB6               	goto	u1921
  1873     03B5  2BB7               	goto	u1920
  1874     03B6                     u1921:
  1875     03B6  2B9C               	goto	l2188
  1876     03B7                     u1920:
  1877     03B7                     l2200:
  1878     03B7  3182  22F2  3183   	fcall	_shield_code
  1879                           
  1880                           ;Master.c: 70:     drive();
  1881     03BA  3182  22B4  3183   	fcall	_drive
  1882     03BD                     l347:
  1883     03BD  3180  2803         	ljmp	start
  1884     03BF                     __end_of_main:
  1885                           
  1886                           	psect	text1
  1887     02F2                     __ptext1:	
  1888 ;; *************** function _shield_code *****************
  1889 ;; Defined at:
  1890 ;;		line 10 in file "./SheildCode.h"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 4
  1911 ;; This function calls:
  1912 ;;		_PCLS_info
  1913 ;;		_set_laser
  1914 ;;		_shoot_laser
  1915 ;;		_transmit_shield_code
  1916 ;;		_user_data
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922     02F2                     _shield_code:	
  1923                           ;psect for function _shield_code
  1924                           
  1925     02F2                     l2072:	
  1926                           ;incstack = 0
  1927                           ; Regs used in _shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1928                           
  1929                           
  1930                           ;./SheildCode.h: 11:    transmit_shield_code();
  1931     02F2  3180  2041  3182   	fcall	_PCLS_info
  1932     02F5                     l2074:
  1933                           
  1934                           ;./SheildCode.h: 12:             _delay((unsigned long)((100)*(400000/4000.0)));
  1935     02F5  3001               	movlw	1
  1936     02F6  0020               	movlb	0	; select bank0
  1937     02F7  00DB               	movwf	_shield_flag	;volatile
  1938     02F8                     l2076:
  1939                           
  1940                           ;./SheildCode.h: 13:             set_laser(0);
  1941     02F8  085B               	movf	_shield_flag,w	;volatile
  1942     02F9  1903               	btfsc	3,2
  1943     02FA  2AFC               	goto	u1761
  1944     02FB  2AFD               	goto	u1760
  1945     02FC                     u1761:
  1946     02FC  2B2F               	goto	l327
  1947     02FD                     u1760:
  1948     02FD                     l2078:
  1949                           
  1950                           ;./SheildCode.h: 14:             _delay((unsigned long)((6000)*(400000/4000.0)));
  1951     02FD  3180  207F  3182   	fcall	_user_data
  1952     0300                     l2080:
  1953                           
  1954                           ;./SheildCode.h: 15:   }
  1955     0300  0020               	movlb	0	; select bank0
  1956     0301  084C               	movf	_swA,w	;volatile
  1957     0302  044D               	iorwf	_swA+1,w	;volatile
  1958     0303  1903               	btfsc	3,2
  1959     0304  2B06               	goto	u1771
  1960     0305  2B07               	goto	u1770
  1961     0306                     u1771:
  1962     0306  2B2F               	goto	l327
  1963     0307                     u1770:
  1964     0307                     l2082:
  1965                           
  1966                           ;./SheildCode.h: 16:  }
  1967     0307  3001               	movlw	1
  1968     0308  3181  21C0  3182   	fcall	_set_laser
  1969     030B                     l2084:
  1970                           
  1971                           ;./SheildCode.h: 17: }
  1972     030B  300D               	movlw	13
  1973     030C  00FC               	movwf	??_shield_code
  1974     030D  30FC               	movlw	252
  1975     030E                     u1937:
  1976     030E  0B89               	decfsz	9,f
  1977     030F  2B0E               	goto	u1937
  1978     0310  0BFC               	decfsz	??_shield_code,f
  1979     0311  2B0E               	goto	u1937
  1980     0312                     l2086:
  1981     0312  3001               	movlw	1
  1982     0313  3181  21EC  3182   	fcall	_shoot_laser
  1983     0316                     l2088:
  1984     0316  3181  2116  3182   	fcall	_transmit_shield_code
  1985     0319                     l2090:
  1986     0319  300D               	movlw	13
  1987     031A  00FC               	movwf	??_shield_code
  1988     031B  30FC               	movlw	252
  1989     031C                     u1947:
  1990     031C  0B89               	decfsz	9,f
  1991     031D  2B1C               	goto	u1947
  1992     031E  0BFC               	decfsz	??_shield_code,f
  1993     031F  2B1C               	goto	u1947
  1994     0320  3000               	movlw	0
  1995     0321  3181  21C0  3182   	fcall	_set_laser
  1996     0324                     l2092:
  1997     0324  3004               	movlw	4
  1998     0325  00FD               	movwf	??_shield_code+1
  1999     0326  300C               	movlw	12
  2000     0327  00FC               	movwf	??_shield_code
  2001     0328  3034               	movlw	52
  2002     0329                     u1957:
  2003     0329  0B89               	decfsz	9,f
  2004     032A  2B29               	goto	u1957
  2005     032B  0BFC               	decfsz	??_shield_code,f
  2006     032C  2B29               	goto	u1957
  2007     032D  0BFD               	decfsz	??_shield_code+1,f
  2008     032E  2B29               	goto	u1957
  2009     032F                     l327:
  2010     032F  0008               	return
  2011     0330                     __end_of_shield_code:
  2012                           
  2013                           	psect	text2
  2014     0116                     __ptext2:	
  2015 ;; *************** function _transmit_shield_code *****************
  2016 ;; Defined at:
  2017 ;;		line 237 in file "./Commands.h"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  11759           6    0[BANK0 ] volatile unsigned char [
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2032 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2034 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2035 ;;Total ram usage:        7 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 2
  2038 ;; This function calls:
  2039 ;;		_UART_send
  2040 ;; This function is called by:
  2041 ;;		_shield_code
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045     0116                     _transmit_shield_code:	
  2046                           ;psect for function _transmit_shield_code
  2047                           
  2048     0116                     l1902:	
  2049                           ;incstack = 0
  2050                           ; Regs used in _transmit_shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2051                           
  2052     0116                     l1904:	
  2053                           ;./Commands.h: 239:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x02, 0
      +                          x09, 0x00, 0x00}, 6)){}
  2054                           
  2055     0116  30D5               	movlw	low transmit_shield_code@F11758
  2056     0117  0086               	movwf	6
  2057     0118  3000               	movlw	high transmit_shield_code@F11758
  2058     0119  0087               	movwf	7
  2059     011A  3020               	movlw	low transmit_shield_code@11759
  2060     011B  0084               	movwf	4
  2061     011C  3000               	movlw	high transmit_shield_code@11759
  2062     011D  0085               	movwf	5
  2063     011E  3006               	movlw	6
  2064     011F  00F8               	movwf	??_transmit_shield_code
  2065     0120                     u1490:
  2066     0120  0016               	moviw fsr1++
  2067     0121  001A               	movwi fsr0++
  2068     0122  0BF8               	decfsz	??_transmit_shield_code,f
  2069     0123  2920               	goto	u1490
  2070     0124                     l1906:
  2071     0124  3006               	movlw	6
  2072     0125  00F2               	movwf	UART_send@size
  2073     0126  3000               	movlw	0
  2074     0127  00F3               	movwf	UART_send@size+1
  2075     0128  3020               	movlw	(low (transmit_shield_code@11759| 0))& (0+255)
  2076     0129  3181  2197  3181   	fcall	_UART_send
  2077     012C  3A00               	xorlw	0
  2078     012D  1903               	skipnz
  2079     012E  2930               	goto	u1501
  2080     012F  2931               	goto	u1500
  2081     0130                     u1501:
  2082     0130  2916               	goto	l1904
  2083     0131                     u1500:
  2084     0131                     l188:
  2085     0131  0008               	return
  2086     0132                     __end_of_transmit_shield_code:
  2087                           
  2088                           	psect	text3
  2089     01EC                     __ptext3:	
  2090 ;; *************** function _shoot_laser *****************
  2091 ;; Defined at:
  2092 ;;		line 232 in file "./Commands.h"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  en              1    wreg     unsigned char 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  en              1    0[BANK0 ] unsigned char 
  2097 ;;  11756           7    1[BANK0 ] volatile unsigned char [
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2108 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2110 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;Total ram usage:        9 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 2
  2114 ;; This function calls:
  2115 ;;		_UART_send
  2116 ;; This function is called by:
  2117 ;;		_shield_code
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121     01EC                     _shoot_laser:	
  2122                           ;psect for function _shoot_laser
  2123                           
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in _shoot_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2127                           ;shoot_laser@en stored from wreg
  2128     01EC  0020               	movlb	0	; select bank0
  2129     01ED  00A0               	movwf	shoot_laser@en
  2130     01EE                     l1882:
  2131     01EE                     l1884:	
  2132                           ;./Commands.h: 232: void shoot_laser(unsigned char en);./Commands.h: 233: {;./Commands.h
      +                          : 234:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0x09, 0x01, 0x
      +                          00, en}, 7)){}
  2133                           
  2134     01EE  30B1               	movlw	low shoot_laser@F11755
  2135     01EF  0086               	movwf	6
  2136     01F0  3000               	movlw	high shoot_laser@F11755
  2137     01F1  0087               	movwf	7
  2138     01F2  3021               	movlw	low shoot_laser@11756
  2139     01F3  0084               	movwf	4
  2140     01F4  3000               	movlw	high shoot_laser@11756
  2141     01F5  0085               	movwf	5
  2142     01F6  3007               	movlw	7
  2143     01F7  00F8               	movwf	??_shoot_laser
  2144     01F8                     u1470:
  2145     01F8  0016               	moviw fsr1++
  2146     01F9  001A               	movwi fsr0++
  2147     01FA  0BF8               	decfsz	??_shoot_laser,f
  2148     01FB  29F8               	goto	u1470
  2149     01FC                     l1886:
  2150     01FC  30FE               	movlw	254
  2151     01FD  0020               	movlb	0	; select bank0
  2152     01FE  00A1               	movwf	shoot_laser@11756	;volatile
  2153     01FF                     l1888:
  2154     01FF  3019               	movlw	25
  2155     0200  00A2               	movwf	shoot_laser@11756+1	;volatile
  2156     0201                     l1890:
  2157     0201  3001               	movlw	1
  2158     0202  00A3               	movwf	shoot_laser@11756+2	;volatile
  2159     0203                     l1892:
  2160     0203  3009               	movlw	9
  2161     0204  00A4               	movwf	shoot_laser@11756+3	;volatile
  2162     0205                     l1894:
  2163     0205  3001               	movlw	1
  2164     0206  00A5               	movwf	shoot_laser@11756+4	;volatile
  2165     0207                     l1896:
  2166     0207  01A6               	clrf	shoot_laser@11756+5	;volatile
  2167     0208                     l1898:
  2168     0208  0820               	movf	shoot_laser@en,w
  2169     0209  00A7               	movwf	shoot_laser@11756+6	;volatile
  2170     020A                     l1900:
  2171     020A  3007               	movlw	7
  2172     020B  00F2               	movwf	UART_send@size
  2173     020C  3000               	movlw	0
  2174     020D  00F3               	movwf	UART_send@size+1
  2175     020E  3021               	movlw	(low (shoot_laser@11756| 0))& (0+255)
  2176     020F  3181  2197  3181   	fcall	_UART_send
  2177     0212  3A00               	xorlw	0
  2178     0213  1903               	skipnz
  2179     0214  2A16               	goto	u1481
  2180     0215  2A17               	goto	u1480
  2181     0216                     u1481:
  2182     0216  29EE               	goto	l1884
  2183     0217                     u1480:
  2184     0217                     l180:
  2185     0217  0008               	return
  2186     0218                     __end_of_shoot_laser:
  2187                           
  2188                           	psect	text4
  2189     01C0                     __ptext4:	
  2190 ;; *************** function _set_laser *****************
  2191 ;; Defined at:
  2192 ;;		line 227 in file "./Commands.h"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  en              1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  en              1    0[BANK0 ] unsigned char 
  2197 ;;  11752           7    1[BANK0 ] volatile unsigned char [
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;Total ram usage:        9 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 2
  2214 ;; This function calls:
  2215 ;;		_UART_send
  2216 ;; This function is called by:
  2217 ;;		_shield_code
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221     01C0                     _set_laser:	
  2222                           ;psect for function _set_laser
  2223                           
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _set_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2227                           ;set_laser@en stored from wreg
  2228     01C0  0020               	movlb	0	; select bank0
  2229     01C1  00A0               	movwf	set_laser@en
  2230     01C2                     l1862:
  2231     01C2                     l1864:	
  2232                           ;./Commands.h: 227: void set_laser(unsigned char en);./Commands.h: 228: {;./Commands.h: 
      +                          229:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0x08, 0x01, 0x00
      +                          , en}, 7)){}
  2233                           
  2234     01C2  30B8               	movlw	low set_laser@F11751
  2235     01C3  0086               	movwf	6
  2236     01C4  3000               	movlw	high set_laser@F11751
  2237     01C5  0087               	movwf	7
  2238     01C6  3021               	movlw	low set_laser@11752
  2239     01C7  0084               	movwf	4
  2240     01C8  3000               	movlw	high set_laser@11752
  2241     01C9  0085               	movwf	5
  2242     01CA  3007               	movlw	7
  2243     01CB  00F8               	movwf	??_set_laser
  2244     01CC                     u1450:
  2245     01CC  0016               	moviw fsr1++
  2246     01CD  001A               	movwi fsr0++
  2247     01CE  0BF8               	decfsz	??_set_laser,f
  2248     01CF  29CC               	goto	u1450
  2249     01D0                     l1866:
  2250     01D0  30FE               	movlw	254
  2251     01D1  0020               	movlb	0	; select bank0
  2252     01D2  00A1               	movwf	set_laser@11752	;volatile
  2253     01D3                     l1868:
  2254     01D3  3019               	movlw	25
  2255     01D4  00A2               	movwf	set_laser@11752+1	;volatile
  2256     01D5                     l1870:
  2257     01D5  3001               	movlw	1
  2258     01D6  00A3               	movwf	set_laser@11752+2	;volatile
  2259     01D7                     l1872:
  2260     01D7  3008               	movlw	8
  2261     01D8  00A4               	movwf	set_laser@11752+3	;volatile
  2262     01D9                     l1874:
  2263     01D9  3001               	movlw	1
  2264     01DA  00A5               	movwf	set_laser@11752+4	;volatile
  2265     01DB                     l1876:
  2266     01DB  01A6               	clrf	set_laser@11752+5	;volatile
  2267     01DC                     l1878:
  2268     01DC  0820               	movf	set_laser@en,w
  2269     01DD  00A7               	movwf	set_laser@11752+6	;volatile
  2270     01DE                     l1880:
  2271     01DE  3007               	movlw	7
  2272     01DF  00F2               	movwf	UART_send@size
  2273     01E0  3000               	movlw	0
  2274     01E1  00F3               	movwf	UART_send@size+1
  2275     01E2  3021               	movlw	(low (set_laser@11752| 0))& (0+255)
  2276     01E3  3181  2197  3181   	fcall	_UART_send
  2277     01E6  3A00               	xorlw	0
  2278     01E7  1903               	skipnz
  2279     01E8  29EA               	goto	u1461
  2280     01E9  29EB               	goto	u1460
  2281     01EA                     u1461:
  2282     01EA  29C2               	goto	l1864
  2283     01EB                     u1460:
  2284     01EB                     l172:
  2285     01EB  0008               	return
  2286     01EC                     __end_of_set_laser:
  2287                           
  2288                           	psect	text5
  2289     0041                     __ptext5:	
  2290 ;; *************** function _PCLS_info *****************
  2291 ;; Defined at:
  2292 ;;		line 135 in file "./Commands.h"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 3
  2313 ;; This function calls:
  2314 ;;		_PCLS_info_receive
  2315 ;;		_PCLS_info_send
  2316 ;; This function is called by:
  2317 ;;		_shield_code
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321     0041                     _PCLS_info:	
  2322                           ;psect for function _PCLS_info
  2323                           
  2324     0041                     l1848:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _PCLS_info: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2327                           
  2328                           
  2329                           ;./Commands.h: 137:     PCLS_info_send();
  2330     0041  3180  20FA  3180   	fcall	_PCLS_info_send
  2331     0044                     l1852:	
  2332                           ;./Commands.h: 138:     while(!PCLS_info_receive())
  2333                           
  2334                           
  2335                           ;./Commands.h: 138:     while(!PCLS_info_receive())
  2336     0044  3183  2330  3180   	fcall	_PCLS_info_receive
  2337     0047  3A00               	xorlw	0
  2338     0048  1903               	skipnz
  2339     0049  284B               	goto	u1431
  2340     004A  284C               	goto	u1430
  2341     004B                     u1431:
  2342     004B  2841               	goto	l1848
  2343     004C                     u1430:
  2344     004C                     l122:
  2345     004C  0008               	return
  2346     004D                     __end_of_PCLS_info:
  2347                           
  2348                           	psect	text6
  2349     00FA                     __ptext6:	
  2350 ;; *************** function _PCLS_info_send *****************
  2351 ;; Defined at:
  2352 ;;		line 105 in file "./Commands.h"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  11721           6    0[BANK0 ] volatile unsigned char [
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;Total ram usage:        7 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 2
  2373 ;; This function calls:
  2374 ;;		_UART_send
  2375 ;; This function is called by:
  2376 ;;		_PCLS_info
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380     00FA                     _PCLS_info_send:	
  2381                           ;psect for function _PCLS_info_send
  2382                           
  2383     00FA                     l1664:	
  2384                           ;incstack = 0
  2385                           ; Regs used in _PCLS_info_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2386                           
  2387     00FA                     l1666:	
  2388                           ;./Commands.h: 107:     while (!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 
      +                          0x04, 0x00, 0x00}, 6)) {}
  2389                           
  2390     00FA  30E1               	movlw	low PCLS_info_send@F11720
  2391     00FB  0086               	movwf	6
  2392     00FC  3000               	movlw	high PCLS_info_send@F11720
  2393     00FD  0087               	movwf	7
  2394     00FE  3020               	movlw	low PCLS_info_send@11721
  2395     00FF  0084               	movwf	4
  2396     0100  3000               	movlw	high PCLS_info_send@11721
  2397     0101  0085               	movwf	5
  2398     0102  3006               	movlw	6
  2399     0103  00F8               	movwf	??_PCLS_info_send
  2400     0104                     u1100:
  2401     0104  0016               	moviw fsr1++
  2402     0105  001A               	movwi fsr0++
  2403     0106  0BF8               	decfsz	??_PCLS_info_send,f
  2404     0107  2904               	goto	u1100
  2405     0108                     l1668:
  2406     0108  3006               	movlw	6
  2407     0109  00F2               	movwf	UART_send@size
  2408     010A  3000               	movlw	0
  2409     010B  00F3               	movwf	UART_send@size+1
  2410     010C  3020               	movlw	(low (PCLS_info_send@11721| 0))& (0+255)
  2411     010D  3181  2197  3180   	fcall	_UART_send
  2412     0110  3A00               	xorlw	0
  2413     0111  1903               	skipnz
  2414     0112  2914               	goto	u1111
  2415     0113  2915               	goto	u1110
  2416     0114                     u1111:
  2417     0114  28FA               	goto	l1666
  2418     0115                     u1110:
  2419     0115                     l108:
  2420     0115  0008               	return
  2421     0116                     __end_of_PCLS_info_send:
  2422                           
  2423                           	psect	text7
  2424     0330                     __ptext7:	
  2425 ;; *************** function _PCLS_info_receive *****************
  2426 ;; Defined at:
  2427 ;;		line 110 in file "./Commands.h"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  r              12    0[BANK0 ] volatile unsigned char [
  2432 ;;  j               1   13[BANK0 ] volatile unsigned char 
  2433 ;;  s               1   12[BANK0 ] volatile unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      unsigned char 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2445 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;      Totals:         3      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2447 ;;Total ram usage:       17 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 1
  2450 ;; This function calls:
  2451 ;;		_rx_wait
  2452 ;; This function is called by:
  2453 ;;		_PCLS_info
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457     0330                     _PCLS_info_receive:	
  2458                           ;psect for function _PCLS_info_receive
  2459                           
  2460     0330                     l1670:	
  2461                           ;incstack = 0
  2462                           ; Regs used in _PCLS_info_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2463                           
  2464                           
  2465                           ;./Commands.h: 112:     volatile char s=12, j, r[12];
  2466     0330  300C               	movlw	12
  2467     0331  0020               	movlb	0	; select bank0
  2468     0332  00AC               	movwf	PCLS_info_receive@s	;volatile
  2469     0333                     l1672:
  2470                           
  2471                           ;./Commands.h: 114:     for (j=0; j < s; j++)
  2472     0333  01AD               	clrf	PCLS_info_receive@j	;volatile
  2473     0334  2B4D               	goto	l1684
  2474     0335                     l1674:
  2475                           
  2476                           ;./Commands.h: 115:     {;./Commands.h: 116:         if (rx_wait())
  2477     0335  3180  20AB  3183   	fcall	_rx_wait
  2478     0338  3A00               	xorlw	0
  2479     0339  1903               	skipnz
  2480     033A  2B3C               	goto	u1121
  2481     033B  2B3D               	goto	u1120
  2482     033C                     u1121:
  2483     033C  2B46               	goto	l1678
  2484     033D                     u1120:
  2485     033D                     l1676:
  2486                           
  2487                           ;./Commands.h: 117:         {;./Commands.h: 118:             r[j] = RCREG;
  2488     033D  0020               	movlb	0	; select bank0
  2489     033E  082D               	movf	PCLS_info_receive@j,w
  2490     033F  3E20               	addlw	(low (PCLS_info_receive@r| 0))& (0+255)
  2491     0340  0086               	movwf	6
  2492     0341  0187               	clrf	7
  2493     0342  0022               	movlb	2	; select bank2
  2494     0343  0819               	movf	25,w	;volatile
  2495     0344  0081               	movwf	1
  2496                           
  2497                           ;./Commands.h: 119:         }
  2498     0345  2B48               	goto	l1682
  2499     0346                     l1678:
  2500                           
  2501                           ;./Commands.h: 121:         {;./Commands.h: 122:             return 0;
  2502     0346  3000               	movlw	0
  2503     0347  2B71               	goto	l115
  2504     0348                     l1682:
  2505                           
  2506                           ;./Commands.h: 124:     }
  2507     0348  3001               	movlw	1
  2508     0349  00F2               	movwf	??_PCLS_info_receive
  2509     034A  0872               	movf	??_PCLS_info_receive,w
  2510     034B  0020               	movlb	0	; select bank0
  2511     034C  07AD               	addwf	PCLS_info_receive@j,f	;volatile
  2512     034D                     l1684:
  2513     034D  082C               	movf	PCLS_info_receive@s,w	;volatile
  2514     034E  022D               	subwf	PCLS_info_receive@j,w	;volatile
  2515     034F  1C03               	skipc
  2516     0350  2B52               	goto	u1131
  2517     0351  2B53               	goto	u1130
  2518     0352                     u1131:
  2519     0352  2B35               	goto	l1674
  2520     0353                     u1130:
  2521     0353                     l1686:
  2522                           
  2523                           ;./Commands.h: 126:     teamID = r[6];
  2524     0353  0826               	movf	PCLS_info_receive@r+6,w	;volatile
  2525     0354  00DD               	movwf	_teamID	;volatile
  2526                           
  2527                           ;./Commands.h: 127:     playerID = r[7];
  2528     0355  0827               	movf	PCLS_info_receive@r+7,w	;volatile
  2529     0356  00DC               	movwf	_playerID	;volatile
  2530                           
  2531                           ;./Commands.h: 128:     health = r[8];
  2532     0357  0828               	movf	PCLS_info_receive@r+8,w	;volatile
  2533     0358  00F2               	movwf	??_PCLS_info_receive
  2534     0359  01F3               	clrf	??_PCLS_info_receive+1
  2535     035A  0872               	movf	??_PCLS_info_receive,w
  2536     035B  0021               	movlb	1	; select bank1
  2537     035C  00C5               	movwf	_health^(0+128)	;volatile
  2538     035D  0873               	movf	??_PCLS_info_receive+1,w
  2539     035E  00C6               	movwf	(_health+1)^(0+128)	;volatile
  2540                           
  2541                           ;./Commands.h: 129:     health += r[9] << 8;
  2542     035F  0020               	movlb	0	; select bank0
  2543     0360  0829               	movf	PCLS_info_receive@r+9,w	;volatile
  2544     0361  00F2               	movwf	??_PCLS_info_receive
  2545     0362  01F3               	clrf	??_PCLS_info_receive+1
  2546     0363  0872               	movf	??_PCLS_info_receive,w
  2547     0364  00F3               	movwf	??_PCLS_info_receive+1
  2548     0365  01F2               	clrf	??_PCLS_info_receive
  2549     0366  0872               	movf	??_PCLS_info_receive,w
  2550     0367  0021               	movlb	1	; select bank1
  2551     0368  07C5               	addwf	_health^(0+128),f	;volatile
  2552     0369  0873               	movf	??_PCLS_info_receive+1,w
  2553     036A  3DC6               	addwfc	(_health+1)^(0+128),f	;volatile
  2554                           
  2555                           ;./Commands.h: 130:     shield_flag = r[10];
  2556     036B  0020               	movlb	0	; select bank0
  2557     036C  082A               	movf	PCLS_info_receive@r+10,w	;volatile
  2558     036D  00DB               	movwf	_shield_flag	;volatile
  2559                           
  2560                           ;./Commands.h: 131:     repair_flag = r[11];
  2561     036E  082B               	movf	PCLS_info_receive@r+11,w	;volatile
  2562     036F  00DA               	movwf	_repair_flag	;volatile
  2563                           
  2564                           ;./Commands.h: 132:     return 1;
  2565     0370  3001               	movlw	1
  2566     0371                     l115:
  2567     0371  0008               	return
  2568     0372                     __end_of_PCLS_info_receive:
  2569                           
  2570                           	psect	text8
  2571     041E                     __ptext8:	
  2572 ;; *************** function _line_follower *****************
  2573 ;; Defined at:
  2574 ;;		line 47 in file "./Line Follower.h"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  r_val           2   15[BANK0 ] volatile unsigned int 
  2579 ;;  m_val           2   13[BANK0 ] volatile unsigned int 
  2580 ;;  l_val           2   11[BANK0 ] volatile unsigned int 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;Total ram usage:        8 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 3
  2597 ;; This function calls:
  2598 ;;		_abs
  2599 ;;		_motor
  2600 ;;		_read_adc
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606     041E                     _line_follower:	
  2607                           ;psect for function _line_follower
  2608                           
  2609     041E                     l2004:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _line_follower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2612                           
  2613                           
  2614                           ;./Line Follower.h: 49:     ADCON0bits.ADGO = 1;;./Line Follower.h: 51:     l_val = read
      +                          _adc(lpin);
  2615     041E  0020               	movlb	0	; select bank0
  2616     041F  1011               	bcf	17,0	;volatile
  2617                           
  2618                           ;./Line Follower.h: 52:     ADCON0bits.ADGO = 1;
  2619     0420  1091               	bcf	17,1	;volatile
  2620                           
  2621                           ;./Line Follower.h: 53:     while(ADCON0bits.ADGO){}
  2622     0421  1111               	bcf	17,2	;volatile
  2623                           
  2624                           ;./Line Follower.h: 55:     ADCON0bits.ADGO = 1;
  2625     0422  1196               	bcf	22,3	;volatile
  2626                           
  2627                           ;./Line Follower.h: 57:     r_val = read_adc(rpin);
  2628     0423  0021               	movlb	1	; select bank1
  2629     0424  1413               	bsf	19,0	;volatile
  2630     0425                     l291:	
  2631                           ;./Line Follower.h: 58: 
  2632                           
  2633     0425  1813               	btfsc	19,0	;volatile
  2634     0426  2C28               	goto	u1651
  2635     0427  2C29               	goto	u1650
  2636     0428                     u1651:
  2637     0428  2C25               	goto	l291
  2638     0429                     u1650:
  2639     0429                     l2006:
  2640                           
  2641                           ;./Line Follower.h: 59:     if(m_val > line_colour)
  2642     0429  300B               	movlw	11
  2643     042A  3181  2170  3184   	fcall	_read_adc
  2644     042D  0871               	movf	?_read_adc+1,w
  2645     042E  0020               	movlb	0	; select bank0
  2646     042F  00AC               	movwf	line_follower@l_val+1	;volatile
  2647     0430  0870               	movf	?_read_adc,w
  2648     0431  00AB               	movwf	line_follower@l_val	;volatile
  2649     0432                     l2008:
  2650                           
  2651                           ;./Line Follower.h: 60:     {
  2652     0432  0021               	movlb	1	; select bank1
  2653     0433  1413               	bsf	19,0	;volatile
  2654     0434                     l294:	
  2655                           ;./Line Follower.h: 61:   l_vec = fast;
  2656                           
  2657     0434  1813               	btfsc	19,0	;volatile
  2658     0435  2C37               	goto	u1661
  2659     0436  2C38               	goto	u1660
  2660     0437                     u1661:
  2661     0437  2C34               	goto	l294
  2662     0438                     u1660:
  2663     0438                     l2010:
  2664                           
  2665                           ;./Line Follower.h: 62:   r_vec = fast;
  2666     0438  3009               	movlw	9
  2667     0439  3181  2170  3184   	fcall	_read_adc
  2668     043C  0871               	movf	?_read_adc+1,w
  2669     043D  0020               	movlb	0	; select bank0
  2670     043E  00AE               	movwf	line_follower@m_val+1	;volatile
  2671     043F  0870               	movf	?_read_adc,w
  2672     0440  00AD               	movwf	line_follower@m_val	;volatile
  2673     0441                     l2012:
  2674                           
  2675                           ;./Line Follower.h: 63:         LATAbits.LATA1 = 1;
  2676     0441  0021               	movlb	1	; select bank1
  2677     0442  1413               	bsf	19,0	;volatile
  2678     0443                     l297:	
  2679                           ;./Line Follower.h: 64:     }
  2680                           
  2681     0443  1813               	btfsc	19,0	;volatile
  2682     0444  2C46               	goto	u1671
  2683     0445  2C47               	goto	u1670
  2684     0446                     u1671:
  2685     0446  2C43               	goto	l297
  2686     0447                     u1670:
  2687     0447                     l2014:
  2688                           
  2689                           ;./Line Follower.h: 65:     else
  2690     0447  300A               	movlw	10
  2691     0448  3181  2170  3184   	fcall	_read_adc
  2692     044B  0871               	movf	?_read_adc+1,w
  2693     044C  0020               	movlb	0	; select bank0
  2694     044D  00B0               	movwf	line_follower@r_val+1	;volatile
  2695     044E  0870               	movf	?_read_adc,w
  2696     044F  00AF               	movwf	line_follower@r_val	;volatile
  2697     0450                     l2016:
  2698                           
  2699                           ;./Line Follower.h: 67:   l_vec = slow;
  2700     0450  082E               	movf	line_follower@m_val+1,w	;volatile
  2701     0451  0267               	subwf	_line_colour+1,w	;volatile
  2702     0452  1D03               	skipz
  2703     0453  2C56               	goto	u1685
  2704     0454  082D               	movf	line_follower@m_val,w	;volatile
  2705     0455  0266               	subwf	_line_colour,w	;volatile
  2706     0456                     u1685:
  2707     0456  1803               	skipnc
  2708     0457  2C59               	goto	u1681
  2709     0458  2C5A               	goto	u1680
  2710     0459                     u1681:
  2711     0459  2C64               	goto	l2022
  2712     045A                     u1680:
  2713     045A                     l2018:
  2714                           
  2715                           ;./Line Follower.h: 68:   r_vec = slow;;./Line Follower.h: 69:         LATAbits.LATA1 = 
      +                          0;
  2716     045A  0865               	movf	_fast+1,w	;volatile
  2717     045B  00EB               	movwf	_l_vec+1	;volatile
  2718     045C  0864               	movf	_fast,w	;volatile
  2719     045D  00EA               	movwf	_l_vec	;volatile
  2720                           
  2721                           ;./Line Follower.h: 70:     }
  2722     045E  0865               	movf	_fast+1,w	;volatile
  2723     045F  00E9               	movwf	_r_vec+1	;volatile
  2724     0460  0864               	movf	_fast,w	;volatile
  2725     0461  00E8               	movwf	_r_vec	;volatile
  2726     0462                     l2020:
  2727                           
  2728                           ;./Line Follower.h: 71: 
  2729     0462  1496               	bsf	22,1	;volatile
  2730                           
  2731                           ;./Line Follower.h: 72:     if(l_val > line_colour)
  2732     0463  2C6D               	goto	l301
  2733     0464                     l2022:
  2734                           
  2735                           ;./Line Follower.h: 74:   l_vec += speed_inc;;./Line Follower.h: 75:   r_vec -= speed_in
      +                          c*2;
  2736     0464  0863               	movf	_slow+1,w	;volatile
  2737     0465  00EB               	movwf	_l_vec+1	;volatile
  2738     0466  0862               	movf	_slow,w	;volatile
  2739     0467  00EA               	movwf	_l_vec	;volatile
  2740                           
  2741                           ;./Line Follower.h: 76:         LATAbits.LATA2 = 1;
  2742     0468  0863               	movf	_slow+1,w	;volatile
  2743     0469  00E9               	movwf	_r_vec+1	;volatile
  2744     046A  0862               	movf	_slow,w	;volatile
  2745     046B  00E8               	movwf	_r_vec	;volatile
  2746     046C                     l2024:
  2747                           
  2748                           ;./Line Follower.h: 77:     }
  2749     046C  1096               	bcf	22,1	;volatile
  2750     046D                     l301:	
  2751                           ;./Line Follower.h: 78:     else {LATAbits.LATA2 = 0;}
  2752                           
  2753                           
  2754                           ;./Line Follower.h: 80:     if(r_val > line_colour)
  2755     046D  082C               	movf	line_follower@l_val+1,w	;volatile
  2756     046E  0267               	subwf	_line_colour+1,w	;volatile
  2757     046F  1D03               	skipz
  2758     0470  2C73               	goto	u1695
  2759     0471  082B               	movf	line_follower@l_val,w	;volatile
  2760     0472  0266               	subwf	_line_colour,w	;volatile
  2761     0473                     u1695:
  2762     0473  1803               	skipnc
  2763     0474  2C76               	goto	u1691
  2764     0475  2C77               	goto	u1690
  2765     0476                     u1691:
  2766     0476  2C87               	goto	l302
  2767     0477                     u1690:
  2768     0477                     l2026:
  2769                           
  2770                           ;./Line Follower.h: 81:     {;./Line Follower.h: 82:   l_vec -= speed_inc*2;
  2771     0477  0860               	movf	_speed_inc,w	;volatile
  2772     0478  07EA               	addwf	_l_vec,f	;volatile
  2773     0479  0861               	movf	_speed_inc+1,w	;volatile
  2774     047A  3DEB               	addwfc	_l_vec+1,f	;volatile
  2775     047B                     l2028:
  2776                           
  2777                           ;./Line Follower.h: 83:   r_vec += speed_inc;
  2778     047B  0861               	movf	_speed_inc+1,w	;volatile
  2779     047C  00FD               	movwf	??_line_follower+1
  2780     047D  0860               	movf	_speed_inc,w	;volatile
  2781     047E  00FC               	movwf	??_line_follower
  2782     047F  35FC               	lslf	??_line_follower,f
  2783     0480  0DFD               	rlf	??_line_follower+1,f
  2784     0481  087C               	movf	??_line_follower,w
  2785     0482  02E8               	subwf	_r_vec,f	;volatile
  2786     0483  087D               	movf	??_line_follower+1,w
  2787     0484  3BE9               	subwfb	_r_vec+1,f	;volatile
  2788     0485                     l2030:
  2789                           
  2790                           ;./Line Follower.h: 84:         LATAbits.LATA0 = 1;
  2791     0485  1516               	bsf	22,2	;volatile
  2792                           
  2793                           ;./Line Follower.h: 85:     }
  2794     0486  2C88               	goto	l2032
  2795     0487                     l302:	
  2796                           ;./Line Follower.h: 86:     else {LATAbits.LATA0 = 0;}
  2797                           
  2798     0487  1116               	bcf	22,2	;volatile
  2799     0488                     l2032:
  2800                           
  2801                           ;./Line Follower.h: 88:     if(l_vec >= 100)
  2802     0488  0830               	movf	line_follower@r_val+1,w	;volatile
  2803     0489  0267               	subwf	_line_colour+1,w	;volatile
  2804     048A  1D03               	skipz
  2805     048B  2C8E               	goto	u1705
  2806     048C  082F               	movf	line_follower@r_val,w	;volatile
  2807     048D  0266               	subwf	_line_colour,w	;volatile
  2808     048E                     u1705:
  2809     048E  1803               	skipnc
  2810     048F  2C91               	goto	u1701
  2811     0490  2C92               	goto	u1700
  2812     0491                     u1701:
  2813     0491  2CA2               	goto	l304
  2814     0492                     u1700:
  2815     0492                     l2034:
  2816                           
  2817                           ;./Line Follower.h: 89:     {;./Line Follower.h: 90:         l_dir = 1;
  2818     0492  0861               	movf	_speed_inc+1,w	;volatile
  2819     0493  00FD               	movwf	??_line_follower+1
  2820     0494  0860               	movf	_speed_inc,w	;volatile
  2821     0495  00FC               	movwf	??_line_follower
  2822     0496  35FC               	lslf	??_line_follower,f
  2823     0497  0DFD               	rlf	??_line_follower+1,f
  2824     0498  087C               	movf	??_line_follower,w
  2825     0499  02EA               	subwf	_l_vec,f	;volatile
  2826     049A  087D               	movf	??_line_follower+1,w
  2827     049B  3BEB               	subwfb	_l_vec+1,f	;volatile
  2828     049C                     l2036:
  2829                           
  2830                           ;./Line Follower.h: 91:         l_vec -= 100;
  2831     049C  0860               	movf	_speed_inc,w	;volatile
  2832     049D  07E8               	addwf	_r_vec,f	;volatile
  2833     049E  0861               	movf	_speed_inc+1,w	;volatile
  2834     049F  3DE9               	addwfc	_r_vec+1,f	;volatile
  2835     04A0                     l2038:
  2836                           
  2837                           ;./Line Follower.h: 92:     }
  2838     04A0  1416               	bsf	22,0	;volatile
  2839                           
  2840                           ;./Line Follower.h: 93:     else
  2841     04A1  2CA3               	goto	l2040
  2842     04A2                     l304:	
  2843                           ;./Line Follower.h: 94:     {
  2844                           
  2845     04A2  1016               	bcf	22,0	;volatile
  2846     04A3                     l2040:
  2847                           
  2848                           ;./Line Follower.h: 96:         l_vec = 100 - l_vec;
  2849     04A3  086B               	movf	_l_vec+1,w	;volatile
  2850     04A4  3A80               	xorlw	128
  2851     04A5  00FC               	movwf	??_line_follower
  2852     04A6  3080               	movlw	128
  2853     04A7  027C               	subwf	??_line_follower,w
  2854     04A8  1D03               	skipz
  2855     04A9  2CAC               	goto	u1715
  2856     04AA  3064               	movlw	100
  2857     04AB  026A               	subwf	_l_vec,w	;volatile
  2858     04AC                     u1715:
  2859     04AC  1C03               	skipc
  2860     04AD  2CAF               	goto	u1711
  2861     04AE  2CB0               	goto	u1710
  2862     04AF                     u1711:
  2863     04AF  2CB8               	goto	l2044
  2864     04B0                     u1710:
  2865     04B0                     l2042:
  2866                           
  2867                           ;./Line Follower.h: 97:     };./Line Follower.h: 98: 
  2868     04B0  3001               	movlw	1
  2869     04B1  0020               	movlb	0	; select bank0
  2870     04B2  00D9               	movwf	_l_dir	;volatile
  2871                           
  2872                           ;./Line Follower.h: 99:     if(r_vec >= 100)
  2873     04B3  309C               	movlw	156
  2874     04B4  07EA               	addwf	_l_vec,f	;volatile
  2875     04B5  30FF               	movlw	255
  2876     04B6  3DEB               	addwfc	_l_vec+1,f	;volatile
  2877                           
  2878                           ;./Line Follower.h: 100:     {
  2879     04B7  2CC4               	goto	l307
  2880     04B8                     l2044:
  2881                           
  2882                           ;./Line Follower.h: 102: ;./Line Follower.h: 103:         r_vec -= 100;
  2883     04B8  3002               	movlw	2
  2884     04B9  0020               	movlb	0	; select bank0
  2885     04BA  00D9               	movwf	_l_dir	;volatile
  2886                           
  2887                           ;./Line Follower.h: 104:     }
  2888     04BB  3064               	movlw	100
  2889     04BC  00FC               	movwf	??_line_follower
  2890     04BD  086A               	movf	_l_vec,w	;volatile
  2891     04BE  027C               	subwf	??_line_follower,w
  2892     04BF  00EA               	movwf	_l_vec	;volatile
  2893     04C0  096B               	comf	_l_vec+1,w	;volatile
  2894     04C1  1803               	skipnc
  2895     04C2  0A89               	incf	9,f
  2896     04C3  00EB               	movwf	_l_vec+1	;volatile
  2897     04C4                     l307:	
  2898                           ;./Line Follower.h: 105:     else
  2899                           
  2900                           
  2901                           ;./Line Follower.h: 107:         r_dir = 2;
  2902     04C4  0869               	movf	_r_vec+1,w	;volatile
  2903     04C5  3A80               	xorlw	128
  2904     04C6  00FC               	movwf	??_line_follower
  2905     04C7  3080               	movlw	128
  2906     04C8  027C               	subwf	??_line_follower,w
  2907     04C9  1D03               	skipz
  2908     04CA  2CCD               	goto	u1725
  2909     04CB  3064               	movlw	100
  2910     04CC  0268               	subwf	_r_vec,w	;volatile
  2911     04CD                     u1725:
  2912     04CD  1C03               	skipc
  2913     04CE  2CD0               	goto	u1721
  2914     04CF  2CD1               	goto	u1720
  2915     04D0                     u1721:
  2916     04D0  2CD9               	goto	l2048
  2917     04D1                     u1720:
  2918     04D1                     l2046:
  2919                           
  2920                           ;./Line Follower.h: 108:         r_vec = 100 - r_vec;;./Line Follower.h: 109:     }
  2921     04D1  3001               	movlw	1
  2922     04D2  0020               	movlb	0	; select bank0
  2923     04D3  00D8               	movwf	_r_dir	;volatile
  2924                           
  2925                           ;./Line Follower.h: 111:     if(l_vec > 200){l_vec = 200;}
  2926     04D4  309C               	movlw	156
  2927     04D5  07E8               	addwf	_r_vec,f	;volatile
  2928     04D6  30FF               	movlw	255
  2929     04D7  3DE9               	addwfc	_r_vec+1,f	;volatile
  2930                           
  2931                           ;./Line Follower.h: 112:     if(r_vec > 200){r_vec = 200;}
  2932     04D8  2CE5               	goto	l309
  2933     04D9                     l2048:
  2934                           
  2935                           ;./Line Follower.h: 114:     motor(l_dir, abs(l_vec), r_dir, abs(r_vec));;./Line Followe
      +                          r.h: 115:     PIR1bits.ADIF = 0;
  2936     04D9  3002               	movlw	2
  2937     04DA  0020               	movlb	0	; select bank0
  2938     04DB  00D8               	movwf	_r_dir	;volatile
  2939                           
  2940                           ;./Line Follower.h: 116:     ADCON0bits.ADGO = 1;
  2941     04DC  3064               	movlw	100
  2942     04DD  00FC               	movwf	??_line_follower
  2943     04DE  0868               	movf	_r_vec,w	;volatile
  2944     04DF  027C               	subwf	??_line_follower,w
  2945     04E0  00E8               	movwf	_r_vec	;volatile
  2946     04E1  0969               	comf	_r_vec+1,w	;volatile
  2947     04E2  1803               	skipnc
  2948     04E3  0A89               	incf	9,f
  2949     04E4  00E9               	movwf	_r_vec+1	;volatile
  2950     04E5                     l309:	
  2951                           ;./Line Follower.h: 117: }
  2952                           
  2953     04E5  086B               	movf	_l_vec+1,w	;volatile
  2954     04E6  3A80               	xorlw	128
  2955     04E7  00FC               	movwf	??_line_follower
  2956     04E8  3080               	movlw	128
  2957     04E9  027C               	subwf	??_line_follower,w
  2958     04EA  1D03               	skipz
  2959     04EB  2CEE               	goto	u1735
  2960     04EC  30C9               	movlw	201
  2961     04ED  026A               	subwf	_l_vec,w	;volatile
  2962     04EE                     u1735:
  2963     04EE  1C03               	skipc
  2964     04EF  2CF1               	goto	u1731
  2965     04F0  2CF2               	goto	u1730
  2966     04F1                     u1731:
  2967     04F1  2CF7               	goto	l310
  2968     04F2                     u1730:
  2969     04F2                     l2050:
  2970     04F2  30C8               	movlw	200
  2971     04F3  0020               	movlb	0	; select bank0
  2972     04F4  00EA               	movwf	_l_vec	;volatile
  2973     04F5  3000               	movlw	0
  2974     04F6  00EB               	movwf	_l_vec+1	;volatile
  2975     04F7                     l310:
  2976     04F7  0020               	movlb	0	; select bank0
  2977     04F8  0869               	movf	_r_vec+1,w	;volatile
  2978     04F9  3A80               	xorlw	128
  2979     04FA  00FC               	movwf	??_line_follower
  2980     04FB  3080               	movlw	128
  2981     04FC  027C               	subwf	??_line_follower,w
  2982     04FD  1D03               	skipz
  2983     04FE  2D01               	goto	u1745
  2984     04FF  30C9               	movlw	201
  2985     0500  0268               	subwf	_r_vec,w	;volatile
  2986     0501                     u1745:
  2987     0501  1C03               	skipc
  2988     0502  2D04               	goto	u1741
  2989     0503  2D05               	goto	u1740
  2990     0504                     u1741:
  2991     0504  2D0A               	goto	l311
  2992     0505                     u1740:
  2993     0505                     l2052:
  2994     0505  30C8               	movlw	200
  2995     0506  0020               	movlb	0	; select bank0
  2996     0507  00E8               	movwf	_r_vec	;volatile
  2997     0508  3000               	movlw	0
  2998     0509  00E9               	movwf	_r_vec+1	;volatile
  2999     050A                     l311:
  3000     050A  3007               	movlw	7
  3001     050B  00FC               	movwf	??_line_follower
  3002     050C  307D               	movlw	125
  3003     050D                     u1967:
  3004     050D  0B89               	decfsz	9,f
  3005     050E  2D0D               	goto	u1967
  3006     050F  0BFC               	decfsz	??_line_follower,f
  3007     0510  2D0D               	goto	u1967
  3008     0511  0000               	nop
  3009     0512                     l2054:
  3010     0512  0020               	movlb	0	; select bank0
  3011     0513  086B               	movf	_l_vec+1,w	;volatile
  3012     0514  00F1               	movwf	abs@a+1
  3013     0515  086A               	movf	_l_vec,w	;volatile
  3014     0516  00F0               	movwf	abs@a
  3015     0517  3180  20C4  3184   	fcall	_abs
  3016     051A  0870               	movf	?_abs,w
  3017     051B  00F8               	movwf	motor@pwmA
  3018     051C  0020               	movlb	0	; select bank0
  3019     051D  0858               	movf	_r_dir,w	;volatile
  3020     051E  00F9               	movwf	motor@dirB
  3021     051F  0869               	movf	_r_vec+1,w	;volatile
  3022     0520  00F1               	movwf	abs@a+1
  3023     0521  0868               	movf	_r_vec,w	;volatile
  3024     0522  00F0               	movwf	abs@a
  3025     0523  3180  20C4  3184   	fcall	_abs
  3026     0526  0870               	movf	?_abs,w
  3027     0527  00FA               	movwf	motor@pwmB
  3028     0528  0020               	movlb	0	; select bank0
  3029     0529  0859               	movf	_l_dir,w	;volatile
  3030     052A  3182  2246  3184   	fcall	_motor
  3031     052D                     l2056:
  3032     052D  002E               	movlb	14	; select bank14
  3033     052E  100D               	bcf	13,0	;volatile
  3034     052F                     l2058:
  3035     052F  0021               	movlb	1	; select bank1
  3036     0530  1413               	bsf	19,0	;volatile
  3037     0531                     l312:
  3038     0531  0008               	return
  3039     0532                     __end_of_line_follower:
  3040                           
  3041                           	psect	text9
  3042     02B4                     __ptext9:	
  3043 ;; *************** function _drive *****************
  3044 ;; Defined at:
  3045 ;;		line 62 in file "./Driving.h"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;		None
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;  dir             2   34[BANK0 ] volatile int 
  3050 ;;  y               2   32[BANK0 ] volatile int 
  3051 ;;  x               2   30[BANK0 ] volatile int 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  1    wreg      void 
  3054 ;; Registers used:
  3055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3062 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3063 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3064 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3065 ;;Total ram usage:        8 bytes
  3066 ;; Hardware stack levels used: 1
  3067 ;; Hardware stack levels required when called: 4
  3068 ;; This function calls:
  3069 ;;		_Vdrive
  3070 ;;		___wmul
  3071 ;;		_user_data
  3072 ;; This function is called by:
  3073 ;;		_main
  3074 ;; This function uses a non-reentrant model
  3075 ;;
  3076                           
  3077     02B4                     _drive:	
  3078                           ;psect for function _drive
  3079                           
  3080     02B4                     l1982:	
  3081                           ;incstack = 0
  3082                           ; Regs used in _drive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3083                           
  3084                           
  3085                           ;./Driving.h: 64:     x = (joy_rx - 50)*2;;./Driving.h: 65:     y = dir * (joy_ly);;./Dr
      +                          iving.h: 67:     Vdrive(y, x);
  3086     02B4  3180  207F  3182   	fcall	_user_data
  3087     02B7                     l1984:
  3088     02B7  3000               	movlw	0
  3089     02B8  0020               	movlb	0	; select bank0
  3090     02B9  0253               	subwf	_joy_ry+1,w	;volatile
  3091     02BA  301A               	movlw	26
  3092     02BB  1903               	skipnz
  3093     02BC  0252               	subwf	_joy_ry,w	;volatile
  3094     02BD  1C03               	skipc
  3095     02BE  2AC0               	goto	u1641
  3096     02BF  2AC1               	goto	u1640
  3097     02C0                     u1641:
  3098     02C0  2AC6               	goto	l1988
  3099     02C1                     u1640:
  3100     02C1                     l1986:
  3101     02C1  3001               	movlw	1
  3102     02C2  00C2               	movwf	drive@dir	;volatile
  3103     02C3  3000               	movlw	0
  3104     02C4  00C3               	movwf	drive@dir+1	;volatile
  3105     02C5  2ACA               	goto	l1990
  3106     02C6                     l1988:
  3107     02C6  30FF               	movlw	255
  3108     02C7  00C2               	movwf	drive@dir	;volatile
  3109     02C8  30FF               	movlw	255
  3110     02C9  00C3               	movwf	drive@dir+1	;volatile
  3111     02CA                     l1990:
  3112     02CA  0855               	movf	_joy_rx+1,w	;volatile
  3113     02CB  00BD               	movwf	??_drive+1
  3114     02CC  0854               	movf	_joy_rx,w	;volatile
  3115     02CD  00BC               	movwf	??_drive
  3116     02CE  35BC               	lslf	??_drive,f
  3117     02CF  0DBD               	rlf	??_drive+1,f
  3118     02D0  083C               	movf	??_drive,w
  3119     02D1  3E9C               	addlw	156
  3120     02D2  00BE               	movwf	drive@x	;volatile
  3121     02D3  30FF               	movlw	255
  3122     02D4  3D3D               	addwfc	??_drive+1,w
  3123     02D5  00BF               	movwf	drive@x+1	;volatile
  3124     02D6                     l1992:
  3125     02D6  0843               	movf	drive@dir+1,w	;volatile
  3126     02D7  00A1               	movwf	___wmul@multiplier+1
  3127     02D8  0842               	movf	drive@dir,w	;volatile
  3128     02D9  00A0               	movwf	___wmul@multiplier
  3129     02DA  0851               	movf	_joy_ly+1,w	;volatile
  3130     02DB  00A3               	movwf	___wmul@multiplicand+1
  3131     02DC  0850               	movf	_joy_ly,w	;volatile
  3132     02DD  00A2               	movwf	___wmul@multiplicand
  3133     02DE  3181  2150  3182   	fcall	___wmul
  3134     02E1  0020               	movlb	0	; select bank0
  3135     02E2  0821               	movf	?___wmul+1,w
  3136     02E3  00C1               	movwf	drive@y+1	;volatile
  3137     02E4  0820               	movf	?___wmul,w
  3138     02E5  00C0               	movwf	drive@y	;volatile
  3139     02E6                     l1994:
  3140     02E6  0841               	movf	drive@y+1,w	;volatile
  3141     02E7  00AC               	movwf	Vdrive@y+1
  3142     02E8  0840               	movf	drive@y,w	;volatile
  3143     02E9  00AB               	movwf	Vdrive@y
  3144     02EA  083F               	movf	drive@x+1,w	;volatile
  3145     02EB  00AE               	movwf	Vdrive@x+1
  3146     02EC  083E               	movf	drive@x,w	;volatile
  3147     02ED  00AD               	movwf	Vdrive@x
  3148     02EE  3185  2532  3182   	fcall	_Vdrive
  3149     02F1                     l253:
  3150     02F1  0008               	return
  3151     02F2                     __end_of_drive:
  3152                           
  3153                           	psect	text10
  3154     007F                     __ptext10:	
  3155 ;; *************** function _user_data *****************
  3156 ;; Defined at:
  3157 ;;		line 207 in file "./Commands.h"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;		None
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;		None
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3175 ;;Total ram usage:        1 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; Hardware stack levels required when called: 3
  3178 ;; This function calls:
  3179 ;;		_user_data_receive
  3180 ;;		_user_data_send
  3181 ;; This function is called by:
  3182 ;;		_drive
  3183 ;;		_shield_code
  3184 ;;		_main
  3185 ;;		_claw
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189     007F                     _user_data:	
  3190                           ;psect for function _user_data
  3191                           
  3192     007F                     l1854:	
  3193                           ;incstack = 0
  3194                           ; Regs used in _user_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3195                           
  3196                           
  3197                           ;./Commands.h: 209:     user_data_send();
  3198     007F  3180  20DE  3180   	fcall	_user_data_send
  3199     0082                     l1858:	
  3200                           ;./Commands.h: 210:     while(!user_data_receive())
  3201                           
  3202                           
  3203                           ;./Commands.h: 210:     while(!user_data_receive())
  3204     0082  3186  265A  3180   	fcall	_user_data_receive
  3205     0085  3A00               	xorlw	0
  3206     0086  1903               	skipnz
  3207     0087  2889               	goto	u1441
  3208     0088  288A               	goto	u1440
  3209     0089                     u1441:
  3210     0089  287F               	goto	l1854
  3211     008A                     u1440:
  3212     008A                     l1860:
  3213                           
  3214                           ;./Commands.h: 214:     _delay((unsigned long)((100)*(400000/4000.0)));
  3215     008A  300D               	movlw	13
  3216     008B  00FB               	movwf	??_user_data
  3217     008C  30FC               	movlw	252
  3218     008D                     u1977:
  3219     008D  0B89               	decfsz	9,f
  3220     008E  288D               	goto	u1977
  3221     008F  0BFB               	decfsz	??_user_data,f
  3222     0090  288D               	goto	u1977
  3223     0091                     l148:
  3224     0091  0008               	return
  3225     0092                     __end_of_user_data:
  3226                           
  3227                           	psect	text11
  3228     00DE                     __ptext11:	
  3229 ;; *************** function _user_data_send *****************
  3230 ;; Defined at:
  3231 ;;		line 144 in file "./Commands.h"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  11729           6    0[BANK0 ] volatile unsigned char [
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3246 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3247 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3248 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3249 ;;Total ram usage:        7 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 2
  3252 ;; This function calls:
  3253 ;;		_UART_send
  3254 ;; This function is called by:
  3255 ;;		_user_data
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259     00DE                     _user_data_send:	
  3260                           ;psect for function _user_data_send
  3261                           
  3262     00DE                     l1690:	
  3263                           ;incstack = 0
  3264                           ; Regs used in _user_data_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3265                           
  3266     00DE                     l1692:	
  3267                           ;./Commands.h: 146:     while(!UART_send((volatile unsigned char []) {0xFE, 0x19, 0x01, 
      +                          0x05, 0x00, 0x00}, 6)){}
  3268                           
  3269     00DE  30DB               	movlw	low user_data_send@F11728
  3270     00DF  0086               	movwf	6
  3271     00E0  3000               	movlw	high user_data_send@F11728
  3272     00E1  0087               	movwf	7
  3273     00E2  3020               	movlw	low user_data_send@11729
  3274     00E3  0084               	movwf	4
  3275     00E4  3000               	movlw	high user_data_send@11729
  3276     00E5  0085               	movwf	5
  3277     00E6  3006               	movlw	6
  3278     00E7  00F8               	movwf	??_user_data_send
  3279     00E8                     u1140:
  3280     00E8  0016               	moviw fsr1++
  3281     00E9  001A               	movwi fsr0++
  3282     00EA  0BF8               	decfsz	??_user_data_send,f
  3283     00EB  28E8               	goto	u1140
  3284     00EC                     l1694:
  3285     00EC  3006               	movlw	6
  3286     00ED  00F2               	movwf	UART_send@size
  3287     00EE  3000               	movlw	0
  3288     00EF  00F3               	movwf	UART_send@size+1
  3289     00F0  3020               	movlw	(low (user_data_send@11729| 0))& (0+255)
  3290     00F1  3181  2197  3180   	fcall	_UART_send
  3291     00F4  3A00               	xorlw	0
  3292     00F5  1903               	skipnz
  3293     00F6  28F8               	goto	u1151
  3294     00F7  28F9               	goto	u1150
  3295     00F8                     u1151:
  3296     00F8  28DE               	goto	l1692
  3297     00F9                     u1150:
  3298     00F9                     l130:
  3299     00F9  0008               	return
  3300     00FA                     __end_of_user_data_send:
  3301                           
  3302                           	psect	text12
  3303     065A                     __ptext12:	
  3304 ;; *************** function _user_data_receive *****************
  3305 ;; Defined at:
  3306 ;;		line 149 in file "./Commands.h"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  r              26    0[BANK0 ] volatile unsigned char [
  3311 ;;  j               1   27[BANK0 ] volatile unsigned char 
  3312 ;;  s               1   26[BANK0 ] volatile unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      unsigned char 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3323 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3324 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3325 ;;      Totals:         3      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;Total ram usage:       31 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 1
  3329 ;; This function calls:
  3330 ;;		___lwdiv
  3331 ;;		_rx_wait
  3332 ;; This function is called by:
  3333 ;;		_user_data
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337     065A                     _user_data_receive:	
  3338                           ;psect for function _user_data_receive
  3339                           
  3340     065A                     l1696:	
  3341                           ;incstack = 0
  3342                           ; Regs used in _user_data_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3343                           
  3344                           
  3345                           ;./Commands.h: 151:     volatile char s=26, j, r[26];
  3346     065A  301A               	movlw	26
  3347     065B  0020               	movlb	0	; select bank0
  3348     065C  00BA               	movwf	user_data_receive@s	;volatile
  3349     065D                     l1698:
  3350                           
  3351                           ;./Commands.h: 153:     for (j=0; j < s; j++)
  3352     065D  01BB               	clrf	user_data_receive@j	;volatile
  3353     065E  2E77               	goto	l1710
  3354     065F                     l1700:
  3355                           
  3356                           ;./Commands.h: 154:     {;./Commands.h: 155:         if (rx_wait())
  3357     065F  3180  20AB  3186   	fcall	_rx_wait
  3358     0662  3A00               	xorlw	0
  3359     0663  1903               	skipnz
  3360     0664  2E66               	goto	u1161
  3361     0665  2E67               	goto	u1160
  3362     0666                     u1161:
  3363     0666  2E70               	goto	l1704
  3364     0667                     u1160:
  3365     0667                     l1702:
  3366                           
  3367                           ;./Commands.h: 156:         {;./Commands.h: 157:             r[j] = RCREG;
  3368     0667  0020               	movlb	0	; select bank0
  3369     0668  083B               	movf	user_data_receive@j,w
  3370     0669  3E20               	addlw	(low (user_data_receive@r| 0))& (0+255)
  3371     066A  0086               	movwf	6
  3372     066B  0187               	clrf	7
  3373     066C  0022               	movlb	2	; select bank2
  3374     066D  0819               	movf	25,w	;volatile
  3375     066E  0081               	movwf	1
  3376                           
  3377                           ;./Commands.h: 158:         }
  3378     066F  2E72               	goto	l1708
  3379     0670                     l1704:
  3380                           
  3381                           ;./Commands.h: 160:         {;./Commands.h: 161:             return 0;
  3382     0670  3000               	movlw	0
  3383     0671  2FCC               	goto	l137
  3384     0672                     l1708:
  3385                           
  3386                           ;./Commands.h: 163:     }
  3387     0672  3001               	movlw	1
  3388     0673  00F8               	movwf	??_user_data_receive
  3389     0674  0878               	movf	??_user_data_receive,w
  3390     0675  0020               	movlb	0	; select bank0
  3391     0676  07BB               	addwf	user_data_receive@j,f	;volatile
  3392     0677                     l1710:
  3393     0677  083A               	movf	user_data_receive@s,w	;volatile
  3394     0678  023B               	subwf	user_data_receive@j,w	;volatile
  3395     0679  1C03               	skipc
  3396     067A  2E7C               	goto	u1171
  3397     067B  2E7D               	goto	u1170
  3398     067C                     u1171:
  3399     067C  2E5F               	goto	l1700
  3400     067D                     u1170:
  3401     067D                     l1712:
  3402                           
  3403                           ;./Commands.h: 165:     joy_rx = r[6];
  3404     067D  0826               	movf	user_data_receive@r+6,w	;volatile
  3405     067E  00F8               	movwf	??_user_data_receive
  3406     067F  01F9               	clrf	??_user_data_receive+1
  3407     0680  0878               	movf	??_user_data_receive,w
  3408     0681  00D4               	movwf	_joy_rx	;volatile
  3409     0682  0879               	movf	??_user_data_receive+1,w
  3410     0683  00D5               	movwf	_joy_rx+1	;volatile
  3411                           
  3412                           ;./Commands.h: 166:     joy_rx += r[7] << 8;
  3413     0684  0827               	movf	user_data_receive@r+7,w	;volatile
  3414     0685  00F8               	movwf	??_user_data_receive
  3415     0686  01F9               	clrf	??_user_data_receive+1
  3416     0687  0878               	movf	??_user_data_receive,w
  3417     0688  00F9               	movwf	??_user_data_receive+1
  3418     0689  01F8               	clrf	??_user_data_receive
  3419     068A  0878               	movf	??_user_data_receive,w
  3420     068B  07D4               	addwf	_joy_rx,f	;volatile
  3421     068C  0879               	movf	??_user_data_receive+1,w
  3422     068D  3DD5               	addwfc	_joy_rx+1,f	;volatile
  3423                           
  3424                           ;./Commands.h: 167:     joy_rx -= 1000;
  3425     068E  30E8               	movlw	232
  3426     068F  02D4               	subwf	_joy_rx,f	;volatile
  3427     0690  3003               	movlw	3
  3428     0691  3BD5               	subwfb	_joy_rx+1,f	;volatile
  3429     0692                     l1714:
  3430                           
  3431                           ;./Commands.h: 168:     joy_rx /= 10;
  3432     0692  300A               	movlw	10
  3433     0693  00F0               	movwf	___lwdiv@divisor
  3434     0694  3000               	movlw	0
  3435     0695  00F1               	movwf	___lwdiv@divisor+1
  3436     0696  0855               	movf	_joy_rx+1,w	;volatile
  3437     0697  00F3               	movwf	___lwdiv@dividend+1
  3438     0698  0854               	movf	_joy_rx,w	;volatile
  3439     0699  00F2               	movwf	___lwdiv@dividend
  3440     069A  3182  2278  3186   	fcall	___lwdiv
  3441     069D  0871               	movf	?___lwdiv+1,w
  3442     069E  0020               	movlb	0	; select bank0
  3443     069F  00D5               	movwf	_joy_rx+1	;volatile
  3444     06A0  0870               	movf	?___lwdiv,w
  3445     06A1  00D4               	movwf	_joy_rx	;volatile
  3446     06A2                     l1716:
  3447                           
  3448                           ;./Commands.h: 170:     joy_ry = r[8];
  3449     06A2  0828               	movf	user_data_receive@r+8,w	;volatile
  3450     06A3  00F8               	movwf	??_user_data_receive
  3451     06A4  01F9               	clrf	??_user_data_receive+1
  3452     06A5  0878               	movf	??_user_data_receive,w
  3453     06A6  00D2               	movwf	_joy_ry	;volatile
  3454     06A7  0879               	movf	??_user_data_receive+1,w
  3455     06A8  00D3               	movwf	_joy_ry+1	;volatile
  3456     06A9                     l1718:
  3457                           
  3458                           ;./Commands.h: 171:     joy_ry += r[9] << 8;
  3459     06A9  0829               	movf	user_data_receive@r+9,w	;volatile
  3460     06AA  00F8               	movwf	??_user_data_receive
  3461     06AB  01F9               	clrf	??_user_data_receive+1
  3462     06AC  0878               	movf	??_user_data_receive,w
  3463     06AD  00F9               	movwf	??_user_data_receive+1
  3464     06AE  01F8               	clrf	??_user_data_receive
  3465     06AF  0878               	movf	??_user_data_receive,w
  3466     06B0  07D2               	addwf	_joy_ry,f	;volatile
  3467     06B1  0879               	movf	??_user_data_receive+1,w
  3468     06B2  3DD3               	addwfc	_joy_ry+1,f	;volatile
  3469     06B3                     l1720:
  3470                           
  3471                           ;./Commands.h: 172:     joy_ry -= 1000;
  3472     06B3  30E8               	movlw	232
  3473     06B4  02D2               	subwf	_joy_ry,f	;volatile
  3474     06B5  3003               	movlw	3
  3475     06B6  3BD3               	subwfb	_joy_ry+1,f	;volatile
  3476                           
  3477                           ;./Commands.h: 173:     joy_ry /= 10;
  3478     06B7  300A               	movlw	10
  3479     06B8  00F0               	movwf	___lwdiv@divisor
  3480     06B9  3000               	movlw	0
  3481     06BA  00F1               	movwf	___lwdiv@divisor+1
  3482     06BB  0853               	movf	_joy_ry+1,w	;volatile
  3483     06BC  00F3               	movwf	___lwdiv@dividend+1
  3484     06BD  0852               	movf	_joy_ry,w	;volatile
  3485     06BE  00F2               	movwf	___lwdiv@dividend
  3486     06BF  3182  2278  3186   	fcall	___lwdiv
  3487     06C2  0871               	movf	?___lwdiv+1,w
  3488     06C3  0020               	movlb	0	; select bank0
  3489     06C4  00D3               	movwf	_joy_ry+1	;volatile
  3490     06C5  0870               	movf	?___lwdiv,w
  3491     06C6  00D2               	movwf	_joy_ry	;volatile
  3492     06C7                     l1722:
  3493                           
  3494                           ;./Commands.h: 175:     joy_ly = r[10];
  3495     06C7  082A               	movf	user_data_receive@r+10,w	;volatile
  3496     06C8  00F8               	movwf	??_user_data_receive
  3497     06C9  01F9               	clrf	??_user_data_receive+1
  3498     06CA  0878               	movf	??_user_data_receive,w
  3499     06CB  00D0               	movwf	_joy_ly	;volatile
  3500     06CC  0879               	movf	??_user_data_receive+1,w
  3501     06CD  00D1               	movwf	_joy_ly+1	;volatile
  3502     06CE                     l1724:
  3503                           
  3504                           ;./Commands.h: 176:     joy_ly += r[11] << 8;
  3505     06CE  082B               	movf	user_data_receive@r+11,w	;volatile
  3506     06CF  00F8               	movwf	??_user_data_receive
  3507     06D0  01F9               	clrf	??_user_data_receive+1
  3508     06D1  0878               	movf	??_user_data_receive,w
  3509     06D2  00F9               	movwf	??_user_data_receive+1
  3510     06D3  01F8               	clrf	??_user_data_receive
  3511     06D4  0878               	movf	??_user_data_receive,w
  3512     06D5  07D0               	addwf	_joy_ly,f	;volatile
  3513     06D6  0879               	movf	??_user_data_receive+1,w
  3514     06D7  3DD1               	addwfc	_joy_ly+1,f	;volatile
  3515     06D8                     l1726:
  3516                           
  3517                           ;./Commands.h: 177:     joy_ly -= 1000;
  3518     06D8  30E8               	movlw	232
  3519     06D9  02D0               	subwf	_joy_ly,f	;volatile
  3520     06DA  3003               	movlw	3
  3521     06DB  3BD1               	subwfb	_joy_ly+1,f	;volatile
  3522     06DC                     l1728:
  3523                           
  3524                           ;./Commands.h: 178:     joy_ly /= 10;
  3525     06DC  300A               	movlw	10
  3526     06DD  00F0               	movwf	___lwdiv@divisor
  3527     06DE  3000               	movlw	0
  3528     06DF  00F1               	movwf	___lwdiv@divisor+1
  3529     06E0  0851               	movf	_joy_ly+1,w	;volatile
  3530     06E1  00F3               	movwf	___lwdiv@dividend+1
  3531     06E2  0850               	movf	_joy_ly,w	;volatile
  3532     06E3  00F2               	movwf	___lwdiv@dividend
  3533     06E4  3182  2278  3186   	fcall	___lwdiv
  3534     06E7  0871               	movf	?___lwdiv+1,w
  3535     06E8  0020               	movlb	0	; select bank0
  3536     06E9  00D1               	movwf	_joy_ly+1	;volatile
  3537     06EA  0870               	movf	?___lwdiv,w
  3538     06EB  00D0               	movwf	_joy_ly	;volatile
  3539                           
  3540                           ;./Commands.h: 180:     joy_lx = r[12];
  3541     06EC  082C               	movf	user_data_receive@r+12,w	;volatile
  3542     06ED  00F8               	movwf	??_user_data_receive
  3543     06EE  01F9               	clrf	??_user_data_receive+1
  3544     06EF  0878               	movf	??_user_data_receive,w
  3545     06F0  00CE               	movwf	_joy_lx	;volatile
  3546     06F1  0879               	movf	??_user_data_receive+1,w
  3547     06F2  00CF               	movwf	_joy_lx+1	;volatile
  3548                           
  3549                           ;./Commands.h: 181:     joy_lx += r[13] << 8;
  3550     06F3  082D               	movf	user_data_receive@r+13,w	;volatile
  3551     06F4  00F8               	movwf	??_user_data_receive
  3552     06F5  01F9               	clrf	??_user_data_receive+1
  3553     06F6  0878               	movf	??_user_data_receive,w
  3554     06F7  00F9               	movwf	??_user_data_receive+1
  3555     06F8  01F8               	clrf	??_user_data_receive
  3556     06F9  0878               	movf	??_user_data_receive,w
  3557     06FA  07CE               	addwf	_joy_lx,f	;volatile
  3558     06FB  0879               	movf	??_user_data_receive+1,w
  3559     06FC  3DCF               	addwfc	_joy_lx+1,f	;volatile
  3560                           
  3561                           ;./Commands.h: 182:     joy_lx -= 1000;
  3562     06FD  30E8               	movlw	232
  3563     06FE  02CE               	subwf	_joy_lx,f	;volatile
  3564     06FF  3003               	movlw	3
  3565     0700  3BCF               	subwfb	_joy_lx+1,f	;volatile
  3566     0701                     l1730:
  3567                           
  3568                           ;./Commands.h: 183:     joy_lx /= 10;
  3569     0701  300A               	movlw	10
  3570     0702  00F0               	movwf	___lwdiv@divisor
  3571     0703  3000               	movlw	0
  3572     0704  00F1               	movwf	___lwdiv@divisor+1
  3573     0705  084F               	movf	_joy_lx+1,w	;volatile
  3574     0706  00F3               	movwf	___lwdiv@dividend+1
  3575     0707  084E               	movf	_joy_lx,w	;volatile
  3576     0708  00F2               	movwf	___lwdiv@dividend
  3577     0709  3182  2278  3186   	fcall	___lwdiv
  3578     070C  0871               	movf	?___lwdiv+1,w
  3579     070D  0020               	movlb	0	; select bank0
  3580     070E  00CF               	movwf	_joy_lx+1	;volatile
  3581     070F  0870               	movf	?___lwdiv,w
  3582     0710  00CE               	movwf	_joy_lx	;volatile
  3583     0711                     l1732:
  3584                           
  3585                           ;./Commands.h: 185:     swA = r[14];
  3586     0711  082E               	movf	user_data_receive@r+14,w	;volatile
  3587     0712  00F8               	movwf	??_user_data_receive
  3588     0713  01F9               	clrf	??_user_data_receive+1
  3589     0714  0878               	movf	??_user_data_receive,w
  3590     0715  00CC               	movwf	_swA	;volatile
  3591     0716  0879               	movf	??_user_data_receive+1,w
  3592     0717  00CD               	movwf	_swA+1	;volatile
  3593     0718                     l1734:
  3594                           
  3595                           ;./Commands.h: 186:     swA += r[15] << 8;
  3596     0718  082F               	movf	user_data_receive@r+15,w	;volatile
  3597     0719  00F8               	movwf	??_user_data_receive
  3598     071A  01F9               	clrf	??_user_data_receive+1
  3599     071B  0878               	movf	??_user_data_receive,w
  3600     071C  00F9               	movwf	??_user_data_receive+1
  3601     071D  01F8               	clrf	??_user_data_receive
  3602     071E  0878               	movf	??_user_data_receive,w
  3603     071F  07CC               	addwf	_swA,f	;volatile
  3604     0720  0879               	movf	??_user_data_receive+1,w
  3605     0721  3DCD               	addwfc	_swA+1,f	;volatile
  3606     0722                     l1736:
  3607                           
  3608                           ;./Commands.h: 187:     swA = swA > 1500;
  3609     0722  3005               	movlw	5
  3610     0723  024D               	subwf	_swA+1,w	;volatile
  3611     0724  30DD               	movlw	221
  3612     0725  1903               	skipnz
  3613     0726  024C               	subwf	_swA,w	;volatile
  3614     0727  1803               	skipnc
  3615     0728  2F2A               	goto	u1181
  3616     0729  2F2C               	goto	u1180
  3617     072A                     u1181:
  3618     072A  3001               	movlw	1
  3619     072B  2F2D               	goto	u1190
  3620     072C                     u1180:
  3621     072C  3000               	movlw	0
  3622     072D                     u1190:
  3623     072D  00F8               	movwf	??_user_data_receive
  3624     072E  01F9               	clrf	??_user_data_receive+1
  3625     072F  0878               	movf	??_user_data_receive,w
  3626     0730  00CC               	movwf	_swA	;volatile
  3627     0731  0879               	movf	??_user_data_receive+1,w
  3628     0732  00CD               	movwf	_swA+1	;volatile
  3629     0733                     l1738:
  3630                           
  3631                           ;./Commands.h: 188:     swB = r[16];
  3632     0733  0830               	movf	user_data_receive@r+16,w	;volatile
  3633     0734  00F8               	movwf	??_user_data_receive
  3634     0735  01F9               	clrf	??_user_data_receive+1
  3635     0736  0878               	movf	??_user_data_receive,w
  3636     0737  00CA               	movwf	_swB	;volatile
  3637     0738  0879               	movf	??_user_data_receive+1,w
  3638     0739  00CB               	movwf	_swB+1	;volatile
  3639     073A                     l1740:
  3640                           
  3641                           ;./Commands.h: 189:     swB += r[17] << 8;
  3642     073A  0831               	movf	user_data_receive@r+17,w	;volatile
  3643     073B  00F8               	movwf	??_user_data_receive
  3644     073C  01F9               	clrf	??_user_data_receive+1
  3645     073D  0878               	movf	??_user_data_receive,w
  3646     073E  00F9               	movwf	??_user_data_receive+1
  3647     073F  01F8               	clrf	??_user_data_receive
  3648     0740  0878               	movf	??_user_data_receive,w
  3649     0741  07CA               	addwf	_swB,f	;volatile
  3650     0742  0879               	movf	??_user_data_receive+1,w
  3651     0743  3DCB               	addwfc	_swB+1,f	;volatile
  3652     0744                     l1742:
  3653                           
  3654                           ;./Commands.h: 190:     swB = swB > 1500;
  3655     0744  3005               	movlw	5
  3656     0745  024B               	subwf	_swB+1,w	;volatile
  3657     0746  30DD               	movlw	221
  3658     0747  1903               	skipnz
  3659     0748  024A               	subwf	_swB,w	;volatile
  3660     0749  1803               	skipnc
  3661     074A  2F4C               	goto	u1201
  3662     074B  2F4E               	goto	u1200
  3663     074C                     u1201:
  3664     074C  3001               	movlw	1
  3665     074D  2F4F               	goto	u1210
  3666     074E                     u1200:
  3667     074E  3000               	movlw	0
  3668     074F                     u1210:
  3669     074F  00F8               	movwf	??_user_data_receive
  3670     0750  01F9               	clrf	??_user_data_receive+1
  3671     0751  0878               	movf	??_user_data_receive,w
  3672     0752  00CA               	movwf	_swB	;volatile
  3673     0753  0879               	movf	??_user_data_receive+1,w
  3674     0754  00CB               	movwf	_swB+1	;volatile
  3675     0755                     l1744:
  3676                           
  3677                           ;./Commands.h: 191:     swC = r[18];
  3678     0755  0832               	movf	user_data_receive@r+18,w	;volatile
  3679     0756  00F8               	movwf	??_user_data_receive
  3680     0757  01F9               	clrf	??_user_data_receive+1
  3681     0758  0878               	movf	??_user_data_receive,w
  3682     0759  00C8               	movwf	_swC	;volatile
  3683     075A  0879               	movf	??_user_data_receive+1,w
  3684     075B  00C9               	movwf	_swC+1	;volatile
  3685     075C                     l1746:
  3686                           
  3687                           ;./Commands.h: 192:     swC += r[19] << 8;
  3688     075C  0833               	movf	user_data_receive@r+19,w	;volatile
  3689     075D  00F8               	movwf	??_user_data_receive
  3690     075E  01F9               	clrf	??_user_data_receive+1
  3691     075F  0878               	movf	??_user_data_receive,w
  3692     0760  00F9               	movwf	??_user_data_receive+1
  3693     0761  01F8               	clrf	??_user_data_receive
  3694     0762  0878               	movf	??_user_data_receive,w
  3695     0763  07C8               	addwf	_swC,f	;volatile
  3696     0764  0879               	movf	??_user_data_receive+1,w
  3697     0765  3DC9               	addwfc	_swC+1,f	;volatile
  3698     0766                     l1748:
  3699                           
  3700                           ;./Commands.h: 193:     if(swC == 1000){swC = 0;}
  3701     0766  30E8               	movlw	232
  3702     0767  0648               	xorwf	_swC,w	;volatile
  3703     0768  3003               	movlw	3
  3704     0769  1903               	skipnz
  3705     076A  0649               	xorwf	_swC+1,w	;volatile
  3706     076B  1D03               	btfss	3,2
  3707     076C  2F6E               	goto	u1221
  3708     076D  2F6F               	goto	u1220
  3709     076E                     u1221:
  3710     076E  2F72               	goto	l1752
  3711     076F                     u1220:
  3712     076F                     l1750:
  3713     076F  01C8               	clrf	_swC	;volatile
  3714     0770  01C9               	clrf	_swC+1	;volatile
  3715     0771  2F84               	goto	l140
  3716     0772                     l1752:
  3717     0772  30DC               	movlw	220
  3718     0773  0648               	xorwf	_swC,w	;volatile
  3719     0774  3005               	movlw	5
  3720     0775  1903               	skipnz
  3721     0776  0649               	xorwf	_swC+1,w	;volatile
  3722     0777  1D03               	btfss	3,2
  3723     0778  2F7A               	goto	u1231
  3724     0779  2F7B               	goto	u1230
  3725     077A                     u1231:
  3726     077A  2F80               	goto	l1756
  3727     077B                     u1230:
  3728     077B                     l1754:
  3729     077B  3001               	movlw	1
  3730     077C  00C8               	movwf	_swC	;volatile
  3731     077D  3000               	movlw	0
  3732     077E  00C9               	movwf	_swC+1	;volatile
  3733     077F  2F84               	goto	l140
  3734     0780                     l1756:
  3735     0780  3002               	movlw	2
  3736     0781  00C8               	movwf	_swC	;volatile
  3737     0782  3000               	movlw	0
  3738     0783  00C9               	movwf	_swC+1	;volatile
  3739     0784                     l140:
  3740                           
  3741                           ;./Commands.h: 196:     swD = r[20];
  3742     0784  0834               	movf	user_data_receive@r+20,w	;volatile
  3743     0785  00F8               	movwf	??_user_data_receive
  3744     0786  01F9               	clrf	??_user_data_receive+1
  3745     0787  0878               	movf	??_user_data_receive,w
  3746     0788  00C6               	movwf	_swD	;volatile
  3747     0789  0879               	movf	??_user_data_receive+1,w
  3748     078A  00C7               	movwf	_swD+1	;volatile
  3749                           
  3750                           ;./Commands.h: 197:     swD += r[21] << 8;
  3751     078B  0835               	movf	user_data_receive@r+21,w	;volatile
  3752     078C  00F8               	movwf	??_user_data_receive
  3753     078D  01F9               	clrf	??_user_data_receive+1
  3754     078E  0878               	movf	??_user_data_receive,w
  3755     078F  00F9               	movwf	??_user_data_receive+1
  3756     0790  01F8               	clrf	??_user_data_receive
  3757     0791  0878               	movf	??_user_data_receive,w
  3758     0792  07C6               	addwf	_swD,f	;volatile
  3759     0793  0879               	movf	??_user_data_receive+1,w
  3760     0794  3DC7               	addwfc	_swD+1,f	;volatile
  3761                           
  3762                           ;./Commands.h: 198:     swD = swD > 1500;
  3763     0795  3005               	movlw	5
  3764     0796  0247               	subwf	_swD+1,w	;volatile
  3765     0797  30DD               	movlw	221
  3766     0798  1903               	skipnz
  3767     0799  0246               	subwf	_swD,w	;volatile
  3768     079A  1803               	skipnc
  3769     079B  2F9D               	goto	u1241
  3770     079C  2F9F               	goto	u1240
  3771     079D                     u1241:
  3772     079D  3001               	movlw	1
  3773     079E  2FA0               	goto	u1250
  3774     079F                     u1240:
  3775     079F  3000               	movlw	0
  3776     07A0                     u1250:
  3777     07A0  00F8               	movwf	??_user_data_receive
  3778     07A1  01F9               	clrf	??_user_data_receive+1
  3779     07A2  0878               	movf	??_user_data_receive,w
  3780     07A3  00C6               	movwf	_swD	;volatile
  3781     07A4  0879               	movf	??_user_data_receive+1,w
  3782     07A5  00C7               	movwf	_swD+1	;volatile
  3783                           
  3784                           ;./Commands.h: 200:     potA = r[22];
  3785     07A6  0836               	movf	user_data_receive@r+22,w	;volatile
  3786     07A7  00F8               	movwf	??_user_data_receive
  3787     07A8  01F9               	clrf	??_user_data_receive+1
  3788     07A9  0878               	movf	??_user_data_receive,w
  3789     07AA  00C4               	movwf	_potA	;volatile
  3790     07AB  0879               	movf	??_user_data_receive+1,w
  3791     07AC  00C5               	movwf	_potA+1	;volatile
  3792                           
  3793                           ;./Commands.h: 201:     potA += r[23] << 8;
  3794     07AD  0837               	movf	user_data_receive@r+23,w	;volatile
  3795     07AE  00F8               	movwf	??_user_data_receive
  3796     07AF  01F9               	clrf	??_user_data_receive+1
  3797     07B0  0878               	movf	??_user_data_receive,w
  3798     07B1  00F9               	movwf	??_user_data_receive+1
  3799     07B2  01F8               	clrf	??_user_data_receive
  3800     07B3  0878               	movf	??_user_data_receive,w
  3801     07B4  07C4               	addwf	_potA,f	;volatile
  3802     07B5  0879               	movf	??_user_data_receive+1,w
  3803     07B6  3DC5               	addwfc	_potA+1,f	;volatile
  3804                           
  3805                           ;./Commands.h: 202:     potB = r[24];
  3806     07B7  0838               	movf	user_data_receive@r+24,w	;volatile
  3807     07B8  00F8               	movwf	??_user_data_receive
  3808     07B9  01F9               	clrf	??_user_data_receive+1
  3809     07BA  0878               	movf	??_user_data_receive,w
  3810     07BB  0021               	movlb	1	; select bank1
  3811     07BC  00C7               	movwf	_potB^(0+128)	;volatile
  3812     07BD  0879               	movf	??_user_data_receive+1,w
  3813     07BE  00C8               	movwf	(_potB+1)^(0+128)	;volatile
  3814                           
  3815                           ;./Commands.h: 203:     potB += r[25] << 8;
  3816     07BF  0020               	movlb	0	; select bank0
  3817     07C0  0839               	movf	user_data_receive@r+25,w	;volatile
  3818     07C1  00F8               	movwf	??_user_data_receive
  3819     07C2  01F9               	clrf	??_user_data_receive+1
  3820     07C3  0878               	movf	??_user_data_receive,w
  3821     07C4  00F9               	movwf	??_user_data_receive+1
  3822     07C5  01F8               	clrf	??_user_data_receive
  3823     07C6  0878               	movf	??_user_data_receive,w
  3824     07C7  0021               	movlb	1	; select bank1
  3825     07C8  07C7               	addwf	_potB^(0+128),f	;volatile
  3826     07C9  0879               	movf	??_user_data_receive+1,w
  3827     07CA  3DC8               	addwfc	(_potB+1)^(0+128),f	;volatile
  3828                           
  3829                           ;./Commands.h: 204:     return 1;
  3830     07CB  3001               	movlw	1
  3831     07CC                     l137:
  3832     07CC  0008               	return
  3833     07CD                     __end_of_user_data_receive:
  3834                           
  3835                           	psect	text13
  3836     00AB                     __ptext13:	
  3837 ;; *************** function _rx_wait *****************
  3838 ;; Defined at:
  3839 ;;		line 49 in file "./Commands.h"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;		None
  3842 ;; Auto vars:     Size  Location     Type
  3843 ;;  count           2    0[COMMON] volatile unsigned int 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      unsigned char 
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3854 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3856 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3857 ;;Total ram usage:        2 bytes
  3858 ;; Hardware stack levels used: 1
  3859 ;; This function calls:
  3860 ;;		Nothing
  3861 ;; This function is called by:
  3862 ;;		_PCLS_info_receive
  3863 ;;		_user_data_receive
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867     00AB                     _rx_wait:	
  3868                           ;psect for function _rx_wait
  3869                           
  3870     00AB                     l1602:	
  3871                           ;incstack = 0
  3872                           ; Regs used in _rx_wait: [wreg+status,2+status,0]
  3873                           
  3874                           
  3875                           ;./Commands.h: 51: void UART_init();./Commands.h: 52: {
  3876     00AB  30E8               	movlw	232
  3877     00AC  00F0               	movwf	rx_wait@count	;volatile
  3878     00AD  3003               	movlw	3
  3879     00AE  00F1               	movwf	rx_wait@count+1	;volatile
  3880     00AF                     l1604:
  3881     00AF  0870               	movf	rx_wait@count,w	;volatile
  3882     00B0  0471               	iorwf	rx_wait@count+1,w	;volatile
  3883     00B1  1D03               	btfss	3,2
  3884     00B2  28B4               	goto	u991
  3885     00B3  28B5               	goto	u990
  3886     00B4                     u991:
  3887     00B4  28B6               	goto	l87
  3888     00B5                     u990:
  3889     00B5  28C2               	goto	l1616
  3890     00B6                     l87:
  3891                           
  3892                           ;./Commands.h: 53:     ANSELCbits.ANSC6 = 0;;./Commands.h: 54:     ANSELCbits.ANSC7 = 0;
  3893     00B6  002E               	movlb	14	; select bank14
  3894     00B7  1E8F               	btfss	15,5	;volatile
  3895     00B8  28BA               	goto	u1001
  3896     00B9  28BB               	goto	u1000
  3897     00BA                     u1001:
  3898     00BA  28BD               	goto	l1612
  3899     00BB                     u1000:
  3900     00BB                     l1608:
  3901     00BB  3001               	movlw	1
  3902     00BC  28C3               	goto	l90
  3903     00BD                     l1612:
  3904     00BD  3001               	movlw	1
  3905     00BE  02F0               	subwf	rx_wait@count,f	;volatile
  3906     00BF  3000               	movlw	0
  3907     00C0  3BF1               	subwfb	rx_wait@count+1,f	;volatile
  3908     00C1  28AF               	goto	l1604
  3909     00C2                     l1616:
  3910     00C2  3000               	movlw	0
  3911     00C3                     l90:
  3912     00C3  0008               	return
  3913     00C4                     __end_of_rx_wait:
  3914                           
  3915                           	psect	text14
  3916     0278                     __ptext14:	
  3917 ;; *************** function ___lwdiv *****************
  3918 ;; Defined at:
  3919 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  divisor         2    0[COMMON] unsigned int 
  3922 ;;  dividend        2    2[COMMON] unsigned int 
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  quotient        2    5[COMMON] unsigned int 
  3925 ;;  counter         1    7[COMMON] unsigned char 
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  2    0[COMMON] unsigned int 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3936 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3938 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3939 ;;Total ram usage:        8 bytes
  3940 ;; Hardware stack levels used: 1
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_user_data_receive
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948     0278                     ___lwdiv:	
  3949                           ;psect for function ___lwdiv
  3950                           
  3951     0278                     l1638:	
  3952                           ;incstack = 0
  3953                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3954                           
  3955     0278  01F5               	clrf	___lwdiv@quotient
  3956     0279  01F6               	clrf	___lwdiv@quotient+1
  3957     027A                     l1640:
  3958     027A  0870               	movf	___lwdiv@divisor,w
  3959     027B  0471               	iorwf	___lwdiv@divisor+1,w
  3960     027C  1903               	btfsc	3,2
  3961     027D  2A7F               	goto	u1031
  3962     027E  2A80               	goto	u1030
  3963     027F                     u1031:
  3964     027F  2AAF               	goto	l1660
  3965     0280                     u1030:
  3966     0280                     l1642:
  3967     0280  01F7               	clrf	___lwdiv@counter
  3968     0281  0AF7               	incf	___lwdiv@counter,f
  3969     0282  2A8C               	goto	l1648
  3970     0283                     l1644:
  3971     0283  3001               	movlw	1
  3972     0284                     u1045:
  3973     0284  35F0               	lslf	___lwdiv@divisor,f
  3974     0285  0DF1               	rlf	___lwdiv@divisor+1,f
  3975     0286  0B89               	decfsz	9,f
  3976     0287  2A84               	goto	u1045
  3977     0288                     l1646:
  3978     0288  3001               	movlw	1
  3979     0289  00F4               	movwf	??___lwdiv
  3980     028A  0874               	movf	??___lwdiv,w
  3981     028B  07F7               	addwf	___lwdiv@counter,f
  3982     028C                     l1648:
  3983     028C  1FF1               	btfss	___lwdiv@divisor+1,7
  3984     028D  2A8F               	goto	u1051
  3985     028E  2A90               	goto	u1050
  3986     028F                     u1051:
  3987     028F  2A83               	goto	l1644
  3988     0290                     u1050:
  3989     0290                     l1650:
  3990     0290  3001               	movlw	1
  3991     0291                     u1065:
  3992     0291  35F5               	lslf	___lwdiv@quotient,f
  3993     0292  0DF6               	rlf	___lwdiv@quotient+1,f
  3994     0293  0B89               	decfsz	9,f
  3995     0294  2A91               	goto	u1065
  3996     0295  0871               	movf	___lwdiv@divisor+1,w
  3997     0296  0273               	subwf	___lwdiv@dividend+1,w
  3998     0297  1D03               	skipz
  3999     0298  2A9B               	goto	u1075
  4000     0299  0870               	movf	___lwdiv@divisor,w
  4001     029A  0272               	subwf	___lwdiv@dividend,w
  4002     029B                     u1075:
  4003     029B  1C03               	skipc
  4004     029C  2A9E               	goto	u1071
  4005     029D  2A9F               	goto	u1070
  4006     029E                     u1071:
  4007     029E  2AA4               	goto	l1656
  4008     029F                     u1070:
  4009     029F                     l1652:
  4010     029F  0870               	movf	___lwdiv@divisor,w
  4011     02A0  02F2               	subwf	___lwdiv@dividend,f
  4012     02A1  0871               	movf	___lwdiv@divisor+1,w
  4013     02A2  3BF3               	subwfb	___lwdiv@dividend+1,f
  4014     02A3                     l1654:
  4015     02A3  1475               	bsf	___lwdiv@quotient,0
  4016     02A4                     l1656:
  4017     02A4  3001               	movlw	1
  4018     02A5                     u1085:
  4019     02A5  36F1               	lsrf	___lwdiv@divisor+1,f
  4020     02A6  0CF0               	rrf	___lwdiv@divisor,f
  4021     02A7  0B89               	decfsz	9,f
  4022     02A8  2AA5               	goto	u1085
  4023     02A9                     l1658:
  4024     02A9  3001               	movlw	1
  4025     02AA  02F7               	subwf	___lwdiv@counter,f
  4026     02AB  1D03               	btfss	3,2
  4027     02AC  2AAE               	goto	u1091
  4028     02AD  2AAF               	goto	u1090
  4029     02AE                     u1091:
  4030     02AE  2A90               	goto	l1650
  4031     02AF                     u1090:
  4032     02AF                     l1660:
  4033     02AF  0876               	movf	___lwdiv@quotient+1,w
  4034     02B0  00F1               	movwf	?___lwdiv+1
  4035     02B1  0875               	movf	___lwdiv@quotient,w
  4036     02B2  00F0               	movwf	?___lwdiv
  4037     02B3                     l779:
  4038     02B3  0008               	return
  4039     02B4                     __end_of___lwdiv:
  4040                           
  4041                           	psect	text15
  4042     0532                     __ptext15:	
  4043 ;; *************** function _Vdrive *****************
  4044 ;; Defined at:
  4045 ;;		line 10 in file "./Driving.h"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  y               2   11[BANK0 ] int 
  4048 ;;  x               2   13[BANK0 ] int 
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;  r_motor         2   21[BANK0 ] volatile int 
  4051 ;;  l_motor         2   19[BANK0 ] volatile int 
  4052 ;;  right_dir       1   18[BANK0 ] volatile unsigned char 
  4053 ;;  left_dir        1   17[BANK0 ] volatile unsigned char 
  4054 ;; Return value:  Size  Location     Type
  4055 ;;                  1    wreg      void 
  4056 ;; Registers used:
  4057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4058 ;; Tracked objects:
  4059 ;;		On entry : 0/0
  4060 ;;		On exit  : 0/0
  4061 ;;		Unchanged: 0/0
  4062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4063 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4064 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;Total ram usage:       12 bytes
  4068 ;; Hardware stack levels used: 1
  4069 ;; Hardware stack levels required when called: 3
  4070 ;; This function calls:
  4071 ;;		___awdiv
  4072 ;;		___wmul
  4073 ;;		_abs
  4074 ;;		_motor
  4075 ;; This function is called by:
  4076 ;;		_drive
  4077 ;; This function uses a non-reentrant model
  4078 ;;
  4079                           
  4080     0532                     _Vdrive:	
  4081                           ;psect for function _Vdrive
  4082                           
  4083     0532                     l1908:	
  4084                           ;incstack = 0
  4085                           ; Regs used in _Vdrive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4086                           
  4087                           
  4088                           ;./Driving.h: 10:         r_motor = y + x;;./Driving.h: 11:     };./Driving.h: 12:     e
      +                          lse{if(x < 0 && y > 0);./Driving.h: 13:     {;./Driving.h: 15:         r_motor = y + (x*
      +                          2);
  4089     0532  0020               	movlb	0	; select bank0
  4090     0533  082E               	movf	Vdrive@x+1,w
  4091     0534  3A80               	xorlw	128
  4092     0535  00AF               	movwf	??_Vdrive
  4093     0536  3080               	movlw	128
  4094     0537  022F               	subwf	??_Vdrive,w
  4095     0538  1D03               	skipz
  4096     0539  2D3C               	goto	u1515
  4097     053A  3001               	movlw	1
  4098     053B  022D               	subwf	Vdrive@x,w
  4099     053C                     u1515:
  4100     053C  1C03               	skipc
  4101     053D  2D3F               	goto	u1511
  4102     053E  2D40               	goto	u1510
  4103     053F                     u1511:
  4104     053F  2D62               	goto	l234
  4105     0540                     u1510:
  4106     0540                     l1910:
  4107     0540  0020               	movlb	0	; select bank0
  4108     0541  082C               	movf	Vdrive@y+1,w
  4109     0542  3A80               	xorlw	128
  4110     0543  00AF               	movwf	??_Vdrive
  4111     0544  3080               	movlw	128
  4112     0545  022F               	subwf	??_Vdrive,w
  4113     0546  1D03               	skipz
  4114     0547  2D4A               	goto	u1525
  4115     0548  3001               	movlw	1
  4116     0549  022B               	subwf	Vdrive@y,w
  4117     054A                     u1525:
  4118     054A  1C03               	skipc
  4119     054B  2D4D               	goto	u1521
  4120     054C  2D4E               	goto	u1520
  4121     054D                     u1521:
  4122     054D  2D62               	goto	l234
  4123     054E                     u1520:
  4124     054E                     l1912:
  4125                           
  4126                           ;./Driving.h: 16:     };./Driving.h: 17:     else
  4127     054E  0020               	movlb	0	; select bank0
  4128     054F  082E               	movf	Vdrive@x+1,w
  4129     0550  00B0               	movwf	??_Vdrive+1
  4130     0551  082D               	movf	Vdrive@x,w
  4131     0552  00AF               	movwf	??_Vdrive
  4132     0553  35AF               	lslf	??_Vdrive,f
  4133     0554  0DB0               	rlf	??_Vdrive+1,f
  4134     0555  082F               	movf	??_Vdrive,w
  4135     0556  022B               	subwf	Vdrive@y,w
  4136     0557  00B3               	movwf	Vdrive@l_motor	;volatile
  4137     0558  0830               	movf	??_Vdrive+1,w
  4138     0559  3B2C               	subwfb	Vdrive@y+1,w
  4139     055A  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4140                           
  4141                           ;./Driving.h: 18:     {
  4142     055B  082D               	movf	Vdrive@x,w
  4143     055C  072B               	addwf	Vdrive@y,w
  4144     055D  00B5               	movwf	Vdrive@r_motor	;volatile
  4145     055E  082E               	movf	Vdrive@x+1,w
  4146     055F  3D2C               	addwfc	Vdrive@y+1,w
  4147     0560  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4148                           
  4149                           ;./Driving.h: 19:         l_motor = y - x;
  4150     0561  2D95               	goto	l1920
  4151     0562                     l234:	
  4152                           ;./Driving.h: 20:         r_motor = y + x;
  4153                           
  4154     0562  0020               	movlb	0	; select bank0
  4155     0563  1FAE               	btfss	Vdrive@x+1,7
  4156     0564  2D66               	goto	u1531
  4157     0565  2D67               	goto	u1530
  4158     0566                     u1531:
  4159     0566  2D88               	goto	l1918
  4160     0567                     u1530:
  4161     0567                     l1914:
  4162     0567  082C               	movf	Vdrive@y+1,w
  4163     0568  3A80               	xorlw	128
  4164     0569  00AF               	movwf	??_Vdrive
  4165     056A  3080               	movlw	128
  4166     056B  022F               	subwf	??_Vdrive,w
  4167     056C  1D03               	skipz
  4168     056D  2D70               	goto	u1545
  4169     056E  3001               	movlw	1
  4170     056F  022B               	subwf	Vdrive@y,w
  4171     0570                     u1545:
  4172     0570  1C03               	skipc
  4173     0571  2D73               	goto	u1541
  4174     0572  2D74               	goto	u1540
  4175     0573                     u1541:
  4176     0573  2D88               	goto	l1918
  4177     0574                     u1540:
  4178     0574                     l1916:
  4179                           
  4180                           ;./Driving.h: 21:     }};./Driving.h: 22: 
  4181     0574  0020               	movlb	0	; select bank0
  4182     0575  082D               	movf	Vdrive@x,w
  4183     0576  022B               	subwf	Vdrive@y,w
  4184     0577  00B3               	movwf	Vdrive@l_motor	;volatile
  4185     0578  082E               	movf	Vdrive@x+1,w
  4186     0579  3B2C               	subwfb	Vdrive@y+1,w
  4187     057A  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4188                           
  4189                           ;./Driving.h: 23: 
  4190     057B  082E               	movf	Vdrive@x+1,w
  4191     057C  00B0               	movwf	??_Vdrive+1
  4192     057D  082D               	movf	Vdrive@x,w
  4193     057E  00AF               	movwf	??_Vdrive
  4194     057F  35AF               	lslf	??_Vdrive,f
  4195     0580  0DB0               	rlf	??_Vdrive+1,f
  4196     0581  082B               	movf	Vdrive@y,w
  4197     0582  072F               	addwf	??_Vdrive,w
  4198     0583  00B5               	movwf	Vdrive@r_motor	;volatile
  4199     0584  082C               	movf	Vdrive@y+1,w
  4200     0585  3D30               	addwfc	??_Vdrive+1,w
  4201     0586  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4202                           
  4203                           ;./Driving.h: 24:     if (l_motor > 100 || l_motor < -100)
  4204     0587  2D95               	goto	l1920
  4205     0588                     l1918:
  4206                           
  4207                           ;./Driving.h: 26:         l_motor = (l_motor/abs(l_motor)) * 100;;./Driving.h: 27:     }
  4208     0588  0020               	movlb	0	; select bank0
  4209     0589  082D               	movf	Vdrive@x,w
  4210     058A  022B               	subwf	Vdrive@y,w
  4211     058B  00B3               	movwf	Vdrive@l_motor	;volatile
  4212     058C  082E               	movf	Vdrive@x+1,w
  4213     058D  3B2C               	subwfb	Vdrive@y+1,w
  4214     058E  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4215                           
  4216                           ;./Driving.h: 28:     if (r_motor > 100 || r_motor < -100)
  4217     058F  082D               	movf	Vdrive@x,w
  4218     0590  072B               	addwf	Vdrive@y,w
  4219     0591  00B5               	movwf	Vdrive@r_motor	;volatile
  4220     0592  082E               	movf	Vdrive@x+1,w
  4221     0593  3D2C               	addwfc	Vdrive@y+1,w
  4222     0594  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4223     0595                     l1920:
  4224                           
  4225                           ;./Driving.h: 32: 
  4226     0595  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4227     0596  3A80               	xorlw	128
  4228     0597  00AF               	movwf	??_Vdrive
  4229     0598  3080               	movlw	128
  4230     0599  022F               	subwf	??_Vdrive,w
  4231     059A  1D03               	skipz
  4232     059B  2D9E               	goto	u1555
  4233     059C  3065               	movlw	101
  4234     059D  0233               	subwf	Vdrive@l_motor,w	;volatile
  4235     059E                     u1555:
  4236     059E  1803               	skipnc
  4237     059F  2DA1               	goto	u1551
  4238     05A0  2DA2               	goto	u1550
  4239     05A1                     u1551:
  4240     05A1  2DB0               	goto	l1924
  4241     05A2                     u1550:
  4242     05A2                     l1922:
  4243     05A2  0020               	movlb	0	; select bank0
  4244     05A3  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4245     05A4  3A80               	xorlw	128
  4246     05A5  00AF               	movwf	??_Vdrive
  4247     05A6  307F               	movlw	127
  4248     05A7  022F               	subwf	??_Vdrive,w
  4249     05A8  1D03               	skipz
  4250     05A9  2DAC               	goto	u1565
  4251     05AA  309C               	movlw	156
  4252     05AB  0233               	subwf	Vdrive@l_motor,w	;volatile
  4253     05AC                     u1565:
  4254     05AC  1803               	skipnc
  4255     05AD  2DAF               	goto	u1561
  4256     05AE  2DB0               	goto	u1560
  4257     05AF                     u1561:
  4258     05AF  2DD5               	goto	l1926
  4259     05B0                     u1560:
  4260     05B0                     l1924:
  4261                           
  4262                           ;./Driving.h: 33:     if (l_motor > 0);./Driving.h: 34:     {
  4263     05B0  0020               	movlb	0	; select bank0
  4264     05B1  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4265     05B2  00F1               	movwf	abs@a+1
  4266     05B3  0833               	movf	Vdrive@l_motor,w	;volatile
  4267     05B4  00F0               	movwf	abs@a
  4268     05B5  3180  20C4  3185   	fcall	_abs
  4269     05B8  0871               	movf	?_abs+1,w
  4270     05B9  00F5               	movwf	___awdiv@divisor+1
  4271     05BA  0870               	movf	?_abs,w
  4272     05BB  00F4               	movwf	___awdiv@divisor
  4273     05BC  0020               	movlb	0	; select bank0
  4274     05BD  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4275     05BE  00F7               	movwf	___awdiv@dividend+1
  4276     05BF  0833               	movf	Vdrive@l_motor,w	;volatile
  4277     05C0  00F6               	movwf	___awdiv@dividend
  4278     05C1  3183  23BF  3185   	fcall	___awdiv
  4279     05C4  0875               	movf	?___awdiv+1,w
  4280     05C5  0020               	movlb	0	; select bank0
  4281     05C6  00A1               	movwf	___wmul@multiplier+1
  4282     05C7  0874               	movf	?___awdiv,w
  4283     05C8  00A0               	movwf	___wmul@multiplier
  4284     05C9  3064               	movlw	100
  4285     05CA  00A2               	movwf	___wmul@multiplicand
  4286     05CB  3000               	movlw	0
  4287     05CC  00A3               	movwf	___wmul@multiplicand+1
  4288     05CD  3181  2150  3185   	fcall	___wmul
  4289     05D0  0020               	movlb	0	; select bank0
  4290     05D1  0821               	movf	?___wmul+1,w
  4291     05D2  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4292     05D3  0820               	movf	?___wmul,w
  4293     05D4  00B3               	movwf	Vdrive@l_motor	;volatile
  4294     05D5                     l1926:
  4295                           
  4296                           ;./Driving.h: 36:     }
  4297     05D5  0020               	movlb	0	; select bank0
  4298     05D6  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4299     05D7  3A80               	xorlw	128
  4300     05D8  00AF               	movwf	??_Vdrive
  4301     05D9  3080               	movlw	128
  4302     05DA  022F               	subwf	??_Vdrive,w
  4303     05DB  1D03               	skipz
  4304     05DC  2DDF               	goto	u1575
  4305     05DD  3065               	movlw	101
  4306     05DE  0235               	subwf	Vdrive@r_motor,w	;volatile
  4307     05DF                     u1575:
  4308     05DF  1803               	skipnc
  4309     05E0  2DE2               	goto	u1571
  4310     05E1  2DE3               	goto	u1570
  4311     05E2                     u1571:
  4312     05E2  2DF1               	goto	l1930
  4313     05E3                     u1570:
  4314     05E3                     l1928:
  4315     05E3  0020               	movlb	0	; select bank0
  4316     05E4  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4317     05E5  3A80               	xorlw	128
  4318     05E6  00AF               	movwf	??_Vdrive
  4319     05E7  307F               	movlw	127
  4320     05E8  022F               	subwf	??_Vdrive,w
  4321     05E9  1D03               	skipz
  4322     05EA  2DED               	goto	u1585
  4323     05EB  309C               	movlw	156
  4324     05EC  0235               	subwf	Vdrive@r_motor,w	;volatile
  4325     05ED                     u1585:
  4326     05ED  1803               	skipnc
  4327     05EE  2DF0               	goto	u1581
  4328     05EF  2DF1               	goto	u1580
  4329     05F0                     u1581:
  4330     05F0  2E16               	goto	l1932
  4331     05F1                     u1580:
  4332     05F1                     l1930:
  4333                           
  4334                           ;./Driving.h: 37:     else;./Driving.h: 38:     {
  4335     05F1  0020               	movlb	0	; select bank0
  4336     05F2  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4337     05F3  00F1               	movwf	abs@a+1
  4338     05F4  0835               	movf	Vdrive@r_motor,w	;volatile
  4339     05F5  00F0               	movwf	abs@a
  4340     05F6  3180  20C4  3185   	fcall	_abs
  4341     05F9  0871               	movf	?_abs+1,w
  4342     05FA  00F5               	movwf	___awdiv@divisor+1
  4343     05FB  0870               	movf	?_abs,w
  4344     05FC  00F4               	movwf	___awdiv@divisor
  4345     05FD  0020               	movlb	0	; select bank0
  4346     05FE  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4347     05FF  00F7               	movwf	___awdiv@dividend+1
  4348     0600  0835               	movf	Vdrive@r_motor,w	;volatile
  4349     0601  00F6               	movwf	___awdiv@dividend
  4350     0602  3183  23BF  3185   	fcall	___awdiv
  4351     0605  0875               	movf	?___awdiv+1,w
  4352     0606  0020               	movlb	0	; select bank0
  4353     0607  00A1               	movwf	___wmul@multiplier+1
  4354     0608  0874               	movf	?___awdiv,w
  4355     0609  00A0               	movwf	___wmul@multiplier
  4356     060A  3064               	movlw	100
  4357     060B  00A2               	movwf	___wmul@multiplicand
  4358     060C  3000               	movlw	0
  4359     060D  00A3               	movwf	___wmul@multiplicand+1
  4360     060E  3181  2150  3185   	fcall	___wmul
  4361     0611  0020               	movlb	0	; select bank0
  4362     0612  0821               	movf	?___wmul+1,w
  4363     0613  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4364     0614  0820               	movf	?___wmul,w
  4365     0615  00B5               	movwf	Vdrive@r_motor	;volatile
  4366     0616                     l1932:
  4367                           
  4368                           ;./Driving.h: 41: 
  4369     0616  0020               	movlb	0	; select bank0
  4370     0617  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4371     0618  3A80               	xorlw	128
  4372     0619  00AF               	movwf	??_Vdrive
  4373     061A  3080               	movlw	128
  4374     061B  022F               	subwf	??_Vdrive,w
  4375     061C  1D03               	skipz
  4376     061D  2E20               	goto	u1595
  4377     061E  3001               	movlw	1
  4378     061F  0233               	subwf	Vdrive@l_motor,w	;volatile
  4379     0620                     u1595:
  4380     0620  1C03               	skipc
  4381     0621  2E23               	goto	u1591
  4382     0622  2E24               	goto	u1590
  4383     0623                     u1591:
  4384     0623  2E28               	goto	l1936
  4385     0624                     u1590:
  4386     0624                     l1934:
  4387                           
  4388                           ;./Driving.h: 42:     if (r_motor > 0);./Driving.h: 43:     {
  4389     0624  3001               	movlw	1
  4390     0625  0020               	movlb	0	; select bank0
  4391     0626  00B1               	movwf	Vdrive@left_dir	;volatile
  4392                           
  4393                           ;./Driving.h: 44:         right_dir = 1;
  4394     0627  2E2B               	goto	l245
  4395     0628                     l1936:
  4396                           
  4397                           ;./Driving.h: 46:     else;./Driving.h: 47:     {
  4398     0628  3002               	movlw	2
  4399     0629  0020               	movlb	0	; select bank0
  4400     062A  00B1               	movwf	Vdrive@left_dir	;volatile
  4401     062B                     l245:	
  4402                           ;./Driving.h: 48:         right_dir = 2;
  4403                           
  4404                           
  4405                           ;./Driving.h: 50: 
  4406     062B  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4407     062C  3A80               	xorlw	128
  4408     062D  00AF               	movwf	??_Vdrive
  4409     062E  3080               	movlw	128
  4410     062F  022F               	subwf	??_Vdrive,w
  4411     0630  1D03               	skipz
  4412     0631  2E34               	goto	u1605
  4413     0632  3001               	movlw	1
  4414     0633  0235               	subwf	Vdrive@r_motor,w	;volatile
  4415     0634                     u1605:
  4416     0634  1C03               	skipc
  4417     0635  2E37               	goto	u1601
  4418     0636  2E38               	goto	u1600
  4419     0637                     u1601:
  4420     0637  2E3C               	goto	l1940
  4421     0638                     u1600:
  4422     0638                     l1938:
  4423                           
  4424                           ;./Driving.h: 51:     motor(left_dir, abs(l_motor), right_dir, abs(r_motor));;./Driving.
      +                          h: 52: }
  4425     0638  3001               	movlw	1
  4426     0639  0020               	movlb	0	; select bank0
  4427     063A  00B2               	movwf	Vdrive@right_dir	;volatile
  4428                           
  4429                           ;./Driving.h: 53: 
  4430     063B  2E3F               	goto	l1942
  4431     063C                     l1940:
  4432                           
  4433                           ;./Driving.h: 55: {;./Driving.h: 56:     volatile int dir;
  4434     063C  3002               	movlw	2
  4435     063D  0020               	movlb	0	; select bank0
  4436     063E  00B2               	movwf	Vdrive@right_dir	;volatile
  4437     063F                     l1942:
  4438                           
  4439                           ;./Driving.h: 59:     user_data();
  4440     063F  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4441     0640  00F1               	movwf	abs@a+1
  4442     0641  0833               	movf	Vdrive@l_motor,w	;volatile
  4443     0642  00F0               	movwf	abs@a
  4444     0643  3180  20C4  3185   	fcall	_abs
  4445     0646  0870               	movf	?_abs,w
  4446     0647  00F8               	movwf	motor@pwmA
  4447     0648  0020               	movlb	0	; select bank0
  4448     0649  0832               	movf	Vdrive@right_dir,w	;volatile
  4449     064A  00F9               	movwf	motor@dirB
  4450     064B  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4451     064C  00F1               	movwf	abs@a+1
  4452     064D  0835               	movf	Vdrive@r_motor,w	;volatile
  4453     064E  00F0               	movwf	abs@a
  4454     064F  3180  20C4  3185   	fcall	_abs
  4455     0652  0870               	movf	?_abs,w
  4456     0653  00FA               	movwf	motor@pwmB
  4457     0654  0020               	movlb	0	; select bank0
  4458     0655  0831               	movf	Vdrive@left_dir,w	;volatile
  4459     0656  3182  2246  3185   	fcall	_motor
  4460     0659                     l248:
  4461     0659  0008               	return
  4462     065A                     __end_of_Vdrive:
  4463                           
  4464                           	psect	text16
  4465     0246                     __ptext16:	
  4466 ;; *************** function _motor *****************
  4467 ;; Defined at:
  4468 ;;		line 217 in file "./Commands.h"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  dirA            1    wreg     unsigned char 
  4471 ;;  pwmA            1    8[COMMON] unsigned char 
  4472 ;;  dirB            1    9[COMMON] unsigned char 
  4473 ;;  pwmB            1   10[COMMON] unsigned char 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  dirA            1    0[BANK0 ] unsigned char 
  4476 ;;  11741          10    1[BANK0 ] volatile unsigned char [
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  1    wreg      void 
  4479 ;; Registers used:
  4480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4486 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;Total ram usage:       15 bytes
  4491 ;; Hardware stack levels used: 1
  4492 ;; Hardware stack levels required when called: 2
  4493 ;; This function calls:
  4494 ;;		_UART_send
  4495 ;; This function is called by:
  4496 ;;		_Vdrive
  4497 ;;		_line_follower
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501     0246                     _motor:	
  4502                           ;psect for function _motor
  4503                           
  4504                           
  4505                           ;incstack = 0
  4506                           ; Regs used in _motor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4507                           ;motor@dirA stored from wreg
  4508     0246  0020               	movlb	0	; select bank0
  4509     0247  00A0               	movwf	motor@dirA
  4510     0248                     l1760:
  4511     0248                     l1762:	
  4512                           ;./Commands.h: 217: void motor(unsigned char dirA, unsigned char pwmA, unsigned char dir
      +                          B, unsigned char pwmB);./Commands.h: 218: {;./Commands.h: 219:     while (!UART_send((vo
      +                          latile unsigned char []) {0xFE, 0x19, 0x01, 0x06, 0x04, 0x00, dirA, pwmA, dirB, pwmB}, 1
      +                          0)){}
  4513                           
  4514     0248  30A0               	movlw	low motor@F11740
  4515     0249  0086               	movwf	6
  4516     024A  3000               	movlw	high motor@F11740
  4517     024B  0087               	movwf	7
  4518     024C  3021               	movlw	low motor@11741
  4519     024D  0084               	movwf	4
  4520     024E  3000               	movlw	high motor@11741
  4521     024F  0085               	movwf	5
  4522     0250  300A               	movlw	10
  4523     0251  00FB               	movwf	??_motor
  4524     0252                     u1260:
  4525     0252  0016               	moviw fsr1++
  4526     0253  001A               	movwi fsr0++
  4527     0254  0BFB               	decfsz	??_motor,f
  4528     0255  2A52               	goto	u1260
  4529     0256                     l1764:
  4530     0256  30FE               	movlw	254
  4531     0257  0020               	movlb	0	; select bank0
  4532     0258  00A1               	movwf	motor@11741	;volatile
  4533     0259                     l1766:
  4534     0259  3019               	movlw	25
  4535     025A  00A2               	movwf	motor@11741+1	;volatile
  4536     025B                     l1768:
  4537     025B  3001               	movlw	1
  4538     025C  00A3               	movwf	motor@11741+2	;volatile
  4539     025D                     l1770:
  4540     025D  3006               	movlw	6
  4541     025E  00A4               	movwf	motor@11741+3	;volatile
  4542     025F                     l1772:
  4543     025F  3004               	movlw	4
  4544     0260  00A5               	movwf	motor@11741+4	;volatile
  4545     0261                     l1774:
  4546     0261  01A6               	clrf	motor@11741+5	;volatile
  4547     0262                     l1776:
  4548     0262  0820               	movf	motor@dirA,w
  4549     0263  00A7               	movwf	motor@11741+6	;volatile
  4550     0264                     l1778:
  4551     0264  0878               	movf	motor@pwmA,w
  4552     0265  00A8               	movwf	motor@11741+7	;volatile
  4553     0266                     l1780:
  4554     0266  0879               	movf	motor@dirB,w
  4555     0267  00A9               	movwf	motor@11741+8	;volatile
  4556     0268                     l1782:
  4557     0268  087A               	movf	motor@pwmB,w
  4558     0269  00AA               	movwf	motor@11741+9	;volatile
  4559     026A                     l1784:
  4560     026A  300A               	movlw	10
  4561     026B  00F2               	movwf	UART_send@size
  4562     026C  3000               	movlw	0
  4563     026D  00F3               	movwf	UART_send@size+1
  4564     026E  3021               	movlw	(low (motor@11741| 0))& (0+255)
  4565     026F  3181  2197  3182   	fcall	_UART_send
  4566     0272  3A00               	xorlw	0
  4567     0273  1903               	skipnz
  4568     0274  2A76               	goto	u1271
  4569     0275  2A77               	goto	u1270
  4570     0276                     u1271:
  4571     0276  2A48               	goto	l1762
  4572     0277                     u1270:
  4573     0277                     l156:
  4574     0277  0008               	return
  4575     0278                     __end_of_motor:
  4576                           
  4577                           	psect	text17
  4578     0197                     __ptext17:	
  4579 ;; *************** function _UART_send *****************
  4580 ;; Defined at:
  4581 ;;		line 62 in file "./Commands.h"
  4582 ;; Parameters:    Size  Location     Type
  4583 ;;  message         1    wreg     PTR volatile unsigned ch
  4584 ;;		 -> ore_type@11783(7), surface_exploration@11779(10), custom_laser@11771(6), transmit_repair@11765(6), 
  4585 ;;		 -> request_repair@11762(6), transmit_shield_code@11759(6), shoot_laser@11756(7), set_laser@11752(7), 
  4586 ;;		 -> servo@11748(10), motor@11741(10), user_data_send@11729(6), PCLS_info_send@11721(6), 
  4587 ;;  size            2    2[COMMON] unsigned int 
  4588 ;; Auto vars:     Size  Location     Type
  4589 ;;  message         1    6[COMMON] PTR volatile unsigned ch
  4590 ;;		 -> ore_type@11783(7), surface_exploration@11779(10), custom_laser@11771(6), transmit_repair@11765(6), 
  4591 ;;		 -> request_repair@11762(6), transmit_shield_code@11759(6), shoot_laser@11756(7), set_laser@11752(7), 
  4592 ;;		 -> servo@11748(10), motor@11741(10), user_data_send@11729(6), PCLS_info_send@11721(6), 
  4593 ;;  i               1    7[COMMON] volatile unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      unsigned char 
  4596 ;; Registers used:
  4597 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4607 ;;Total ram usage:        6 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; Hardware stack levels required when called: 1
  4610 ;; This function calls:
  4611 ;;		_tx_wait
  4612 ;; This function is called by:
  4613 ;;		_PCLS_info_send
  4614 ;;		_user_data_send
  4615 ;;		_motor
  4616 ;;		_set_laser
  4617 ;;		_shoot_laser
  4618 ;;		_transmit_shield_code
  4619 ;;		_servo
  4620 ;;		_request_repair
  4621 ;;		_transmit_repair
  4622 ;;		_custom_laser
  4623 ;;		_surface_exploration
  4624 ;;		_ore_type
  4625 ;; This function uses a non-reentrant model
  4626 ;;
  4627                           
  4628     0197                     _UART_send:	
  4629                           ;psect for function _UART_send
  4630                           
  4631                           
  4632                           ;incstack = 0
  4633                           ; Regs used in _UART_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4634                           ;UART_send@message stored from wreg
  4635     0197  00F6               	movwf	UART_send@message
  4636     0198                     l1620:
  4637     0198  01F7               	clrf	UART_send@i	;volatile
  4638     0199  29B1               	goto	l1632
  4639     019A                     l1622:
  4640     019A  3180  2092  3181   	fcall	_tx_wait
  4641     019D  3A00               	xorlw	0
  4642     019E  1D03               	skipz
  4643     019F  29A1               	goto	u1011
  4644     01A0  29A2               	goto	u1010
  4645     01A1                     u1011:
  4646     01A1  29A4               	goto	l1628
  4647     01A2                     u1010:
  4648     01A2                     l1624:
  4649     01A2  3000               	movlw	0
  4650     01A3  29BF               	goto	l96
  4651     01A4                     l1628:
  4652     01A4  0877               	movf	UART_send@i,w
  4653     01A5  0776               	addwf	UART_send@message,w
  4654     01A6  00F4               	movwf	??_UART_send
  4655     01A7  0874               	movf	??_UART_send,w
  4656     01A8  0086               	movwf	6
  4657     01A9  0187               	clrf	7
  4658     01AA  0801               	movf	1,w
  4659     01AB  0022               	movlb	2	; select bank2
  4660     01AC  009A               	movwf	26	;volatile
  4661     01AD                     l1630:
  4662     01AD  3001               	movlw	1
  4663     01AE  00F4               	movwf	??_UART_send
  4664     01AF  0874               	movf	??_UART_send,w
  4665     01B0  07F7               	addwf	UART_send@i,f	;volatile
  4666     01B1                     l1632:
  4667     01B1  0877               	movf	UART_send@i,w	;volatile
  4668     01B2  00F4               	movwf	??_UART_send
  4669     01B3  01F5               	clrf	??_UART_send+1
  4670     01B4  0873               	movf	UART_send@size+1,w
  4671     01B5  0275               	subwf	??_UART_send+1,w
  4672     01B6  1D03               	skipz
  4673     01B7  29BA               	goto	u1025
  4674     01B8  0872               	movf	UART_send@size,w
  4675     01B9  0274               	subwf	??_UART_send,w
  4676     01BA                     u1025:
  4677     01BA  1C03               	skipc
  4678     01BB  29BD               	goto	u1021
  4679     01BC  29BE               	goto	u1020
  4680     01BD                     u1021:
  4681     01BD  299A               	goto	l1622
  4682     01BE                     u1020:
  4683     01BE                     l1634:
  4684     01BE  3001               	movlw	1
  4685     01BF                     l96:
  4686     01BF  0008               	return
  4687     01C0                     __end_of_UART_send:
  4688                           
  4689                           	psect	text18
  4690     0092                     __ptext18:	
  4691 ;; *************** function _tx_wait *****************
  4692 ;; Defined at:
  4693 ;;		line 36 in file "./Commands.h"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;  count           2    0[COMMON] volatile unsigned int 
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      unsigned char 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4708 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;Total ram usage:        2 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; This function calls:
  4714 ;;		Nothing
  4715 ;; This function is called by:
  4716 ;;		_UART_send
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720     0092                     _tx_wait:	
  4721                           ;psect for function _tx_wait
  4722                           
  4723     0092                     l1584:	
  4724                           ;incstack = 0
  4725                           ; Regs used in _tx_wait: [wreg+status,2+status,0]
  4726                           
  4727                           
  4728                           ;./Commands.h: 38: ;./Commands.h: 39:     for (i=0; i < size; i++)
  4729     0092  30E8               	movlw	232
  4730     0093  00F0               	movwf	tx_wait@count	;volatile
  4731     0094  3003               	movlw	3
  4732     0095  00F1               	movwf	tx_wait@count+1	;volatile
  4733     0096                     l1586:
  4734     0096  0870               	movf	tx_wait@count,w	;volatile
  4735     0097  0471               	iorwf	tx_wait@count+1,w	;volatile
  4736     0098  1D03               	btfss	3,2
  4737     0099  289B               	goto	u971
  4738     009A  289C               	goto	u970
  4739     009B                     u971:
  4740     009B  289D               	goto	l81
  4741     009C                     u970:
  4742     009C  28A9               	goto	l1598
  4743     009D                     l81:
  4744                           
  4745                           ;./Commands.h: 40:     {;./Commands.h: 41:         if(!tx_wait())
  4746     009D  002E               	movlb	14	; select bank14
  4747     009E  1E0F               	btfss	15,4	;volatile
  4748     009F  28A1               	goto	u981
  4749     00A0  28A2               	goto	u980
  4750     00A1                     u981:
  4751     00A1  28A4               	goto	l1594
  4752     00A2                     u980:
  4753     00A2                     l1590:
  4754                           
  4755                           ;./Commands.h: 42:         {;./Commands.h: 43:             return 0;
  4756     00A2  3001               	movlw	1
  4757     00A3  28AA               	goto	l84
  4758     00A4                     l1594:
  4759                           
  4760                           ;./Commands.h: 45:         TXREG = message[i];
  4761     00A4  3001               	movlw	1
  4762     00A5  02F0               	subwf	tx_wait@count,f	;volatile
  4763     00A6  3000               	movlw	0
  4764     00A7  3BF1               	subwfb	tx_wait@count+1,f	;volatile
  4765     00A8  2896               	goto	l1586
  4766     00A9                     l1598:
  4767                           
  4768                           ;./Commands.h: 46:     }
  4769     00A9  3000               	movlw	0
  4770     00AA                     l84:
  4771     00AA  0008               	return
  4772     00AB                     __end_of_tx_wait:
  4773                           
  4774                           	psect	text19
  4775     00C4                     __ptext19:	
  4776 ;; *************** function _abs *****************
  4777 ;; Defined at:
  4778 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  a               2    0[COMMON] int 
  4781 ;; Auto vars:     Size  Location     Type
  4782 ;;		None
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  2    0[COMMON] int 
  4785 ;; Registers used:
  4786 ;;		wreg, status,2, status,0
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4795 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4796 ;;Total ram usage:        4 bytes
  4797 ;; Hardware stack levels used: 1
  4798 ;; This function calls:
  4799 ;;		Nothing
  4800 ;; This function is called by:
  4801 ;;		_Vdrive
  4802 ;;		_line_follower
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805                           
  4806     00C4                     _abs:	
  4807                           ;psect for function _abs
  4808                           
  4809     00C4                     l1786:	
  4810                           ;incstack = 0
  4811                           ; Regs used in _abs: [wreg+status,2+status,0]
  4812                           
  4813     00C4  0871               	movf	abs@a+1,w
  4814     00C5  3A80               	xorlw	128
  4815     00C6  00F2               	movwf	??_abs
  4816     00C7  3080               	movlw	128
  4817     00C8  0272               	subwf	??_abs,w
  4818     00C9  1D03               	skipz
  4819     00CA  28CD               	goto	u1285
  4820     00CB  3001               	movlw	1
  4821     00CC  0270               	subwf	abs@a,w
  4822     00CD                     u1285:
  4823     00CD  1803               	skipnc
  4824     00CE  28D0               	goto	u1281
  4825     00CF  28D1               	goto	u1280
  4826     00D0                     u1281:
  4827     00D0  28DD               	goto	l959
  4828     00D1                     u1280:
  4829     00D1                     l1788:
  4830     00D1  0970               	comf	abs@a,w
  4831     00D2  00F2               	movwf	??_abs
  4832     00D3  0971               	comf	abs@a+1,w
  4833     00D4  00F3               	movwf	??_abs+1
  4834     00D5  0AF2               	incf	??_abs,f
  4835     00D6  1903               	skipnz
  4836     00D7  0AF3               	incf	??_abs+1,f
  4837     00D8  0872               	movf	??_abs,w
  4838     00D9  00F0               	movwf	?_abs
  4839     00DA  0873               	movf	??_abs+1,w
  4840     00DB  00F1               	movwf	?_abs+1
  4841     00DC  28DD               	goto	l962
  4842     00DD                     l959:
  4843     00DD                     l962:
  4844     00DD  0008               	return
  4845     00DE                     __end_of_abs:
  4846                           
  4847                           	psect	text20
  4848     0150                     __ptext20:	
  4849 ;; *************** function ___wmul *****************
  4850 ;; Defined at:
  4851 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4854 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4855 ;; Auto vars:     Size  Location     Type
  4856 ;;  product         2    4[BANK0 ] unsigned int 
  4857 ;; Return value:  Size  Location     Type
  4858 ;;                  2    0[BANK0 ] unsigned int 
  4859 ;; Registers used:
  4860 ;;		wreg, status,2, status,0
  4861 ;; Tracked objects:
  4862 ;;		On entry : 0/0
  4863 ;;		On exit  : 0/0
  4864 ;;		Unchanged: 0/0
  4865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4866 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4867 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4869 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;Total ram usage:        6 bytes
  4871 ;; Hardware stack levels used: 1
  4872 ;; This function calls:
  4873 ;;		Nothing
  4874 ;; This function is called by:
  4875 ;;		_Vdrive
  4876 ;;		_drive
  4877 ;; This function uses a non-reentrant model
  4878 ;;
  4879                           
  4880     0150                     ___wmul:	
  4881                           ;psect for function ___wmul
  4882                           
  4883     0150                     l1790:	
  4884                           ;incstack = 0
  4885                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4886                           
  4887     0150  0020               	movlb	0	; select bank0
  4888     0151  01A4               	clrf	___wmul@product
  4889     0152  01A5               	clrf	___wmul@product+1
  4890     0153                     l1792:
  4891     0153  1C20               	btfss	___wmul@multiplier,0
  4892     0154  2956               	goto	u1291
  4893     0155  2957               	goto	u1290
  4894     0156                     u1291:
  4895     0156  295B               	goto	l499
  4896     0157                     u1290:
  4897     0157                     l1794:
  4898     0157  0822               	movf	___wmul@multiplicand,w
  4899     0158  07A4               	addwf	___wmul@product,f
  4900     0159  0823               	movf	___wmul@multiplicand+1,w
  4901     015A  3DA5               	addwfc	___wmul@product+1,f
  4902     015B                     l499:
  4903     015B  3001               	movlw	1
  4904     015C                     u1305:
  4905     015C  35A2               	lslf	___wmul@multiplicand,f
  4906     015D  0DA3               	rlf	___wmul@multiplicand+1,f
  4907     015E  0B89               	decfsz	9,f
  4908     015F  295C               	goto	u1305
  4909     0160                     l1796:
  4910     0160  3001               	movlw	1
  4911     0161                     u1315:
  4912     0161  36A1               	lsrf	___wmul@multiplier+1,f
  4913     0162  0CA0               	rrf	___wmul@multiplier,f
  4914     0163  0B89               	decfsz	9,f
  4915     0164  2961               	goto	u1315
  4916     0165                     l1798:
  4917     0165  0820               	movf	___wmul@multiplier,w
  4918     0166  0421               	iorwf	___wmul@multiplier+1,w
  4919     0167  1D03               	btfss	3,2
  4920     0168  296A               	goto	u1321
  4921     0169  296B               	goto	u1320
  4922     016A                     u1321:
  4923     016A  2953               	goto	l1792
  4924     016B                     u1320:
  4925     016B                     l1800:
  4926     016B  0825               	movf	___wmul@product+1,w
  4927     016C  00A1               	movwf	?___wmul+1
  4928     016D  0824               	movf	___wmul@product,w
  4929     016E  00A0               	movwf	?___wmul
  4930     016F                     l501:
  4931     016F  0008               	return
  4932     0170                     __end_of___wmul:
  4933                           
  4934                           	psect	text21
  4935     03BF                     __ptext21:	
  4936 ;; *************** function ___awdiv *****************
  4937 ;; Defined at:
  4938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  divisor         2    4[COMMON] int 
  4941 ;;  dividend        2    6[COMMON] int 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  quotient        2   11[COMMON] int 
  4944 ;;  sign            1   10[COMMON] unsigned char 
  4945 ;;  counter         1    9[COMMON] unsigned char 
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  2    4[COMMON] int 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4956 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4957 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4958 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4959 ;;Total ram usage:        9 bytes
  4960 ;; Hardware stack levels used: 1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_Vdrive
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968     03BF                     ___awdiv:	
  4969                           ;psect for function ___awdiv
  4970                           
  4971     03BF                     l1804:	
  4972                           ;incstack = 0
  4973                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4974                           
  4975     03BF  01FA               	clrf	___awdiv@sign
  4976     03C0                     l1806:
  4977     03C0  1FF5               	btfss	___awdiv@divisor+1,7
  4978     03C1  2BC3               	goto	u1331
  4979     03C2  2BC4               	goto	u1330
  4980     03C3                     u1331:
  4981     03C3  2BCB               	goto	l1812
  4982     03C4                     u1330:
  4983     03C4                     l1808:
  4984     03C4  09F4               	comf	___awdiv@divisor,f
  4985     03C5  09F5               	comf	___awdiv@divisor+1,f
  4986     03C6  0AF4               	incf	___awdiv@divisor,f
  4987     03C7  1903               	skipnz
  4988     03C8  0AF5               	incf	___awdiv@divisor+1,f
  4989     03C9                     l1810:
  4990     03C9  01FA               	clrf	___awdiv@sign
  4991     03CA  0AFA               	incf	___awdiv@sign,f
  4992     03CB                     l1812:
  4993     03CB  1FF7               	btfss	___awdiv@dividend+1,7
  4994     03CC  2BCE               	goto	u1341
  4995     03CD  2BCF               	goto	u1340
  4996     03CE                     u1341:
  4997     03CE  2BD8               	goto	l1818
  4998     03CF                     u1340:
  4999     03CF                     l1814:
  5000     03CF  09F6               	comf	___awdiv@dividend,f
  5001     03D0  09F7               	comf	___awdiv@dividend+1,f
  5002     03D1  0AF6               	incf	___awdiv@dividend,f
  5003     03D2  1903               	skipnz
  5004     03D3  0AF7               	incf	___awdiv@dividend+1,f
  5005     03D4                     l1816:
  5006     03D4  3001               	movlw	1
  5007     03D5  00F8               	movwf	??___awdiv
  5008     03D6  0878               	movf	??___awdiv,w
  5009     03D7  06FA               	xorwf	___awdiv@sign,f
  5010     03D8                     l1818:
  5011     03D8  01FB               	clrf	___awdiv@quotient
  5012     03D9  01FC               	clrf	___awdiv@quotient+1
  5013     03DA                     l1820:
  5014     03DA  0874               	movf	___awdiv@divisor,w
  5015     03DB  0475               	iorwf	___awdiv@divisor+1,w
  5016     03DC  1903               	btfsc	3,2
  5017     03DD  2BDF               	goto	u1351
  5018     03DE  2BE0               	goto	u1350
  5019     03DF                     u1351:
  5020     03DF  2C0F               	goto	l1840
  5021     03E0                     u1350:
  5022     03E0                     l1822:
  5023     03E0  01F9               	clrf	___awdiv@counter
  5024     03E1  0AF9               	incf	___awdiv@counter,f
  5025     03E2  2BEC               	goto	l1828
  5026     03E3                     l1824:
  5027     03E3  3001               	movlw	1
  5028     03E4                     u1365:
  5029     03E4  35F4               	lslf	___awdiv@divisor,f
  5030     03E5  0DF5               	rlf	___awdiv@divisor+1,f
  5031     03E6  0B89               	decfsz	9,f
  5032     03E7  2BE4               	goto	u1365
  5033     03E8                     l1826:
  5034     03E8  3001               	movlw	1
  5035     03E9  00F8               	movwf	??___awdiv
  5036     03EA  0878               	movf	??___awdiv,w
  5037     03EB  07F9               	addwf	___awdiv@counter,f
  5038     03EC                     l1828:
  5039     03EC  1FF5               	btfss	___awdiv@divisor+1,7
  5040     03ED  2BEF               	goto	u1371
  5041     03EE  2BF0               	goto	u1370
  5042     03EF                     u1371:
  5043     03EF  2BE3               	goto	l1824
  5044     03F0                     u1370:
  5045     03F0                     l1830:
  5046     03F0  3001               	movlw	1
  5047     03F1                     u1385:
  5048     03F1  35FB               	lslf	___awdiv@quotient,f
  5049     03F2  0DFC               	rlf	___awdiv@quotient+1,f
  5050     03F3  0B89               	decfsz	9,f
  5051     03F4  2BF1               	goto	u1385
  5052     03F5  0875               	movf	___awdiv@divisor+1,w
  5053     03F6  0277               	subwf	___awdiv@dividend+1,w
  5054     03F7  1D03               	skipz
  5055     03F8  2BFB               	goto	u1395
  5056     03F9  0874               	movf	___awdiv@divisor,w
  5057     03FA  0276               	subwf	___awdiv@dividend,w
  5058     03FB                     u1395:
  5059     03FB  1C03               	skipc
  5060     03FC  2BFE               	goto	u1391
  5061     03FD  2BFF               	goto	u1390
  5062     03FE                     u1391:
  5063     03FE  2C04               	goto	l1836
  5064     03FF                     u1390:
  5065     03FF                     l1832:
  5066     03FF  0874               	movf	___awdiv@divisor,w
  5067     0400  02F6               	subwf	___awdiv@dividend,f
  5068     0401  0875               	movf	___awdiv@divisor+1,w
  5069     0402  3BF7               	subwfb	___awdiv@dividend+1,f
  5070     0403                     l1834:
  5071     0403  147B               	bsf	___awdiv@quotient,0
  5072     0404                     l1836:
  5073     0404  3001               	movlw	1
  5074     0405                     u1405:
  5075     0405  36F5               	lsrf	___awdiv@divisor+1,f
  5076     0406  0CF4               	rrf	___awdiv@divisor,f
  5077     0407  0B89               	decfsz	9,f
  5078     0408  2C05               	goto	u1405
  5079     0409                     l1838:
  5080     0409  3001               	movlw	1
  5081     040A  02F9               	subwf	___awdiv@counter,f
  5082     040B  1D03               	btfss	3,2
  5083     040C  2C0E               	goto	u1411
  5084     040D  2C0F               	goto	u1410
  5085     040E                     u1411:
  5086     040E  2BF0               	goto	l1830
  5087     040F                     u1410:
  5088     040F                     l1840:
  5089     040F  087A               	movf	___awdiv@sign,w
  5090     0410  1903               	btfsc	3,2
  5091     0411  2C13               	goto	u1421
  5092     0412  2C14               	goto	u1420
  5093     0413                     u1421:
  5094     0413  2C19               	goto	l1844
  5095     0414                     u1420:
  5096     0414                     l1842:
  5097     0414  09FB               	comf	___awdiv@quotient,f
  5098     0415  09FC               	comf	___awdiv@quotient+1,f
  5099     0416  0AFB               	incf	___awdiv@quotient,f
  5100     0417  1903               	skipnz
  5101     0418  0AFC               	incf	___awdiv@quotient+1,f
  5102     0419                     l1844:
  5103     0419  087C               	movf	___awdiv@quotient+1,w
  5104     041A  00F5               	movwf	?___awdiv+1
  5105     041B  087B               	movf	___awdiv@quotient,w
  5106     041C  00F4               	movwf	?___awdiv
  5107     041D                     l652:
  5108     041D  0008               	return
  5109     041E                     __end_of___awdiv:
  5110                           
  5111                           	psect	text22
  5112     005D                     __ptext22:	
  5113 ;; *************** function _UART_init *****************
  5114 ;; Defined at:
  5115 ;;		line 78 in file "./Commands.h"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;		None
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5133 ;;Total ram usage:        0 bytes
  5134 ;; Hardware stack levels used: 1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_main
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142     005D                     _UART_init:	
  5143                           ;psect for function _UART_init
  5144                           
  5145     005D                     l1952:	
  5146                           ;incstack = 0
  5147                           ; Regs used in _UART_init: [wreg]
  5148                           
  5149     005D  003E               	movlb	30	; select bank30
  5150     005E  134E               	bcf	78,6	;volatile
  5151     005F  13CE               	bcf	78,7	;volatile
  5152                           
  5153                           ;./Commands.h: 92:     TX1STAbits.SYNC = 0;
  5154     0060  0022               	movlb	2	; select bank2
  5155     0061  121E               	bcf	30,4	;volatile
  5156                           
  5157                           ;./Commands.h: 93:     TX1STAbits.TXEN = 1;
  5158     0062  169E               	bsf	30,5	;volatile
  5159                           
  5160                           ;./Commands.h: 94:     RC1STAbits.SPEN = 1;
  5161     0063  179D               	bsf	29,7	;volatile
  5162                           
  5163                           ;./Commands.h: 95:     RC1STAbits.CREN = 1;
  5164     0064  161D               	bsf	29,4	;volatile
  5165                           
  5166                           ;./Commands.h: 97:     TX1STAbits.BRGH = 1;
  5167     0065  151E               	bsf	30,2	;volatile
  5168                           
  5169                           ;./Commands.h: 99:     BAUD1CONbits.BRG16 = 1;
  5170     0066  159F               	bsf	31,3	;volatile
  5171     0067                     l1954:
  5172                           
  5173                           ;./Commands.h: 100:     SP1BRGLbits.SP1BRGL = 0x44;
  5174     0067  3044               	movlw	68
  5175     0068  009B               	movwf	27	;volatile
  5176                           
  5177                           ;./Commands.h: 102:     RC6PPS = 0x10;
  5178     0069  3010               	movlw	16
  5179     006A  003E               	movlb	30	; select bank30
  5180     006B  00A6               	movwf	38	;volatile
  5181     006C                     l100:
  5182     006C  0008               	return
  5183     006D                     __end_of_UART_init:
  5184                           
  5185                           	psect	text23
  5186     0035                     __ptext23:	
  5187 ;; *************** function _IR_init *****************
  5188 ;; Defined at:
  5189 ;;		line 12 in file "./IR.h"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;		None
  5192 ;; Auto vars:     Size  Location     Type
  5193 ;;		None
  5194 ;; Return value:  Size  Location     Type
  5195 ;;                  1    wreg      void 
  5196 ;; Registers used:
  5197 ;;		wreg, status,2, status,0, pclath, cstack
  5198 ;; Tracked objects:
  5199 ;;		On entry : 0/0
  5200 ;;		On exit  : 0/0
  5201 ;;		Unchanged: 0/0
  5202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;Total ram usage:        0 bytes
  5208 ;; Hardware stack levels used: 1
  5209 ;; Hardware stack levels required when called: 1
  5210 ;; This function calls:
  5211 ;;		_read_adc
  5212 ;; This function is called by:
  5213 ;;		_main
  5214 ;; This function uses a non-reentrant model
  5215 ;;
  5216                           
  5217     0035                     _IR_init:	
  5218                           ;psect for function _IR_init
  5219                           
  5220     0035                     l2060:	
  5221                           ;incstack = 0
  5222                           ; Regs used in _IR_init: [wreg+status,2+status,0+pclath+cstack]
  5223                           
  5224                           
  5225                           ;./IR.h: 14:     TRISAbits.TRISA1 = 0;
  5226     0035  300C               	movlw	12
  5227     0036  3181  2170  3180   	fcall	_read_adc
  5228     0039  0870               	movf	?_read_adc,w
  5229     003A  3EC0               	addlw	192
  5230     003B  0020               	movlb	0	; select bank0
  5231     003C  00DE               	movwf	_IR_base	;volatile
  5232     003D  30FF               	movlw	255
  5233     003E  3D71               	addwfc	?_read_adc+1,w
  5234     003F  00DF               	movwf	_IR_base+1	;volatile
  5235     0040                     l317:
  5236     0040  0008               	return
  5237     0041                     __end_of_IR_init:
  5238                           
  5239                           	psect	text24
  5240     0218                     __ptext24:	
  5241 ;; *************** function _IR *****************
  5242 ;; Defined at:
  5243 ;;		line 17 in file "./IR.h"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;		None
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;  ADC_val         2   10[COMMON] volatile unsigned int 
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		wreg, pclath, cstack
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5260 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5261 ;;Total ram usage:        4 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 1
  5264 ;; This function calls:
  5265 ;;		_read_adc
  5266 ;; This function is called by:
  5267 ;;		_main
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271     0218                     _IR:	
  5272                           ;psect for function _IR
  5273                           
  5274     0218                     l2062:	
  5275                           ;incstack = 0
  5276                           ; Regs used in _IR: [wreg+pclath+cstack]
  5277                           
  5278                           
  5279                           ;./IR.h: 19:     if (ADC_val > IR_base);./IR.h: 21:         LATAbits.LATA1 = 1;
  5280     0218  0020               	movlb	0	; select bank0
  5281     0219  1011               	bcf	17,0	;volatile
  5282                           
  5283                           ;./IR.h: 22:         LATAbits.LATA1 = 1;
  5284     021A  1091               	bcf	17,1	;volatile
  5285                           
  5286                           ;./IR.h: 23:         LATAbits.LATA2 = 1;
  5287     021B  1111               	bcf	17,2	;volatile
  5288                           
  5289                           ;./IR.h: 24:         LATAbits.LATA3 = 1;
  5290     021C  1191               	bcf	17,3	;volatile
  5291     021D                     l2064:
  5292                           
  5293                           ;./IR.h: 26:     else
  5294     021D  300C               	movlw	12
  5295     021E  3181  2170  3182   	fcall	_read_adc
  5296     0221  0871               	movf	?_read_adc+1,w
  5297     0222  00FB               	movwf	IR@ADC_val+1	;volatile
  5298     0223  0870               	movf	?_read_adc,w
  5299     0224  00FA               	movwf	IR@ADC_val	;volatile
  5300     0225                     l2066:
  5301                           
  5302                           ;./IR.h: 27:     {
  5303     0225  087B               	movf	IR@ADC_val+1,w	;volatile
  5304     0226  0020               	movlb	0	; select bank0
  5305     0227  025F               	subwf	_IR_base+1,w	;volatile
  5306     0228  1D03               	skipz
  5307     0229  2A2C               	goto	u1755
  5308     022A  087A               	movf	IR@ADC_val,w	;volatile
  5309     022B  025E               	subwf	_IR_base,w	;volatile
  5310     022C                     u1755:
  5311     022C  1803               	skipnc
  5312     022D  2A2F               	goto	u1751
  5313     022E  2A30               	goto	u1750
  5314     022F                     u1751:
  5315     022F  2A35               	goto	l320
  5316     0230                     u1750:
  5317     0230                     l2068:
  5318                           
  5319                           ;./IR.h: 28:         LATAbits.LATA0 = 0;;./IR.h: 29:         LATAbits.LATA1 = 0;
  5320     0230  1496               	bsf	22,1	;volatile
  5321                           
  5322                           ;./IR.h: 30:         LATAbits.LATA2 = 0;
  5323     0231  1496               	bsf	22,1	;volatile
  5324                           
  5325                           ;./IR.h: 31:         LATAbits.LATA3 = 0;
  5326     0232  1516               	bsf	22,2	;volatile
  5327                           
  5328                           ;./IR.h: 32:         _delay((unsigned long)((3000)*(400000/4000.0)));
  5329     0233  1596               	bsf	22,3	;volatile
  5330                           
  5331                           ;./IR.h: 33:     }
  5332     0234  2A45               	goto	l322
  5333     0235                     l320:	
  5334                           ;./IR.h: 34: }
  5335                           
  5336     0235  1016               	bcf	22,0	;volatile
  5337     0236  1096               	bcf	22,1	;volatile
  5338     0237  1116               	bcf	22,2	;volatile
  5339     0238  1196               	bcf	22,3	;volatile
  5340     0239                     l2070:
  5341     0239  3002               	movlw	2
  5342     023A  00F9               	movwf	??_IR+1
  5343     023B  3086               	movlw	134
  5344     023C  00F8               	movwf	??_IR
  5345     023D  3099               	movlw	153
  5346     023E                     u1987:
  5347     023E  0B89               	decfsz	9,f
  5348     023F  2A3E               	goto	u1987
  5349     0240  0BF8               	decfsz	??_IR,f
  5350     0241  2A3E               	goto	u1987
  5351     0242  0BF9               	decfsz	??_IR+1,f
  5352     0243  2A3E               	goto	u1987
  5353     0244  0000               	nop
  5354     0245                     l322:
  5355     0245  0008               	return
  5356     0246                     __end_of_IR:
  5357                           
  5358                           	psect	text25
  5359     0170                     __ptext25:	
  5360 ;; *************** function _read_adc *****************
  5361 ;; Defined at:
  5362 ;;		line 33 in file "./Line Follower.h"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;  sensor          1    wreg     unsigned char 
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  sensor          1    5[COMMON] unsigned char 
  5367 ;;  ADC_val         2    6[COMMON] volatile unsigned int 
  5368 ;; Return value:  Size  Location     Type
  5369 ;;                  2    0[COMMON] int 
  5370 ;; Registers used:
  5371 ;;		wreg
  5372 ;; Tracked objects:
  5373 ;;		On entry : 0/0
  5374 ;;		On exit  : 0/0
  5375 ;;		Unchanged: 0/0
  5376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5377 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5378 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5379 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5380 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5381 ;;Total ram usage:        8 bytes
  5382 ;; Hardware stack levels used: 1
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_line_follower
  5387 ;;		_IR_init
  5388 ;;		_IR
  5389 ;;		_main
  5390 ;; This function uses a non-reentrant model
  5391 ;;
  5392                           
  5393     0170                     _read_adc:	
  5394                           ;psect for function _read_adc
  5395                           
  5396                           
  5397                           ;incstack = 0
  5398                           ; Regs used in _read_adc: [wreg]
  5399                           ;read_adc@sensor stored from wreg
  5400     0170  00F5               	movwf	read_adc@sensor
  5401     0171                     l1944:
  5402                           
  5403                           ;./Line Follower.h: 33:  while(ADCON0bits.ADGO){};./Line Follower.h: 34:     ADC_val = A
      +                          DRESH << 8;;./Line Follower.h: 35:     ADC_val += ADRESL;;./Line Follower.h: 37: }
  5404     0171  0875               	movf	read_adc@sensor,w
  5405     0172  0021               	movlb	1	; select bank1
  5406     0173  009E               	movwf	30	;volatile
  5407     0174                     l1946:
  5408                           
  5409                           ;./Line Follower.h: 38: 
  5410     0174  1413               	bsf	19,0	;volatile
  5411                           
  5412                           ;./Line Follower.h: 39: void line_follower()
  5413     0175  300D               	movlw	13
  5414     0176  00F2               	movwf	??_read_adc
  5415     0177  30FC               	movlw	252
  5416     0178                     u1997:
  5417     0178  0B89               	decfsz	9,f
  5418     0179  2978               	goto	u1997
  5419     017A  0BF2               	decfsz	??_read_adc,f
  5420     017B  2978               	goto	u1997
  5421     017C                     l285:	
  5422                           ;./Line Follower.h: 41:     volatile unsigned int l_val, m_val, r_val;
  5423                           
  5424     017C  0021               	movlb	1	; select bank1
  5425     017D  1813               	btfsc	19,0	;volatile
  5426     017E  2980               	goto	u1611
  5427     017F  2981               	goto	u1610
  5428     0180                     u1611:
  5429     0180  297C               	goto	l285
  5430     0181                     u1610:
  5431     0181                     l1948:
  5432                           
  5433                           ;./Line Follower.h: 42: 
  5434     0181  080D               	movf	13,w	;volatile
  5435     0182  00F2               	movwf	??_read_adc
  5436     0183  01F3               	clrf	??_read_adc+1
  5437     0184  0872               	movf	??_read_adc,w
  5438     0185  00F3               	movwf	??_read_adc+1
  5439     0186  01F2               	clrf	??_read_adc
  5440     0187  0872               	movf	??_read_adc,w
  5441     0188  00F6               	movwf	read_adc@ADC_val	;volatile
  5442     0189  0873               	movf	??_read_adc+1,w
  5443     018A  00F7               	movwf	read_adc@ADC_val+1	;volatile
  5444                           
  5445                           ;./Line Follower.h: 43:     TRISAbits.TRISA0 = 0;
  5446     018B  080C               	movf	12,w	;volatile
  5447     018C  00F2               	movwf	??_read_adc
  5448     018D  01F3               	clrf	??_read_adc+1
  5449     018E  0872               	movf	??_read_adc,w
  5450     018F  07F6               	addwf	read_adc@ADC_val,f	;volatile
  5451     0190  0873               	movf	??_read_adc+1,w
  5452     0191  3DF7               	addwfc	read_adc@ADC_val+1,f	;volatile
  5453                           
  5454                           ;./Line Follower.h: 44:     TRISAbits.TRISA1 = 0;
  5455     0192  0877               	movf	read_adc@ADC_val+1,w	;volatile
  5456     0193  00F1               	movwf	?_read_adc+1
  5457     0194  0876               	movf	read_adc@ADC_val,w	;volatile
  5458     0195  00F0               	movwf	?_read_adc
  5459     0196                     l288:
  5460     0196  0008               	return
  5461     0197                     __end_of_read_adc:
  5462                           
  5463                           	psect	text26
  5464     004D                     __ptext26:	
  5465 ;; *************** function _ADC_init *****************
  5466 ;; Defined at:
  5467 ;;		line 19 in file "./Line Follower.h"
  5468 ;; Parameters:    Size  Location     Type
  5469 ;;		None
  5470 ;; Auto vars:     Size  Location     Type
  5471 ;;		None
  5472 ;; Return value:  Size  Location     Type
  5473 ;;                  1    wreg      void 
  5474 ;; Registers used:
  5475 ;;		wreg, status,2
  5476 ;; Tracked objects:
  5477 ;;		On entry : 0/0
  5478 ;;		On exit  : 0/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;Total ram usage:        0 bytes
  5486 ;; Hardware stack levels used: 1
  5487 ;; This function calls:
  5488 ;;		Nothing
  5489 ;; This function is called by:
  5490 ;;		_main
  5491 ;; This function uses a non-reentrant model
  5492 ;;
  5493                           
  5494     004D                     _ADC_init:	
  5495                           ;psect for function _ADC_init
  5496                           
  5497     004D                     l1996:	
  5498                           ;incstack = 0
  5499                           ; Regs used in _ADC_init: [wreg+status,2]
  5500                           
  5501                           
  5502                           ;./Line Follower.h: 21: 
  5503     004D  0020               	movlb	0	; select bank0
  5504     004E  1091               	bcf	17,1	;volatile
  5505                           
  5506                           ;./Line Follower.h: 22:     ADPCH = 0b1011;
  5507     004F  003E               	movlb	30	; select bank30
  5508     0050  1438               	bsf	56,0	;volatile
  5509     0051                     l1998:
  5510                           
  5511                           ;./Line Follower.h: 24: 
  5512     0051  3091               	movlw	145
  5513     0052  0021               	movlb	1	; select bank1
  5514     0053  0093               	movwf	19	;volatile
  5515                           
  5516                           ;./Line Follower.h: 25: int read_adc(char sensor)
  5517     0054  30FF               	movlw	255
  5518     0055  0098               	movwf	24	;volatile
  5519     0056                     l2000:
  5520                           
  5521                           ;./Line Follower.h: 26: {
  5522     0056  019A               	clrf	26	;volatile
  5523     0057                     l2002:
  5524                           
  5525                           ;./Line Follower.h: 27:  volatile unsigned int ADC_val;
  5526     0057  019C               	clrf	28	;volatile
  5527                           
  5528                           ;./Line Follower.h: 28: 
  5529     0058  303F               	movlw	63
  5530     0059  009D               	movwf	29	;volatile
  5531                           
  5532                           ;./Line Follower.h: 30:  ADCON0bits.ADGO = 1;
  5533     005A  300B               	movlw	11
  5534     005B  009E               	movwf	30	;volatile
  5535     005C                     l282:
  5536     005C  0008               	return
  5537     005D                     __end_of_ADC_init:
  5538     007E                     btemp	set	126	;btemp
  5539     007E                     wtemp0	set	126
  5540                           
  5541                           	psect	config
  5542                           
  5543                           ;Config register CONFIG1 @ 0x8007
  5544                           ;	External Oscillator mode selection bits
  5545                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  5546                           ;	Power-up default value for COSC bits
  5547                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  5548                           ;	Clock Out Enable bit
  5549                           ;	CLKOUTEN = ON, CLKOUT function is enabled; FOSC/4 clock appears at OSC2
  5550                           ;	Clock Switch Enable bit
  5551                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5552                           ;	Fail-Safe Clock Monitor Enable bit
  5553                           ;	FCMEN = ON, FSCM timer enabled
  5554     8007                     	org	32775
  5555     8007  3E8F               	dw	16015
  5556                           
  5557                           ;Config register CONFIG3 @ 0x8009
  5558                           ;	WDT Period Select bits
  5559                           ;	WDTCPS = 0x1F, unprogrammed default
  5560                           ;	WDT operating mode
  5561                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5562                           ;	WDT Window Select bits
  5563                           ;	WDTCWS = 0x7, unprogrammed default
  5564                           ;	WDT input clock selector
  5565                           ;	WDTCCS = 0x7, unprogrammed default
  5566     8009                     	org	32777
  5567     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         87
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      80
    BANK1            80      0      71
    BANK2            80      0      20
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send@message	PTR volatile unsigned char  size(1) Largest target is 10
		 -> ore_type@11783(COMMON[7]), surface_exploration@11779(COMMON[10]), custom_laser@11771(COMMON[6]), transmit_repair@11765(COMMON[6]), 
		 -> request_repair@11762(COMMON[6]), transmit_shield_code@11759(BANK0[6]), shoot_laser@11756(BANK0[7]), set_laser@11752(BANK0[7]), 
		 -> servo@11748(COMMON[10]), motor@11741(BANK0[10]), user_data_send@11729(BANK0[6]), PCLS_info_send@11721(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_line_follower
    _main->_shield_code
    _shield_code->_user_data
    _transmit_shield_code->_UART_send
    _shoot_laser->_UART_send
    _set_laser->_UART_send
    _PCLS_info->_PCLS_info_send
    _PCLS_info_send->_UART_send
    _PCLS_info_receive->_rx_wait
    _line_follower->_motor
    _user_data->_user_data_receive
    _user_data_send->_UART_send
    _user_data_receive->___lwdiv
    _Vdrive->___awdiv
    _motor->_UART_send
    _UART_send->_tx_wait
    ___wmul->___awdiv
    ___awdiv->_abs
    _IR_init->_read_adc
    _IR->_read_adc

Critical Paths under _main in BANK0

    _main->_drive
    _PCLS_info->_PCLS_info_receive
    _line_follower->_motor
    _user_data->_user_data_receive
    _Vdrive->_motor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24347
                           _ADC_init
                                 _IR
                            _IR_init
                          _UART_init
                              _drive
                      _line_follower
                           _read_adc
                        _shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _shield_code                                          2     2      0    9865
                                             12 COMMON     2     2      0
                          _PCLS_info
                          _set_laser
                        _shoot_laser
               _transmit_shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (2) _transmit_shield_code                                 7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _shoot_laser                                          9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _set_laser                                            9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _PCLS_info                                            0     0      0    1854
                  _PCLS_info_receive
                     _PCLS_info_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_receive                                   17    17      0     277
                                              2 COMMON     3     3      0
                                              0 BANK0     14    14      0
                            _rx_wait
 ---------------------------------------------------------------------------------
 (1) _line_follower                                        8     8      0    2975
                                             12 COMMON     2     2      0
                                             11 BANK0      6     6      0
                                _abs
                              _motor
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _drive                                                8     8      0    8400
                                             28 BANK0      8     8      0
                             _Vdrive
                             ___wmul
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _user_data                                            1     1      0    2946
                                             11 COMMON     1     1      0
                  _user_data_receive
                     _user_data_send
 ---------------------------------------------------------------------------------
 (2) _user_data_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _user_data_receive                                   31    31      0    1369
                                              8 COMMON     3     3      0
                                              0 BANK0     28    28      0
                            ___lwdiv
                            _rx_wait
 ---------------------------------------------------------------------------------
 (3) _rx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Vdrive                                              12     8      4    4836
                                             11 BANK0     12     8      4
                            ___awdiv
                             ___wmul
                                _abs
                              _motor
 ---------------------------------------------------------------------------------
 (2) _motor                                               15    12      3    2338
                                              8 COMMON     4     1      3
                                              0 BANK0     11    11      0
                          _UART_send
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_send                                            6     4      2    1553
                                              2 COMMON     6     4      2
                            _tx_wait
 ---------------------------------------------------------------------------------
 (4) _tx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     522
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              4 COMMON     9     5      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_init                                              0     0      0      46
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _IR                                                   4     4      0      69
                                              8 COMMON     4     4      0
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             8     6      2      46
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _IR
     _read_adc
   _IR_init
     _read_adc
   _UART_init
   _drive
     _Vdrive
       ___awdiv
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
         _abs (ARG)
       _abs
       _motor
         _UART_send
           _tx_wait
         _abs (ARG)
     ___wmul
     _user_data
       _user_data_receive
         ___lwdiv
         _rx_wait
       _user_data_send
         _UART_send
   _line_follower
     _abs
     _motor
     _read_adc
   _read_adc
   _shield_code
     _PCLS_info
       _PCLS_info_receive
         _rx_wait
       _PCLS_info_send
         _UART_send
     _set_laser
       _UART_send
     _shoot_laser
       _UART_send
     _transmit_shield_code
       _UART_send
     _user_data
   _user_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      14       9       25.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Apr 05 17:10:47 2024

                          l81 009D                            l90 00C3                            l84 00AA  
                          l87 00B6                            l96 01BF                            _IR 0218  
                ___awdiv@sign 007A           ___wmul@multiplicand 0022     __end_of_user_data_receive 07CD  
                         ?_IR 0070                           l100 006C                           l130 00F9  
                         l122 004C                           l115 0371                           l140 0784  
                         l108 0115                           l301 046D                           l310 04F7  
                         l302 0487                           l311 050A                           l320 0235  
                         l312 0531                           l304 04A2                           l137 07CC  
                         l322 0245                           l234 0562                           l307 04C4  
                         l156 0277                           l148 0091                           l172 01EB  
                         l180 0217                           l317 0040                           l501 016F  
                         l245 062B                           l253 02F1                           l309 04E5  
                         l327 032F                           l248 0659                           l282 005C  
                         l291 0425                           l347 03BD                           l188 0131  
                         l285 017C                           l294 0434                           l288 0196  
                         l297 0443                           l652 041D                           l499 015B  
                         l962 00DD                           l779 02B3                           l959 00DD  
                         u970 009C                           u971 009B                           u980 00A2  
                         u981 00A1                           u990 00B5                           u991 00B4  
                         _abs 00C4                           _swA 004C                           _swB 004A  
                         _swC 0048                           _swD 0046                           wreg 0009  
                        ??_IR 0078                  _BAUD1CONbits 011F                          l2000 0056  
                        l2002 0057                          l2010 0438                          ?_abs 0070  
                        l2020 0462                          l2012 0441                          l2004 041E  
                        l2030 0485                          l2022 0464                          l2014 0447  
                        l2006 0429                          l2040 04A3                          l2032 0488  
                        l2024 046C                          l2016 0450                          l2008 0432  
                        l2200 03B7                          l2050 04F2                          l2042 04B0  
                        l2034 0492                          l2026 0477                          l2018 045A  
                        l2060 0035                          l2052 0505                          l2044 04B8  
                        l2036 049C                          l2028 047B                          l2070 0239  
                        l2062 0218                          l2054 0512                          l2046 04D1  
                        l2038 04A0                          l2064 021D                          l2056 052D  
                        l2048 04D9                          l2080 0300                          l2072 02F2  
                        l2066 0225                          l1602 00AB                          l2058 052F  
                        l2090 0319                          l2082 0307                          l2074 02F5  
                        l2068 0230                          l1620 0198                          l1612 00BD  
                        l1604 00AF                          l1700 065F                          l2092 0324  
                        l2084 030B                          l2076 02F8                          l2180 037B  
                        l1630 01AD                          l1622 019A                          l1702 0667  
                        l1710 0677                          l2086 0312                          l2078 02FD  
                        l2190 039F                          l2182 0382                          l2174 0372  
                        l1800 016B                          l1624 01A2                          l1632 01B1  
                        l1640 027A                          l1608 00BB                          l1616 00C2  
                        l1720 06B3                          l1712 067D                          l1704 0670  
                        l2088 0316                          l2192 03A3                          l2184 038E  
                        l2176 0375                          l1810 03C9                          l1634 01BE  
                        l1650 0290                          l1642 0280                          l1730 0701  
                        l1722 06C7                          l1714 0692                          l2194 03A6  
                        l2186 0394                          l2178 0378                          l1820 03DA  
                        l1812 03CB                          l1804 03BF                          l1628 01A4  
                        l1652 029F                          l1644 0283                          l1660 02AF  
                        l1740 073A                          l1732 0711                          l1724 06CE  
                        l1716 06A2                          l1708 0672                          l1900 020A  
                        l2196 03A9                          l2188 039C                          l1830 03F0  
                        l1822 03E0                          l1814 03CF                          l1806 03C0  
                        l1590 00A2                          l1910 0540                          l1654 02A3  
                        l1646 0288                          l1638 0278                          l1750 076F  
                        l1742 0744                          l1734 0718                          l1726 06D8  
                        l1718 06A9                          l1670 0330                          l1902 0116  
                        l2198 03B0                          l1832 03FF                          l1824 03E3  
                        l1840 040F                          l1816 03D4                          l1808 03C4  
                        l1584 0092                          l1760 0248                          l1920 0595  
                        l1912 054E                          l1656 02A4                          l1648 028C  
                        l1752 0772                          l1744 0755                          l1736 0722  
                        l1728 06DC                          l1672 0333                          l1664 00FA  
                        l1904 0116                          l1842 0414                          l1834 0403  
                        l1826 03E8                          l1818 03D8                          l1594 00A4  
                        l1586 0096                          l1770 025D                          l1762 0248  
                        l1930 05F1                          l1922 05A2                          l1914 0567  
                        l1658 02A9                          l1754 077B                          l1746 075C  
                        l1738 0733                          l1690 00DE                          l1682 0348  
                        l1674 0335                          l1666 00FA                          l1906 0124  
                        l1844 0419                          l1836 0404                          l1828 03EC  
                        l1780 0266                          l1772 025F                          l1764 0256  
                        l1940 063C                          l1932 0616                          l1924 05B0  
                        l1916 0574                          l1908 0532                          l1756 0780  
                        l1748 0766                          l1692 00DE                          l1860 008A  
                        l1676 033D                          l1684 034D                          l1668 0108  
                        l1852 0044                          l1838 0409                          l1790 0150  
                        l1598 00A9                          l1782 0268                          l1774 0261  
                        l1766 0259                          l1942 063F                          l1934 0624  
                        l1926 05D5                          l1918 0588                          l1694 00EC  
                        l1854 007F                          l1686 0353                          l1678 0346  
                        l1870 01D5                          l1862 01C2                          l1944 0171  
                        l1952 005D                          l1792 0153                          l1784 026A  
                        l1776 0262                          l1768 025B                          l1936 0628  
                        l1928 05E3                          l1696 065A                          l1848 0041  
                        l1880 01DE                          l1872 01D7                          l1864 01C2  
                        l1946 0174                          l1954 0067                          l1794 0157  
                        l1786 00C4                          l1778 0264                          l1938 0638  
                        l1698 065D                          l1858 0082                          l1874 01D9  
                        l1866 01D0                          l1890 0201                          l1882 01EE  
                        l1948 0181                          l1796 0160                          l1788 00D1  
                        l1876 01DB                          l1868 01D3                          l1892 0203  
                        l1884 01EE                          l1798 0165                          l1990 02CA  
                        l1982 02B4                          l1878 01DC                          l1894 0205  
                        l1886 01FC                          l1992 02D6                          l1984 02B7  
                        l1896 0207                          l1888 01FF                          l1994 02E6  
                        l1986 02C1                          l1898 0208                          l1996 004D  
                        l1988 02C6                          l1998 0051                          u1000 00BB  
                        u1001 00BA                          u1010 01A2                          u1011 01A1  
                        u1020 01BE                          u1100 0104                          u1021 01BD  
                        u1030 0280                          u1110 0115                          u1031 027F  
                        u1111 0114                          u1200 074E                          u1120 033D  
                        u1025 01BA                          u1201 074C                          u1121 033C  
                        u1050 0290                          u1210 074F                          u1130 0353  
                        u1051 028F                          u1131 0352                          u1220 076F  
                        u1140 00E8                          u1045 0284                          u1221 076E  
                        u1070 029F                          u1230 077B                          u1150 00F9  
                        u1071 029E                          u1231 077A                          u1151 00F8  
                        u1320 016B                          u1240 079F                          u1160 0667  
                        u1321 016A                          u1305 015C                          u1065 0291  
                        u1241 079D                          u1161 0666                          u1410 040F  
                        u1330 03C4                          u1090 02AF                          u1250 07A0  
                        u1170 067D                          u1411 040E                          u1331 03C3  
                        u1315 0161                          u1091 02AE                          u1075 029B  
                        u1171 067C                          u1420 0414                          u1340 03CF  
                        u1260 0252                          u1180 072C                          u1500 0131  
                        u1421 0413                          u1405 0405                          u1341 03CE  
                        u1085 02A5                          u1181 072A                          u1501 0130  
                        u1350 03E0                          u1270 0277                          u1510 0540  
                        u1190 072D                          u1430 004C                          u1351 03DF  
                        u1271 0276                          u1511 053F                          u1431 004B  
                        u1280 00D1                          u1600 0638                          u1520 054E  
                        u1440 008A                          u1281 00D0                          u1601 0637  
                        u1521 054D                          u1441 0089                          u1610 0181  
                        u1370 03F0                          u1290 0157                          u1530 0567  
                        u1450 01CC                          u1611 0180                          u1371 03EF  
                        u1291 0156                          u1531 0566                          u1515 053C  
                        u1540 0574                          u1700 0492                          u1460 01EB  
                        u1365 03E4                          u1285 00CD                          u1605 0634  
                        u1541 0573                          u1525 054A                          u1701 0491  
                        u1461 01EA                          u1390 03FF                          u1550 05A2  
                        u1710 04B0                          u1470 01F8                          u1391 03FE  
                        u1551 05A1                          u1711 04AF                          u1560 05B0  
                        u1640 02C1                          u1720 04D1                          u1480 0217  
                        u1385 03F1                          u1561 05AF                          u1545 0570  
                        u1641 02C0                          u1721 04D0                          u1705 048E  
                        u1481 0216                          u1570 05E3                          u1730 04F2  
                        u1650 0429                          u1490 0120                          u1395 03FB  
                        u1571 05E2                          u1555 059E                          u1731 04F1  
                        u1715 04AC                          u1651 0428                          u1580 05F1  
                        u1740 0505                          u1660 0438                          u1900 039B  
                        u1581 05F0                          u1565 05AC                          u1741 0504  
                        u1725 04CD                          u1661 0437                          u1901 039A  
                        u1750 0230                          u1590 0624                          u1670 0447  
                        u1910 03B0                          u1751 022F                          u1591 0623  
                        u1575 05DF                          u1735 04EE                          u1671 0446  
                        u1911 03AF                          u1680 045A                          u1760 02FD  
                        u1920 03B7                          u1585 05ED                          u1745 0501  
                        u1681 0459                          u1761 02FC                          u1921 03B6  
                        u1690 0477                          u1770 0307                          u1755 022C  
                        u1595 0620                          u1691 0476                          u1771 0306  
                        u1685 0456                          u1695 0473                          u1937 030E  
                        u1890 0382                          u1947 031C                          u1891 0381  
                        u1957 0329                          u1967 050D                          u1977 008D  
                        u1987 023E                          u1997 0178                          abs@a 0070  
                        _fast 0064                          _main 0372                          _serA 0056  
                        _lpin 006E                          _potA 0044                          _potB 00C7  
                        _mpin 006D                          _rpin 006C                          fsr0h 0005  
                        fsr1h 0007                          indf0 0000                          fsr0l 0004  
                        _slow 0062                          indf1 0001                          fsr1l 0006  
                        btemp 007E               __end_of_IR_init 0041                          start 0003  
            __end_of_ADC_init 005D  __end_of_transmit_shield_code 0132                         ??_abs 0072  
   surface_exploration@F11778 0120                 shoot_laser@en 0020                         _ADACQ 009D  
                       ?_main 0070                         _ADCLK 0098                         _ADPCH 009E  
                       _ADREF 009A               __end_of___awdiv 041E                         _ADPRE 009C  
             ___awdiv@divisor 0074               __end_of___lwdiv 02B4               ___awdiv@counter 0079  
                       _RCREG 0119                         _TXREG 011A                         _l_dir 0059  
                       _l_vec 006A                         _drive 02B4                         _r_dir 0058  
                       _r_vec 0068                         _motor 0246                         status 0003  
             __end_of_rx_wait 00C4                         wtemp0 007E               __end_of_tx_wait 00AB  
             __initialization 07CD                  __end_of_main 03BF                        ??_main 007E  
         PCLS_info_send@11721 0020              ??_PCLS_info_send 0078                        _ADCON0 0093  
                      ?_drive 0070                        _ADRESH 008D                        _ADRESL 008C  
                   ??_IR_init 0078              ___awdiv@dividend 0076                        ?_motor 0078  
                      _RC6PPS 0F26             __end_of_PCLS_info 004D                  ?_shield_code 0070  
                      _Vdrive 0532                        ___wmul 0150             __end_of_UART_init 006D  
                   ??___awdiv 0078             __end_of_UART_send 01C0                        _health 00C5  
                   ??___lwdiv 0074              __end_of_read_adc 0197                        _teamID 005D  
            ___awdiv@quotient 007B                        _joy_lx 004E                        _joy_ly 0050  
                      _joy_rx 0054                        _joy_ry 0052                        drive@x 003E  
                      drive@y 0040                     ?_ADC_init 0070             _PCLS_info_receive 0330  
                   ??_rx_wait 0070                     ??_tx_wait 0070                  rx_wait@count 0070  
                ?_shoot_laser 0070            ?_PCLS_info_receive 0070          _transmit_shield_code 0116  
           shoot_laser@F11755 00B1                     IR@ADC_val 007A       __end_of__initialization 07FD  
         ??_PCLS_info_receive 0072                __pcstackCOMMON 0070            custom_laser@F11770 00BF  
                __pidataBANK0 006D                  __pidataBANK1 0132          request_repair@F11761 00CF  
               __end_of_drive 02F2                 __end_of_motor 0278                    __end_of_IR 0246  
   __end_of_PCLS_info_receive 0372                 _line_follower 041E                    ??_ADC_init 0070  
                     ??_drive 003C         ?_transmit_shield_code 0070                       ??_motor 007B  
                  __pbssBANK0 0044                    __pbssBANK1 00A0                    __pbssBANK2 0120  
        PCLS_info_send@F11720 00E1                    __pmaintext 0372                       ?_Vdrive 002B  
                     ?___wmul 0020                ?_line_follower 0070                ore_type@F11782 00AA  
              _user_data_send 00DE                       _IR_base 005E                       _IR_init 0035  
                tx_wait@count 0070                     ?_read_adc 0070               Vdrive@right_dir 0032  
                 motor@F11740 00A0                       Vdrive@x 002D                       Vdrive@y 002B  
                     ___awdiv 03BF                       ___lwdiv 0278                       __ptext1 02F2  
                     __ptext2 0116                       __ptext3 01EC                       __ptext4 01C0  
                     __ptext5 0041                       __ptext6 00FA                       __ptext7 0330  
                     __ptext8 041E                       __ptext9 02B4               read_adc@ADC_val 0076  
              set_laser@11752 0021        __end_of_user_data_send 00FA     transmit_shield_code@11759 0020  
                 set_laser@en 0020                   servo@F11747 012A        ??_transmit_shield_code 0078  
                     _rx_wait 00AB                       clrloop0 002A                       _tx_wait 0092  
        end_of_initialization 07FD                       init_ram 002F                    ??_read_adc 0072  
                     initloop 0030             __end_of_set_laser 01EC    transmit_shield_code@F11758 00D5  
                   _PCLS_info 0041             __end_of_user_data 0092            user_data_receive@j 003B  
          user_data_receive@r 0020            user_data_receive@s 003A                     _UART_init 005D  
                   _UART_send 0197               ??_line_follower 007C               ?_user_data_send 0070  
                   _TRISAbits 0011                    ?_PCLS_info 0070                __end_of_Vdrive 065A  
              __end_of___wmul 0170                    ?_UART_init 0070                    ?_UART_send 0072  
         start_initialization 07CD                   __end_of_abs 00DE            PCLS_info_receive@j 002D  
          PCLS_info_receive@r 0020            PCLS_info_receive@s 002C                      ??_Vdrive 002F  
                    ??___wmul 007D                   __pdataBANK0 005E                   __pdataBANK1 00C9  
            shoot_laser@11756 0021                     ___latbits 0002                 __pcstackBANK0 0020  
            UART_send@message 0076                      ?_IR_init 0070                   ??_PCLS_info 0079  
            ___lwdiv@dividend 0072                      ?___awdiv 0074                      ?___lwdiv 0070  
              Vdrive@left_dir 0031                   ??_UART_init 0070                   ??_UART_send 0074  
                  motor@11741 0021                      _ADC_init 004D              ___lwdiv@quotient 0075  
                    ?_rx_wait 0070                      ?_tx_wait 0070                 ??_shield_code 007C  
              ___wmul@product 0024                      _LATAbits 0016                     clear_ram0 0029  
                  UART_send@i 0077                      _PIR1bits 070D                      _PIR3bits 070F  
                   _set_laser 01C0                     _speed_inc 0060              ??_user_data_send 0078  
                  _ADCON0bits 0093                read_adc@sensor 0075             ___wmul@multiplier 0020  
                   _user_data 007F                 ??_shoot_laser 0078                _PCLS_info_send 00FA  
                 _auto_switch 0057                    ?_set_laser 0070           __end_of_shield_code 0330  
          line_follower@l_val 002B            line_follower@m_val 002D            line_follower@r_val 002F  
                 _SP1BRGLbits 011B                    _ANSELAbits 0F38                    _ANSELCbits 0F4E  
                 _line_colour 0066                    ?_user_data 0070         __end_of_line_follower 0532  
               UART_send@size 0072               ___lwdiv@divisor 0070               ___lwdiv@counter 0077  
                    __ptext10 007F                      __ptext11 00DE                      __ptext20 0150  
                    __ptext12 065A                      __ptext21 03BF                      __ptext13 00AB  
                    __ptext22 005D                      __ptext14 0278                      __ptext23 0035  
                    __ptext15 0532                      __ptext24 0218                      __ptext16 0246  
                    __ptext25 0170                      __ptext17 0197                      __ptext26 004D  
                    __ptext18 0092                      __ptext19 00C4        __end_of_PCLS_info_send 0116  
               Vdrive@l_motor 0033                 Vdrive@r_motor 0035                      _read_adc 0170  
         __end_of_shoot_laser 0218                     motor@dirA 0020                     motor@dirB 0079  
                   motor@pwmA 0078                     motor@pwmB 007A               set_laser@F11751 00B8  
                    _playerID 005C                    _RC1STAbits 011D                      _starting 006F  
                    drive@dir 0042                   _repair_flag 005A          user_data_send@F11728 00DB  
             ?_PCLS_info_send 0070                   _shield_code 02F2                   _shield_flag 005B  
                 ??_set_laser 0078           user_data_send@11729 0020             _user_data_receive 065A  
                 ??_user_data 007B            ?_user_data_receive 0070                    _TX1STAbits 011E  
       transmit_repair@F11764 00C9                   _shoot_laser 01EC           ??_user_data_receive 0078  
