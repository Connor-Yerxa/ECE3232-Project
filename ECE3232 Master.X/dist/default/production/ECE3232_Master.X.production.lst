

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Apr 08 18:10:40 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Version 2.40
    50                           ; Generated 04/07/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F18855 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000D                     	;# 
    98     000E                     	;# 
    99     0010                     	;# 
   100     0011                     	;# 
   101     0012                     	;# 
   102     0013                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     001C                     	;# 
   107     001C                     	;# 
   108     001D                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     008C                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0090                     	;# 
   120     0091                     	;# 
   121     0093                     	;# 
   122     0094                     	;# 
   123     0095                     	;# 
   124     0096                     	;# 
   125     0097                     	;# 
   126     0098                     	;# 
   127     0099                     	;# 
   128     009A                     	;# 
   129     009B                     	;# 
   130     009C                     	;# 
   131     009D                     	;# 
   132     009E                     	;# 
   133     010C                     	;# 
   134     010D                     	;# 
   135     010E                     	;# 
   136     010E                     	;# 
   137     010F                     	;# 
   138     0110                     	;# 
   139     0110                     	;# 
   140     0111                     	;# 
   141     0112                     	;# 
   142     0112                     	;# 
   143     0113                     	;# 
   144     0114                     	;# 
   145     0114                     	;# 
   146     0115                     	;# 
   147     0116                     	;# 
   148     0116                     	;# 
   149     0117                     	;# 
   150     0119                     	;# 
   151     0119                     	;# 
   152     0119                     	;# 
   153     011A                     	;# 
   154     011A                     	;# 
   155     011A                     	;# 
   156     011B                     	;# 
   157     011B                     	;# 
   158     011B                     	;# 
   159     011B                     	;# 
   160     011B                     	;# 
   161     011C                     	;# 
   162     011C                     	;# 
   163     011C                     	;# 
   164     011D                     	;# 
   165     011D                     	;# 
   166     011D                     	;# 
   167     011E                     	;# 
   168     011E                     	;# 
   169     011E                     	;# 
   170     011F                     	;# 
   171     011F                     	;# 
   172     011F                     	;# 
   173     011F                     	;# 
   174     011F                     	;# 
   175     018C                     	;# 
   176     018D                     	;# 
   177     018E                     	;# 
   178     018F                     	;# 
   179     0190                     	;# 
   180     0191                     	;# 
   181     0192                     	;# 
   182     0196                     	;# 
   183     0197                     	;# 
   184     0198                     	;# 
   185     0199                     	;# 
   186     019A                     	;# 
   187     019B                     	;# 
   188     019C                     	;# 
   189     020C                     	;# 
   190     020C                     	;# 
   191     020D                     	;# 
   192     020E                     	;# 
   193     020F                     	;# 
   194     020F                     	;# 
   195     0210                     	;# 
   196     0210                     	;# 
   197     0211                     	;# 
   198     0211                     	;# 
   199     0212                     	;# 
   200     0212                     	;# 
   201     0213                     	;# 
   202     0214                     	;# 
   203     0215                     	;# 
   204     0215                     	;# 
   205     0216                     	;# 
   206     0216                     	;# 
   207     0217                     	;# 
   208     0217                     	;# 
   209     0218                     	;# 
   210     0218                     	;# 
   211     0219                     	;# 
   212     021A                     	;# 
   213     021B                     	;# 
   214     021B                     	;# 
   215     021C                     	;# 
   216     021C                     	;# 
   217     021D                     	;# 
   218     021D                     	;# 
   219     021E                     	;# 
   220     021F                     	;# 
   221     028C                     	;# 
   222     028C                     	;# 
   223     028D                     	;# 
   224     028D                     	;# 
   225     028E                     	;# 
   226     028F                     	;# 
   227     0290                     	;# 
   228     0290                     	;# 
   229     0291                     	;# 
   230     0292                     	;# 
   231     0292                     	;# 
   232     0293                     	;# 
   233     0293                     	;# 
   234     0294                     	;# 
   235     0295                     	;# 
   236     0296                     	;# 
   237     0296                     	;# 
   238     0297                     	;# 
   239     0298                     	;# 
   240     0298                     	;# 
   241     0299                     	;# 
   242     0299                     	;# 
   243     029A                     	;# 
   244     029B                     	;# 
   245     029C                     	;# 
   246     029C                     	;# 
   247     029D                     	;# 
   248     030C                     	;# 
   249     030C                     	;# 
   250     030D                     	;# 
   251     030E                     	;# 
   252     030F                     	;# 
   253     0310                     	;# 
   254     0310                     	;# 
   255     0311                     	;# 
   256     0312                     	;# 
   257     0313                     	;# 
   258     0314                     	;# 
   259     0314                     	;# 
   260     0315                     	;# 
   261     0316                     	;# 
   262     0317                     	;# 
   263     0318                     	;# 
   264     0318                     	;# 
   265     0319                     	;# 
   266     031A                     	;# 
   267     031B                     	;# 
   268     031C                     	;# 
   269     031C                     	;# 
   270     031D                     	;# 
   271     031E                     	;# 
   272     031F                     	;# 
   273     038C                     	;# 
   274     038C                     	;# 
   275     038D                     	;# 
   276     038E                     	;# 
   277     0390                     	;# 
   278     0390                     	;# 
   279     0391                     	;# 
   280     0392                     	;# 
   281     040C                     	;# 
   282     040D                     	;# 
   283     040E                     	;# 
   284     040F                     	;# 
   285     0410                     	;# 
   286     0411                     	;# 
   287     0416                     	;# 
   288     0416                     	;# 
   289     0417                     	;# 
   290     0418                     	;# 
   291     0418                     	;# 
   292     0419                     	;# 
   293     041A                     	;# 
   294     041A                     	;# 
   295     041B                     	;# 
   296     041C                     	;# 
   297     041C                     	;# 
   298     041D                     	;# 
   299     041E                     	;# 
   300     041F                     	;# 
   301     048C                     	;# 
   302     048C                     	;# 
   303     048D                     	;# 
   304     048E                     	;# 
   305     048F                     	;# 
   306     048F                     	;# 
   307     0490                     	;# 
   308     0491                     	;# 
   309     0492                     	;# 
   310     0492                     	;# 
   311     0493                     	;# 
   312     0494                     	;# 
   313     0495                     	;# 
   314     0495                     	;# 
   315     0496                     	;# 
   316     0497                     	;# 
   317     0498                     	;# 
   318     0499                     	;# 
   319     049A                     	;# 
   320     049B                     	;# 
   321     049C                     	;# 
   322     049D                     	;# 
   323     050C                     	;# 
   324     050C                     	;# 
   325     050D                     	;# 
   326     050E                     	;# 
   327     050F                     	;# 
   328     050F                     	;# 
   329     0510                     	;# 
   330     0511                     	;# 
   331     0512                     	;# 
   332     0512                     	;# 
   333     0513                     	;# 
   334     0514                     	;# 
   335     0515                     	;# 
   336     0515                     	;# 
   337     0516                     	;# 
   338     0517                     	;# 
   339     0518                     	;# 
   340     0519                     	;# 
   341     051A                     	;# 
   342     051B                     	;# 
   343     051C                     	;# 
   344     051D                     	;# 
   345     058C                     	;# 
   346     058C                     	;# 
   347     058D                     	;# 
   348     058E                     	;# 
   349     058F                     	;# 
   350     058F                     	;# 
   351     0590                     	;# 
   352     0591                     	;# 
   353     0592                     	;# 
   354     0593                     	;# 
   355     060C                     	;# 
   356     060D                     	;# 
   357     060E                     	;# 
   358     060F                     	;# 
   359     0610                     	;# 
   360     0611                     	;# 
   361     0612                     	;# 
   362     0613                     	;# 
   363     0614                     	;# 
   364     0616                     	;# 
   365     0617                     	;# 
   366     0618                     	;# 
   367     0619                     	;# 
   368     061A                     	;# 
   369     061B                     	;# 
   370     061C                     	;# 
   371     061D                     	;# 
   372     061E                     	;# 
   373     068C                     	;# 
   374     068D                     	;# 
   375     068E                     	;# 
   376     068F                     	;# 
   377     0690                     	;# 
   378     0691                     	;# 
   379     0692                     	;# 
   380     0693                     	;# 
   381     0694                     	;# 
   382     070C                     	;# 
   383     070D                     	;# 
   384     070E                     	;# 
   385     070F                     	;# 
   386     0710                     	;# 
   387     0711                     	;# 
   388     0712                     	;# 
   389     0713                     	;# 
   390     0714                     	;# 
   391     0716                     	;# 
   392     0717                     	;# 
   393     0718                     	;# 
   394     0719                     	;# 
   395     071A                     	;# 
   396     071B                     	;# 
   397     071C                     	;# 
   398     071D                     	;# 
   399     071E                     	;# 
   400     0796                     	;# 
   401     0797                     	;# 
   402     0798                     	;# 
   403     0799                     	;# 
   404     079A                     	;# 
   405     079B                     	;# 
   406     080C                     	;# 
   407     080D                     	;# 
   408     080E                     	;# 
   409     080F                     	;# 
   410     0810                     	;# 
   411     0811                     	;# 
   412     0812                     	;# 
   413     0813                     	;# 
   414     0814                     	;# 
   415     081A                     	;# 
   416     081B                     	;# 
   417     081C                     	;# 
   418     081D                     	;# 
   419     081E                     	;# 
   420     081F                     	;# 
   421     088C                     	;# 
   422     088D                     	;# 
   423     088E                     	;# 
   424     088F                     	;# 
   425     0890                     	;# 
   426     0891                     	;# 
   427     0892                     	;# 
   428     0893                     	;# 
   429     0895                     	;# 
   430     0896                     	;# 
   431     0897                     	;# 
   432     0898                     	;# 
   433     0899                     	;# 
   434     089A                     	;# 
   435     089B                     	;# 
   436     090C                     	;# 
   437     090E                     	;# 
   438     090F                     	;# 
   439     091F                     	;# 
   440     091F                     	;# 
   441     098F                     	;# 
   442     098F                     	;# 
   443     0990                     	;# 
   444     0991                     	;# 
   445     0992                     	;# 
   446     0993                     	;# 
   447     0994                     	;# 
   448     0995                     	;# 
   449     0996                     	;# 
   450     0997                     	;# 
   451     0E0F                     	;# 
   452     0E10                     	;# 
   453     0E11                     	;# 
   454     0E12                     	;# 
   455     0E13                     	;# 
   456     0E14                     	;# 
   457     0E15                     	;# 
   458     0E16                     	;# 
   459     0E17                     	;# 
   460     0E18                     	;# 
   461     0E19                     	;# 
   462     0E1A                     	;# 
   463     0E1B                     	;# 
   464     0E1C                     	;# 
   465     0E1D                     	;# 
   466     0E1E                     	;# 
   467     0E1F                     	;# 
   468     0E20                     	;# 
   469     0E21                     	;# 
   470     0E22                     	;# 
   471     0E23                     	;# 
   472     0E24                     	;# 
   473     0E25                     	;# 
   474     0E26                     	;# 
   475     0E27                     	;# 
   476     0E28                     	;# 
   477     0E29                     	;# 
   478     0E2A                     	;# 
   479     0E2B                     	;# 
   480     0E2C                     	;# 
   481     0E2D                     	;# 
   482     0E2E                     	;# 
   483     0E2F                     	;# 
   484     0E30                     	;# 
   485     0E31                     	;# 
   486     0E32                     	;# 
   487     0E33                     	;# 
   488     0E34                     	;# 
   489     0E35                     	;# 
   490     0E36                     	;# 
   491     0E37                     	;# 
   492     0E8F                     	;# 
   493     0E90                     	;# 
   494     0E91                     	;# 
   495     0E92                     	;# 
   496     0E93                     	;# 
   497     0E94                     	;# 
   498     0E95                     	;# 
   499     0E96                     	;# 
   500     0E97                     	;# 
   501     0E9C                     	;# 
   502     0E9D                     	;# 
   503     0E9E                     	;# 
   504     0EA1                     	;# 
   505     0EA2                     	;# 
   506     0EA3                     	;# 
   507     0EA4                     	;# 
   508     0EA5                     	;# 
   509     0EA9                     	;# 
   510     0EAA                     	;# 
   511     0EAB                     	;# 
   512     0EAC                     	;# 
   513     0EB1                     	;# 
   514     0EB2                     	;# 
   515     0EB3                     	;# 
   516     0EB8                     	;# 
   517     0EB9                     	;# 
   518     0EBA                     	;# 
   519     0EBB                     	;# 
   520     0EBC                     	;# 
   521     0EBD                     	;# 
   522     0EBE                     	;# 
   523     0EC3                     	;# 
   524     0EC5                     	;# 
   525     0EC6                     	;# 
   526     0EC7                     	;# 
   527     0EC8                     	;# 
   528     0EC9                     	;# 
   529     0ECA                     	;# 
   530     0ECB                     	;# 
   531     0ECC                     	;# 
   532     0F10                     	;# 
   533     0F11                     	;# 
   534     0F12                     	;# 
   535     0F13                     	;# 
   536     0F14                     	;# 
   537     0F15                     	;# 
   538     0F16                     	;# 
   539     0F17                     	;# 
   540     0F18                     	;# 
   541     0F19                     	;# 
   542     0F1A                     	;# 
   543     0F1B                     	;# 
   544     0F1C                     	;# 
   545     0F1D                     	;# 
   546     0F1E                     	;# 
   547     0F1F                     	;# 
   548     0F20                     	;# 
   549     0F21                     	;# 
   550     0F22                     	;# 
   551     0F23                     	;# 
   552     0F24                     	;# 
   553     0F25                     	;# 
   554     0F26                     	;# 
   555     0F27                     	;# 
   556     0F38                     	;# 
   557     0F39                     	;# 
   558     0F3A                     	;# 
   559     0F3B                     	;# 
   560     0F3C                     	;# 
   561     0F3D                     	;# 
   562     0F3E                     	;# 
   563     0F3F                     	;# 
   564     0F40                     	;# 
   565     0F41                     	;# 
   566     0F43                     	;# 
   567     0F44                     	;# 
   568     0F45                     	;# 
   569     0F46                     	;# 
   570     0F47                     	;# 
   571     0F48                     	;# 
   572     0F49                     	;# 
   573     0F4A                     	;# 
   574     0F4B                     	;# 
   575     0F4C                     	;# 
   576     0F4E                     	;# 
   577     0F4F                     	;# 
   578     0F50                     	;# 
   579     0F51                     	;# 
   580     0F52                     	;# 
   581     0F53                     	;# 
   582     0F54                     	;# 
   583     0F55                     	;# 
   584     0F56                     	;# 
   585     0F57                     	;# 
   586     0F65                     	;# 
   587     0F68                     	;# 
   588     0F69                     	;# 
   589     0F6A                     	;# 
   590     0F6B                     	;# 
   591     0FE4                     	;# 
   592     0FE5                     	;# 
   593     0FE6                     	;# 
   594     0FE7                     	;# 
   595     0FE8                     	;# 
   596     0FE9                     	;# 
   597     0FEA                     	;# 
   598     0FEB                     	;# 
   599     0FED                     	;# 
   600     0FEE                     	;# 
   601     0FEF                     	;# 
   602     0000                     	;# 
   603     0001                     	;# 
   604     0002                     	;# 
   605     0003                     	;# 
   606     0004                     	;# 
   607     0005                     	;# 
   608     0006                     	;# 
   609     0007                     	;# 
   610     0008                     	;# 
   611     0009                     	;# 
   612     000A                     	;# 
   613     000B                     	;# 
   614     000C                     	;# 
   615     000D                     	;# 
   616     000E                     	;# 
   617     0010                     	;# 
   618     0011                     	;# 
   619     0012                     	;# 
   620     0013                     	;# 
   621     0016                     	;# 
   622     0017                     	;# 
   623     0018                     	;# 
   624     001C                     	;# 
   625     001C                     	;# 
   626     001D                     	;# 
   627     001D                     	;# 
   628     001E                     	;# 
   629     001F                     	;# 
   630     008C                     	;# 
   631     008C                     	;# 
   632     008D                     	;# 
   633     008E                     	;# 
   634     008E                     	;# 
   635     008F                     	;# 
   636     0090                     	;# 
   637     0090                     	;# 
   638     0091                     	;# 
   639     0093                     	;# 
   640     0094                     	;# 
   641     0095                     	;# 
   642     0096                     	;# 
   643     0097                     	;# 
   644     0098                     	;# 
   645     0099                     	;# 
   646     009A                     	;# 
   647     009B                     	;# 
   648     009C                     	;# 
   649     009D                     	;# 
   650     009E                     	;# 
   651     010C                     	;# 
   652     010D                     	;# 
   653     010E                     	;# 
   654     010E                     	;# 
   655     010F                     	;# 
   656     0110                     	;# 
   657     0110                     	;# 
   658     0111                     	;# 
   659     0112                     	;# 
   660     0112                     	;# 
   661     0113                     	;# 
   662     0114                     	;# 
   663     0114                     	;# 
   664     0115                     	;# 
   665     0116                     	;# 
   666     0116                     	;# 
   667     0117                     	;# 
   668     0119                     	;# 
   669     0119                     	;# 
   670     0119                     	;# 
   671     011A                     	;# 
   672     011A                     	;# 
   673     011A                     	;# 
   674     011B                     	;# 
   675     011B                     	;# 
   676     011B                     	;# 
   677     011B                     	;# 
   678     011B                     	;# 
   679     011C                     	;# 
   680     011C                     	;# 
   681     011C                     	;# 
   682     011D                     	;# 
   683     011D                     	;# 
   684     011D                     	;# 
   685     011E                     	;# 
   686     011E                     	;# 
   687     011E                     	;# 
   688     011F                     	;# 
   689     011F                     	;# 
   690     011F                     	;# 
   691     011F                     	;# 
   692     011F                     	;# 
   693     018C                     	;# 
   694     018D                     	;# 
   695     018E                     	;# 
   696     018F                     	;# 
   697     0190                     	;# 
   698     0191                     	;# 
   699     0192                     	;# 
   700     0196                     	;# 
   701     0197                     	;# 
   702     0198                     	;# 
   703     0199                     	;# 
   704     019A                     	;# 
   705     019B                     	;# 
   706     019C                     	;# 
   707     020C                     	;# 
   708     020C                     	;# 
   709     020D                     	;# 
   710     020E                     	;# 
   711     020F                     	;# 
   712     020F                     	;# 
   713     0210                     	;# 
   714     0210                     	;# 
   715     0211                     	;# 
   716     0211                     	;# 
   717     0212                     	;# 
   718     0212                     	;# 
   719     0213                     	;# 
   720     0214                     	;# 
   721     0215                     	;# 
   722     0215                     	;# 
   723     0216                     	;# 
   724     0216                     	;# 
   725     0217                     	;# 
   726     0217                     	;# 
   727     0218                     	;# 
   728     0218                     	;# 
   729     0219                     	;# 
   730     021A                     	;# 
   731     021B                     	;# 
   732     021B                     	;# 
   733     021C                     	;# 
   734     021C                     	;# 
   735     021D                     	;# 
   736     021D                     	;# 
   737     021E                     	;# 
   738     021F                     	;# 
   739     028C                     	;# 
   740     028C                     	;# 
   741     028D                     	;# 
   742     028D                     	;# 
   743     028E                     	;# 
   744     028F                     	;# 
   745     0290                     	;# 
   746     0290                     	;# 
   747     0291                     	;# 
   748     0292                     	;# 
   749     0292                     	;# 
   750     0293                     	;# 
   751     0293                     	;# 
   752     0294                     	;# 
   753     0295                     	;# 
   754     0296                     	;# 
   755     0296                     	;# 
   756     0297                     	;# 
   757     0298                     	;# 
   758     0298                     	;# 
   759     0299                     	;# 
   760     0299                     	;# 
   761     029A                     	;# 
   762     029B                     	;# 
   763     029C                     	;# 
   764     029C                     	;# 
   765     029D                     	;# 
   766     030C                     	;# 
   767     030C                     	;# 
   768     030D                     	;# 
   769     030E                     	;# 
   770     030F                     	;# 
   771     0310                     	;# 
   772     0310                     	;# 
   773     0311                     	;# 
   774     0312                     	;# 
   775     0313                     	;# 
   776     0314                     	;# 
   777     0314                     	;# 
   778     0315                     	;# 
   779     0316                     	;# 
   780     0317                     	;# 
   781     0318                     	;# 
   782     0318                     	;# 
   783     0319                     	;# 
   784     031A                     	;# 
   785     031B                     	;# 
   786     031C                     	;# 
   787     031C                     	;# 
   788     031D                     	;# 
   789     031E                     	;# 
   790     031F                     	;# 
   791     038C                     	;# 
   792     038C                     	;# 
   793     038D                     	;# 
   794     038E                     	;# 
   795     0390                     	;# 
   796     0390                     	;# 
   797     0391                     	;# 
   798     0392                     	;# 
   799     040C                     	;# 
   800     040D                     	;# 
   801     040E                     	;# 
   802     040F                     	;# 
   803     0410                     	;# 
   804     0411                     	;# 
   805     0416                     	;# 
   806     0416                     	;# 
   807     0417                     	;# 
   808     0418                     	;# 
   809     0418                     	;# 
   810     0419                     	;# 
   811     041A                     	;# 
   812     041A                     	;# 
   813     041B                     	;# 
   814     041C                     	;# 
   815     041C                     	;# 
   816     041D                     	;# 
   817     041E                     	;# 
   818     041F                     	;# 
   819     048C                     	;# 
   820     048C                     	;# 
   821     048D                     	;# 
   822     048E                     	;# 
   823     048F                     	;# 
   824     048F                     	;# 
   825     0490                     	;# 
   826     0491                     	;# 
   827     0492                     	;# 
   828     0492                     	;# 
   829     0493                     	;# 
   830     0494                     	;# 
   831     0495                     	;# 
   832     0495                     	;# 
   833     0496                     	;# 
   834     0497                     	;# 
   835     0498                     	;# 
   836     0499                     	;# 
   837     049A                     	;# 
   838     049B                     	;# 
   839     049C                     	;# 
   840     049D                     	;# 
   841     050C                     	;# 
   842     050C                     	;# 
   843     050D                     	;# 
   844     050E                     	;# 
   845     050F                     	;# 
   846     050F                     	;# 
   847     0510                     	;# 
   848     0511                     	;# 
   849     0512                     	;# 
   850     0512                     	;# 
   851     0513                     	;# 
   852     0514                     	;# 
   853     0515                     	;# 
   854     0515                     	;# 
   855     0516                     	;# 
   856     0517                     	;# 
   857     0518                     	;# 
   858     0519                     	;# 
   859     051A                     	;# 
   860     051B                     	;# 
   861     051C                     	;# 
   862     051D                     	;# 
   863     058C                     	;# 
   864     058C                     	;# 
   865     058D                     	;# 
   866     058E                     	;# 
   867     058F                     	;# 
   868     058F                     	;# 
   869     0590                     	;# 
   870     0591                     	;# 
   871     0592                     	;# 
   872     0593                     	;# 
   873     060C                     	;# 
   874     060D                     	;# 
   875     060E                     	;# 
   876     060F                     	;# 
   877     0610                     	;# 
   878     0611                     	;# 
   879     0612                     	;# 
   880     0613                     	;# 
   881     0614                     	;# 
   882     0616                     	;# 
   883     0617                     	;# 
   884     0618                     	;# 
   885     0619                     	;# 
   886     061A                     	;# 
   887     061B                     	;# 
   888     061C                     	;# 
   889     061D                     	;# 
   890     061E                     	;# 
   891     068C                     	;# 
   892     068D                     	;# 
   893     068E                     	;# 
   894     068F                     	;# 
   895     0690                     	;# 
   896     0691                     	;# 
   897     0692                     	;# 
   898     0693                     	;# 
   899     0694                     	;# 
   900     070C                     	;# 
   901     070D                     	;# 
   902     070E                     	;# 
   903     070F                     	;# 
   904     0710                     	;# 
   905     0711                     	;# 
   906     0712                     	;# 
   907     0713                     	;# 
   908     0714                     	;# 
   909     0716                     	;# 
   910     0717                     	;# 
   911     0718                     	;# 
   912     0719                     	;# 
   913     071A                     	;# 
   914     071B                     	;# 
   915     071C                     	;# 
   916     071D                     	;# 
   917     071E                     	;# 
   918     0796                     	;# 
   919     0797                     	;# 
   920     0798                     	;# 
   921     0799                     	;# 
   922     079A                     	;# 
   923     079B                     	;# 
   924     080C                     	;# 
   925     080D                     	;# 
   926     080E                     	;# 
   927     080F                     	;# 
   928     0810                     	;# 
   929     0811                     	;# 
   930     0812                     	;# 
   931     0813                     	;# 
   932     0814                     	;# 
   933     081A                     	;# 
   934     081B                     	;# 
   935     081C                     	;# 
   936     081D                     	;# 
   937     081E                     	;# 
   938     081F                     	;# 
   939     088C                     	;# 
   940     088D                     	;# 
   941     088E                     	;# 
   942     088F                     	;# 
   943     0890                     	;# 
   944     0891                     	;# 
   945     0892                     	;# 
   946     0893                     	;# 
   947     0895                     	;# 
   948     0896                     	;# 
   949     0897                     	;# 
   950     0898                     	;# 
   951     0899                     	;# 
   952     089A                     	;# 
   953     089B                     	;# 
   954     090C                     	;# 
   955     090E                     	;# 
   956     090F                     	;# 
   957     091F                     	;# 
   958     091F                     	;# 
   959     098F                     	;# 
   960     098F                     	;# 
   961     0990                     	;# 
   962     0991                     	;# 
   963     0992                     	;# 
   964     0993                     	;# 
   965     0994                     	;# 
   966     0995                     	;# 
   967     0996                     	;# 
   968     0997                     	;# 
   969     0E0F                     	;# 
   970     0E10                     	;# 
   971     0E11                     	;# 
   972     0E12                     	;# 
   973     0E13                     	;# 
   974     0E14                     	;# 
   975     0E15                     	;# 
   976     0E16                     	;# 
   977     0E17                     	;# 
   978     0E18                     	;# 
   979     0E19                     	;# 
   980     0E1A                     	;# 
   981     0E1B                     	;# 
   982     0E1C                     	;# 
   983     0E1D                     	;# 
   984     0E1E                     	;# 
   985     0E1F                     	;# 
   986     0E20                     	;# 
   987     0E21                     	;# 
   988     0E22                     	;# 
   989     0E23                     	;# 
   990     0E24                     	;# 
   991     0E25                     	;# 
   992     0E26                     	;# 
   993     0E27                     	;# 
   994     0E28                     	;# 
   995     0E29                     	;# 
   996     0E2A                     	;# 
   997     0E2B                     	;# 
   998     0E2C                     	;# 
   999     0E2D                     	;# 
  1000     0E2E                     	;# 
  1001     0E2F                     	;# 
  1002     0E30                     	;# 
  1003     0E31                     	;# 
  1004     0E32                     	;# 
  1005     0E33                     	;# 
  1006     0E34                     	;# 
  1007     0E35                     	;# 
  1008     0E36                     	;# 
  1009     0E37                     	;# 
  1010     0E8F                     	;# 
  1011     0E90                     	;# 
  1012     0E91                     	;# 
  1013     0E92                     	;# 
  1014     0E93                     	;# 
  1015     0E94                     	;# 
  1016     0E95                     	;# 
  1017     0E96                     	;# 
  1018     0E97                     	;# 
  1019     0E9C                     	;# 
  1020     0E9D                     	;# 
  1021     0E9E                     	;# 
  1022     0EA1                     	;# 
  1023     0EA2                     	;# 
  1024     0EA3                     	;# 
  1025     0EA4                     	;# 
  1026     0EA5                     	;# 
  1027     0EA9                     	;# 
  1028     0EAA                     	;# 
  1029     0EAB                     	;# 
  1030     0EAC                     	;# 
  1031     0EB1                     	;# 
  1032     0EB2                     	;# 
  1033     0EB3                     	;# 
  1034     0EB8                     	;# 
  1035     0EB9                     	;# 
  1036     0EBA                     	;# 
  1037     0EBB                     	;# 
  1038     0EBC                     	;# 
  1039     0EBD                     	;# 
  1040     0EBE                     	;# 
  1041     0EC3                     	;# 
  1042     0EC5                     	;# 
  1043     0EC6                     	;# 
  1044     0EC7                     	;# 
  1045     0EC8                     	;# 
  1046     0EC9                     	;# 
  1047     0ECA                     	;# 
  1048     0ECB                     	;# 
  1049     0ECC                     	;# 
  1050     0F10                     	;# 
  1051     0F11                     	;# 
  1052     0F12                     	;# 
  1053     0F13                     	;# 
  1054     0F14                     	;# 
  1055     0F15                     	;# 
  1056     0F16                     	;# 
  1057     0F17                     	;# 
  1058     0F18                     	;# 
  1059     0F19                     	;# 
  1060     0F1A                     	;# 
  1061     0F1B                     	;# 
  1062     0F1C                     	;# 
  1063     0F1D                     	;# 
  1064     0F1E                     	;# 
  1065     0F1F                     	;# 
  1066     0F20                     	;# 
  1067     0F21                     	;# 
  1068     0F22                     	;# 
  1069     0F23                     	;# 
  1070     0F24                     	;# 
  1071     0F25                     	;# 
  1072     0F26                     	;# 
  1073     0F27                     	;# 
  1074     0F38                     	;# 
  1075     0F39                     	;# 
  1076     0F3A                     	;# 
  1077     0F3B                     	;# 
  1078     0F3C                     	;# 
  1079     0F3D                     	;# 
  1080     0F3E                     	;# 
  1081     0F3F                     	;# 
  1082     0F40                     	;# 
  1083     0F41                     	;# 
  1084     0F43                     	;# 
  1085     0F44                     	;# 
  1086     0F45                     	;# 
  1087     0F46                     	;# 
  1088     0F47                     	;# 
  1089     0F48                     	;# 
  1090     0F49                     	;# 
  1091     0F4A                     	;# 
  1092     0F4B                     	;# 
  1093     0F4C                     	;# 
  1094     0F4E                     	;# 
  1095     0F4F                     	;# 
  1096     0F50                     	;# 
  1097     0F51                     	;# 
  1098     0F52                     	;# 
  1099     0F53                     	;# 
  1100     0F54                     	;# 
  1101     0F55                     	;# 
  1102     0F56                     	;# 
  1103     0F57                     	;# 
  1104     0F65                     	;# 
  1105     0F68                     	;# 
  1106     0F69                     	;# 
  1107     0F6A                     	;# 
  1108     0F6B                     	;# 
  1109     0FE4                     	;# 
  1110     0FE5                     	;# 
  1111     0FE6                     	;# 
  1112     0FE7                     	;# 
  1113     0FE8                     	;# 
  1114     0FE9                     	;# 
  1115     0FEA                     	;# 
  1116     0FEB                     	;# 
  1117     0FED                     	;# 
  1118     0FEE                     	;# 
  1119     0FEF                     	;# 
  1120                           
  1121                           	psect	idataBANK0
  1122     0E68                     __pidataBANK0:
  1123                           
  1124                           ;initializer for _speed_inc
  1125     0E68  3432               	retlw	50
  1126     0E69  3400               	retlw	0
  1127                           
  1128                           ;initializer for _slow
  1129     0E6A  3496               	retlw	150
  1130     0E6B  3400               	retlw	0
  1131                           
  1132                           ;initializer for _fast
  1133     0E6C  3496               	retlw	150
  1134     0E6D  3400               	retlw	0
  1135                           
  1136                           ;initializer for _line_colour
  1137     0E6E  34C0               	retlw	192
  1138     0E6F  348E               	retlw	142
  1139                           
  1140                           ;initializer for _r_vec
  1141     0E70  3464               	retlw	100
  1142     0E71  3400               	retlw	0
  1143                           
  1144                           ;initializer for _l_vec
  1145     0E72  3464               	retlw	100
  1146     0E73  3400               	retlw	0
  1147                           
  1148                           ;initializer for _rpin
  1149     0E74  340A               	retlw	10
  1150                           
  1151                           ;initializer for _mpin
  1152     0E75  3409               	retlw	9
  1153                           
  1154                           ;initializer for _lpin
  1155     0E76  340B               	retlw	11
  1156                           
  1157                           ;initializer for _starting
  1158     0E77  3401               	retlw	1
  1159                           
  1160                           	psect	idataBANK1
  1161     0F38                     __pidataBANK1:
  1162                           
  1163                           ;initializer for transmit_repair@F11764
  1164     0F38  34FE               	retlw	254
  1165     0F39  3419               	retlw	25
  1166     0F3A  3401               	retlw	1
  1167     0F3B  3409               	retlw	9
  1168     0F3C  3400               	retlw	0
  1169     0F3D  3400               	retlw	0
  1170                           
  1171                           ;initializer for request_repair@F11761
  1172     0F3E  34FE               	retlw	254
  1173     0F3F  3419               	retlw	25
  1174     0F40  3403               	retlw	3
  1175     0F41  3409               	retlw	9
  1176     0F42  3400               	retlw	0
  1177     0F43  3400               	retlw	0
  1178                           
  1179                           ;initializer for transmit_shield_code@F11758
  1180     0F44  34FE               	retlw	254
  1181     0F45  3419               	retlw	25
  1182     0F46  3402               	retlw	2
  1183     0F47  3409               	retlw	9
  1184     0F48  3400               	retlw	0
  1185     0F49  3400               	retlw	0
  1186                           
  1187                           ;initializer for user_data_send@F11728
  1188     0F4A  34FE               	retlw	254
  1189     0F4B  3419               	retlw	25
  1190     0F4C  3401               	retlw	1
  1191     0F4D  3405               	retlw	5
  1192     0F4E  3400               	retlw	0
  1193     0F4F  3400               	retlw	0
  1194                           
  1195                           ;initializer for PCLS_info_send@F11720
  1196     0F50  34FE               	retlw	254
  1197     0F51  3419               	retlw	25
  1198     0F52  3401               	retlw	1
  1199     0F53  3404               	retlw	4
  1200     0F54  3400               	retlw	0
  1201     0F55  3400               	retlw	0
  1202                           
  1203                           ;initializer for _IR_base
  1204     0F56  3400               	retlw	0
  1205     0F57  34B2               	retlw	178
  1206     0018                     _LATCbits	set	24
  1207     0013                     _TRISCbits	set	19
  1208     0016                     _LATAbits	set	22
  1209     0011                     _TRISAbits	set	17
  1210     008C                     _ADRESL	set	140
  1211     008D                     _ADRESH	set	141
  1212     0093                     _ADCON0bits	set	147
  1213     009E                     _ADPCH	set	158
  1214     009D                     _ADACQ	set	157
  1215     009C                     _ADPRE	set	156
  1216     009A                     _ADREF	set	154
  1217     0098                     _ADCLK	set	152
  1218     0093                     _ADCON0	set	147
  1219     0119                     _RCREG	set	281
  1220     011B                     _SP1BRGLbits	set	283
  1221     011F                     _BAUD1CONbits	set	287
  1222     011D                     _RC1STAbits	set	285
  1223     011E                     _TX1STAbits	set	286
  1224     011A                     _TXREG	set	282
  1225     070D                     _PIR1bits	set	1805
  1226     070F                     _PIR3bits	set	1807
  1227     0F38                     _ANSELAbits	set	3896
  1228     0F26                     _RC6PPS	set	3878
  1229     0F4E                     _ANSELCbits	set	3918
  1230                           
  1231                           	psect	cinit
  1232     07CD                     start_initialization:	
  1233                           ; #config settings
  1234                           
  1235     07CD                     __initialization:
  1236                           
  1237                           ; Initialize objects allocated to BANK0
  1238     07CD  3068               	movlw	low __pidataBANK0
  1239     07CE  0084               	movwf	4
  1240     07CF  308E               	movlw	(high __pidataBANK0)| (0+128)
  1241     07D0  0085               	movwf	5
  1242     07D1  3060               	movlw	low __pdataBANK0
  1243     07D2  0086               	movwf	6
  1244     07D3  3000               	movlw	high __pdataBANK0
  1245     07D4  0087               	movwf	7
  1246     07D5  3010               	movlw	16
  1247     07D6  318E  262A  3187   	fcall	init_ram
  1248                           
  1249                           ; Initialize objects allocated to BANK1
  1250     07D9  3038               	movlw	low __pidataBANK1
  1251     07DA  0084               	movwf	4
  1252     07DB  308F               	movlw	(high __pidataBANK1)| (0+128)
  1253     07DC  0085               	movwf	5
  1254     07DD  30CA               	movlw	low __pdataBANK1
  1255     07DE  0086               	movwf	6
  1256     07DF  3000               	movlw	high __pdataBANK1
  1257     07E0  0087               	movwf	7
  1258     07E1  3020               	movlw	32
  1259     07E2  318E  262A  3187   	fcall	init_ram
  1260                           
  1261                           ; Clear objects allocated to BANK0
  1262     07E5  3046               	movlw	low __pbssBANK0
  1263     07E6  0084               	movwf	4
  1264     07E7  3000               	movlw	high __pbssBANK0
  1265     07E8  0085               	movwf	5
  1266     07E9  301A               	movlw	26
  1267     07EA  318E  2624  3187   	fcall	clear_ram0
  1268                           
  1269                           ; Clear objects allocated to BANK1
  1270     07ED  30A0               	movlw	low __pbssBANK1
  1271     07EE  0084               	movwf	4
  1272     07EF  3000               	movlw	high __pbssBANK1
  1273     07F0  0085               	movwf	5
  1274     07F1  302A               	movlw	42
  1275     07F2  318E  2624  3187   	fcall	clear_ram0
  1276                           
  1277                           ; Clear objects allocated to BANK2
  1278     07F5  3020               	movlw	low __pbssBANK2
  1279     07F6  0084               	movwf	4
  1280     07F7  3001               	movlw	high __pbssBANK2
  1281     07F8  0085               	movwf	5
  1282     07F9  3014               	movlw	20
  1283     07FA  318E  2624  3187   	fcall	clear_ram0
  1284     07FD                     end_of_initialization:	
  1285                           ;End of C runtime variable initialization code
  1286                           
  1287     07FD                     __end_of__initialization:
  1288     07FD  0020               	movlb	0
  1289     07FE  3182  2AEB         	ljmp	_main	;jump to C main() function
  1290                           
  1291                           	psect	bssBANK0
  1292     0046                     __pbssBANK0:
  1293     0046                     _potB:
  1294     0046                     	ds	2
  1295     0048                     _potA:
  1296     0048                     	ds	2
  1297     004A                     _swD:
  1298     004A                     	ds	2
  1299     004C                     _swC:
  1300     004C                     	ds	2
  1301     004E                     _swB:
  1302     004E                     	ds	2
  1303     0050                     _swA:
  1304     0050                     	ds	2
  1305     0052                     _joy_ly:
  1306     0052                     	ds	2
  1307     0054                     _joy_ry:
  1308     0054                     	ds	2
  1309     0056                     _joy_rx:
  1310     0056                     	ds	2
  1311     0058                     _edge:
  1312     0058                     	ds	1
  1313     0059                     _auto_switch:
  1314     0059                     	ds	1
  1315     005A                     _r_dir:
  1316     005A                     	ds	1
  1317     005B                     _l_dir:
  1318     005B                     	ds	1
  1319     005C                     _repair_flag:
  1320     005C                     	ds	1
  1321     005D                     _shield_flag:
  1322     005D                     	ds	1
  1323     005E                     _playerID:
  1324     005E                     	ds	1
  1325     005F                     _teamID:
  1326     005F                     	ds	1
  1327                           
  1328                           	psect	dataBANK0
  1329     0060                     __pdataBANK0:
  1330     0060                     _speed_inc:
  1331     0060                     	ds	2
  1332     0062                     _slow:
  1333     0062                     	ds	2
  1334     0064                     _fast:
  1335     0064                     	ds	2
  1336     0066                     _line_colour:
  1337     0066                     	ds	2
  1338     0068                     _r_vec:
  1339     0068                     	ds	2
  1340     006A                     _l_vec:
  1341     006A                     	ds	2
  1342     006C                     _rpin:
  1343     006C                     	ds	1
  1344     006D                     _mpin:
  1345     006D                     	ds	1
  1346     006E                     _lpin:
  1347     006E                     	ds	1
  1348     006F                     _starting:
  1349     006F                     	ds	1
  1350                           
  1351                           	psect	bssBANK1
  1352     00A0                     __pbssBANK1:
  1353     00A0                     motor@F11740:
  1354     00A0                     	ds	10
  1355     00AA                     ore_type@F11782:
  1356     00AA                     	ds	7
  1357     00B1                     shoot_laser@F11755:
  1358     00B1                     	ds	7
  1359     00B8                     set_laser@F11751:
  1360     00B8                     	ds	7
  1361     00BF                     custom_laser@F11770:
  1362     00BF                     	ds	6
  1363     00C5                     _health:
  1364     00C5                     	ds	2
  1365     00C7                     _joy_lx:
  1366     00C7                     	ds	2
  1367     00C9                     _serA:
  1368     00C9                     	ds	1
  1369                           
  1370                           	psect	dataBANK1
  1371     00CA                     __pdataBANK1:
  1372     00CA                     transmit_repair@F11764:
  1373     00CA                     	ds	6
  1374     00D0                     request_repair@F11761:
  1375     00D0                     	ds	6
  1376     00D6                     transmit_shield_code@F11758:
  1377     00D6                     	ds	6
  1378     00DC                     user_data_send@F11728:
  1379     00DC                     	ds	6
  1380     00E2                     PCLS_info_send@F11720:
  1381     00E2                     	ds	6
  1382     00E8                     _IR_base:
  1383     00E8                     	ds	2
  1384                           
  1385                           	psect	bssBANK2
  1386     0120                     __pbssBANK2:
  1387     0120                     surface_exploration@F11778:
  1388     0120                     	ds	10
  1389     012A                     servo@F11747:
  1390     012A                     	ds	10
  1391                           
  1392                           	psect	inittext
  1393     0E2A                     init_ram:
  1394     0E2A  00FE               	movwf	btemp
  1395     0E2B                     initloop:
  1396     0E2B  0012               	moviw fsr0++
  1397     0E2C  001E               	movwi fsr1++
  1398     0E2D  0BFE               	decfsz	btemp,f
  1399     0E2E  2E2B               	goto	initloop
  1400     0E2F  3400               	retlw	0
  1401                           
  1402                           	psect	clrtext
  1403     0E24                     clear_ram0:	
  1404                           ;	Called with FSR0 containing the base address, and
  1405                           ;	WREG with the size to clear
  1406                           
  1407     0E24  0064               	clrwdt	;clear the watchdog before getting into this loop
  1408     0E25                     clrloop0:
  1409     0E25  0180               	clrf	0	;clear RAM location pointed to by FSR
  1410     0E26  3101               	addfsr 0,1
  1411     0E27  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1412     0E28  2E25               	goto	clrloop0	;have we reached the end yet?
  1413     0E29  3400               	retlw	0	;all done for this memory range, return
  1414                           
  1415                           	psect	cstackCOMMON
  1416     0070                     __pcstackCOMMON:
  1417     0070                     ?_tx_wait:
  1418     0070                     ??_tx_wait:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421     0070                     ?_rx_wait:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424     0070                     ??_rx_wait:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427     0070                     ?_UART_init:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430     0070                     ??_UART_init:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433     0070                     ?_PCLS_info_send:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436     0070                     ?_PCLS_info_receive:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439     0070                     ?_PCLS_info:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442     0070                     ?_user_data_send:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445     0070                     ?_user_data_receive:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448     0070                     ?_user_data:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451     0070                     ?_set_laser:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454     0070                     ?_transmit_shield_code:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457     0070                     ?_ore_type:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460     0070                     ?_drive:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463     0070                     ?_ADC_init:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466     0070                     ??_ADC_init:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469     0070                     ?_line_follower:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472     0070                     ?_IR_init:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475     0070                     ?_IR:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478     0070                     ?_IR_zone:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481     0070                     ?_shield_code:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484     0070                     ?_servos:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487     0070                     ?_main:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490     0070                     ?_abs:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493     0070                     ?_read_adc:	
  1494                           ; 2 bytes @ 0x0
  1495                           
  1496     0070                     ?___lwdiv:	
  1497                           ; 2 bytes @ 0x0
  1498                           
  1499     0070                     tx_wait@count:	
  1500                           ; 2 bytes @ 0x0
  1501                           
  1502     0070                     rx_wait@count:	
  1503                           ; 2 bytes @ 0x0
  1504                           
  1505     0070                     ___lwdiv@divisor:	
  1506                           ; 2 bytes @ 0x0
  1507                           
  1508     0070                     abs@a:	
  1509                           ; 2 bytes @ 0x0
  1510                           
  1511                           
  1512                           ; 2 bytes @ 0x0
  1513     0070                     	ds	2
  1514     0072                     ??_abs:
  1515     0072                     ?_UART_send:	
  1516                           ; 1 bytes @ 0x2
  1517                           
  1518     0072                     ??_PCLS_info_receive:	
  1519                           ; 1 bytes @ 0x2
  1520                           
  1521     0072                     ??_read_adc:	
  1522                           ; 1 bytes @ 0x2
  1523                           
  1524     0072                     UART_send@size:	
  1525                           ; 1 bytes @ 0x2
  1526                           
  1527     0072                     ___lwdiv@dividend:	
  1528                           ; 2 bytes @ 0x2
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x2
  1532     0072                     	ds	2
  1533     0074                     ??_UART_send:
  1534     0074                     ??___lwdiv:	
  1535                           ; 1 bytes @ 0x4
  1536                           
  1537     0074                     ?___awdiv:	
  1538                           ; 1 bytes @ 0x4
  1539                           
  1540     0074                     ___awdiv@divisor:	
  1541                           ; 2 bytes @ 0x4
  1542                           
  1543                           
  1544                           ; 2 bytes @ 0x4
  1545     0074                     	ds	1
  1546     0075                     read_adc@sensor:
  1547     0075                     ___lwdiv@quotient:	
  1548                           ; 1 bytes @ 0x5
  1549                           
  1550                           
  1551                           ; 2 bytes @ 0x5
  1552     0075                     	ds	1
  1553     0076                     UART_send@message:
  1554     0076                     read_adc@ADC_val:	
  1555                           ; 1 bytes @ 0x6
  1556                           
  1557     0076                     ___awdiv@dividend:	
  1558                           ; 2 bytes @ 0x6
  1559                           
  1560                           
  1561                           ; 2 bytes @ 0x6
  1562     0076                     	ds	1
  1563     0077                     UART_send@i:
  1564     0077                     ___lwdiv@counter:	
  1565                           ; 1 bytes @ 0x7
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x7
  1569     0077                     	ds	1
  1570     0078                     ??_PCLS_info_send:
  1571     0078                     ??_user_data_send:	
  1572                           ; 1 bytes @ 0x8
  1573                           
  1574     0078                     ??_user_data_receive:	
  1575                           ; 1 bytes @ 0x8
  1576                           
  1577     0078                     ?_motor:	
  1578                           ; 1 bytes @ 0x8
  1579                           
  1580     0078                     ??_set_laser:	
  1581                           ; 1 bytes @ 0x8
  1582                           
  1583     0078                     ??_transmit_shield_code:	
  1584                           ; 1 bytes @ 0x8
  1585                           
  1586     0078                     ?_surface_exploration:	
  1587                           ; 1 bytes @ 0x8
  1588                           
  1589     0078                     ??_ore_type:	
  1590                           ; 1 bytes @ 0x8
  1591                           
  1592     0078                     ??_IR_init:	
  1593                           ; 1 bytes @ 0x8
  1594                           
  1595     0078                     ??_IR:	
  1596                           ; 1 bytes @ 0x8
  1597                           
  1598     0078                     ??___awdiv:	
  1599                           ; 1 bytes @ 0x8
  1600                           
  1601     0078                     motor@pwmA:	
  1602                           ; 1 bytes @ 0x8
  1603                           
  1604     0078                     surface_exploration@taskID_u:	
  1605                           ; 1 bytes @ 0x8
  1606                           
  1607                           
  1608                           ; 1 bytes @ 0x8
  1609     0078                     	ds	1
  1610     0079                     ??_PCLS_info:
  1611     0079                     motor@dirB:	
  1612                           ; 1 bytes @ 0x9
  1613                           
  1614     0079                     surface_exploration@value_l:	
  1615                           ; 1 bytes @ 0x9
  1616                           
  1617     0079                     ___awdiv@counter:	
  1618                           ; 1 bytes @ 0x9
  1619                           
  1620                           
  1621                           ; 1 bytes @ 0x9
  1622     0079                     	ds	1
  1623     007A                     motor@pwmB:
  1624     007A                     surface_exploration@value_u:	
  1625                           ; 1 bytes @ 0xA
  1626                           
  1627     007A                     ___awdiv@sign:	
  1628                           ; 1 bytes @ 0xA
  1629                           
  1630     007A                     IR@ADC_val:	
  1631                           ; 1 bytes @ 0xA
  1632                           
  1633                           
  1634                           ; 2 bytes @ 0xA
  1635     007A                     	ds	1
  1636     007B                     ??_user_data:
  1637     007B                     ??_motor:	
  1638                           ; 1 bytes @ 0xB
  1639                           
  1640     007B                     ??_surface_exploration:	
  1641                           ; 1 bytes @ 0xB
  1642                           
  1643     007B                     ___awdiv@quotient:	
  1644                           ; 1 bytes @ 0xB
  1645                           
  1646                           
  1647                           ; 2 bytes @ 0xB
  1648     007B                     	ds	1
  1649     007C                     ??_line_follower:
  1650     007C                     ??_shield_code:	
  1651                           ; 1 bytes @ 0xC
  1652                           
  1653     007C                     ??_servos:	
  1654                           ; 1 bytes @ 0xC
  1655                           
  1656                           
  1657                           ; 1 bytes @ 0xC
  1658     007C                     	ds	1
  1659     007D                     ??___wmul:
  1660                           
  1661                           ; 1 bytes @ 0xD
  1662     007D                     	ds	1
  1663                           
  1664                           	psect	cstackBANK0
  1665     0020                     __pcstackBANK0:
  1666     0020                     ?___wmul:
  1667     0020                     motor@dirA:	
  1668                           ; 2 bytes @ 0x0
  1669                           
  1670     0020                     set_laser@en:	
  1671                           ; 1 bytes @ 0x0
  1672                           
  1673     0020                     surface_exploration@taskID_l:	
  1674                           ; 1 bytes @ 0x0
  1675                           
  1676     0020                     ore_type@type:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679     0020                     ___wmul@multiplier:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682     0020                     PCLS_info_send@11721:	
  1683                           ; 2 bytes @ 0x0
  1684                           
  1685     0020                     user_data_send@11729:	
  1686                           ; 6 bytes @ 0x0
  1687                           
  1688     0020                     transmit_shield_code@11759:	
  1689                           ; 6 bytes @ 0x0
  1690                           
  1691     0020                     PCLS_info_receive@r:	
  1692                           ; 6 bytes @ 0x0
  1693                           
  1694     0020                     user_data_receive@r:	
  1695                           ; 12 bytes @ 0x0
  1696                           
  1697                           
  1698                           ; 26 bytes @ 0x0
  1699     0020                     	ds	1
  1700     0021                     set_laser@11752:
  1701     0021                     ore_type@11783:	
  1702                           ; 7 bytes @ 0x1
  1703                           
  1704     0021                     motor@11741:	
  1705                           ; 7 bytes @ 0x1
  1706                           
  1707     0021                     surface_exploration@11779:	
  1708                           ; 10 bytes @ 0x1
  1709                           
  1710                           
  1711                           ; 10 bytes @ 0x1
  1712     0021                     	ds	1
  1713     0022                     ___wmul@multiplicand:
  1714                           
  1715                           ; 2 bytes @ 0x2
  1716     0022                     	ds	2
  1717     0024                     ___wmul@product:
  1718                           
  1719                           ; 2 bytes @ 0x4
  1720     0024                     	ds	7
  1721     002B                     ?_Vdrive:
  1722     002B                     Vdrive@y:	
  1723                           ; 1 bytes @ 0xB
  1724                           
  1725     002B                     line_follower@l_val:	
  1726                           ; 2 bytes @ 0xB
  1727                           
  1728                           
  1729                           ; 2 bytes @ 0xB
  1730     002B                     	ds	1
  1731     002C                     PCLS_info_receive@s:
  1732                           
  1733                           ; 1 bytes @ 0xC
  1734     002C                     	ds	1
  1735     002D                     PCLS_info_receive@j:
  1736     002D                     Vdrive@x:	
  1737                           ; 1 bytes @ 0xD
  1738                           
  1739     002D                     line_follower@m_val:	
  1740                           ; 2 bytes @ 0xD
  1741                           
  1742                           
  1743                           ; 2 bytes @ 0xD
  1744     002D                     	ds	2
  1745     002F                     ??_Vdrive:
  1746     002F                     line_follower@r_val:	
  1747                           ; 1 bytes @ 0xF
  1748                           
  1749                           
  1750                           ; 2 bytes @ 0xF
  1751     002F                     	ds	2
  1752     0031                     Vdrive@left_dir:
  1753                           
  1754                           ; 1 bytes @ 0x11
  1755     0031                     	ds	1
  1756     0032                     Vdrive@right_dir:
  1757                           
  1758                           ; 1 bytes @ 0x12
  1759     0032                     	ds	1
  1760     0033                     Vdrive@l_motor:
  1761                           
  1762                           ; 2 bytes @ 0x13
  1763     0033                     	ds	2
  1764     0035                     Vdrive@r_motor:
  1765                           
  1766                           ; 2 bytes @ 0x15
  1767     0035                     	ds	5
  1768     003A                     user_data_receive@s:
  1769                           
  1770                           ; 1 bytes @ 0x1A
  1771     003A                     	ds	1
  1772     003B                     user_data_receive@j:
  1773                           
  1774                           ; 1 bytes @ 0x1B
  1775     003B                     	ds	1
  1776     003C                     ??_drive:
  1777     003C                     ??_IR_zone:	
  1778                           ; 1 bytes @ 0x1C
  1779                           
  1780     003C                     servos@i:	
  1781                           ; 1 bytes @ 0x1C
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x1C
  1785     003C                     	ds	2
  1786     003E                     drive@x:
  1787     003E                     servos@j:	
  1788                           ; 2 bytes @ 0x1E
  1789                           
  1790                           
  1791                           ; 2 bytes @ 0x1E
  1792     003E                     	ds	2
  1793     0040                     IR_zone@zone:
  1794     0040                     drive@y:	
  1795                           ; 1 bytes @ 0x20
  1796                           
  1797                           
  1798                           ; 2 bytes @ 0x20
  1799     0040                     	ds	1
  1800     0041                     IR_zone@i:
  1801                           
  1802                           ; 1 bytes @ 0x21
  1803     0041                     	ds	1
  1804     0042                     drive@dir:
  1805                           
  1806                           ; 2 bytes @ 0x22
  1807     0042                     	ds	2
  1808     0044                     ??_main:
  1809                           
  1810                           ; 1 bytes @ 0x24
  1811     0044                     	ds	2
  1812                           
  1813                           	psect	maintext
  1814     02EB                     __pmaintext:	
  1815 ;;
  1816 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1817 ;;
  1818 ;; *************** function _main *****************
  1819 ;; Defined at:
  1820 ;;		line 91 in file "Master.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : B1F/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1836 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;Total ram usage:        2 bytes
  1839 ;; Hardware stack levels required when called: 5
  1840 ;; This function calls:
  1841 ;;		_ADC_init
  1842 ;;		_IR
  1843 ;;		_IR_init
  1844 ;;		_IR_zone
  1845 ;;		_UART_init
  1846 ;;		_drive
  1847 ;;		_line_follower
  1848 ;;		_ore_type
  1849 ;;		_read_adc
  1850 ;;		_servos
  1851 ;;		_set_laser
  1852 ;;		_shield_code
  1853 ;;		_user_data
  1854 ;; This function is called by:
  1855 ;;		Startup code after reset
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859     02EB                     _main:	
  1860                           ;psect for function _main
  1861                           
  1862     02EB                     l2424:	
  1863                           ;incstack = 0
  1864                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1865                           
  1866                           
  1867                           ;Master.c: 92:             set_laser(0);
  1868     02EB  318E  2658  3182   	fcall	_UART_init
  1869                           
  1870                           ;Master.c: 93:         }
  1871     02EE  318E  2648  3182   	fcall	_ADC_init
  1872     02F1                     l2426:
  1873                           
  1874                           ;Master.c: 94:         else {if(swA==1 && swC==1){
  1875     02F1  3180  2009  3182   	fcall	_user_data
  1876     02F4                     l2428:
  1877                           
  1878                           ;Master.c: 96:              _delay((unsigned long)((6000)*(400000/4000.0)));
  1879     02F4  3180  2009  3182   	fcall	_user_data
  1880     02F7                     l2430:
  1881                           
  1882                           ;Master.c: 98:         }
  1883     02F7  0020               	movlb	0	; select bank0
  1884     02F8  084E               	movf	_swB,w	;volatile
  1885     02F9  044F               	iorwf	_swB+1,w	;volatile
  1886     02FA  1903               	btfsc	3,2
  1887     02FB  2AFD               	goto	u2211
  1888     02FC  2AFE               	goto	u2210
  1889     02FD                     u2211:
  1890     02FD  2B17               	goto	l2438
  1891     02FE                     u2210:
  1892     02FE                     l2432:
  1893     02FE  3009               	movlw	9
  1894     02FF  318F  2758  3182   	fcall	_read_adc
  1895     0302  0870               	movf	?_read_adc,w
  1896     0303  3E00               	addlw	0
  1897     0304  0020               	movlb	0	; select bank0
  1898     0305  00E6               	movwf	_line_colour	;volatile
  1899     0306  30FF               	movlw	255
  1900     0307  3D71               	addwfc	?_read_adc+1,w
  1901     0308  00E7               	movwf	_line_colour+1	;volatile
  1902                           
  1903                           ;Master.c: 101:     if(swC==1 &&swD){
  1904     0309  2B10               	goto	l2436
  1905     030A                     l2434:
  1906                           
  1907                           ;Master.c: 102:         shield_code();;Master.c: 103:     }
  1908     030A  3183  23E7  3182   	fcall	_line_follower
  1909                           
  1910                           ;Master.c: 104:    while(swC == 2)
  1911     030D  3180  2009  3182   	fcall	_user_data
  1912     0310                     l2436:
  1913                           
  1914                           ;Master.c: 101:     if(swC==1 &&swD){
  1915     0310  0020               	movlb	0	; select bank0
  1916     0311  084E               	movf	_swB,w	;volatile
  1917     0312  044F               	iorwf	_swB+1,w	;volatile
  1918     0313  1D03               	btfss	3,2
  1919     0314  2B16               	goto	u2221
  1920     0315  2B17               	goto	u2220
  1921     0316                     u2221:
  1922     0316  2B0A               	goto	l2434
  1923     0317                     u2220:
  1924     0317                     l2438:
  1925                           
  1926                           ;Master.c: 107:         drive();
  1927     0317  084A               	movf	_swD,w	;volatile
  1928     0318  044B               	iorwf	_swD+1,w	;volatile
  1929     0319  1D03               	btfss	3,2
  1930     031A  2B1C               	goto	u2231
  1931     031B  2B1D               	goto	u2230
  1932     031C                     u2231:
  1933     031C  2B88               	goto	l2466
  1934     031D                     u2230:
  1935     031D                     l2440:
  1936                           
  1937                           ;Master.c: 108:         if(swA&& !swD){
  1938     031D  3180  2009  3182   	fcall	_user_data
  1939                           
  1940                           ;Master.c: 109:             ore_type(3);
  1941     0320  3180  20EC  3182   	fcall	_drive
  1942     0323                     l2442:
  1943                           
  1944                           ;Master.c: 110:             _delay((unsigned long)((6000)*(400000/4000.0)));
  1945     0323  0020               	movlb	0	; select bank0
  1946     0324  0350               	decf	_swA,w	;volatile
  1947     0325  0451               	iorwf	_swA+1,w	;volatile
  1948     0326  1D03               	btfss	3,2
  1949     0327  2B29               	goto	u2241
  1950     0328  2B2A               	goto	u2240
  1951     0329                     u2241:
  1952     0329  2B68               	goto	l2456
  1953     032A                     u2240:
  1954     032A                     l2444:
  1955     032A  084C               	movf	_swC,w	;volatile
  1956     032B  044D               	iorwf	_swC+1,w	;volatile
  1957     032C  1D03               	btfss	3,2
  1958     032D  2B2F               	goto	u2251
  1959     032E  2B30               	goto	u2250
  1960     032F                     u2251:
  1961     032F  2B68               	goto	l2456
  1962     0330                     u2250:
  1963     0330                     l2446:
  1964                           
  1965                           ;Master.c: 111:         }
  1966     0330  3001               	movlw	1
  1967     0331  318F  27A8  3182   	fcall	_set_laser
  1968     0334                     l2448:
  1969                           
  1970                           ;Master.c: 112: 
  1971     0334  3004               	movlw	4
  1972     0335  0020               	movlb	0	; select bank0
  1973     0336  00C5               	movwf	??_main+1
  1974     0337  300C               	movlw	12
  1975     0338  00C4               	movwf	??_main
  1976     0339  3033               	movlw	51
  1977     033A                     u2357:
  1978     033A  0B89               	decfsz	9,f
  1979     033B  2B3A               	goto	u2357
  1980     033C  0BC4               	decfsz	??_main,f
  1981     033D  2B3A               	goto	u2357
  1982     033E  0BC5               	decfsz	??_main+1,f
  1983     033F  2B3A               	goto	u2357
  1984     0340  3200               	nop2
  1985     0341                     l2450:
  1986                           
  1987                           ;Master.c: 113:         while(swD) {IR(); user_data();
  1988     0341  3000               	movlw	0
  1989     0342  318F  27A8  3182   	fcall	_set_laser
  1990                           
  1991                           ;Master.c: 114:         if(swA){
  1992     0345  3004               	movlw	4
  1993     0346  0020               	movlb	0	; select bank0
  1994     0347  00C5               	movwf	??_main+1
  1995     0348  300C               	movlw	12
  1996     0349  00C4               	movwf	??_main
  1997     034A  3033               	movlw	51
  1998     034B                     u2367:
  1999     034B  0B89               	decfsz	9,f
  2000     034C  2B4B               	goto	u2367
  2001     034D  0BC4               	decfsz	??_main,f
  2002     034E  2B4B               	goto	u2367
  2003     034F  0BC5               	decfsz	??_main+1,f
  2004     0350  2B4B               	goto	u2367
  2005     0351  3200               	nop2
  2006     0352                     l2452:
  2007                           
  2008                           ;Master.c: 115:             IR_zone();
  2009     0352  3001               	movlw	1
  2010     0353  318F  27D4  3182   	fcall	_ore_type
  2011     0356                     l2454:
  2012                           
  2013                           ;Master.c: 116:             _delay((unsigned long)((6000)*(400000/4000.0)));
  2014     0356  3004               	movlw	4
  2015     0357  0020               	movlb	0	; select bank0
  2016     0358  00C5               	movwf	??_main+1
  2017     0359  300C               	movlw	12
  2018     035A  00C4               	movwf	??_main
  2019     035B  3033               	movlw	51
  2020     035C                     u2377:
  2021     035C  0B89               	decfsz	9,f
  2022     035D  2B5C               	goto	u2377
  2023     035E  0BC4               	decfsz	??_main,f
  2024     035F  2B5C               	goto	u2377
  2025     0360  0BC5               	decfsz	??_main+1,f
  2026     0361  2B5C               	goto	u2377
  2027     0362  3200               	nop2
  2028                           
  2029                           ;Master.c: 117:         }
  2030     0363  3000               	movlw	0
  2031     0364  318F  27A8  3182   	fcall	_set_laser
  2032                           
  2033                           ;Master.c: 118:         }
  2034     0367  2B88               	goto	l2466
  2035     0368                     l2456:
  2036     0368  0350               	decf	_swA,w	;volatile
  2037     0369  0451               	iorwf	_swA+1,w	;volatile
  2038     036A  1D03               	btfss	3,2
  2039     036B  2B6D               	goto	u2261
  2040     036C  2B6E               	goto	u2260
  2041     036D                     u2261:
  2042     036D  2B88               	goto	l2466
  2043     036E                     u2260:
  2044     036E                     l2458:
  2045     036E  034C               	decf	_swC,w	;volatile
  2046     036F  044D               	iorwf	_swC+1,w	;volatile
  2047     0370  1D03               	btfss	3,2
  2048     0371  2B73               	goto	u2271
  2049     0372  2B74               	goto	u2270
  2050     0373                     u2271:
  2051     0373  2B88               	goto	l2466
  2052     0374                     u2270:
  2053     0374                     l2460:
  2054     0374  3002               	movlw	2
  2055     0375  318F  27D4  3182   	fcall	_ore_type
  2056     0378                     l2462:
  2057     0378  3004               	movlw	4
  2058     0379  0020               	movlb	0	; select bank0
  2059     037A  00C5               	movwf	??_main+1
  2060     037B  300C               	movlw	12
  2061     037C  00C4               	movwf	??_main
  2062     037D  3033               	movlw	51
  2063     037E                     u2387:
  2064     037E  0B89               	decfsz	9,f
  2065     037F  2B7E               	goto	u2387
  2066     0380  0BC4               	decfsz	??_main,f
  2067     0381  2B7E               	goto	u2387
  2068     0382  0BC5               	decfsz	??_main+1,f
  2069     0383  2B7E               	goto	u2387
  2070     0384  3200               	nop2
  2071     0385                     l2464:
  2072     0385  3003               	movlw	3
  2073     0386  0020               	movlb	0	; select bank0
  2074     0387  00D8               	movwf	_edge	;volatile
  2075     0388                     l2466:
  2076     0388  0020               	movlb	0	; select bank0
  2077     0389  034C               	decf	_swC,w	;volatile
  2078     038A  044D               	iorwf	_swC+1,w	;volatile
  2079     038B  1D03               	btfss	3,2
  2080     038C  2B8E               	goto	u2281
  2081     038D  2B8F               	goto	u2280
  2082     038E                     u2281:
  2083     038E  2BD6               	goto	l2496
  2084     038F                     u2280:
  2085     038F                     l2468:
  2086     038F  084A               	movf	_swD,w	;volatile
  2087     0390  044B               	iorwf	_swD+1,w	;volatile
  2088     0391  1903               	btfsc	3,2
  2089     0392  2B94               	goto	u2291
  2090     0393  2B95               	goto	u2290
  2091     0394                     u2291:
  2092     0394  2BD6               	goto	l2496
  2093     0395                     u2290:
  2094     0395                     l2470:
  2095     0395  3181  216C  3182   	fcall	_shield_code
  2096     0398  2BD6               	goto	l2496
  2097     0399                     l2472:
  2098     0399  318E  2630  3182   	fcall	_IR_init
  2099     039C                     l2474:
  2100     039C  3180  20EC  3182   	fcall	_drive
  2101     039F                     l2476:
  2102     039F  0020               	movlb	0	; select bank0
  2103     03A0  0850               	movf	_swA,w	;volatile
  2104     03A1  0451               	iorwf	_swA+1,w	;volatile
  2105     03A2  1903               	btfsc	3,2
  2106     03A3  2BA5               	goto	u2301
  2107     03A4  2BA6               	goto	u2300
  2108     03A5                     u2301:
  2109     03A5  2BCF               	goto	l2494
  2110     03A6                     u2300:
  2111     03A6                     l2478:
  2112     03A6  084A               	movf	_swD,w	;volatile
  2113     03A7  044B               	iorwf	_swD+1,w	;volatile
  2114     03A8  1D03               	btfss	3,2
  2115     03A9  2BAB               	goto	u2311
  2116     03AA  2BAC               	goto	u2310
  2117     03AB                     u2311:
  2118     03AB  2BCF               	goto	l2494
  2119     03AC                     u2310:
  2120     03AC                     l2480:
  2121     03AC  3003               	movlw	3
  2122     03AD  318F  27D4  3182   	fcall	_ore_type
  2123     03B0                     l2482:
  2124     03B0  3004               	movlw	4
  2125     03B1  0020               	movlb	0	; select bank0
  2126     03B2  00C5               	movwf	??_main+1
  2127     03B3  300C               	movlw	12
  2128     03B4  00C4               	movwf	??_main
  2129     03B5  3033               	movlw	51
  2130     03B6                     u2397:
  2131     03B6  0B89               	decfsz	9,f
  2132     03B7  2BB6               	goto	u2397
  2133     03B8  0BC4               	decfsz	??_main,f
  2134     03B9  2BB6               	goto	u2397
  2135     03BA  0BC5               	decfsz	??_main+1,f
  2136     03BB  2BB6               	goto	u2397
  2137     03BC  3200               	nop2
  2138     03BD  2BCF               	goto	l2494
  2139     03BE                     l2484:
  2140     03BE  3180  201C  3182   	fcall	_IR
  2141     03C1                     l2486:
  2142     03C1  3180  2009  3182   	fcall	_user_data
  2143     03C4                     l2488:
  2144     03C4  0020               	movlb	0	; select bank0
  2145     03C5  0850               	movf	_swA,w	;volatile
  2146     03C6  0451               	iorwf	_swA+1,w	;volatile
  2147     03C7  1903               	btfsc	3,2
  2148     03C8  2BCA               	goto	u2321
  2149     03C9  2BCB               	goto	u2320
  2150     03CA                     u2321:
  2151     03CA  2BCF               	goto	l2494
  2152     03CB                     u2320:
  2153     03CB                     l2490:
  2154     03CB  3182  2270  3182   	fcall	_IR_zone
  2155     03CE  2BB0               	goto	l2482
  2156     03CF                     l2494:
  2157     03CF  0020               	movlb	0	; select bank0
  2158     03D0  084A               	movf	_swD,w	;volatile
  2159     03D1  044B               	iorwf	_swD+1,w	;volatile
  2160     03D2  1D03               	btfss	3,2
  2161     03D3  2BD5               	goto	u2331
  2162     03D4  2BD6               	goto	u2330
  2163     03D5                     u2331:
  2164     03D5  2BBE               	goto	l2484
  2165     03D6                     u2330:
  2166     03D6                     l2496:
  2167     03D6  3002               	movlw	2
  2168     03D7  0020               	movlb	0	; select bank0
  2169     03D8  064C               	xorwf	_swC,w	;volatile
  2170     03D9  044D               	iorwf	_swC+1,w	;volatile
  2171     03DA  1903               	btfsc	3,2
  2172     03DB  2BDD               	goto	u2341
  2173     03DC  2BDE               	goto	u2340
  2174     03DD                     u2341:
  2175     03DD  2B99               	goto	l2472
  2176     03DE                     u2340:
  2177     03DE                     l2498:
  2178                           
  2179                           ;Master.c: 158:     servos();
  2180     03DE  3181  21B9  3182   	fcall	_servos
  2181                           
  2182                           ;Master.c: 160:     drive();
  2183     03E1  3180  20EC  3182   	fcall	_drive
  2184     03E4  2AF4               	goto	l2428
  2185     03E5  3180  2802         	ljmp	start
  2186     03E7                     __end_of_main:
  2187                           
  2188                           	psect	text1
  2189     016C                     __ptext1:	
  2190 ;; *************** function _shield_code *****************
  2191 ;; Defined at:
  2192 ;;		line 10 in file "./SheildCode.h"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 4
  2213 ;; This function calls:
  2214 ;;		_PCLS_info
  2215 ;;		_set_laser
  2216 ;;		_transmit_shield_code
  2217 ;;		_user_data
  2218 ;; This function is called by:
  2219 ;;		_main
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223     016C                     _shield_code:	
  2224                           ;psect for function _shield_code
  2225                           
  2226     016C                     l2310:	
  2227                           ;incstack = 0
  2228                           ; Regs used in _shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2229                           
  2230                           
  2231                           ;./SheildCode.h: 11:             _delay((unsigned long)((6000)*(400000/4000.0)));
  2232     016C  318E  263C  3181   	fcall	_PCLS_info
  2233     016F                     l2312:
  2234                           
  2235                           ;./SheildCode.h: 12: 
  2236     016F  3001               	movlw	1
  2237     0170  0020               	movlb	0	; select bank0
  2238     0171  00DD               	movwf	_shield_flag	;volatile
  2239     0172                     l2314:
  2240                           
  2241                           ;./SheildCode.h: 13:    transmit_shield_code();
  2242     0172  085D               	movf	_shield_flag,w	;volatile
  2243     0173  1903               	btfsc	3,2
  2244     0174  2976               	goto	u2041
  2245     0175  2977               	goto	u2040
  2246     0176                     u2041:
  2247     0176  29B8               	goto	l338
  2248     0177                     u2040:
  2249     0177                     l2316:
  2250                           
  2251                           ;./SheildCode.h: 14:             _delay((unsigned long)((100)*(400000/4000.0)));
  2252     0177  3180  2009  3181   	fcall	_user_data
  2253     017A                     l2318:
  2254                           
  2255                           ;./SheildCode.h: 15:             _delay((unsigned long)((6000)*(400000/4000.0)));
  2256     017A  0020               	movlb	0	; select bank0
  2257     017B  0850               	movf	_swA,w	;volatile
  2258     017C  0451               	iorwf	_swA+1,w	;volatile
  2259     017D  1903               	btfsc	3,2
  2260     017E  2980               	goto	u2051
  2261     017F  2981               	goto	u2050
  2262     0180                     u2051:
  2263     0180  29B8               	goto	l338
  2264     0181                     u2050:
  2265     0181                     l2320:
  2266                           
  2267                           ;./SheildCode.h: 16:             set_laser(0);
  2268     0181  3001               	movlw	1
  2269     0182  318F  27A8  3181   	fcall	_set_laser
  2270     0185                     l2322:
  2271                           
  2272                           ;./SheildCode.h: 17:   }
  2273     0185  3004               	movlw	4
  2274     0186  00FD               	movwf	??_shield_code+1
  2275     0187  300C               	movlw	12
  2276     0188  00FC               	movwf	??_shield_code
  2277     0189  3034               	movlw	52
  2278     018A                     u2407:
  2279     018A  0B89               	decfsz	9,f
  2280     018B  298A               	goto	u2407
  2281     018C  0BFC               	decfsz	??_shield_code,f
  2282     018D  298A               	goto	u2407
  2283     018E  0BFD               	decfsz	??_shield_code+1,f
  2284     018F  298A               	goto	u2407
  2285     0190                     l2324:
  2286                           
  2287                           ;./SheildCode.h: 18:  }
  2288     0190  3000               	movlw	0
  2289     0191  318F  27A8  3181   	fcall	_set_laser
  2290                           
  2291                           ;./SheildCode.h: 19: }
  2292     0194  3004               	movlw	4
  2293     0195  00FD               	movwf	??_shield_code+1
  2294     0196  300C               	movlw	12
  2295     0197  00FC               	movwf	??_shield_code
  2296     0198  3034               	movlw	52
  2297     0199                     u2417:
  2298     0199  0B89               	decfsz	9,f
  2299     019A  2999               	goto	u2417
  2300     019B  0BFC               	decfsz	??_shield_code,f
  2301     019C  2999               	goto	u2417
  2302     019D  0BFD               	decfsz	??_shield_code+1,f
  2303     019E  2999               	goto	u2417
  2304     019F                     l2326:
  2305     019F  318E  26FC  3181   	fcall	_transmit_shield_code
  2306     01A2                     l2328:
  2307     01A2  300D               	movlw	13
  2308     01A3  00FC               	movwf	??_shield_code
  2309     01A4  30FC               	movlw	252
  2310     01A5                     u2427:
  2311     01A5  0B89               	decfsz	9,f
  2312     01A6  29A5               	goto	u2427
  2313     01A7  0BFC               	decfsz	??_shield_code,f
  2314     01A8  29A5               	goto	u2427
  2315     01A9                     l2330:
  2316     01A9  3004               	movlw	4
  2317     01AA  00FD               	movwf	??_shield_code+1
  2318     01AB  300C               	movlw	12
  2319     01AC  00FC               	movwf	??_shield_code
  2320     01AD  3034               	movlw	52
  2321     01AE                     u2437:
  2322     01AE  0B89               	decfsz	9,f
  2323     01AF  29AE               	goto	u2437
  2324     01B0  0BFC               	decfsz	??_shield_code,f
  2325     01B1  29AE               	goto	u2437
  2326     01B2  0BFD               	decfsz	??_shield_code+1,f
  2327     01B3  29AE               	goto	u2437
  2328     01B4                     l2332:
  2329     01B4  3000               	movlw	0
  2330     01B5  318F  27A8  3181   	fcall	_set_laser
  2331     01B8                     l338:
  2332     01B8  0008               	return
  2333     01B9                     __end_of_shield_code:
  2334                           
  2335                           	psect	text2
  2336     0EFC                     __ptext2:	
  2337 ;; *************** function _transmit_shield_code *****************
  2338 ;; Defined at:
  2339 ;;		line 230 in file "./Commands.h"
  2340 ;; Parameters:    Size  Location     Type
  2341 ;;		None
  2342 ;; Auto vars:     Size  Location     Type
  2343 ;;  11759           6    0[BANK0 ] volatile unsigned char [
  2344 ;; Return value:  Size  Location     Type
  2345 ;;                  1    wreg      void 
  2346 ;; Registers used:
  2347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2348 ;; Tracked objects:
  2349 ;;		On entry : 0/0
  2350 ;;		On exit  : 0/0
  2351 ;;		Unchanged: 0/0
  2352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2354 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2356 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2357 ;;Total ram usage:        7 bytes
  2358 ;; Hardware stack levels used: 1
  2359 ;; Hardware stack levels required when called: 2
  2360 ;; This function calls:
  2361 ;;		_UART_send
  2362 ;; This function is called by:
  2363 ;;		_shield_code
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367     0EFC                     _transmit_shield_code:	
  2368                           ;psect for function _transmit_shield_code
  2369                           
  2370     0EFC                     l2056:	
  2371                           ;incstack = 0
  2372                           ; Regs used in _transmit_shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2373                           
  2374     0EFC                     l2058:	
  2375                           ;./Commands.h: 232: {
  2376                           
  2377     0EFC  30D6               	movlw	low transmit_shield_code@F11758
  2378     0EFD  0086               	movwf	6
  2379     0EFE  3000               	movlw	high transmit_shield_code@F11758
  2380     0EFF  0087               	movwf	7
  2381     0F00  3020               	movlw	low transmit_shield_code@11759
  2382     0F01  0084               	movwf	4
  2383     0F02  3000               	movlw	high transmit_shield_code@11759
  2384     0F03  0085               	movwf	5
  2385     0F04  3006               	movlw	6
  2386     0F05  00F8               	movwf	??_transmit_shield_code
  2387     0F06                     u1680:
  2388     0F06  0016               	moviw fsr1++
  2389     0F07  001A               	movwi fsr0++
  2390     0F08  0BF8               	decfsz	??_transmit_shield_code,f
  2391     0F09  2F06               	goto	u1680
  2392     0F0A                     l2060:
  2393     0F0A  3006               	movlw	6
  2394     0F0B  00F2               	movwf	UART_send@size
  2395     0F0C  3000               	movlw	0
  2396     0F0D  00F3               	movwf	UART_send@size+1
  2397     0F0E  3020               	movlw	(low (transmit_shield_code@11759| 0))& (0+255)
  2398     0F0F  318F  277F  318E   	fcall	_UART_send
  2399     0F12  3A00               	xorlw	0
  2400     0F13  1903               	skipnz
  2401     0F14  2F16               	goto	u1691
  2402     0F15  2F17               	goto	u1690
  2403     0F16                     u1691:
  2404     0F16  2EFC               	goto	l2058
  2405     0F17                     u1690:
  2406     0F17                     l192:
  2407     0F17  0008               	return
  2408     0F18                     __end_of_transmit_shield_code:
  2409                           
  2410                           	psect	text3
  2411     0E3C                     __ptext3:	
  2412 ;; *************** function _PCLS_info *****************
  2413 ;; Defined at:
  2414 ;;		line 126 in file "./Commands.h"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 3
  2435 ;; This function calls:
  2436 ;;		_PCLS_info_receive
  2437 ;;		_PCLS_info_send
  2438 ;; This function is called by:
  2439 ;;		_shield_code
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443     0E3C                     _PCLS_info:	
  2444                           ;psect for function _PCLS_info
  2445                           
  2446     0E3C                     l2022:	
  2447                           ;incstack = 0
  2448                           ; Regs used in _PCLS_info: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2449                           
  2450                           
  2451                           ;./Commands.h: 128: 
  2452     0E3C  318E  26E0  318E   	fcall	_PCLS_info_send
  2453     0E3F                     l2026:	
  2454                           ;./Commands.h: 129:     joy_rx = r[6];
  2455                           
  2456                           
  2457                           ;./Commands.h: 129:     joy_rx = r[6];
  2458     0E3F  3181  212A  318E   	fcall	_PCLS_info_receive
  2459     0E42  3A00               	xorlw	0
  2460     0E43  1903               	skipnz
  2461     0E44  2E46               	goto	u1641
  2462     0E45  2E47               	goto	u1640
  2463     0E46                     u1641:
  2464     0E46  2E3C               	goto	l2022
  2465     0E47                     u1640:
  2466     0E47                     l126:
  2467     0E47  0008               	return
  2468     0E48                     __end_of_PCLS_info:
  2469                           
  2470                           	psect	text4
  2471     0EE0                     __ptext4:	
  2472 ;; *************** function _PCLS_info_send *****************
  2473 ;; Defined at:
  2474 ;;		line 96 in file "./Commands.h"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  11721           6    0[BANK0 ] volatile unsigned char [
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2489 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2491 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2492 ;;Total ram usage:        7 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 2
  2495 ;; This function calls:
  2496 ;;		_UART_send
  2497 ;; This function is called by:
  2498 ;;		_PCLS_info
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502     0EE0                     _PCLS_info_send:	
  2503                           ;psect for function _PCLS_info_send
  2504                           
  2505     0EE0                     l1830:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _PCLS_info_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2508                           
  2509     0EE0                     l1832:	
  2510                           ;./Commands.h: 98: 
  2511                           
  2512     0EE0  30E2               	movlw	low PCLS_info_send@F11720
  2513     0EE1  0086               	movwf	6
  2514     0EE2  3000               	movlw	high PCLS_info_send@F11720
  2515     0EE3  0087               	movwf	7
  2516     0EE4  3020               	movlw	low PCLS_info_send@11721
  2517     0EE5  0084               	movwf	4
  2518     0EE6  3000               	movlw	high PCLS_info_send@11721
  2519     0EE7  0085               	movwf	5
  2520     0EE8  3006               	movlw	6
  2521     0EE9  00F8               	movwf	??_PCLS_info_send
  2522     0EEA                     u1310:
  2523     0EEA  0016               	moviw fsr1++
  2524     0EEB  001A               	movwi fsr0++
  2525     0EEC  0BF8               	decfsz	??_PCLS_info_send,f
  2526     0EED  2EEA               	goto	u1310
  2527     0EEE                     l1834:
  2528     0EEE  3006               	movlw	6
  2529     0EEF  00F2               	movwf	UART_send@size
  2530     0EF0  3000               	movlw	0
  2531     0EF1  00F3               	movwf	UART_send@size+1
  2532     0EF2  3020               	movlw	(low (PCLS_info_send@11721| 0))& (0+255)
  2533     0EF3  318F  277F  318E   	fcall	_UART_send
  2534     0EF6  3A00               	xorlw	0
  2535     0EF7  1903               	skipnz
  2536     0EF8  2EFA               	goto	u1321
  2537     0EF9  2EFB               	goto	u1320
  2538     0EFA                     u1321:
  2539     0EFA  2EE0               	goto	l1832
  2540     0EFB                     u1320:
  2541     0EFB                     l112:
  2542     0EFB  0008               	return
  2543     0EFC                     __end_of_PCLS_info_send:
  2544                           
  2545                           	psect	text5
  2546     012A                     __ptext5:	
  2547 ;; *************** function _PCLS_info_receive *****************
  2548 ;; Defined at:
  2549 ;;		line 101 in file "./Commands.h"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  r              12    0[BANK0 ] volatile unsigned char [
  2554 ;;  j               1   13[BANK0 ] volatile unsigned char 
  2555 ;;  s               1   12[BANK0 ] volatile unsigned char 
  2556 ;; Return value:  Size  Location     Type
  2557 ;;                  1    wreg      unsigned char 
  2558 ;; Registers used:
  2559 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2560 ;; Tracked objects:
  2561 ;;		On entry : 0/0
  2562 ;;		On exit  : 0/0
  2563 ;;		Unchanged: 0/0
  2564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2566 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2567 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Totals:         3      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;Total ram usage:       17 bytes
  2570 ;; Hardware stack levels used: 1
  2571 ;; Hardware stack levels required when called: 1
  2572 ;; This function calls:
  2573 ;;		_rx_wait
  2574 ;; This function is called by:
  2575 ;;		_PCLS_info
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579     012A                     _PCLS_info_receive:	
  2580                           ;psect for function _PCLS_info_receive
  2581                           
  2582     012A                     l1836:	
  2583                           ;incstack = 0
  2584                           ; Regs used in _PCLS_info_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2585                           
  2586                           
  2587                           ;./Commands.h: 103:     {
  2588     012A  300C               	movlw	12
  2589     012B  0020               	movlb	0	; select bank0
  2590     012C  00AC               	movwf	PCLS_info_receive@s	;volatile
  2591     012D                     l1838:
  2592                           
  2593                           ;./Commands.h: 105:     }
  2594     012D  01AD               	clrf	PCLS_info_receive@j	;volatile
  2595     012E  2947               	goto	l1850
  2596     012F                     l1840:
  2597                           
  2598                           ;./Commands.h: 106: };./Commands.h: 107: 
  2599     012F  318E  2691  3181   	fcall	_rx_wait
  2600     0132  3A00               	xorlw	0
  2601     0133  1903               	skipnz
  2602     0134  2936               	goto	u1331
  2603     0135  2937               	goto	u1330
  2604     0136                     u1331:
  2605     0136  2940               	goto	l1844
  2606     0137                     u1330:
  2607     0137                     l1842:
  2608                           
  2609                           ;./Commands.h: 108: void user_data_send();./Commands.h: 109: {
  2610     0137  0020               	movlb	0	; select bank0
  2611     0138  082D               	movf	PCLS_info_receive@j,w
  2612     0139  3E20               	addlw	(low (PCLS_info_receive@r| 0))& (0+255)
  2613     013A  0086               	movwf	6
  2614     013B  0187               	clrf	7
  2615     013C  0022               	movlb	2	; select bank2
  2616     013D  0819               	movf	25,w	;volatile
  2617     013E  0081               	movwf	1
  2618                           
  2619                           ;./Commands.h: 110:     while(!UART_send((volatile unsigned char []) {0xFE, 0x19, 0x01, 
      +                          0x05, 0x00, 0x00}, 6)){}
  2620     013F  2942               	goto	l1848
  2621     0140                     l1844:
  2622                           
  2623                           ;./Commands.h: 112: ;./Commands.h: 113: volatile unsigned char user_data_receive()
  2624     0140  3000               	movlw	0
  2625     0141  296B               	goto	l119
  2626     0142                     l1848:
  2627                           
  2628                           ;./Commands.h: 115:     volatile char s=26, j, r[26];
  2629     0142  3001               	movlw	1
  2630     0143  00F2               	movwf	??_PCLS_info_receive
  2631     0144  0872               	movf	??_PCLS_info_receive,w
  2632     0145  0020               	movlb	0	; select bank0
  2633     0146  07AD               	addwf	PCLS_info_receive@j,f	;volatile
  2634     0147                     l1850:
  2635     0147  082C               	movf	PCLS_info_receive@s,w	;volatile
  2636     0148  022D               	subwf	PCLS_info_receive@j,w	;volatile
  2637     0149  1C03               	skipc
  2638     014A  294C               	goto	u1341
  2639     014B  294D               	goto	u1340
  2640     014C                     u1341:
  2641     014C  292F               	goto	l1840
  2642     014D                     u1340:
  2643     014D                     l1852:
  2644                           
  2645                           ;./Commands.h: 117:     for (j=0; j < s; j++)
  2646     014D  0826               	movf	PCLS_info_receive@r+6,w	;volatile
  2647     014E  00DF               	movwf	_teamID	;volatile
  2648                           
  2649                           ;./Commands.h: 118:     {
  2650     014F  0827               	movf	PCLS_info_receive@r+7,w	;volatile
  2651     0150  00DE               	movwf	_playerID	;volatile
  2652                           
  2653                           ;./Commands.h: 119:         if (rx_wait())
  2654     0151  0828               	movf	PCLS_info_receive@r+8,w	;volatile
  2655     0152  00F2               	movwf	??_PCLS_info_receive
  2656     0153  01F3               	clrf	??_PCLS_info_receive+1
  2657     0154  0872               	movf	??_PCLS_info_receive,w
  2658     0155  0021               	movlb	1	; select bank1
  2659     0156  00C5               	movwf	_health^(0+128)	;volatile
  2660     0157  0873               	movf	??_PCLS_info_receive+1,w
  2661     0158  00C6               	movwf	(_health+1)^(0+128)	;volatile
  2662                           
  2663                           ;./Commands.h: 120:         {
  2664     0159  0020               	movlb	0	; select bank0
  2665     015A  0829               	movf	PCLS_info_receive@r+9,w	;volatile
  2666     015B  00F2               	movwf	??_PCLS_info_receive
  2667     015C  01F3               	clrf	??_PCLS_info_receive+1
  2668     015D  0872               	movf	??_PCLS_info_receive,w
  2669     015E  00F3               	movwf	??_PCLS_info_receive+1
  2670     015F  01F2               	clrf	??_PCLS_info_receive
  2671     0160  0872               	movf	??_PCLS_info_receive,w
  2672     0161  0021               	movlb	1	; select bank1
  2673     0162  07C5               	addwf	_health^(0+128),f	;volatile
  2674     0163  0873               	movf	??_PCLS_info_receive+1,w
  2675     0164  3DC6               	addwfc	(_health+1)^(0+128),f	;volatile
  2676                           
  2677                           ;./Commands.h: 121:             r[j] = RCREG;
  2678     0165  0020               	movlb	0	; select bank0
  2679     0166  082A               	movf	PCLS_info_receive@r+10,w	;volatile
  2680     0167  00DD               	movwf	_shield_flag	;volatile
  2681                           
  2682                           ;./Commands.h: 122:         }
  2683     0168  082B               	movf	PCLS_info_receive@r+11,w	;volatile
  2684     0169  00DC               	movwf	_repair_flag	;volatile
  2685                           
  2686                           ;./Commands.h: 123:         else
  2687     016A  3001               	movlw	1
  2688     016B                     l119:
  2689     016B  0008               	return
  2690     016C                     __end_of_PCLS_info_receive:
  2691                           
  2692                           	psect	text6
  2693     01B9                     __ptext6:	
  2694 ;; *************** function _servos *****************
  2695 ;; Defined at:
  2696 ;;		line 29 in file "Master.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  j               2   30[BANK0 ] int 
  2701 ;;  i               2   28[BANK0 ] int 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2712 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2714 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2715 ;;Total ram usage:        4 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 4
  2718 ;; This function calls:
  2719 ;;		_user_data
  2720 ;; This function is called by:
  2721 ;;		_main
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725     01B9                     _servos:	
  2726                           ;psect for function _servos
  2727                           
  2728     01B9                     l2334:	
  2729                           ;incstack = 0
  2730                           ; Regs used in _servos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2731                           
  2732                           
  2733                           ;Master.c: 31:         LATCbits.LATC3 = 0;;Master.c: 32:         i=1;
  2734     01B9  0020               	movlb	0	; select bank0
  2735     01BA  1193               	bcf	19,3	;volatile
  2736                           
  2737                           ;Master.c: 33:     }}
  2738     01BB  1213               	bcf	19,4	;volatile
  2739                           
  2740                           ;Master.c: 35:     if(potB < 25)
  2741     01BC  1293               	bcf	19,5	;volatile
  2742                           
  2743                           ;Master.c: 36:     {
  2744     01BD  1013               	bcf	19,0	;volatile
  2745                           
  2746                           ;Master.c: 38:         LATCbits.LATC0 = 0;
  2747     01BE  1391               	bcf	17,7	;volatile
  2748     01BF                     l2336:
  2749                           
  2750                           ;Master.c: 40:     }
  2751     01BF  3180  2009  3181   	fcall	_user_data
  2752     01C2                     l2338:
  2753                           
  2754                           ;Master.c: 42:     {
  2755     01C2  3000               	movlw	0
  2756     01C3  0020               	movlb	0	; select bank0
  2757     01C4  0249               	subwf	_potA+1,w	;volatile
  2758     01C5  3019               	movlw	25
  2759     01C6  1903               	skipnz
  2760     01C7  0248               	subwf	_potA,w	;volatile
  2761     01C8  1803               	skipnc
  2762     01C9  29CB               	goto	u2061
  2763     01CA  29CC               	goto	u2060
  2764     01CB                     u2061:
  2765     01CB  29D1               	goto	l2344
  2766     01CC                     u2060:
  2767     01CC                     l2340:
  2768                           
  2769                           ;Master.c: 43:         LATCbits.LATC5 = 1;;Master.c: 44:         LATCbits.LATC0 = 1;
  2770     01CC  1598               	bsf	24,3	;volatile
  2771                           
  2772                           ;Master.c: 45:         j=0;
  2773     01CD  1218               	bcf	24,4	;volatile
  2774     01CE                     l2342:
  2775                           
  2776                           ;Master.c: 46:     }
  2777     01CE  01BC               	clrf	servos@i
  2778     01CF  01BD               	clrf	servos@i+1
  2779                           
  2780                           ;Master.c: 47:     else
  2781     01D0  29E2               	goto	l346
  2782     01D1                     l2344:
  2783     01D1  3000               	movlw	0
  2784     01D2  0249               	subwf	_potA+1,w	;volatile
  2785     01D3  304C               	movlw	76
  2786     01D4  1903               	skipnz
  2787     01D5  0248               	subwf	_potA,w	;volatile
  2788     01D6  1C03               	skipc
  2789     01D7  29D9               	goto	u2071
  2790     01D8  29DA               	goto	u2070
  2791     01D9                     u2071:
  2792     01D9  29DD               	goto	l347
  2793     01DA                     u2070:
  2794     01DA                     l2346:
  2795                           
  2796                           ;Master.c: 49:         LATCbits.LATC5 = 0;;Master.c: 50:         j=1;
  2797     01DA  1598               	bsf	24,3	;volatile
  2798                           
  2799                           ;Master.c: 51:     }}
  2800     01DB  1618               	bsf	24,4	;volatile
  2801     01DC  29CE               	goto	l2342
  2802     01DD                     l347:	
  2803                           ;Master.c: 54:     else{LATAbits.LATA7=1;}
  2804                           
  2805                           
  2806                           ;Master.c: 55: };Master.c: 56: 
  2807     01DD  1198               	bcf	24,3	;volatile
  2808     01DE                     l2350:
  2809                           
  2810                           ;Master.c: 57: void claw()
  2811     01DE  3001               	movlw	1
  2812     01DF  00BC               	movwf	servos@i
  2813     01E0  3000               	movlw	0
  2814     01E1  00BD               	movwf	servos@i+1
  2815     01E2                     l346:
  2816                           
  2817                           ;Master.c: 60: 
  2818     01E2  3000               	movlw	0
  2819     01E3  0247               	subwf	_potB+1,w	;volatile
  2820     01E4  3019               	movlw	25
  2821     01E5  1903               	skipnz
  2822     01E6  0246               	subwf	_potB,w	;volatile
  2823     01E7  1803               	skipnc
  2824     01E8  29EA               	goto	u2081
  2825     01E9  29EB               	goto	u2080
  2826     01EA                     u2081:
  2827     01EA  29F0               	goto	l2356
  2828     01EB                     u2080:
  2829     01EB                     l2352:
  2830                           
  2831                           ;Master.c: 61:     servo(0, 0, 0, potA);;Master.c: 62: }
  2832     01EB  1698               	bsf	24,5	;volatile
  2833                           
  2834                           ;Master.c: 63: 
  2835     01EC  1018               	bcf	24,0	;volatile
  2836     01ED                     l2354:
  2837                           
  2838                           ;Master.c: 64: 
  2839     01ED  01BE               	clrf	servos@j
  2840     01EE  01BF               	clrf	servos@j+1
  2841                           
  2842                           ;Master.c: 65: 
  2843     01EF  2A01               	goto	l2364
  2844     01F0                     l2356:
  2845     01F0  3000               	movlw	0
  2846     01F1  0247               	subwf	_potB+1,w	;volatile
  2847     01F2  304C               	movlw	76
  2848     01F3  1903               	skipnz
  2849     01F4  0246               	subwf	_potB,w	;volatile
  2850     01F5  1C03               	skipc
  2851     01F6  29F8               	goto	u2091
  2852     01F7  29F9               	goto	u2090
  2853     01F8                     u2091:
  2854     01F8  29FC               	goto	l351
  2855     01F9                     u2090:
  2856     01F9                     l2358:
  2857                           
  2858                           ;Master.c: 67:     UART_init();;Master.c: 68:     ADC_init();
  2859     01F9  1698               	bsf	24,5	;volatile
  2860                           
  2861                           ;Master.c: 69:     user_data();
  2862     01FA  1418               	bsf	24,0	;volatile
  2863     01FB  29ED               	goto	l2354
  2864     01FC                     l351:	
  2865                           ;Master.c: 72: 
  2866                           
  2867                           
  2868                           ;Master.c: 73:     if(swB);Master.c: 74:     {
  2869     01FC  1298               	bcf	24,5	;volatile
  2870     01FD                     l2362:
  2871                           
  2872                           ;Master.c: 75:         line_colour = read_adc(mpin) - 0x100;
  2873     01FD  3001               	movlw	1
  2874     01FE  00BE               	movwf	servos@j
  2875     01FF  3000               	movlw	0
  2876     0200  00BF               	movwf	servos@j+1
  2877     0201                     l2364:
  2878                           
  2879                           ;Master.c: 78:             line_follower();
  2880     0201  083C               	movf	servos@i,w
  2881     0202  043D               	iorwf	servos@i+1,w
  2882     0203  1903               	btfsc	3,2
  2883     0204  2A06               	goto	u2101
  2884     0205  2A07               	goto	u2100
  2885     0206                     u2101:
  2886     0206  2A0F               	goto	l353
  2887     0207                     u2100:
  2888     0207                     l2366:
  2889     0207  083E               	movf	servos@j,w
  2890     0208  043F               	iorwf	servos@j+1,w
  2891     0209  1903               	btfsc	3,2
  2892     020A  2A0C               	goto	u2111
  2893     020B  2A0D               	goto	u2110
  2894     020C                     u2111:
  2895     020C  2A0F               	goto	l353
  2896     020D                     u2110:
  2897     020D                     l2368:
  2898     020D  1396               	bcf	22,7	;volatile
  2899     020E  2A10               	goto	l355
  2900     020F                     l353:	
  2901                           ;Master.c: 79:             user_data();
  2902                           
  2903     020F  1796               	bsf	22,7	;volatile
  2904     0210                     l355:
  2905     0210  0008               	return
  2906     0211                     __end_of_servos:
  2907                           
  2908                           	psect	text7
  2909     0FD4                     __ptext7:	
  2910 ;; *************** function _ore_type *****************
  2911 ;; Defined at:
  2912 ;;		line 258 in file "./Commands.h"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;  type            1    wreg     unsigned char 
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;  type            1    0[BANK0 ] unsigned char 
  2917 ;;  11783           7    1[BANK0 ] volatile unsigned char [
  2918 ;; Return value:  Size  Location     Type
  2919 ;;                  1    wreg      void 
  2920 ;; Registers used:
  2921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2922 ;; Tracked objects:
  2923 ;;		On entry : 0/0
  2924 ;;		On exit  : 0/0
  2925 ;;		Unchanged: 0/0
  2926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2928 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2929 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;Total ram usage:        9 bytes
  2932 ;; Hardware stack levels used: 1
  2933 ;; Hardware stack levels required when called: 2
  2934 ;; This function calls:
  2935 ;;		_UART_send
  2936 ;; This function is called by:
  2937 ;;		_main
  2938 ;; This function uses a non-reentrant model
  2939 ;;
  2940                           
  2941     0FD4                     _ore_type:	
  2942                           ;psect for function _ore_type
  2943                           
  2944                           
  2945                           ;incstack = 0
  2946                           ; Regs used in _ore_type: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2947                           ;ore_type@type stored from wreg
  2948     0FD4  0020               	movlb	0	; select bank0
  2949     0FD5  00A0               	movwf	ore_type@type
  2950     0FD6                     l2162:
  2951     0FD6                     l2164:
  2952     0FD6  30AA               	movlw	low ore_type@F11782
  2953     0FD7  0086               	movwf	6
  2954     0FD8  3000               	movlw	high ore_type@F11782
  2955     0FD9  0087               	movwf	7
  2956     0FDA  3021               	movlw	low ore_type@11783
  2957     0FDB  0084               	movwf	4
  2958     0FDC  3000               	movlw	high ore_type@11783
  2959     0FDD  0085               	movwf	5
  2960     0FDE  3007               	movlw	7
  2961     0FDF  00F8               	movwf	??_ore_type
  2962     0FE0                     u1850:
  2963     0FE0  0016               	moviw fsr1++
  2964     0FE1  001A               	movwi fsr0++
  2965     0FE2  0BF8               	decfsz	??_ore_type,f
  2966     0FE3  2FE0               	goto	u1850
  2967     0FE4                     l2166:
  2968     0FE4  30FE               	movlw	254
  2969     0FE5  0020               	movlb	0	; select bank0
  2970     0FE6  00A1               	movwf	ore_type@11783	;volatile
  2971     0FE7                     l2168:
  2972     0FE7  3019               	movlw	25
  2973     0FE8  00A2               	movwf	ore_type@11783+1	;volatile
  2974     0FE9                     l2170:
  2975     0FE9  3003               	movlw	3
  2976     0FEA  00A3               	movwf	ore_type@11783+2	;volatile
  2977     0FEB                     l2172:
  2978     0FEB  300A               	movlw	10
  2979     0FEC  00A4               	movwf	ore_type@11783+3	;volatile
  2980     0FED                     l2174:
  2981     0FED  3001               	movlw	1
  2982     0FEE  00A5               	movwf	ore_type@11783+4	;volatile
  2983     0FEF                     l2176:
  2984     0FEF  01A6               	clrf	ore_type@11783+5	;volatile
  2985     0FF0                     l2178:
  2986     0FF0  0820               	movf	ore_type@type,w
  2987     0FF1  00A7               	movwf	ore_type@11783+6	;volatile
  2988     0FF2                     l2180:
  2989     0FF2  3007               	movlw	7
  2990     0FF3  00F2               	movwf	UART_send@size
  2991     0FF4  3000               	movlw	0
  2992     0FF5  00F3               	movwf	UART_send@size+1
  2993     0FF6  3021               	movlw	(low (ore_type@11783| 0))& (0+255)
  2994     0FF7  318F  277F  318F   	fcall	_UART_send
  2995     0FFA  3A00               	xorlw	0
  2996     0FFB  1903               	skipnz
  2997     0FFC  2FFE               	goto	u1861
  2998     0FFD  2FFF               	goto	u1860
  2999     0FFE                     u1861:
  3000     0FFE  2FD6               	goto	l2164
  3001     0FFF                     u1860:
  3002     0FFF                     l235:
  3003     0FFF  0008               	return
  3004     1000                     __end_of_ore_type:
  3005                           
  3006                           	psect	text8
  3007     03E7                     __ptext8:	
  3008 ;; *************** function _line_follower *****************
  3009 ;; Defined at:
  3010 ;;		line 47 in file "./Line Follower.h"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  r_val           2   15[BANK0 ] volatile unsigned int 
  3015 ;;  m_val           2   13[BANK0 ] volatile unsigned int 
  3016 ;;  l_val           2   11[BANK0 ] volatile unsigned int 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;Total ram usage:        8 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 3
  3033 ;; This function calls:
  3034 ;;		_abs
  3035 ;;		_motor
  3036 ;;		_read_adc
  3037 ;; This function is called by:
  3038 ;;		_main
  3039 ;; This function uses a non-reentrant model
  3040 ;;
  3041                           
  3042     03E7                     _line_follower:	
  3043                           ;psect for function _line_follower
  3044                           
  3045     03E7                     l2204:	
  3046                           ;incstack = 0
  3047                           ; Regs used in _line_follower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3048                           
  3049                           
  3050                           ;./Line Follower.h: 49:     ADCON0bits.ADGO = 1;;./Line Follower.h: 51:     l_val = read
      +                          _adc(lpin);
  3051     03E7  0020               	movlb	0	; select bank0
  3052     03E8  1011               	bcf	17,0	;volatile
  3053                           
  3054                           ;./Line Follower.h: 52:     ADCON0bits.ADGO = 1;
  3055     03E9  1091               	bcf	17,1	;volatile
  3056                           
  3057                           ;./Line Follower.h: 53:     while(ADCON0bits.ADGO){}
  3058     03EA  1111               	bcf	17,2	;volatile
  3059                           
  3060                           ;./Line Follower.h: 55:     ADCON0bits.ADGO = 1;
  3061     03EB  1196               	bcf	22,3	;volatile
  3062                           
  3063                           ;./Line Follower.h: 57:     r_val = read_adc(rpin);
  3064     03EC  0021               	movlb	1	; select bank1
  3065     03ED  1413               	bsf	19,0	;volatile
  3066     03EE                     l295:	
  3067                           ;./Line Follower.h: 58: 
  3068                           
  3069     03EE  1813               	btfsc	19,0	;volatile
  3070     03EF  2BF1               	goto	u1881
  3071     03F0  2BF2               	goto	u1880
  3072     03F1                     u1881:
  3073     03F1  2BEE               	goto	l295
  3074     03F2                     u1880:
  3075     03F2                     l2206:
  3076                           
  3077                           ;./Line Follower.h: 59:     if(m_val > line_colour)
  3078     03F2  300B               	movlw	11
  3079     03F3  318F  2758  3183   	fcall	_read_adc
  3080     03F6  0871               	movf	?_read_adc+1,w
  3081     03F7  0020               	movlb	0	; select bank0
  3082     03F8  00AC               	movwf	line_follower@l_val+1	;volatile
  3083     03F9  0870               	movf	?_read_adc,w
  3084     03FA  00AB               	movwf	line_follower@l_val	;volatile
  3085     03FB                     l2208:
  3086                           
  3087                           ;./Line Follower.h: 60:     {
  3088     03FB  0021               	movlb	1	; select bank1
  3089     03FC  1413               	bsf	19,0	;volatile
  3090     03FD                     l298:	
  3091                           ;./Line Follower.h: 61:   l_vec = fast;
  3092                           
  3093     03FD  1813               	btfsc	19,0	;volatile
  3094     03FE  2C00               	goto	u1891
  3095     03FF  2C01               	goto	u1890
  3096     0400                     u1891:
  3097     0400  2BFD               	goto	l298
  3098     0401                     u1890:
  3099     0401                     l2210:
  3100                           
  3101                           ;./Line Follower.h: 62:   r_vec = fast;
  3102     0401  3009               	movlw	9
  3103     0402  318F  2758  3183   	fcall	_read_adc
  3104     0405  0871               	movf	?_read_adc+1,w
  3105     0406  0020               	movlb	0	; select bank0
  3106     0407  00AE               	movwf	line_follower@m_val+1	;volatile
  3107     0408  0870               	movf	?_read_adc,w
  3108     0409  00AD               	movwf	line_follower@m_val	;volatile
  3109     040A                     l2212:
  3110                           
  3111                           ;./Line Follower.h: 63:         LATAbits.LATA1 = 1;
  3112     040A  0021               	movlb	1	; select bank1
  3113     040B  1413               	bsf	19,0	;volatile
  3114     040C                     l301:	
  3115                           ;./Line Follower.h: 64:     }
  3116                           
  3117     040C  1813               	btfsc	19,0	;volatile
  3118     040D  2C0F               	goto	u1901
  3119     040E  2C10               	goto	u1900
  3120     040F                     u1901:
  3121     040F  2C0C               	goto	l301
  3122     0410                     u1900:
  3123     0410                     l2214:
  3124                           
  3125                           ;./Line Follower.h: 65:     else
  3126     0410  300A               	movlw	10
  3127     0411  318F  2758  3183   	fcall	_read_adc
  3128     0414  0871               	movf	?_read_adc+1,w
  3129     0415  0020               	movlb	0	; select bank0
  3130     0416  00B0               	movwf	line_follower@r_val+1	;volatile
  3131     0417  0870               	movf	?_read_adc,w
  3132     0418  00AF               	movwf	line_follower@r_val	;volatile
  3133     0419                     l2216:
  3134                           
  3135                           ;./Line Follower.h: 67:   l_vec = slow;
  3136     0419  082E               	movf	line_follower@m_val+1,w	;volatile
  3137     041A  0267               	subwf	_line_colour+1,w	;volatile
  3138     041B  1D03               	skipz
  3139     041C  2C1F               	goto	u1915
  3140     041D  082D               	movf	line_follower@m_val,w	;volatile
  3141     041E  0266               	subwf	_line_colour,w	;volatile
  3142     041F                     u1915:
  3143     041F  1803               	skipnc
  3144     0420  2C22               	goto	u1911
  3145     0421  2C23               	goto	u1910
  3146     0422                     u1911:
  3147     0422  2C2D               	goto	l2222
  3148     0423                     u1910:
  3149     0423                     l2218:
  3150                           
  3151                           ;./Line Follower.h: 68:   r_vec = slow;;./Line Follower.h: 69:         LATAbits.LATA1 = 
      +                          0;
  3152     0423  0865               	movf	_fast+1,w	;volatile
  3153     0424  00EB               	movwf	_l_vec+1	;volatile
  3154     0425  0864               	movf	_fast,w	;volatile
  3155     0426  00EA               	movwf	_l_vec	;volatile
  3156                           
  3157                           ;./Line Follower.h: 70:     }
  3158     0427  0865               	movf	_fast+1,w	;volatile
  3159     0428  00E9               	movwf	_r_vec+1	;volatile
  3160     0429  0864               	movf	_fast,w	;volatile
  3161     042A  00E8               	movwf	_r_vec	;volatile
  3162     042B                     l2220:
  3163                           
  3164                           ;./Line Follower.h: 71: 
  3165     042B  1496               	bsf	22,1	;volatile
  3166                           
  3167                           ;./Line Follower.h: 72:     if(l_val > line_colour)
  3168     042C  2C36               	goto	l305
  3169     042D                     l2222:
  3170                           
  3171                           ;./Line Follower.h: 74:   l_vec += speed_inc;;./Line Follower.h: 75:   r_vec -= speed_in
      +                          c*2;
  3172     042D  0863               	movf	_slow+1,w	;volatile
  3173     042E  00EB               	movwf	_l_vec+1	;volatile
  3174     042F  0862               	movf	_slow,w	;volatile
  3175     0430  00EA               	movwf	_l_vec	;volatile
  3176                           
  3177                           ;./Line Follower.h: 76:         LATAbits.LATA2 = 1;
  3178     0431  0863               	movf	_slow+1,w	;volatile
  3179     0432  00E9               	movwf	_r_vec+1	;volatile
  3180     0433  0862               	movf	_slow,w	;volatile
  3181     0434  00E8               	movwf	_r_vec	;volatile
  3182     0435                     l2224:
  3183                           
  3184                           ;./Line Follower.h: 77:     }
  3185     0435  1096               	bcf	22,1	;volatile
  3186     0436                     l305:	
  3187                           ;./Line Follower.h: 78:     else {LATAbits.LATA2 = 0;}
  3188                           
  3189                           
  3190                           ;./Line Follower.h: 80:     if(r_val > line_colour)
  3191     0436  082C               	movf	line_follower@l_val+1,w	;volatile
  3192     0437  0267               	subwf	_line_colour+1,w	;volatile
  3193     0438  1D03               	skipz
  3194     0439  2C3C               	goto	u1925
  3195     043A  082B               	movf	line_follower@l_val,w	;volatile
  3196     043B  0266               	subwf	_line_colour,w	;volatile
  3197     043C                     u1925:
  3198     043C  1803               	skipnc
  3199     043D  2C3F               	goto	u1921
  3200     043E  2C40               	goto	u1920
  3201     043F                     u1921:
  3202     043F  2C50               	goto	l306
  3203     0440                     u1920:
  3204     0440                     l2226:
  3205                           
  3206                           ;./Line Follower.h: 81:     {;./Line Follower.h: 82:   l_vec -= speed_inc*2;
  3207     0440  0860               	movf	_speed_inc,w	;volatile
  3208     0441  07EA               	addwf	_l_vec,f	;volatile
  3209     0442  0861               	movf	_speed_inc+1,w	;volatile
  3210     0443  3DEB               	addwfc	_l_vec+1,f	;volatile
  3211     0444                     l2228:
  3212                           
  3213                           ;./Line Follower.h: 83:   r_vec += speed_inc;
  3214     0444  0861               	movf	_speed_inc+1,w	;volatile
  3215     0445  00FD               	movwf	??_line_follower+1
  3216     0446  0860               	movf	_speed_inc,w	;volatile
  3217     0447  00FC               	movwf	??_line_follower
  3218     0448  35FC               	lslf	??_line_follower,f
  3219     0449  0DFD               	rlf	??_line_follower+1,f
  3220     044A  087C               	movf	??_line_follower,w
  3221     044B  02E8               	subwf	_r_vec,f	;volatile
  3222     044C  087D               	movf	??_line_follower+1,w
  3223     044D  3BE9               	subwfb	_r_vec+1,f	;volatile
  3224     044E                     l2230:
  3225                           
  3226                           ;./Line Follower.h: 84:         LATAbits.LATA0 = 1;
  3227     044E  1516               	bsf	22,2	;volatile
  3228                           
  3229                           ;./Line Follower.h: 85:     }
  3230     044F  2C51               	goto	l2232
  3231     0450                     l306:	
  3232                           ;./Line Follower.h: 86:     else {LATAbits.LATA0 = 0;}
  3233                           
  3234     0450  1116               	bcf	22,2	;volatile
  3235     0451                     l2232:
  3236                           
  3237                           ;./Line Follower.h: 88:     if(l_vec >= 100)
  3238     0451  0830               	movf	line_follower@r_val+1,w	;volatile
  3239     0452  0267               	subwf	_line_colour+1,w	;volatile
  3240     0453  1D03               	skipz
  3241     0454  2C57               	goto	u1935
  3242     0455  082F               	movf	line_follower@r_val,w	;volatile
  3243     0456  0266               	subwf	_line_colour,w	;volatile
  3244     0457                     u1935:
  3245     0457  1803               	skipnc
  3246     0458  2C5A               	goto	u1931
  3247     0459  2C5B               	goto	u1930
  3248     045A                     u1931:
  3249     045A  2C6B               	goto	l308
  3250     045B                     u1930:
  3251     045B                     l2234:
  3252                           
  3253                           ;./Line Follower.h: 89:     {;./Line Follower.h: 90:         l_dir = 1;
  3254     045B  0861               	movf	_speed_inc+1,w	;volatile
  3255     045C  00FD               	movwf	??_line_follower+1
  3256     045D  0860               	movf	_speed_inc,w	;volatile
  3257     045E  00FC               	movwf	??_line_follower
  3258     045F  35FC               	lslf	??_line_follower,f
  3259     0460  0DFD               	rlf	??_line_follower+1,f
  3260     0461  087C               	movf	??_line_follower,w
  3261     0462  02EA               	subwf	_l_vec,f	;volatile
  3262     0463  087D               	movf	??_line_follower+1,w
  3263     0464  3BEB               	subwfb	_l_vec+1,f	;volatile
  3264     0465                     l2236:
  3265                           
  3266                           ;./Line Follower.h: 91:         l_vec -= 100;
  3267     0465  0860               	movf	_speed_inc,w	;volatile
  3268     0466  07E8               	addwf	_r_vec,f	;volatile
  3269     0467  0861               	movf	_speed_inc+1,w	;volatile
  3270     0468  3DE9               	addwfc	_r_vec+1,f	;volatile
  3271     0469                     l2238:
  3272                           
  3273                           ;./Line Follower.h: 92:     }
  3274     0469  1416               	bsf	22,0	;volatile
  3275                           
  3276                           ;./Line Follower.h: 93:     else
  3277     046A  2C6C               	goto	l2240
  3278     046B                     l308:	
  3279                           ;./Line Follower.h: 94:     {
  3280                           
  3281     046B  1016               	bcf	22,0	;volatile
  3282     046C                     l2240:
  3283                           
  3284                           ;./Line Follower.h: 96:         l_vec = 100 - l_vec;
  3285     046C  086B               	movf	_l_vec+1,w	;volatile
  3286     046D  3A80               	xorlw	128
  3287     046E  00FC               	movwf	??_line_follower
  3288     046F  3080               	movlw	128
  3289     0470  027C               	subwf	??_line_follower,w
  3290     0471  1D03               	skipz
  3291     0472  2C75               	goto	u1945
  3292     0473  3064               	movlw	100
  3293     0474  026A               	subwf	_l_vec,w	;volatile
  3294     0475                     u1945:
  3295     0475  1C03               	skipc
  3296     0476  2C78               	goto	u1941
  3297     0477  2C79               	goto	u1940
  3298     0478                     u1941:
  3299     0478  2C81               	goto	l2244
  3300     0479                     u1940:
  3301     0479                     l2242:
  3302                           
  3303                           ;./Line Follower.h: 97:     };./Line Follower.h: 98: 
  3304     0479  3001               	movlw	1
  3305     047A  0020               	movlb	0	; select bank0
  3306     047B  00DB               	movwf	_l_dir	;volatile
  3307                           
  3308                           ;./Line Follower.h: 99:     if(r_vec >= 100)
  3309     047C  309C               	movlw	156
  3310     047D  07EA               	addwf	_l_vec,f	;volatile
  3311     047E  30FF               	movlw	255
  3312     047F  3DEB               	addwfc	_l_vec+1,f	;volatile
  3313                           
  3314                           ;./Line Follower.h: 100:     {
  3315     0480  2C8D               	goto	l311
  3316     0481                     l2244:
  3317                           
  3318                           ;./Line Follower.h: 102: ;./Line Follower.h: 103:         r_vec -= 100;
  3319     0481  3002               	movlw	2
  3320     0482  0020               	movlb	0	; select bank0
  3321     0483  00DB               	movwf	_l_dir	;volatile
  3322                           
  3323                           ;./Line Follower.h: 104:     }
  3324     0484  3064               	movlw	100
  3325     0485  00FC               	movwf	??_line_follower
  3326     0486  086A               	movf	_l_vec,w	;volatile
  3327     0487  027C               	subwf	??_line_follower,w
  3328     0488  00EA               	movwf	_l_vec	;volatile
  3329     0489  096B               	comf	_l_vec+1,w	;volatile
  3330     048A  1803               	skipnc
  3331     048B  0A89               	incf	9,f
  3332     048C  00EB               	movwf	_l_vec+1	;volatile
  3333     048D                     l311:	
  3334                           ;./Line Follower.h: 105:     else
  3335                           
  3336                           
  3337                           ;./Line Follower.h: 107:         r_dir = 2;
  3338     048D  0869               	movf	_r_vec+1,w	;volatile
  3339     048E  3A80               	xorlw	128
  3340     048F  00FC               	movwf	??_line_follower
  3341     0490  3080               	movlw	128
  3342     0491  027C               	subwf	??_line_follower,w
  3343     0492  1D03               	skipz
  3344     0493  2C96               	goto	u1955
  3345     0494  3064               	movlw	100
  3346     0495  0268               	subwf	_r_vec,w	;volatile
  3347     0496                     u1955:
  3348     0496  1C03               	skipc
  3349     0497  2C99               	goto	u1951
  3350     0498  2C9A               	goto	u1950
  3351     0499                     u1951:
  3352     0499  2CA2               	goto	l2248
  3353     049A                     u1950:
  3354     049A                     l2246:
  3355                           
  3356                           ;./Line Follower.h: 108:         r_vec = 100 - r_vec;;./Line Follower.h: 109:     }
  3357     049A  3001               	movlw	1
  3358     049B  0020               	movlb	0	; select bank0
  3359     049C  00DA               	movwf	_r_dir	;volatile
  3360                           
  3361                           ;./Line Follower.h: 111:     if(l_val && r_val && m_val)
  3362     049D  309C               	movlw	156
  3363     049E  07E8               	addwf	_r_vec,f	;volatile
  3364     049F  30FF               	movlw	255
  3365     04A0  3DE9               	addwfc	_r_vec+1,f	;volatile
  3366                           
  3367                           ;./Line Follower.h: 112:     {
  3368     04A1  2CAE               	goto	l2250
  3369     04A2                     l2248:
  3370                           
  3371                           ;./Line Follower.h: 114:         r_vec = 50;;./Line Follower.h: 115:     }
  3372     04A2  3002               	movlw	2
  3373     04A3  0020               	movlb	0	; select bank0
  3374     04A4  00DA               	movwf	_r_dir	;volatile
  3375                           
  3376                           ;./Line Follower.h: 116: 
  3377     04A5  3064               	movlw	100
  3378     04A6  00FC               	movwf	??_line_follower
  3379     04A7  0868               	movf	_r_vec,w	;volatile
  3380     04A8  027C               	subwf	??_line_follower,w
  3381     04A9  00E8               	movwf	_r_vec	;volatile
  3382     04AA  0969               	comf	_r_vec+1,w	;volatile
  3383     04AB  1803               	skipnc
  3384     04AC  0A89               	incf	9,f
  3385     04AD  00E9               	movwf	_r_vec+1	;volatile
  3386     04AE                     l2250:
  3387                           
  3388                           ;./Line Follower.h: 119:     motor(l_dir, abs(l_vec), r_dir, abs(r_vec));
  3389     04AE  082B               	movf	line_follower@l_val,w	;volatile
  3390     04AF  042C               	iorwf	line_follower@l_val+1,w	;volatile
  3391     04B0  1903               	btfsc	3,2
  3392     04B1  2CB3               	goto	u1961
  3393     04B2  2CB4               	goto	u1960
  3394     04B3                     u1961:
  3395     04B3  2CC8               	goto	l314
  3396     04B4                     u1960:
  3397     04B4                     l2252:
  3398     04B4  082F               	movf	line_follower@r_val,w	;volatile
  3399     04B5  0430               	iorwf	line_follower@r_val+1,w	;volatile
  3400     04B6  1903               	btfsc	3,2
  3401     04B7  2CB9               	goto	u1971
  3402     04B8  2CBA               	goto	u1970
  3403     04B9                     u1971:
  3404     04B9  2CC8               	goto	l314
  3405     04BA                     u1970:
  3406     04BA                     l2254:
  3407     04BA  082D               	movf	line_follower@m_val,w	;volatile
  3408     04BB  042E               	iorwf	line_follower@m_val+1,w	;volatile
  3409     04BC  1903               	btfsc	3,2
  3410     04BD  2CBF               	goto	u1981
  3411     04BE  2CC0               	goto	u1980
  3412     04BF                     u1981:
  3413     04BF  2CC8               	goto	l314
  3414     04C0                     u1980:
  3415     04C0                     l2256:
  3416                           
  3417                           ;./Line Follower.h: 120:     PIR1bits.ADIF = 0;;./Line Follower.h: 121:     ADCON0bits.A
      +                          DGO = 1;
  3418     04C0  3032               	movlw	50
  3419     04C1  00EA               	movwf	_l_vec	;volatile
  3420     04C2  3000               	movlw	0
  3421     04C3  00EB               	movwf	_l_vec+1	;volatile
  3422                           
  3423                           ;./Line Follower.h: 122: }
  3424     04C4  3032               	movlw	50
  3425     04C5  00E8               	movwf	_r_vec	;volatile
  3426     04C6  3000               	movlw	0
  3427     04C7  00E9               	movwf	_r_vec+1	;volatile
  3428     04C8                     l314:
  3429     04C8  086B               	movf	_l_vec+1,w	;volatile
  3430     04C9  3A80               	xorlw	128
  3431     04CA  00FC               	movwf	??_line_follower
  3432     04CB  3080               	movlw	128
  3433     04CC  027C               	subwf	??_line_follower,w
  3434     04CD  1D03               	skipz
  3435     04CE  2CD1               	goto	u1995
  3436     04CF  30C9               	movlw	201
  3437     04D0  026A               	subwf	_l_vec,w	;volatile
  3438     04D1                     u1995:
  3439     04D1  1C03               	skipc
  3440     04D2  2CD4               	goto	u1991
  3441     04D3  2CD5               	goto	u1990
  3442     04D4                     u1991:
  3443     04D4  2CDA               	goto	l315
  3444     04D5                     u1990:
  3445     04D5                     l2258:
  3446     04D5  30C8               	movlw	200
  3447     04D6  0020               	movlb	0	; select bank0
  3448     04D7  00EA               	movwf	_l_vec	;volatile
  3449     04D8  3000               	movlw	0
  3450     04D9  00EB               	movwf	_l_vec+1	;volatile
  3451     04DA                     l315:
  3452     04DA  0020               	movlb	0	; select bank0
  3453     04DB  0869               	movf	_r_vec+1,w	;volatile
  3454     04DC  3A80               	xorlw	128
  3455     04DD  00FC               	movwf	??_line_follower
  3456     04DE  3080               	movlw	128
  3457     04DF  027C               	subwf	??_line_follower,w
  3458     04E0  1D03               	skipz
  3459     04E1  2CE4               	goto	u2005
  3460     04E2  30C9               	movlw	201
  3461     04E3  0268               	subwf	_r_vec,w	;volatile
  3462     04E4                     u2005:
  3463     04E4  1C03               	skipc
  3464     04E5  2CE7               	goto	u2001
  3465     04E6  2CE8               	goto	u2000
  3466     04E7                     u2001:
  3467     04E7  2CED               	goto	l2262
  3468     04E8                     u2000:
  3469     04E8                     l2260:
  3470     04E8  30C8               	movlw	200
  3471     04E9  0020               	movlb	0	; select bank0
  3472     04EA  00E8               	movwf	_r_vec	;volatile
  3473     04EB  3000               	movlw	0
  3474     04EC  00E9               	movwf	_r_vec+1	;volatile
  3475     04ED                     l2262:
  3476     04ED  0020               	movlb	0	; select bank0
  3477     04EE  086B               	movf	_l_vec+1,w	;volatile
  3478     04EF  00F1               	movwf	abs@a+1
  3479     04F0  086A               	movf	_l_vec,w	;volatile
  3480     04F1  00F0               	movwf	abs@a
  3481     04F2  318E  26AA  3183   	fcall	_abs
  3482     04F5  0870               	movf	?_abs,w
  3483     04F6  00F8               	movwf	motor@pwmA
  3484     04F7  0020               	movlb	0	; select bank0
  3485     04F8  085A               	movf	_r_dir,w	;volatile
  3486     04F9  00F9               	movwf	motor@dirB
  3487     04FA  0869               	movf	_r_vec+1,w	;volatile
  3488     04FB  00F1               	movwf	abs@a+1
  3489     04FC  0868               	movf	_r_vec,w	;volatile
  3490     04FD  00F0               	movwf	abs@a
  3491     04FE  318E  26AA  3183   	fcall	_abs
  3492     0501  0870               	movf	?_abs,w
  3493     0502  00FA               	movwf	motor@pwmB
  3494     0503  0020               	movlb	0	; select bank0
  3495     0504  085B               	movf	_l_dir,w	;volatile
  3496     0505  3180  207E  3183   	fcall	_motor
  3497     0508                     l2264:
  3498     0508  002E               	movlb	14	; select bank14
  3499     0509  100D               	bcf	13,0	;volatile
  3500     050A                     l2266:
  3501     050A  0021               	movlb	1	; select bank1
  3502     050B  1413               	bsf	19,0	;volatile
  3503     050C                     l317:
  3504     050C  0008               	return
  3505     050D                     __end_of_line_follower:
  3506                           
  3507                           	psect	text9
  3508     00EC                     __ptext9:	
  3509 ;; *************** function _drive *****************
  3510 ;; Defined at:
  3511 ;;		line 62 in file "./Driving.h"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  dir             2   34[BANK0 ] volatile int 
  3516 ;;  y               2   32[BANK0 ] volatile int 
  3517 ;;  x               2   30[BANK0 ] volatile int 
  3518 ;; Return value:  Size  Location     Type
  3519 ;;                  1    wreg      void 
  3520 ;; Registers used:
  3521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3522 ;; Tracked objects:
  3523 ;;		On entry : 0/0
  3524 ;;		On exit  : 0/0
  3525 ;;		Unchanged: 0/0
  3526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3528 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3529 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3530 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3531 ;;Total ram usage:        8 bytes
  3532 ;; Hardware stack levels used: 1
  3533 ;; Hardware stack levels required when called: 4
  3534 ;; This function calls:
  3535 ;;		_Vdrive
  3536 ;;		___wmul
  3537 ;;		_user_data
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543     00EC                     _drive:	
  3544                           ;psect for function _drive
  3545                           
  3546     00EC                     l2182:	
  3547                           ;incstack = 0
  3548                           ; Regs used in _drive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3549                           
  3550                           
  3551                           ;./Driving.h: 64:     x = (joy_rx - 50)*2;;./Driving.h: 65:     y = dir * (joy_ly);;./Dr
      +                          iving.h: 67:     Vdrive(y, x);
  3552     00EC  3180  2009  3180   	fcall	_user_data
  3553     00EF                     l2184:
  3554     00EF  3000               	movlw	0
  3555     00F0  0020               	movlb	0	; select bank0
  3556     00F1  0255               	subwf	_joy_ry+1,w	;volatile
  3557     00F2  301A               	movlw	26
  3558     00F3  1903               	skipnz
  3559     00F4  0254               	subwf	_joy_ry,w	;volatile
  3560     00F5  1C03               	skipc
  3561     00F6  28F8               	goto	u1871
  3562     00F7  28F9               	goto	u1870
  3563     00F8                     u1871:
  3564     00F8  28FE               	goto	l2188
  3565     00F9                     u1870:
  3566     00F9                     l2186:
  3567     00F9  3001               	movlw	1
  3568     00FA  00C2               	movwf	drive@dir	;volatile
  3569     00FB  3000               	movlw	0
  3570     00FC  00C3               	movwf	drive@dir+1	;volatile
  3571     00FD  2902               	goto	l2190
  3572     00FE                     l2188:
  3573     00FE  30FF               	movlw	255
  3574     00FF  00C2               	movwf	drive@dir	;volatile
  3575     0100  30FF               	movlw	255
  3576     0101  00C3               	movwf	drive@dir+1	;volatile
  3577     0102                     l2190:
  3578     0102  0857               	movf	_joy_rx+1,w	;volatile
  3579     0103  00BD               	movwf	??_drive+1
  3580     0104  0856               	movf	_joy_rx,w	;volatile
  3581     0105  00BC               	movwf	??_drive
  3582     0106  35BC               	lslf	??_drive,f
  3583     0107  0DBD               	rlf	??_drive+1,f
  3584     0108  083C               	movf	??_drive,w
  3585     0109  3E9C               	addlw	156
  3586     010A  00BE               	movwf	drive@x	;volatile
  3587     010B  30FF               	movlw	255
  3588     010C  3D3D               	addwfc	??_drive+1,w
  3589     010D  00BF               	movwf	drive@x+1	;volatile
  3590     010E                     l2192:
  3591     010E  0843               	movf	drive@dir+1,w	;volatile
  3592     010F  00A1               	movwf	___wmul@multiplier+1
  3593     0110  0842               	movf	drive@dir,w	;volatile
  3594     0111  00A0               	movwf	___wmul@multiplier
  3595     0112  0853               	movf	_joy_ly+1,w	;volatile
  3596     0113  00A3               	movwf	___wmul@multiplicand+1
  3597     0114  0852               	movf	_joy_ly,w	;volatile
  3598     0115  00A2               	movwf	___wmul@multiplicand
  3599     0116  318F  2718  3180   	fcall	___wmul
  3600     0119  0020               	movlb	0	; select bank0
  3601     011A  0821               	movf	?___wmul+1,w
  3602     011B  00C1               	movwf	drive@y+1	;volatile
  3603     011C  0820               	movf	?___wmul,w
  3604     011D  00C0               	movwf	drive@y	;volatile
  3605     011E                     l2194:
  3606     011E  0841               	movf	drive@y+1,w	;volatile
  3607     011F  00AC               	movwf	Vdrive@y+1
  3608     0120  0840               	movf	drive@y,w	;volatile
  3609     0121  00AB               	movwf	Vdrive@y
  3610     0122  083F               	movf	drive@x+1,w	;volatile
  3611     0123  00AE               	movwf	Vdrive@x+1
  3612     0124  083E               	movf	drive@x,w	;volatile
  3613     0125  00AD               	movwf	Vdrive@x
  3614     0126  3185  250D  3180   	fcall	_Vdrive
  3615     0129                     l257:
  3616     0129  0008               	return
  3617     012A                     __end_of_drive:
  3618                           
  3619                           	psect	text10
  3620     050D                     __ptext10:	
  3621 ;; *************** function _Vdrive *****************
  3622 ;; Defined at:
  3623 ;;		line 10 in file "./Driving.h"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  y               2   11[BANK0 ] int 
  3626 ;;  x               2   13[BANK0 ] int 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  r_motor         2   21[BANK0 ] volatile int 
  3629 ;;  l_motor         2   19[BANK0 ] volatile int 
  3630 ;;  right_dir       1   18[BANK0 ] volatile unsigned char 
  3631 ;;  left_dir        1   17[BANK0 ] volatile unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      void 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3641 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3642 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3644 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3645 ;;Total ram usage:       12 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; Hardware stack levels required when called: 3
  3648 ;; This function calls:
  3649 ;;		___awdiv
  3650 ;;		___wmul
  3651 ;;		_abs
  3652 ;;		_motor
  3653 ;; This function is called by:
  3654 ;;		_drive
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658     050D                     _Vdrive:	
  3659                           ;psect for function _Vdrive
  3660                           
  3661     050D                     l2088:	
  3662                           ;incstack = 0
  3663                           ; Regs used in _Vdrive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3664                           
  3665                           
  3666                           ;./Driving.h: 10:         r_motor = y + x;;./Driving.h: 11:     };./Driving.h: 12:     e
      +                          lse{if(x < 0 && y > 0);./Driving.h: 13:     {;./Driving.h: 15:         r_motor = y + (x*
      +                          2);
  3667     050D  0020               	movlb	0	; select bank0
  3668     050E  082E               	movf	Vdrive@x+1,w
  3669     050F  3A80               	xorlw	128
  3670     0510  00AF               	movwf	??_Vdrive
  3671     0511  3080               	movlw	128
  3672     0512  022F               	subwf	??_Vdrive,w
  3673     0513  1D03               	skipz
  3674     0514  2D17               	goto	u1725
  3675     0515  3001               	movlw	1
  3676     0516  022D               	subwf	Vdrive@x,w
  3677     0517                     u1725:
  3678     0517  1C03               	skipc
  3679     0518  2D1A               	goto	u1721
  3680     0519  2D1B               	goto	u1720
  3681     051A                     u1721:
  3682     051A  2D3D               	goto	l238
  3683     051B                     u1720:
  3684     051B                     l2090:
  3685     051B  0020               	movlb	0	; select bank0
  3686     051C  082C               	movf	Vdrive@y+1,w
  3687     051D  3A80               	xorlw	128
  3688     051E  00AF               	movwf	??_Vdrive
  3689     051F  3080               	movlw	128
  3690     0520  022F               	subwf	??_Vdrive,w
  3691     0521  1D03               	skipz
  3692     0522  2D25               	goto	u1735
  3693     0523  3001               	movlw	1
  3694     0524  022B               	subwf	Vdrive@y,w
  3695     0525                     u1735:
  3696     0525  1C03               	skipc
  3697     0526  2D28               	goto	u1731
  3698     0527  2D29               	goto	u1730
  3699     0528                     u1731:
  3700     0528  2D3D               	goto	l238
  3701     0529                     u1730:
  3702     0529                     l2092:
  3703                           
  3704                           ;./Driving.h: 16:     };./Driving.h: 17:     else
  3705     0529  0020               	movlb	0	; select bank0
  3706     052A  082E               	movf	Vdrive@x+1,w
  3707     052B  00B0               	movwf	??_Vdrive+1
  3708     052C  082D               	movf	Vdrive@x,w
  3709     052D  00AF               	movwf	??_Vdrive
  3710     052E  35AF               	lslf	??_Vdrive,f
  3711     052F  0DB0               	rlf	??_Vdrive+1,f
  3712     0530  082F               	movf	??_Vdrive,w
  3713     0531  022B               	subwf	Vdrive@y,w
  3714     0532  00B3               	movwf	Vdrive@l_motor	;volatile
  3715     0533  0830               	movf	??_Vdrive+1,w
  3716     0534  3B2C               	subwfb	Vdrive@y+1,w
  3717     0535  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3718                           
  3719                           ;./Driving.h: 18:     {
  3720     0536  082D               	movf	Vdrive@x,w
  3721     0537  072B               	addwf	Vdrive@y,w
  3722     0538  00B5               	movwf	Vdrive@r_motor	;volatile
  3723     0539  082E               	movf	Vdrive@x+1,w
  3724     053A  3D2C               	addwfc	Vdrive@y+1,w
  3725     053B  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3726                           
  3727                           ;./Driving.h: 19:         l_motor = y - x;
  3728     053C  2D70               	goto	l2100
  3729     053D                     l238:	
  3730                           ;./Driving.h: 20:         r_motor = y + x;
  3731                           
  3732     053D  0020               	movlb	0	; select bank0
  3733     053E  1FAE               	btfss	Vdrive@x+1,7
  3734     053F  2D41               	goto	u1741
  3735     0540  2D42               	goto	u1740
  3736     0541                     u1741:
  3737     0541  2D63               	goto	l2098
  3738     0542                     u1740:
  3739     0542                     l2094:
  3740     0542  082C               	movf	Vdrive@y+1,w
  3741     0543  3A80               	xorlw	128
  3742     0544  00AF               	movwf	??_Vdrive
  3743     0545  3080               	movlw	128
  3744     0546  022F               	subwf	??_Vdrive,w
  3745     0547  1D03               	skipz
  3746     0548  2D4B               	goto	u1755
  3747     0549  3001               	movlw	1
  3748     054A  022B               	subwf	Vdrive@y,w
  3749     054B                     u1755:
  3750     054B  1C03               	skipc
  3751     054C  2D4E               	goto	u1751
  3752     054D  2D4F               	goto	u1750
  3753     054E                     u1751:
  3754     054E  2D63               	goto	l2098
  3755     054F                     u1750:
  3756     054F                     l2096:
  3757                           
  3758                           ;./Driving.h: 21:     }};./Driving.h: 22: 
  3759     054F  0020               	movlb	0	; select bank0
  3760     0550  082D               	movf	Vdrive@x,w
  3761     0551  022B               	subwf	Vdrive@y,w
  3762     0552  00B3               	movwf	Vdrive@l_motor	;volatile
  3763     0553  082E               	movf	Vdrive@x+1,w
  3764     0554  3B2C               	subwfb	Vdrive@y+1,w
  3765     0555  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3766                           
  3767                           ;./Driving.h: 23: 
  3768     0556  082E               	movf	Vdrive@x+1,w
  3769     0557  00B0               	movwf	??_Vdrive+1
  3770     0558  082D               	movf	Vdrive@x,w
  3771     0559  00AF               	movwf	??_Vdrive
  3772     055A  35AF               	lslf	??_Vdrive,f
  3773     055B  0DB0               	rlf	??_Vdrive+1,f
  3774     055C  082B               	movf	Vdrive@y,w
  3775     055D  072F               	addwf	??_Vdrive,w
  3776     055E  00B5               	movwf	Vdrive@r_motor	;volatile
  3777     055F  082C               	movf	Vdrive@y+1,w
  3778     0560  3D30               	addwfc	??_Vdrive+1,w
  3779     0561  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3780                           
  3781                           ;./Driving.h: 24:     if (l_motor > 100 || l_motor < -100)
  3782     0562  2D70               	goto	l2100
  3783     0563                     l2098:
  3784                           
  3785                           ;./Driving.h: 26:         l_motor = (l_motor/abs(l_motor)) * 100;;./Driving.h: 27:     }
  3786     0563  0020               	movlb	0	; select bank0
  3787     0564  082D               	movf	Vdrive@x,w
  3788     0565  022B               	subwf	Vdrive@y,w
  3789     0566  00B3               	movwf	Vdrive@l_motor	;volatile
  3790     0567  082E               	movf	Vdrive@x+1,w
  3791     0568  3B2C               	subwfb	Vdrive@y+1,w
  3792     0569  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3793                           
  3794                           ;./Driving.h: 28:     if (r_motor > 100 || r_motor < -100)
  3795     056A  082D               	movf	Vdrive@x,w
  3796     056B  072B               	addwf	Vdrive@y,w
  3797     056C  00B5               	movwf	Vdrive@r_motor	;volatile
  3798     056D  082E               	movf	Vdrive@x+1,w
  3799     056E  3D2C               	addwfc	Vdrive@y+1,w
  3800     056F  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3801     0570                     l2100:
  3802                           
  3803                           ;./Driving.h: 32: 
  3804     0570  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3805     0571  3A80               	xorlw	128
  3806     0572  00AF               	movwf	??_Vdrive
  3807     0573  3080               	movlw	128
  3808     0574  022F               	subwf	??_Vdrive,w
  3809     0575  1D03               	skipz
  3810     0576  2D79               	goto	u1765
  3811     0577  3065               	movlw	101
  3812     0578  0233               	subwf	Vdrive@l_motor,w	;volatile
  3813     0579                     u1765:
  3814     0579  1803               	skipnc
  3815     057A  2D7C               	goto	u1761
  3816     057B  2D7D               	goto	u1760
  3817     057C                     u1761:
  3818     057C  2D8B               	goto	l2104
  3819     057D                     u1760:
  3820     057D                     l2102:
  3821     057D  0020               	movlb	0	; select bank0
  3822     057E  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3823     057F  3A80               	xorlw	128
  3824     0580  00AF               	movwf	??_Vdrive
  3825     0581  307F               	movlw	127
  3826     0582  022F               	subwf	??_Vdrive,w
  3827     0583  1D03               	skipz
  3828     0584  2D87               	goto	u1775
  3829     0585  309C               	movlw	156
  3830     0586  0233               	subwf	Vdrive@l_motor,w	;volatile
  3831     0587                     u1775:
  3832     0587  1803               	skipnc
  3833     0588  2D8A               	goto	u1771
  3834     0589  2D8B               	goto	u1770
  3835     058A                     u1771:
  3836     058A  2DB0               	goto	l2106
  3837     058B                     u1770:
  3838     058B                     l2104:
  3839                           
  3840                           ;./Driving.h: 33:     if (l_motor > 0);./Driving.h: 34:     {
  3841     058B  0020               	movlb	0	; select bank0
  3842     058C  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3843     058D  00F1               	movwf	abs@a+1
  3844     058E  0833               	movf	Vdrive@l_motor,w	;volatile
  3845     058F  00F0               	movwf	abs@a
  3846     0590  318E  26AA  3185   	fcall	_abs
  3847     0593  0871               	movf	?_abs+1,w
  3848     0594  00F5               	movwf	___awdiv@divisor+1
  3849     0595  0870               	movf	?_abs,w
  3850     0596  00F4               	movwf	___awdiv@divisor
  3851     0597  0020               	movlb	0	; select bank0
  3852     0598  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3853     0599  00F7               	movwf	___awdiv@dividend+1
  3854     059A  0833               	movf	Vdrive@l_motor,w	;volatile
  3855     059B  00F6               	movwf	___awdiv@dividend
  3856     059C  3182  2211  3185   	fcall	___awdiv
  3857     059F  0875               	movf	?___awdiv+1,w
  3858     05A0  0020               	movlb	0	; select bank0
  3859     05A1  00A1               	movwf	___wmul@multiplier+1
  3860     05A2  0874               	movf	?___awdiv,w
  3861     05A3  00A0               	movwf	___wmul@multiplier
  3862     05A4  3064               	movlw	100
  3863     05A5  00A2               	movwf	___wmul@multiplicand
  3864     05A6  3000               	movlw	0
  3865     05A7  00A3               	movwf	___wmul@multiplicand+1
  3866     05A8  318F  2718  3185   	fcall	___wmul
  3867     05AB  0020               	movlb	0	; select bank0
  3868     05AC  0821               	movf	?___wmul+1,w
  3869     05AD  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3870     05AE  0820               	movf	?___wmul,w
  3871     05AF  00B3               	movwf	Vdrive@l_motor	;volatile
  3872     05B0                     l2106:
  3873                           
  3874                           ;./Driving.h: 36:     }
  3875     05B0  0020               	movlb	0	; select bank0
  3876     05B1  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3877     05B2  3A80               	xorlw	128
  3878     05B3  00AF               	movwf	??_Vdrive
  3879     05B4  3080               	movlw	128
  3880     05B5  022F               	subwf	??_Vdrive,w
  3881     05B6  1D03               	skipz
  3882     05B7  2DBA               	goto	u1785
  3883     05B8  3065               	movlw	101
  3884     05B9  0235               	subwf	Vdrive@r_motor,w	;volatile
  3885     05BA                     u1785:
  3886     05BA  1803               	skipnc
  3887     05BB  2DBD               	goto	u1781
  3888     05BC  2DBE               	goto	u1780
  3889     05BD                     u1781:
  3890     05BD  2DCC               	goto	l2110
  3891     05BE                     u1780:
  3892     05BE                     l2108:
  3893     05BE  0020               	movlb	0	; select bank0
  3894     05BF  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3895     05C0  3A80               	xorlw	128
  3896     05C1  00AF               	movwf	??_Vdrive
  3897     05C2  307F               	movlw	127
  3898     05C3  022F               	subwf	??_Vdrive,w
  3899     05C4  1D03               	skipz
  3900     05C5  2DC8               	goto	u1795
  3901     05C6  309C               	movlw	156
  3902     05C7  0235               	subwf	Vdrive@r_motor,w	;volatile
  3903     05C8                     u1795:
  3904     05C8  1803               	skipnc
  3905     05C9  2DCB               	goto	u1791
  3906     05CA  2DCC               	goto	u1790
  3907     05CB                     u1791:
  3908     05CB  2DF1               	goto	l2112
  3909     05CC                     u1790:
  3910     05CC                     l2110:
  3911                           
  3912                           ;./Driving.h: 37:     else;./Driving.h: 38:     {
  3913     05CC  0020               	movlb	0	; select bank0
  3914     05CD  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3915     05CE  00F1               	movwf	abs@a+1
  3916     05CF  0835               	movf	Vdrive@r_motor,w	;volatile
  3917     05D0  00F0               	movwf	abs@a
  3918     05D1  318E  26AA  3185   	fcall	_abs
  3919     05D4  0871               	movf	?_abs+1,w
  3920     05D5  00F5               	movwf	___awdiv@divisor+1
  3921     05D6  0870               	movf	?_abs,w
  3922     05D7  00F4               	movwf	___awdiv@divisor
  3923     05D8  0020               	movlb	0	; select bank0
  3924     05D9  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3925     05DA  00F7               	movwf	___awdiv@dividend+1
  3926     05DB  0835               	movf	Vdrive@r_motor,w	;volatile
  3927     05DC  00F6               	movwf	___awdiv@dividend
  3928     05DD  3182  2211  3185   	fcall	___awdiv
  3929     05E0  0875               	movf	?___awdiv+1,w
  3930     05E1  0020               	movlb	0	; select bank0
  3931     05E2  00A1               	movwf	___wmul@multiplier+1
  3932     05E3  0874               	movf	?___awdiv,w
  3933     05E4  00A0               	movwf	___wmul@multiplier
  3934     05E5  3064               	movlw	100
  3935     05E6  00A2               	movwf	___wmul@multiplicand
  3936     05E7  3000               	movlw	0
  3937     05E8  00A3               	movwf	___wmul@multiplicand+1
  3938     05E9  318F  2718  3185   	fcall	___wmul
  3939     05EC  0020               	movlb	0	; select bank0
  3940     05ED  0821               	movf	?___wmul+1,w
  3941     05EE  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3942     05EF  0820               	movf	?___wmul,w
  3943     05F0  00B5               	movwf	Vdrive@r_motor	;volatile
  3944     05F1                     l2112:
  3945                           
  3946                           ;./Driving.h: 41: 
  3947     05F1  0020               	movlb	0	; select bank0
  3948     05F2  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3949     05F3  3A80               	xorlw	128
  3950     05F4  00AF               	movwf	??_Vdrive
  3951     05F5  3080               	movlw	128
  3952     05F6  022F               	subwf	??_Vdrive,w
  3953     05F7  1D03               	skipz
  3954     05F8  2DFB               	goto	u1805
  3955     05F9  3001               	movlw	1
  3956     05FA  0233               	subwf	Vdrive@l_motor,w	;volatile
  3957     05FB                     u1805:
  3958     05FB  1C03               	skipc
  3959     05FC  2DFE               	goto	u1801
  3960     05FD  2DFF               	goto	u1800
  3961     05FE                     u1801:
  3962     05FE  2E03               	goto	l2116
  3963     05FF                     u1800:
  3964     05FF                     l2114:
  3965                           
  3966                           ;./Driving.h: 42:     if (r_motor > 0);./Driving.h: 43:     {
  3967     05FF  3001               	movlw	1
  3968     0600  0020               	movlb	0	; select bank0
  3969     0601  00B1               	movwf	Vdrive@left_dir	;volatile
  3970                           
  3971                           ;./Driving.h: 44:         right_dir = 1;
  3972     0602  2E06               	goto	l249
  3973     0603                     l2116:
  3974                           
  3975                           ;./Driving.h: 46:     else;./Driving.h: 47:     {
  3976     0603  3002               	movlw	2
  3977     0604  0020               	movlb	0	; select bank0
  3978     0605  00B1               	movwf	Vdrive@left_dir	;volatile
  3979     0606                     l249:	
  3980                           ;./Driving.h: 48:         right_dir = 2;
  3981                           
  3982                           
  3983                           ;./Driving.h: 50: 
  3984     0606  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3985     0607  3A80               	xorlw	128
  3986     0608  00AF               	movwf	??_Vdrive
  3987     0609  3080               	movlw	128
  3988     060A  022F               	subwf	??_Vdrive,w
  3989     060B  1D03               	skipz
  3990     060C  2E0F               	goto	u1815
  3991     060D  3001               	movlw	1
  3992     060E  0235               	subwf	Vdrive@r_motor,w	;volatile
  3993     060F                     u1815:
  3994     060F  1C03               	skipc
  3995     0610  2E12               	goto	u1811
  3996     0611  2E13               	goto	u1810
  3997     0612                     u1811:
  3998     0612  2E17               	goto	l2120
  3999     0613                     u1810:
  4000     0613                     l2118:
  4001                           
  4002                           ;./Driving.h: 51:     motor(left_dir, abs(l_motor), right_dir, abs(r_motor));;./Driving.
      +                          h: 52: }
  4003     0613  3001               	movlw	1
  4004     0614  0020               	movlb	0	; select bank0
  4005     0615  00B2               	movwf	Vdrive@right_dir	;volatile
  4006                           
  4007                           ;./Driving.h: 53: 
  4008     0616  2E1A               	goto	l2122
  4009     0617                     l2120:
  4010                           
  4011                           ;./Driving.h: 55: {;./Driving.h: 56:     volatile int dir;
  4012     0617  3002               	movlw	2
  4013     0618  0020               	movlb	0	; select bank0
  4014     0619  00B2               	movwf	Vdrive@right_dir	;volatile
  4015     061A                     l2122:
  4016                           
  4017                           ;./Driving.h: 59:     user_data();
  4018     061A  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4019     061B  00F1               	movwf	abs@a+1
  4020     061C  0833               	movf	Vdrive@l_motor,w	;volatile
  4021     061D  00F0               	movwf	abs@a
  4022     061E  318E  26AA  3185   	fcall	_abs
  4023     0621  0870               	movf	?_abs,w
  4024     0622  00F8               	movwf	motor@pwmA
  4025     0623  0020               	movlb	0	; select bank0
  4026     0624  0832               	movf	Vdrive@right_dir,w	;volatile
  4027     0625  00F9               	movwf	motor@dirB
  4028     0626  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4029     0627  00F1               	movwf	abs@a+1
  4030     0628  0835               	movf	Vdrive@r_motor,w	;volatile
  4031     0629  00F0               	movwf	abs@a
  4032     062A  318E  26AA  3185   	fcall	_abs
  4033     062D  0870               	movf	?_abs,w
  4034     062E  00FA               	movwf	motor@pwmB
  4035     062F  0020               	movlb	0	; select bank0
  4036     0630  0831               	movf	Vdrive@left_dir,w	;volatile
  4037     0631  3180  207E  3185   	fcall	_motor
  4038     0634                     l252:
  4039     0634  0008               	return
  4040     0635                     __end_of_Vdrive:
  4041                           
  4042                           	psect	text11
  4043     007E                     __ptext11:	
  4044 ;; *************** function _motor *****************
  4045 ;; Defined at:
  4046 ;;		line 210 in file "./Commands.h"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  dirA            1    wreg     unsigned char 
  4049 ;;  pwmA            1    8[COMMON] unsigned char 
  4050 ;;  dirB            1    9[COMMON] unsigned char 
  4051 ;;  pwmB            1   10[COMMON] unsigned char 
  4052 ;; Auto vars:     Size  Location     Type
  4053 ;;  dirA            1    0[BANK0 ] unsigned char 
  4054 ;;  11741          10    1[BANK0 ] volatile unsigned char [
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4064 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4065 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4067 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4068 ;;Total ram usage:       15 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 2
  4071 ;; This function calls:
  4072 ;;		_UART_send
  4073 ;; This function is called by:
  4074 ;;		_Vdrive
  4075 ;;		_line_follower
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079     007E                     _motor:	
  4080                           ;psect for function _motor
  4081                           
  4082                           
  4083                           ;incstack = 0
  4084                           ; Regs used in _motor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4085                           ;motor@dirA stored from wreg
  4086     007E  0020               	movlb	0	; select bank0
  4087     007F  00A0               	movwf	motor@dirA
  4088     0080                     l1934:
  4089     0080                     l1936:	
  4090                           ;./Commands.h: 210:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x03, 0
      +                          x09, 0x00, 0x00}, 6)){};./Commands.h: 211: };./Commands.h: 212: 
  4091                           
  4092     0080  30A0               	movlw	low motor@F11740
  4093     0081  0086               	movwf	6
  4094     0082  3000               	movlw	high motor@F11740
  4095     0083  0087               	movwf	7
  4096     0084  3021               	movlw	low motor@11741
  4097     0085  0084               	movwf	4
  4098     0086  3000               	movlw	high motor@11741
  4099     0087  0085               	movwf	5
  4100     0088  300A               	movlw	10
  4101     0089  00FB               	movwf	??_motor
  4102     008A                     u1470:
  4103     008A  0016               	moviw fsr1++
  4104     008B  001A               	movwi fsr0++
  4105     008C  0BFB               	decfsz	??_motor,f
  4106     008D  288A               	goto	u1470
  4107     008E                     l1938:
  4108     008E  30FE               	movlw	254
  4109     008F  0020               	movlb	0	; select bank0
  4110     0090  00A1               	movwf	motor@11741	;volatile
  4111     0091                     l1940:
  4112     0091  3019               	movlw	25
  4113     0092  00A2               	movwf	motor@11741+1	;volatile
  4114     0093                     l1942:
  4115     0093  3001               	movlw	1
  4116     0094  00A3               	movwf	motor@11741+2	;volatile
  4117     0095                     l1944:
  4118     0095  3006               	movlw	6
  4119     0096  00A4               	movwf	motor@11741+3	;volatile
  4120     0097                     l1946:
  4121     0097  3004               	movlw	4
  4122     0098  00A5               	movwf	motor@11741+4	;volatile
  4123     0099                     l1948:
  4124     0099  01A6               	clrf	motor@11741+5	;volatile
  4125     009A                     l1950:
  4126     009A  0820               	movf	motor@dirA,w
  4127     009B  00A7               	movwf	motor@11741+6	;volatile
  4128     009C                     l1952:
  4129     009C  0878               	movf	motor@pwmA,w
  4130     009D  00A8               	movwf	motor@11741+7	;volatile
  4131     009E                     l1954:
  4132     009E  0879               	movf	motor@dirB,w
  4133     009F  00A9               	movwf	motor@11741+8	;volatile
  4134     00A0                     l1956:
  4135     00A0  087A               	movf	motor@pwmB,w
  4136     00A1  00AA               	movwf	motor@11741+9	;volatile
  4137     00A2                     l1958:
  4138     00A2  300A               	movlw	10
  4139     00A3  00F2               	movwf	UART_send@size
  4140     00A4  3000               	movlw	0
  4141     00A5  00F3               	movwf	UART_send@size+1
  4142     00A6  3021               	movlw	(low (motor@11741| 0))& (0+255)
  4143     00A7  318F  277F  3180   	fcall	_UART_send
  4144     00AA  3A00               	xorlw	0
  4145     00AB  1903               	skipnz
  4146     00AC  28AE               	goto	u1481
  4147     00AD  28AF               	goto	u1480
  4148     00AE                     u1481:
  4149     00AE  2880               	goto	l1936
  4150     00AF                     u1480:
  4151     00AF                     l160:
  4152     00AF  0008               	return
  4153     00B0                     __end_of_motor:
  4154                           
  4155                           	psect	text12
  4156     0EAA                     __ptext12:	
  4157 ;; *************** function _abs *****************
  4158 ;; Defined at:
  4159 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  a               2    0[COMMON] int 
  4162 ;; Auto vars:     Size  Location     Type
  4163 ;;		None
  4164 ;; Return value:  Size  Location     Type
  4165 ;;                  2    0[COMMON] int 
  4166 ;; Registers used:
  4167 ;;		wreg, status,2, status,0
  4168 ;; Tracked objects:
  4169 ;;		On entry : 0/0
  4170 ;;		On exit  : 0/0
  4171 ;;		Unchanged: 0/0
  4172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4176 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4177 ;;Total ram usage:        4 bytes
  4178 ;; Hardware stack levels used: 1
  4179 ;; This function calls:
  4180 ;;		Nothing
  4181 ;; This function is called by:
  4182 ;;		_Vdrive
  4183 ;;		_line_follower
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187     0EAA                     _abs:	
  4188                           ;psect for function _abs
  4189                           
  4190     0EAA                     l1960:	
  4191                           ;incstack = 0
  4192                           ; Regs used in _abs: [wreg+status,2+status,0]
  4193                           
  4194     0EAA  0871               	movf	abs@a+1,w
  4195     0EAB  3A80               	xorlw	128
  4196     0EAC  00F2               	movwf	??_abs
  4197     0EAD  3080               	movlw	128
  4198     0EAE  0272               	subwf	??_abs,w
  4199     0EAF  1D03               	skipz
  4200     0EB0  2EB3               	goto	u1495
  4201     0EB1  3001               	movlw	1
  4202     0EB2  0270               	subwf	abs@a,w
  4203     0EB3                     u1495:
  4204     0EB3  1803               	skipnc
  4205     0EB4  2EB6               	goto	u1491
  4206     0EB5  2EB7               	goto	u1490
  4207     0EB6                     u1491:
  4208     0EB6  2EC3               	goto	l995
  4209     0EB7                     u1490:
  4210     0EB7                     l1962:
  4211     0EB7  0970               	comf	abs@a,w
  4212     0EB8  00F2               	movwf	??_abs
  4213     0EB9  0971               	comf	abs@a+1,w
  4214     0EBA  00F3               	movwf	??_abs+1
  4215     0EBB  0AF2               	incf	??_abs,f
  4216     0EBC  1903               	skipnz
  4217     0EBD  0AF3               	incf	??_abs+1,f
  4218     0EBE  0872               	movf	??_abs,w
  4219     0EBF  00F0               	movwf	?_abs
  4220     0EC0  0873               	movf	??_abs+1,w
  4221     0EC1  00F1               	movwf	?_abs+1
  4222     0EC2  2EC3               	goto	l998
  4223     0EC3                     l995:
  4224     0EC3                     l998:
  4225     0EC3  0008               	return
  4226     0EC4                     __end_of_abs:
  4227                           
  4228                           	psect	text13
  4229     0211                     __ptext13:	
  4230 ;; *************** function ___awdiv *****************
  4231 ;; Defined at:
  4232 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4233 ;; Parameters:    Size  Location     Type
  4234 ;;  divisor         2    4[COMMON] int 
  4235 ;;  dividend        2    6[COMMON] int 
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;  quotient        2   11[COMMON] int 
  4238 ;;  sign            1   10[COMMON] unsigned char 
  4239 ;;  counter         1    9[COMMON] unsigned char 
  4240 ;; Return value:  Size  Location     Type
  4241 ;;                  2    4[COMMON] int 
  4242 ;; Registers used:
  4243 ;;		wreg, status,2, status,0
  4244 ;; Tracked objects:
  4245 ;;		On entry : 0/0
  4246 ;;		On exit  : 0/0
  4247 ;;		Unchanged: 0/0
  4248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4250 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4251 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4252 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4253 ;;Total ram usage:        9 bytes
  4254 ;; Hardware stack levels used: 1
  4255 ;; This function calls:
  4256 ;;		Nothing
  4257 ;; This function is called by:
  4258 ;;		_Vdrive
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262     0211                     ___awdiv:	
  4263                           ;psect for function ___awdiv
  4264                           
  4265     0211                     l1978:	
  4266                           ;incstack = 0
  4267                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4268                           
  4269     0211  01FA               	clrf	___awdiv@sign
  4270     0212                     l1980:
  4271     0212  1FF5               	btfss	___awdiv@divisor+1,7
  4272     0213  2A15               	goto	u1541
  4273     0214  2A16               	goto	u1540
  4274     0215                     u1541:
  4275     0215  2A1D               	goto	l1986
  4276     0216                     u1540:
  4277     0216                     l1982:
  4278     0216  09F4               	comf	___awdiv@divisor,f
  4279     0217  09F5               	comf	___awdiv@divisor+1,f
  4280     0218  0AF4               	incf	___awdiv@divisor,f
  4281     0219  1903               	skipnz
  4282     021A  0AF5               	incf	___awdiv@divisor+1,f
  4283     021B                     l1984:
  4284     021B  01FA               	clrf	___awdiv@sign
  4285     021C  0AFA               	incf	___awdiv@sign,f
  4286     021D                     l1986:
  4287     021D  1FF7               	btfss	___awdiv@dividend+1,7
  4288     021E  2A20               	goto	u1551
  4289     021F  2A21               	goto	u1550
  4290     0220                     u1551:
  4291     0220  2A2A               	goto	l1992
  4292     0221                     u1550:
  4293     0221                     l1988:
  4294     0221  09F6               	comf	___awdiv@dividend,f
  4295     0222  09F7               	comf	___awdiv@dividend+1,f
  4296     0223  0AF6               	incf	___awdiv@dividend,f
  4297     0224  1903               	skipnz
  4298     0225  0AF7               	incf	___awdiv@dividend+1,f
  4299     0226                     l1990:
  4300     0226  3001               	movlw	1
  4301     0227  00F8               	movwf	??___awdiv
  4302     0228  0878               	movf	??___awdiv,w
  4303     0229  06FA               	xorwf	___awdiv@sign,f
  4304     022A                     l1992:
  4305     022A  01FB               	clrf	___awdiv@quotient
  4306     022B  01FC               	clrf	___awdiv@quotient+1
  4307     022C                     l1994:
  4308     022C  0874               	movf	___awdiv@divisor,w
  4309     022D  0475               	iorwf	___awdiv@divisor+1,w
  4310     022E  1903               	btfsc	3,2
  4311     022F  2A31               	goto	u1561
  4312     0230  2A32               	goto	u1560
  4313     0231                     u1561:
  4314     0231  2A61               	goto	l2014
  4315     0232                     u1560:
  4316     0232                     l1996:
  4317     0232  01F9               	clrf	___awdiv@counter
  4318     0233  0AF9               	incf	___awdiv@counter,f
  4319     0234  2A3E               	goto	l2002
  4320     0235                     l1998:
  4321     0235  3001               	movlw	1
  4322     0236                     u1575:
  4323     0236  35F4               	lslf	___awdiv@divisor,f
  4324     0237  0DF5               	rlf	___awdiv@divisor+1,f
  4325     0238  0B89               	decfsz	9,f
  4326     0239  2A36               	goto	u1575
  4327     023A                     l2000:
  4328     023A  3001               	movlw	1
  4329     023B  00F8               	movwf	??___awdiv
  4330     023C  0878               	movf	??___awdiv,w
  4331     023D  07F9               	addwf	___awdiv@counter,f
  4332     023E                     l2002:
  4333     023E  1FF5               	btfss	___awdiv@divisor+1,7
  4334     023F  2A41               	goto	u1581
  4335     0240  2A42               	goto	u1580
  4336     0241                     u1581:
  4337     0241  2A35               	goto	l1998
  4338     0242                     u1580:
  4339     0242                     l2004:
  4340     0242  3001               	movlw	1
  4341     0243                     u1595:
  4342     0243  35FB               	lslf	___awdiv@quotient,f
  4343     0244  0DFC               	rlf	___awdiv@quotient+1,f
  4344     0245  0B89               	decfsz	9,f
  4345     0246  2A43               	goto	u1595
  4346     0247  0875               	movf	___awdiv@divisor+1,w
  4347     0248  0277               	subwf	___awdiv@dividend+1,w
  4348     0249  1D03               	skipz
  4349     024A  2A4D               	goto	u1605
  4350     024B  0874               	movf	___awdiv@divisor,w
  4351     024C  0276               	subwf	___awdiv@dividend,w
  4352     024D                     u1605:
  4353     024D  1C03               	skipc
  4354     024E  2A50               	goto	u1601
  4355     024F  2A51               	goto	u1600
  4356     0250                     u1601:
  4357     0250  2A56               	goto	l2010
  4358     0251                     u1600:
  4359     0251                     l2006:
  4360     0251  0874               	movf	___awdiv@divisor,w
  4361     0252  02F6               	subwf	___awdiv@dividend,f
  4362     0253  0875               	movf	___awdiv@divisor+1,w
  4363     0254  3BF7               	subwfb	___awdiv@dividend+1,f
  4364     0255                     l2008:
  4365     0255  147B               	bsf	___awdiv@quotient,0
  4366     0256                     l2010:
  4367     0256  3001               	movlw	1
  4368     0257                     u1615:
  4369     0257  36F5               	lsrf	___awdiv@divisor+1,f
  4370     0258  0CF4               	rrf	___awdiv@divisor,f
  4371     0259  0B89               	decfsz	9,f
  4372     025A  2A57               	goto	u1615
  4373     025B                     l2012:
  4374     025B  3001               	movlw	1
  4375     025C  02F9               	subwf	___awdiv@counter,f
  4376     025D  1D03               	btfss	3,2
  4377     025E  2A60               	goto	u1621
  4378     025F  2A61               	goto	u1620
  4379     0260                     u1621:
  4380     0260  2A42               	goto	l2004
  4381     0261                     u1620:
  4382     0261                     l2014:
  4383     0261  087A               	movf	___awdiv@sign,w
  4384     0262  1903               	btfsc	3,2
  4385     0263  2A65               	goto	u1631
  4386     0264  2A66               	goto	u1630
  4387     0265                     u1631:
  4388     0265  2A6B               	goto	l2018
  4389     0266                     u1630:
  4390     0266                     l2016:
  4391     0266  09FB               	comf	___awdiv@quotient,f
  4392     0267  09FC               	comf	___awdiv@quotient+1,f
  4393     0268  0AFB               	incf	___awdiv@quotient,f
  4394     0269  1903               	skipnz
  4395     026A  0AFC               	incf	___awdiv@quotient+1,f
  4396     026B                     l2018:
  4397     026B  087C               	movf	___awdiv@quotient+1,w
  4398     026C  00F5               	movwf	?___awdiv+1
  4399     026D  087B               	movf	___awdiv@quotient,w
  4400     026E  00F4               	movwf	?___awdiv
  4401     026F                     l688:
  4402     026F  0008               	return
  4403     0270                     __end_of___awdiv:
  4404                           
  4405                           	psect	text14
  4406     0E58                     __ptext14:	
  4407 ;; *************** function _UART_init *****************
  4408 ;; Defined at:
  4409 ;;		line 78 in file "./Commands.h"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		wreg
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used: 1
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436     0E58                     _UART_init:	
  4437                           ;psect for function _UART_init
  4438                           
  4439     0E58                     l2132:	
  4440                           ;incstack = 0
  4441                           ; Regs used in _UART_init: [wreg]
  4442                           
  4443                           
  4444                           ;./Commands.h: 80:         if (rx_wait())
  4445     0E58  003E               	movlb	30	; select bank30
  4446     0E59  134E               	bcf	78,6	;volatile
  4447                           
  4448                           ;./Commands.h: 81:         {
  4449     0E5A  13CE               	bcf	78,7	;volatile
  4450                           
  4451                           ;./Commands.h: 83:         }
  4452     0E5B  0022               	movlb	2	; select bank2
  4453     0E5C  121E               	bcf	30,4	;volatile
  4454                           
  4455                           ;./Commands.h: 84:         else
  4456     0E5D  169E               	bsf	30,5	;volatile
  4457                           
  4458                           ;./Commands.h: 85:         {
  4459     0E5E  179D               	bsf	29,7	;volatile
  4460                           
  4461                           ;./Commands.h: 86:             return 0;
  4462     0E5F  161D               	bsf	29,4	;volatile
  4463                           
  4464                           ;./Commands.h: 88:     }
  4465     0E60  151E               	bsf	30,2	;volatile
  4466                           
  4467                           ;./Commands.h: 90:     teamID = r[6];
  4468     0E61  159F               	bsf	31,3	;volatile
  4469     0E62                     l2134:
  4470                           
  4471                           ;./Commands.h: 91:     playerID = r[7];
  4472     0E62  3044               	movlw	68
  4473     0E63  009B               	movwf	27	;volatile
  4474                           
  4475                           ;./Commands.h: 93:     health += r[9] << 8;
  4476     0E64  3010               	movlw	16
  4477     0E65  003E               	movlb	30	; select bank30
  4478     0E66  00A6               	movwf	38	;volatile
  4479     0E67                     l104:
  4480     0E67  0008               	return
  4481     0E68                     __end_of_UART_init:
  4482                           
  4483                           	psect	text15
  4484     0270                     __ptext15:	
  4485 ;; *************** function _IR_zone *****************
  4486 ;; Defined at:
  4487 ;;		line 43 in file "./IR.h"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  i               1   33[BANK0 ] volatile unsigned char 
  4492 ;;  zone            1   32[BANK0 ] volatile unsigned char 
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  1    wreg      void 
  4495 ;; Registers used:
  4496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4505 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4506 ;;Total ram usage:        6 bytes
  4507 ;; Hardware stack levels used: 1
  4508 ;; Hardware stack levels required when called: 4
  4509 ;; This function calls:
  4510 ;;		___wmul
  4511 ;;		_set_laser
  4512 ;;		_surface_exploration
  4513 ;;		_user_data
  4514 ;; This function is called by:
  4515 ;;		_main
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519     0270                     _IR_zone:	
  4520                           ;psect for function _IR_zone
  4521                           
  4522     0270                     l2280:	
  4523                           ;incstack = 0
  4524                           ; Regs used in _IR_zone: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4525                           
  4526                           
  4527                           ;./IR.h: 44:             _delay((unsigned long)((6000)*(400000/4000.0)));
  4528     0270  3180  2009  3182   	fcall	_user_data
  4529     0273                     l2282:
  4530                           
  4531                           ;./IR.h: 45:             surface_exploration(5,0,i,0);
  4532     0273  3010               	movlw	16
  4533     0274  0020               	movlb	0	; select bank0
  4534     0275  00C0               	movwf	IR_zone@zone	;volatile
  4535     0276                     l2284:
  4536                           
  4537                           ;./IR.h: 46:             _delay((unsigned long)((6000)*(400000/4000.0)));;./IR.h: 47:   
      +                                    set_laser(0);
  4538     0276  3001               	movlw	1
  4539     0277  00C1               	movwf	IR_zone@i	;volatile
  4540     0278                     l2286:
  4541     0278  3007               	movlw	7
  4542     0279  0241               	subwf	IR_zone@i,w	;volatile
  4543     027A  1C03               	skipc
  4544     027B  2A7D               	goto	u2021
  4545     027C  2A7E               	goto	u2020
  4546     027D                     u2021:
  4547     027D  2A7F               	goto	l2290
  4548     027E                     u2020:
  4549     027E  2AEA               	goto	l333
  4550     027F                     l2290:
  4551                           
  4552                           ;./IR.h: 48:             _delay((unsigned long)((6000)*(400000/4000.0)));
  4553     027F  0840               	movf	IR_zone@zone,w	;volatile
  4554     0280  00BC               	movwf	??_IR_zone
  4555     0281  01BD               	clrf	??_IR_zone+1
  4556     0282  083C               	movf	??_IR_zone,w
  4557     0283  00A0               	movwf	___wmul@multiplier
  4558     0284  083D               	movf	??_IR_zone+1,w
  4559     0285  00A1               	movwf	___wmul@multiplier+1
  4560     0286  0841               	movf	IR_zone@i,w	;volatile
  4561     0287  00BE               	movwf	??_IR_zone+2
  4562     0288  01BF               	clrf	??_IR_zone+3
  4563     0289  083E               	movf	??_IR_zone+2,w
  4564     028A  00A2               	movwf	___wmul@multiplicand
  4565     028B  083F               	movf	??_IR_zone+3,w
  4566     028C  00A3               	movwf	___wmul@multiplicand+1
  4567     028D  318F  2718  3182   	fcall	___wmul
  4568     0290  0020               	movlb	0	; select bank0
  4569     0291  0821               	movf	?___wmul+1,w
  4570     0292  0249               	subwf	_potA+1,w	;volatile
  4571     0293  1D03               	skipz
  4572     0294  2A97               	goto	u2035
  4573     0295  0820               	movf	?___wmul,w
  4574     0296  0248               	subwf	_potA,w	;volatile
  4575     0297                     u2035:
  4576     0297  1803               	skipnc
  4577     0298  2A9A               	goto	u2031
  4578     0299  2A9B               	goto	u2030
  4579     029A                     u2031:
  4580     029A  2AE5               	goto	l2306
  4581     029B                     u2030:
  4582     029B                     l2292:
  4583                           
  4584                           ;./IR.h: 49:             return;
  4585     029B  3001               	movlw	1
  4586     029C  318F  27A8  3182   	fcall	_set_laser
  4587     029F                     l2294:
  4588                           
  4589                           ;./IR.h: 50:     }
  4590     029F  3004               	movlw	4
  4591     02A0  0020               	movlb	0	; select bank0
  4592     02A1  00BD               	movwf	??_IR_zone+1
  4593     02A2  300C               	movlw	12
  4594     02A3  00BC               	movwf	??_IR_zone
  4595     02A4  3033               	movlw	51
  4596     02A5                     u2447:
  4597     02A5  0B89               	decfsz	9,f
  4598     02A6  2AA5               	goto	u2447
  4599     02A7  0BBC               	decfsz	??_IR_zone,f
  4600     02A8  2AA5               	goto	u2447
  4601     02A9  0BBD               	decfsz	??_IR_zone+1,f
  4602     02AA  2AA5               	goto	u2447
  4603     02AB  3200               	nop2
  4604     02AC                     l2296:
  4605                           
  4606                           ;./IR.h: 51:     }
  4607     02AC  3000               	movlw	0
  4608     02AD  318F  27A8  3182   	fcall	_set_laser
  4609                           
  4610                           ;./IR.h: 52: }
  4611     02B0  3004               	movlw	4
  4612     02B1  0020               	movlb	0	; select bank0
  4613     02B2  00BD               	movwf	??_IR_zone+1
  4614     02B3  300C               	movlw	12
  4615     02B4  00BC               	movwf	??_IR_zone
  4616     02B5  3033               	movlw	51
  4617     02B6                     u2457:
  4618     02B6  0B89               	decfsz	9,f
  4619     02B7  2AB6               	goto	u2457
  4620     02B8  0BBC               	decfsz	??_IR_zone,f
  4621     02B9  2AB6               	goto	u2457
  4622     02BA  0BBD               	decfsz	??_IR_zone+1,f
  4623     02BB  2AB6               	goto	u2457
  4624     02BC  3200               	nop2
  4625     02BD                     l2298:
  4626     02BD  01F8               	clrf	surface_exploration@taskID_u
  4627     02BE  0020               	movlb	0	; select bank0
  4628     02BF  0841               	movf	IR_zone@i,w	;volatile
  4629     02C0  00F9               	movwf	surface_exploration@value_l
  4630     02C1  01FA               	clrf	surface_exploration@value_u
  4631     02C2  3005               	movlw	5
  4632     02C3  3180  204C  3182   	fcall	_surface_exploration
  4633     02C6                     l2300:
  4634     02C6  3004               	movlw	4
  4635     02C7  0020               	movlb	0	; select bank0
  4636     02C8  00BD               	movwf	??_IR_zone+1
  4637     02C9  300C               	movlw	12
  4638     02CA  00BC               	movwf	??_IR_zone
  4639     02CB  3033               	movlw	51
  4640     02CC                     u2467:
  4641     02CC  0B89               	decfsz	9,f
  4642     02CD  2ACC               	goto	u2467
  4643     02CE  0BBC               	decfsz	??_IR_zone,f
  4644     02CF  2ACC               	goto	u2467
  4645     02D0  0BBD               	decfsz	??_IR_zone+1,f
  4646     02D1  2ACC               	goto	u2467
  4647     02D2  3200               	nop2
  4648     02D3  3000               	movlw	0
  4649     02D4  318F  27A8  3182   	fcall	_set_laser
  4650     02D7                     l2302:
  4651     02D7  3004               	movlw	4
  4652     02D8  0020               	movlb	0	; select bank0
  4653     02D9  00BD               	movwf	??_IR_zone+1
  4654     02DA  300C               	movlw	12
  4655     02DB  00BC               	movwf	??_IR_zone
  4656     02DC  3033               	movlw	51
  4657     02DD                     u2477:
  4658     02DD  0B89               	decfsz	9,f
  4659     02DE  2ADD               	goto	u2477
  4660     02DF  0BBC               	decfsz	??_IR_zone,f
  4661     02E0  2ADD               	goto	u2477
  4662     02E1  0BBD               	decfsz	??_IR_zone+1,f
  4663     02E2  2ADD               	goto	u2477
  4664     02E3  3200               	nop2
  4665     02E4  2AEA               	goto	l333
  4666     02E5                     l2306:
  4667     02E5  3001               	movlw	1
  4668     02E6  00BC               	movwf	??_IR_zone
  4669     02E7  083C               	movf	??_IR_zone,w
  4670     02E8  07C1               	addwf	IR_zone@i,f	;volatile
  4671     02E9  2A78               	goto	l2286
  4672     02EA                     l333:
  4673     02EA  0008               	return
  4674     02EB                     __end_of_IR_zone:
  4675                           
  4676                           	psect	text16
  4677     0009                     __ptext16:	
  4678 ;; *************** function _user_data *****************
  4679 ;; Defined at:
  4680 ;;		line 200 in file "./Commands.h"
  4681 ;; Parameters:    Size  Location     Type
  4682 ;;		None
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;		None
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;Total ram usage:        1 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 3
  4701 ;; This function calls:
  4702 ;;		_user_data_receive
  4703 ;;		_user_data_send
  4704 ;; This function is called by:
  4705 ;;		_drive
  4706 ;;		_IR_zone
  4707 ;;		_shield_code
  4708 ;;		_servos
  4709 ;;		_main
  4710 ;;		_claw
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714     0009                     _user_data:	
  4715                           ;psect for function _user_data
  4716                           
  4717     0009                     l2028:	
  4718                           ;incstack = 0
  4719                           ; Regs used in _user_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4720                           
  4721                           
  4722                           ;./Commands.h: 202: 
  4723     0009  318E  26C4  3180   	fcall	_user_data_send
  4724     000C                     l2032:	
  4725                           ;./Commands.h: 203: void transmit_shield_code()
  4726                           
  4727                           
  4728                           ;./Commands.h: 203: void transmit_shield_code()
  4729     000C  3186  2635  3180   	fcall	_user_data_receive
  4730     000F  3A00               	xorlw	0
  4731     0010  1903               	skipnz
  4732     0011  2813               	goto	u1651
  4733     0012  2814               	goto	u1650
  4734     0013                     u1651:
  4735     0013  2809               	goto	l2028
  4736     0014                     u1650:
  4737     0014                     l2034:
  4738                           
  4739                           ;./Commands.h: 207: 
  4740     0014  300D               	movlw	13
  4741     0015  00FB               	movwf	??_user_data
  4742     0016  30FC               	movlw	252
  4743     0017                     u2487:
  4744     0017  0B89               	decfsz	9,f
  4745     0018  2817               	goto	u2487
  4746     0019  0BFB               	decfsz	??_user_data,f
  4747     001A  2817               	goto	u2487
  4748     001B                     l152:
  4749     001B  0008               	return
  4750     001C                     __end_of_user_data:
  4751                           
  4752                           	psect	text17
  4753     0EC4                     __ptext17:	
  4754 ;; *************** function _user_data_send *****************
  4755 ;; Defined at:
  4756 ;;		line 135 in file "./Commands.h"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;		None
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;  11729           6    0[BANK0 ] volatile unsigned char [
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      void 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4771 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4773 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4774 ;;Total ram usage:        7 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 2
  4777 ;; This function calls:
  4778 ;;		_UART_send
  4779 ;; This function is called by:
  4780 ;;		_user_data
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784     0EC4                     _user_data_send:	
  4785                           ;psect for function _user_data_send
  4786                           
  4787     0EC4                     l1856:	
  4788                           ;incstack = 0
  4789                           ; Regs used in _user_data_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4790                           
  4791     0EC4                     l1858:	
  4792                           ;./Commands.h: 137:     joy_ry /= 10;
  4793                           
  4794     0EC4  30DC               	movlw	low user_data_send@F11728
  4795     0EC5  0086               	movwf	6
  4796     0EC6  3000               	movlw	high user_data_send@F11728
  4797     0EC7  0087               	movwf	7
  4798     0EC8  3020               	movlw	low user_data_send@11729
  4799     0EC9  0084               	movwf	4
  4800     0ECA  3000               	movlw	high user_data_send@11729
  4801     0ECB  0085               	movwf	5
  4802     0ECC  3006               	movlw	6
  4803     0ECD  00F8               	movwf	??_user_data_send
  4804     0ECE                     u1350:
  4805     0ECE  0016               	moviw fsr1++
  4806     0ECF  001A               	movwi fsr0++
  4807     0ED0  0BF8               	decfsz	??_user_data_send,f
  4808     0ED1  2ECE               	goto	u1350
  4809     0ED2                     l1860:
  4810     0ED2  3006               	movlw	6
  4811     0ED3  00F2               	movwf	UART_send@size
  4812     0ED4  3000               	movlw	0
  4813     0ED5  00F3               	movwf	UART_send@size+1
  4814     0ED6  3020               	movlw	(low (user_data_send@11729| 0))& (0+255)
  4815     0ED7  318F  277F  318E   	fcall	_UART_send
  4816     0EDA  3A00               	xorlw	0
  4817     0EDB  1903               	skipnz
  4818     0EDC  2EDE               	goto	u1361
  4819     0EDD  2EDF               	goto	u1360
  4820     0EDE                     u1361:
  4821     0EDE  2EC4               	goto	l1858
  4822     0EDF                     u1360:
  4823     0EDF                     l134:
  4824     0EDF  0008               	return
  4825     0EE0                     __end_of_user_data_send:
  4826                           
  4827                           	psect	text18
  4828     0635                     __ptext18:	
  4829 ;; *************** function _user_data_receive *****************
  4830 ;; Defined at:
  4831 ;;		line 140 in file "./Commands.h"
  4832 ;; Parameters:    Size  Location     Type
  4833 ;;		None
  4834 ;; Auto vars:     Size  Location     Type
  4835 ;;  r              26    0[BANK0 ] volatile unsigned char [
  4836 ;;  j               1   27[BANK0 ] volatile unsigned char 
  4837 ;;  s               1   26[BANK0 ] volatile unsigned char 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      unsigned char 
  4840 ;; Registers used:
  4841 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4848 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4849 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4850 ;;      Totals:         3      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4851 ;;Total ram usage:       31 bytes
  4852 ;; Hardware stack levels used: 1
  4853 ;; Hardware stack levels required when called: 1
  4854 ;; This function calls:
  4855 ;;		___lwdiv
  4856 ;;		_rx_wait
  4857 ;; This function is called by:
  4858 ;;		_user_data
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862     0635                     _user_data_receive:	
  4863                           ;psect for function _user_data_receive
  4864                           
  4865     0635                     l1862:	
  4866                           ;incstack = 0
  4867                           ; Regs used in _user_data_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4868                           
  4869                           
  4870                           ;./Commands.h: 142:     joy_ly /= 10;
  4871     0635  301A               	movlw	26
  4872     0636  0020               	movlb	0	; select bank0
  4873     0637  00BA               	movwf	user_data_receive@s	;volatile
  4874     0638                     l1864:
  4875                           
  4876                           ;./Commands.h: 144:     joy_lx = r[12];
  4877     0638  01BB               	clrf	user_data_receive@j	;volatile
  4878     0639  2E52               	goto	l1876
  4879     063A                     l1866:
  4880                           
  4881                           ;./Commands.h: 145:     joy_lx += r[13] << 8;;./Commands.h: 146:     joy_lx -= 1000;
  4882     063A  318E  2691  3186   	fcall	_rx_wait
  4883     063D  3A00               	xorlw	0
  4884     063E  1903               	skipnz
  4885     063F  2E41               	goto	u1371
  4886     0640  2E42               	goto	u1370
  4887     0641                     u1371:
  4888     0641  2E4B               	goto	l1870
  4889     0642                     u1370:
  4890     0642                     l1868:
  4891                           
  4892                           ;./Commands.h: 147:     joy_lx /= 10;;./Commands.h: 148: 
  4893     0642  0020               	movlb	0	; select bank0
  4894     0643  083B               	movf	user_data_receive@j,w
  4895     0644  3E20               	addlw	(low (user_data_receive@r| 0))& (0+255)
  4896     0645  0086               	movwf	6
  4897     0646  0187               	clrf	7
  4898     0647  0022               	movlb	2	; select bank2
  4899     0648  0819               	movf	25,w	;volatile
  4900     0649  0081               	movwf	1
  4901                           
  4902                           ;./Commands.h: 149:     swA = r[14];
  4903     064A  2E4D               	goto	l1874
  4904     064B                     l1870:
  4905                           
  4906                           ;./Commands.h: 151:     swA = swA > 1500;;./Commands.h: 152:     swB = r[16];
  4907     064B  3000               	movlw	0
  4908     064C  2FCC               	goto	l141
  4909     064D                     l1874:
  4910                           
  4911                           ;./Commands.h: 154:     swB = swB > 1500;
  4912     064D  3001               	movlw	1
  4913     064E  00F8               	movwf	??_user_data_receive
  4914     064F  0878               	movf	??_user_data_receive,w
  4915     0650  0020               	movlb	0	; select bank0
  4916     0651  07BB               	addwf	user_data_receive@j,f	;volatile
  4917     0652                     l1876:
  4918     0652  083A               	movf	user_data_receive@s,w	;volatile
  4919     0653  023B               	subwf	user_data_receive@j,w	;volatile
  4920     0654  1C03               	skipc
  4921     0655  2E57               	goto	u1381
  4922     0656  2E58               	goto	u1380
  4923     0657                     u1381:
  4924     0657  2E3A               	goto	l1866
  4925     0658                     u1380:
  4926     0658                     l1878:
  4927                           
  4928                           ;./Commands.h: 156:     swC += r[19] << 8;
  4929     0658  0826               	movf	user_data_receive@r+6,w	;volatile
  4930     0659  00F8               	movwf	??_user_data_receive
  4931     065A  01F9               	clrf	??_user_data_receive+1
  4932     065B  0878               	movf	??_user_data_receive,w
  4933     065C  00D6               	movwf	_joy_rx	;volatile
  4934     065D  0879               	movf	??_user_data_receive+1,w
  4935     065E  00D7               	movwf	_joy_rx+1	;volatile
  4936                           
  4937                           ;./Commands.h: 157:     if(swC == 1000){swC = 0;}
  4938     065F  0827               	movf	user_data_receive@r+7,w	;volatile
  4939     0660  00F8               	movwf	??_user_data_receive
  4940     0661  01F9               	clrf	??_user_data_receive+1
  4941     0662  0878               	movf	??_user_data_receive,w
  4942     0663  00F9               	movwf	??_user_data_receive+1
  4943     0664  01F8               	clrf	??_user_data_receive
  4944     0665  0878               	movf	??_user_data_receive,w
  4945     0666  07D6               	addwf	_joy_rx,f	;volatile
  4946     0667  0879               	movf	??_user_data_receive+1,w
  4947     0668  3DD7               	addwfc	_joy_rx+1,f	;volatile
  4948                           
  4949                           ;./Commands.h: 158:     else{if(swC == 1500){swC = 1;}
  4950     0669  30E8               	movlw	232
  4951     066A  02D6               	subwf	_joy_rx,f	;volatile
  4952     066B  3003               	movlw	3
  4953     066C  3BD7               	subwfb	_joy_rx+1,f	;volatile
  4954     066D                     l1880:
  4955                           
  4956                           ;./Commands.h: 159:     else {swC = 2;}}
  4957     066D  300A               	movlw	10
  4958     066E  00F0               	movwf	___lwdiv@divisor
  4959     066F  3000               	movlw	0
  4960     0670  00F1               	movwf	___lwdiv@divisor+1
  4961     0671  0857               	movf	_joy_rx+1,w	;volatile
  4962     0672  00F3               	movwf	___lwdiv@dividend+1
  4963     0673  0856               	movf	_joy_rx,w	;volatile
  4964     0674  00F2               	movwf	___lwdiv@dividend
  4965     0675  3180  20B0  3186   	fcall	___lwdiv
  4966     0678  0871               	movf	?___lwdiv+1,w
  4967     0679  0020               	movlb	0	; select bank0
  4968     067A  00D7               	movwf	_joy_rx+1	;volatile
  4969     067B  0870               	movf	?___lwdiv,w
  4970     067C  00D6               	movwf	_joy_rx	;volatile
  4971     067D                     l1882:
  4972                           
  4973                           ;./Commands.h: 161:     swD += r[21] << 8;
  4974     067D  0828               	movf	user_data_receive@r+8,w	;volatile
  4975     067E  00F8               	movwf	??_user_data_receive
  4976     067F  01F9               	clrf	??_user_data_receive+1
  4977     0680  0878               	movf	??_user_data_receive,w
  4978     0681  00D4               	movwf	_joy_ry	;volatile
  4979     0682  0879               	movf	??_user_data_receive+1,w
  4980     0683  00D5               	movwf	_joy_ry+1	;volatile
  4981     0684                     l1884:
  4982                           
  4983                           ;./Commands.h: 162:     swD = swD > 1500;
  4984     0684  0829               	movf	user_data_receive@r+9,w	;volatile
  4985     0685  00F8               	movwf	??_user_data_receive
  4986     0686  01F9               	clrf	??_user_data_receive+1
  4987     0687  0878               	movf	??_user_data_receive,w
  4988     0688  00F9               	movwf	??_user_data_receive+1
  4989     0689  01F8               	clrf	??_user_data_receive
  4990     068A  0878               	movf	??_user_data_receive,w
  4991     068B  07D4               	addwf	_joy_ry,f	;volatile
  4992     068C  0879               	movf	??_user_data_receive+1,w
  4993     068D  3DD5               	addwfc	_joy_ry+1,f	;volatile
  4994     068E                     l1886:
  4995                           
  4996                           ;./Commands.h: 163: 
  4997     068E  30E8               	movlw	232
  4998     068F  02D4               	subwf	_joy_ry,f	;volatile
  4999     0690  3003               	movlw	3
  5000     0691  3BD5               	subwfb	_joy_ry+1,f	;volatile
  5001                           
  5002                           ;./Commands.h: 164:     potA = r[22];
  5003     0692  300A               	movlw	10
  5004     0693  00F0               	movwf	___lwdiv@divisor
  5005     0694  3000               	movlw	0
  5006     0695  00F1               	movwf	___lwdiv@divisor+1
  5007     0696  0855               	movf	_joy_ry+1,w	;volatile
  5008     0697  00F3               	movwf	___lwdiv@dividend+1
  5009     0698  0854               	movf	_joy_ry,w	;volatile
  5010     0699  00F2               	movwf	___lwdiv@dividend
  5011     069A  3180  20B0  3186   	fcall	___lwdiv
  5012     069D  0871               	movf	?___lwdiv+1,w
  5013     069E  0020               	movlb	0	; select bank0
  5014     069F  00D5               	movwf	_joy_ry+1	;volatile
  5015     06A0  0870               	movf	?___lwdiv,w
  5016     06A1  00D4               	movwf	_joy_ry	;volatile
  5017     06A2                     l1888:
  5018                           
  5019                           ;./Commands.h: 166:     potA = (potA - 1000)/10;
  5020     06A2  082A               	movf	user_data_receive@r+10,w	;volatile
  5021     06A3  00F8               	movwf	??_user_data_receive
  5022     06A4  01F9               	clrf	??_user_data_receive+1
  5023     06A5  0878               	movf	??_user_data_receive,w
  5024     06A6  00D2               	movwf	_joy_ly	;volatile
  5025     06A7  0879               	movf	??_user_data_receive+1,w
  5026     06A8  00D3               	movwf	_joy_ly+1	;volatile
  5027     06A9                     l1890:
  5028                           
  5029                           ;./Commands.h: 167:     potB = r[24];
  5030     06A9  082B               	movf	user_data_receive@r+11,w	;volatile
  5031     06AA  00F8               	movwf	??_user_data_receive
  5032     06AB  01F9               	clrf	??_user_data_receive+1
  5033     06AC  0878               	movf	??_user_data_receive,w
  5034     06AD  00F9               	movwf	??_user_data_receive+1
  5035     06AE  01F8               	clrf	??_user_data_receive
  5036     06AF  0878               	movf	??_user_data_receive,w
  5037     06B0  07D2               	addwf	_joy_ly,f	;volatile
  5038     06B1  0879               	movf	??_user_data_receive+1,w
  5039     06B2  3DD3               	addwfc	_joy_ly+1,f	;volatile
  5040     06B3                     l1892:
  5041                           
  5042                           ;./Commands.h: 168:     potB += r[25] << 8;
  5043     06B3  30E8               	movlw	232
  5044     06B4  02D2               	subwf	_joy_ly,f	;volatile
  5045     06B5  3003               	movlw	3
  5046     06B6  3BD3               	subwfb	_joy_ly+1,f	;volatile
  5047     06B7                     l1894:
  5048                           
  5049                           ;./Commands.h: 169:     potB = (potB - 1000)/10;
  5050     06B7  300A               	movlw	10
  5051     06B8  00F0               	movwf	___lwdiv@divisor
  5052     06B9  3000               	movlw	0
  5053     06BA  00F1               	movwf	___lwdiv@divisor+1
  5054     06BB  0853               	movf	_joy_ly+1,w	;volatile
  5055     06BC  00F3               	movwf	___lwdiv@dividend+1
  5056     06BD  0852               	movf	_joy_ly,w	;volatile
  5057     06BE  00F2               	movwf	___lwdiv@dividend
  5058     06BF  3180  20B0  3186   	fcall	___lwdiv
  5059     06C2  0871               	movf	?___lwdiv+1,w
  5060     06C3  0020               	movlb	0	; select bank0
  5061     06C4  00D3               	movwf	_joy_ly+1	;volatile
  5062     06C5  0870               	movf	?___lwdiv,w
  5063     06C6  00D2               	movwf	_joy_ly	;volatile
  5064                           
  5065                           ;./Commands.h: 171: }
  5066     06C7  082C               	movf	user_data_receive@r+12,w	;volatile
  5067     06C8  00F8               	movwf	??_user_data_receive
  5068     06C9  01F9               	clrf	??_user_data_receive+1
  5069     06CA  0878               	movf	??_user_data_receive,w
  5070     06CB  0021               	movlb	1	; select bank1
  5071     06CC  00C7               	movwf	_joy_lx^(0+128)	;volatile
  5072     06CD  0879               	movf	??_user_data_receive+1,w
  5073     06CE  00C8               	movwf	(_joy_lx+1)^(0+128)	;volatile
  5074                           
  5075                           ;./Commands.h: 172: 
  5076     06CF  0020               	movlb	0	; select bank0
  5077     06D0  082D               	movf	user_data_receive@r+13,w	;volatile
  5078     06D1  00F8               	movwf	??_user_data_receive
  5079     06D2  01F9               	clrf	??_user_data_receive+1
  5080     06D3  0878               	movf	??_user_data_receive,w
  5081     06D4  00F9               	movwf	??_user_data_receive+1
  5082     06D5  01F8               	clrf	??_user_data_receive
  5083     06D6  0878               	movf	??_user_data_receive,w
  5084     06D7  0021               	movlb	1	; select bank1
  5085     06D8  07C7               	addwf	_joy_lx^(0+128),f	;volatile
  5086     06D9  0879               	movf	??_user_data_receive+1,w
  5087     06DA  3DC8               	addwfc	(_joy_lx+1)^(0+128),f	;volatile
  5088                           
  5089                           ;./Commands.h: 173: void user_data()
  5090     06DB  30E8               	movlw	232
  5091     06DC  02C7               	subwf	_joy_lx^(0+128),f	;volatile
  5092     06DD  3003               	movlw	3
  5093     06DE  3BC8               	subwfb	(_joy_lx+1)^(0+128),f	;volatile
  5094     06DF                     l1896:
  5095                           
  5096                           ;./Commands.h: 174: {
  5097     06DF  300A               	movlw	10
  5098     06E0  00F0               	movwf	___lwdiv@divisor
  5099     06E1  3000               	movlw	0
  5100     06E2  00F1               	movwf	___lwdiv@divisor+1
  5101     06E3  0848               	movf	(_joy_lx+1)^(0+128),w	;volatile
  5102     06E4  00F3               	movwf	___lwdiv@dividend+1
  5103     06E5  0847               	movf	_joy_lx^(0+128),w	;volatile
  5104     06E6  00F2               	movwf	___lwdiv@dividend
  5105     06E7  3180  20B0  3186   	fcall	___lwdiv
  5106     06EA  0871               	movf	?___lwdiv+1,w
  5107     06EB  0021               	movlb	1	; select bank1
  5108     06EC  00C8               	movwf	(_joy_lx+1)^(0+128)	;volatile
  5109     06ED  0870               	movf	?___lwdiv,w
  5110     06EE  00C7               	movwf	_joy_lx^(0+128)	;volatile
  5111     06EF                     l1898:
  5112                           
  5113                           ;./Commands.h: 176:     while(!user_data_receive())
  5114     06EF  0020               	movlb	0	; select bank0
  5115     06F0  082E               	movf	user_data_receive@r+14,w	;volatile
  5116     06F1  00F8               	movwf	??_user_data_receive
  5117     06F2  01F9               	clrf	??_user_data_receive+1
  5118     06F3  0878               	movf	??_user_data_receive,w
  5119     06F4  00D0               	movwf	_swA	;volatile
  5120     06F5  0879               	movf	??_user_data_receive+1,w
  5121     06F6  00D1               	movwf	_swA+1	;volatile
  5122     06F7                     l1900:
  5123                           
  5124                           ;./Commands.h: 177:     {
  5125     06F7  082F               	movf	user_data_receive@r+15,w	;volatile
  5126     06F8  00F8               	movwf	??_user_data_receive
  5127     06F9  01F9               	clrf	??_user_data_receive+1
  5128     06FA  0878               	movf	??_user_data_receive,w
  5129     06FB  00F9               	movwf	??_user_data_receive+1
  5130     06FC  01F8               	clrf	??_user_data_receive
  5131     06FD  0878               	movf	??_user_data_receive,w
  5132     06FE  07D0               	addwf	_swA,f	;volatile
  5133     06FF  0879               	movf	??_user_data_receive+1,w
  5134     0700  3DD1               	addwfc	_swA+1,f	;volatile
  5135     0701                     l1902:
  5136                           
  5137                           ;./Commands.h: 178:         user_data_send();
  5138     0701  3005               	movlw	5
  5139     0702  0251               	subwf	_swA+1,w	;volatile
  5140     0703  30DD               	movlw	221
  5141     0704  1903               	skipnz
  5142     0705  0250               	subwf	_swA,w	;volatile
  5143     0706  1803               	skipnc
  5144     0707  2F09               	goto	u1391
  5145     0708  2F0B               	goto	u1390
  5146     0709                     u1391:
  5147     0709  3001               	movlw	1
  5148     070A  2F0C               	goto	u1400
  5149     070B                     u1390:
  5150     070B  3000               	movlw	0
  5151     070C                     u1400:
  5152     070C  00F8               	movwf	??_user_data_receive
  5153     070D  01F9               	clrf	??_user_data_receive+1
  5154     070E  0878               	movf	??_user_data_receive,w
  5155     070F  00D0               	movwf	_swA	;volatile
  5156     0710  0879               	movf	??_user_data_receive+1,w
  5157     0711  00D1               	movwf	_swA+1	;volatile
  5158     0712                     l1904:
  5159                           
  5160                           ;./Commands.h: 179:     }
  5161     0712  0830               	movf	user_data_receive@r+16,w	;volatile
  5162     0713  00F8               	movwf	??_user_data_receive
  5163     0714  01F9               	clrf	??_user_data_receive+1
  5164     0715  0878               	movf	??_user_data_receive,w
  5165     0716  00CE               	movwf	_swB	;volatile
  5166     0717  0879               	movf	??_user_data_receive+1,w
  5167     0718  00CF               	movwf	_swB+1	;volatile
  5168     0719                     l1906:
  5169                           
  5170                           ;./Commands.h: 180:     _delay((unsigned long)((100)*(400000/4000.0)));
  5171     0719  0831               	movf	user_data_receive@r+17,w	;volatile
  5172     071A  00F8               	movwf	??_user_data_receive
  5173     071B  01F9               	clrf	??_user_data_receive+1
  5174     071C  0878               	movf	??_user_data_receive,w
  5175     071D  00F9               	movwf	??_user_data_receive+1
  5176     071E  01F8               	clrf	??_user_data_receive
  5177     071F  0878               	movf	??_user_data_receive,w
  5178     0720  07CE               	addwf	_swB,f	;volatile
  5179     0721  0879               	movf	??_user_data_receive+1,w
  5180     0722  3DCF               	addwfc	_swB+1,f	;volatile
  5181     0723                     l1908:
  5182                           
  5183                           ;./Commands.h: 181: }
  5184     0723  3005               	movlw	5
  5185     0724  024F               	subwf	_swB+1,w	;volatile
  5186     0725  30DD               	movlw	221
  5187     0726  1903               	skipnz
  5188     0727  024E               	subwf	_swB,w	;volatile
  5189     0728  1803               	skipnc
  5190     0729  2F2B               	goto	u1411
  5191     072A  2F2D               	goto	u1410
  5192     072B                     u1411:
  5193     072B  3001               	movlw	1
  5194     072C  2F2E               	goto	u1420
  5195     072D                     u1410:
  5196     072D  3000               	movlw	0
  5197     072E                     u1420:
  5198     072E  00F8               	movwf	??_user_data_receive
  5199     072F  01F9               	clrf	??_user_data_receive+1
  5200     0730  0878               	movf	??_user_data_receive,w
  5201     0731  00CE               	movwf	_swB	;volatile
  5202     0732  0879               	movf	??_user_data_receive+1,w
  5203     0733  00CF               	movwf	_swB+1	;volatile
  5204     0734                     l1910:
  5205                           
  5206                           ;./Commands.h: 182: 
  5207     0734  0832               	movf	user_data_receive@r+18,w	;volatile
  5208     0735  00F8               	movwf	??_user_data_receive
  5209     0736  01F9               	clrf	??_user_data_receive+1
  5210     0737  0878               	movf	??_user_data_receive,w
  5211     0738  00CC               	movwf	_swC	;volatile
  5212     0739  0879               	movf	??_user_data_receive+1,w
  5213     073A  00CD               	movwf	_swC+1	;volatile
  5214     073B                     l1912:
  5215                           
  5216                           ;./Commands.h: 183: void motor(unsigned char dirA, unsigned char pwmA, unsigned char dir
      +                          B, unsigned char pwmB)
  5217     073B  0833               	movf	user_data_receive@r+19,w	;volatile
  5218     073C  00F8               	movwf	??_user_data_receive
  5219     073D  01F9               	clrf	??_user_data_receive+1
  5220     073E  0878               	movf	??_user_data_receive,w
  5221     073F  00F9               	movwf	??_user_data_receive+1
  5222     0740  01F8               	clrf	??_user_data_receive
  5223     0741  0878               	movf	??_user_data_receive,w
  5224     0742  07CC               	addwf	_swC,f	;volatile
  5225     0743  0879               	movf	??_user_data_receive+1,w
  5226     0744  3DCD               	addwfc	_swC+1,f	;volatile
  5227     0745                     l1914:
  5228                           
  5229                           ;./Commands.h: 184: {
  5230     0745  30E8               	movlw	232
  5231     0746  064C               	xorwf	_swC,w	;volatile
  5232     0747  3003               	movlw	3
  5233     0748  1903               	skipnz
  5234     0749  064D               	xorwf	_swC+1,w	;volatile
  5235     074A  1D03               	btfss	3,2
  5236     074B  2F4D               	goto	u1431
  5237     074C  2F4E               	goto	u1430
  5238     074D                     u1431:
  5239     074D  2F51               	goto	l1918
  5240     074E                     u1430:
  5241     074E                     l1916:
  5242     074E  01CC               	clrf	_swC	;volatile
  5243     074F  01CD               	clrf	_swC+1	;volatile
  5244     0750  2F63               	goto	l144
  5245     0751                     l1918:
  5246     0751  30DC               	movlw	220
  5247     0752  064C               	xorwf	_swC,w	;volatile
  5248     0753  3005               	movlw	5
  5249     0754  1903               	skipnz
  5250     0755  064D               	xorwf	_swC+1,w	;volatile
  5251     0756  1D03               	btfss	3,2
  5252     0757  2F59               	goto	u1441
  5253     0758  2F5A               	goto	u1440
  5254     0759                     u1441:
  5255     0759  2F5F               	goto	l1922
  5256     075A                     u1440:
  5257     075A                     l1920:
  5258     075A  3001               	movlw	1
  5259     075B  00CC               	movwf	_swC	;volatile
  5260     075C  3000               	movlw	0
  5261     075D  00CD               	movwf	_swC+1	;volatile
  5262     075E  2F63               	goto	l144
  5263     075F                     l1922:
  5264     075F  3002               	movlw	2
  5265     0760  00CC               	movwf	_swC	;volatile
  5266     0761  3000               	movlw	0
  5267     0762  00CD               	movwf	_swC+1	;volatile
  5268     0763                     l144:
  5269                           
  5270                           ;./Commands.h: 187: 
  5271     0763  0834               	movf	user_data_receive@r+20,w	;volatile
  5272     0764  00F8               	movwf	??_user_data_receive
  5273     0765  01F9               	clrf	??_user_data_receive+1
  5274     0766  0878               	movf	??_user_data_receive,w
  5275     0767  00CA               	movwf	_swD	;volatile
  5276     0768  0879               	movf	??_user_data_receive+1,w
  5277     0769  00CB               	movwf	_swD+1	;volatile
  5278                           
  5279                           ;./Commands.h: 188: void servo(unsigned char s1, unsigned char s2, unsigned char s3, uns
      +                          igned char s4)
  5280     076A  0835               	movf	user_data_receive@r+21,w	;volatile
  5281     076B  00F8               	movwf	??_user_data_receive
  5282     076C  01F9               	clrf	??_user_data_receive+1
  5283     076D  0878               	movf	??_user_data_receive,w
  5284     076E  00F9               	movwf	??_user_data_receive+1
  5285     076F  01F8               	clrf	??_user_data_receive
  5286     0770  0878               	movf	??_user_data_receive,w
  5287     0771  07CA               	addwf	_swD,f	;volatile
  5288     0772  0879               	movf	??_user_data_receive+1,w
  5289     0773  3DCB               	addwfc	_swD+1,f	;volatile
  5290                           
  5291                           ;./Commands.h: 189: {
  5292     0774  3005               	movlw	5
  5293     0775  024B               	subwf	_swD+1,w	;volatile
  5294     0776  30DD               	movlw	221
  5295     0777  1903               	skipnz
  5296     0778  024A               	subwf	_swD,w	;volatile
  5297     0779  1803               	skipnc
  5298     077A  2F7C               	goto	u1451
  5299     077B  2F7E               	goto	u1450
  5300     077C                     u1451:
  5301     077C  3001               	movlw	1
  5302     077D  2F7F               	goto	u1460
  5303     077E                     u1450:
  5304     077E  3000               	movlw	0
  5305     077F                     u1460:
  5306     077F  00F8               	movwf	??_user_data_receive
  5307     0780  01F9               	clrf	??_user_data_receive+1
  5308     0781  0878               	movf	??_user_data_receive,w
  5309     0782  00CA               	movwf	_swD	;volatile
  5310     0783  0879               	movf	??_user_data_receive+1,w
  5311     0784  00CB               	movwf	_swD+1	;volatile
  5312                           
  5313                           ;./Commands.h: 191: }
  5314     0785  0836               	movf	user_data_receive@r+22,w	;volatile
  5315     0786  00F8               	movwf	??_user_data_receive
  5316     0787  01F9               	clrf	??_user_data_receive+1
  5317     0788  0878               	movf	??_user_data_receive,w
  5318     0789  00C8               	movwf	_potA	;volatile
  5319     078A  0879               	movf	??_user_data_receive+1,w
  5320     078B  00C9               	movwf	_potA+1	;volatile
  5321                           
  5322                           ;./Commands.h: 192: 
  5323     078C  0837               	movf	user_data_receive@r+23,w	;volatile
  5324     078D  00F8               	movwf	??_user_data_receive
  5325     078E  01F9               	clrf	??_user_data_receive+1
  5326     078F  0878               	movf	??_user_data_receive,w
  5327     0790  00F9               	movwf	??_user_data_receive+1
  5328     0791  01F8               	clrf	??_user_data_receive
  5329     0792  0878               	movf	??_user_data_receive,w
  5330     0793  07C8               	addwf	_potA,f	;volatile
  5331     0794  0879               	movf	??_user_data_receive+1,w
  5332     0795  3DC9               	addwfc	_potA+1,f	;volatile
  5333     0796                     l1924:
  5334                           
  5335                           ;./Commands.h: 193: void set_laser(unsigned char en)
  5336     0796  300A               	movlw	10
  5337     0797  00F0               	movwf	___lwdiv@divisor
  5338     0798  3000               	movlw	0
  5339     0799  00F1               	movwf	___lwdiv@divisor+1
  5340     079A  0848               	movf	_potA,w	;volatile
  5341     079B  3E18               	addlw	24
  5342     079C  00F2               	movwf	___lwdiv@dividend
  5343     079D  30FC               	movlw	252
  5344     079E  3D49               	addwfc	_potA+1,w	;volatile
  5345     079F  00F3               	movwf	___lwdiv@dividend+1
  5346     07A0  3180  20B0  3186   	fcall	___lwdiv
  5347     07A3  0871               	movf	?___lwdiv+1,w
  5348     07A4  0020               	movlb	0	; select bank0
  5349     07A5  00C9               	movwf	_potA+1	;volatile
  5350     07A6  0870               	movf	?___lwdiv,w
  5351     07A7  00C8               	movwf	_potA	;volatile
  5352     07A8                     l1926:
  5353                           
  5354                           ;./Commands.h: 194: {
  5355     07A8  0838               	movf	user_data_receive@r+24,w	;volatile
  5356     07A9  00F8               	movwf	??_user_data_receive
  5357     07AA  01F9               	clrf	??_user_data_receive+1
  5358     07AB  0878               	movf	??_user_data_receive,w
  5359     07AC  00C6               	movwf	_potB	;volatile
  5360     07AD  0879               	movf	??_user_data_receive+1,w
  5361     07AE  00C7               	movwf	_potB+1	;volatile
  5362     07AF                     l1928:
  5363                           
  5364                           ;./Commands.h: 195:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0
      +                          x08, 0x01, 0x00, en}, 7)){}
  5365     07AF  0839               	movf	user_data_receive@r+25,w	;volatile
  5366     07B0  00F8               	movwf	??_user_data_receive
  5367     07B1  01F9               	clrf	??_user_data_receive+1
  5368     07B2  0878               	movf	??_user_data_receive,w
  5369     07B3  00F9               	movwf	??_user_data_receive+1
  5370     07B4  01F8               	clrf	??_user_data_receive
  5371     07B5  0878               	movf	??_user_data_receive,w
  5372     07B6  07C6               	addwf	_potB,f	;volatile
  5373     07B7  0879               	movf	??_user_data_receive+1,w
  5374     07B8  3DC7               	addwfc	_potB+1,f	;volatile
  5375     07B9                     l1930:
  5376                           
  5377                           ;./Commands.h: 196: }
  5378     07B9  300A               	movlw	10
  5379     07BA  00F0               	movwf	___lwdiv@divisor
  5380     07BB  3000               	movlw	0
  5381     07BC  00F1               	movwf	___lwdiv@divisor+1
  5382     07BD  0846               	movf	_potB,w	;volatile
  5383     07BE  3E18               	addlw	24
  5384     07BF  00F2               	movwf	___lwdiv@dividend
  5385     07C0  30FC               	movlw	252
  5386     07C1  3D47               	addwfc	_potB+1,w	;volatile
  5387     07C2  00F3               	movwf	___lwdiv@dividend+1
  5388     07C3  3180  20B0  3186   	fcall	___lwdiv
  5389     07C6  0871               	movf	?___lwdiv+1,w
  5390     07C7  0020               	movlb	0	; select bank0
  5391     07C8  00C7               	movwf	_potB+1	;volatile
  5392     07C9  0870               	movf	?___lwdiv,w
  5393     07CA  00C6               	movwf	_potB	;volatile
  5394                           
  5395                           ;./Commands.h: 197: 
  5396     07CB  3001               	movlw	1
  5397     07CC                     l141:
  5398     07CC  0008               	return
  5399     07CD                     __end_of_user_data_receive:
  5400                           
  5401                           	psect	text19
  5402     0E91                     __ptext19:	
  5403 ;; *************** function _rx_wait *****************
  5404 ;; Defined at:
  5405 ;;		line 49 in file "./Commands.h"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;		None
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  count           2    0[COMMON] volatile unsigned int 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  1    wreg      unsigned char 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5423 ;;Total ram usage:        2 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; This function calls:
  5426 ;;		Nothing
  5427 ;; This function is called by:
  5428 ;;		_PCLS_info_receive
  5429 ;;		_user_data_receive
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433     0E91                     _rx_wait:	
  5434                           ;psect for function _rx_wait
  5435                           
  5436     0E91                     l1768:	
  5437                           ;incstack = 0
  5438                           ; Regs used in _rx_wait: [wreg+status,2+status,0]
  5439                           
  5440                           
  5441                           ;./Commands.h: 51: void UART_init();./Commands.h: 52: {
  5442     0E91  30E8               	movlw	232
  5443     0E92  00F0               	movwf	rx_wait@count	;volatile
  5444     0E93  3003               	movlw	3
  5445     0E94  00F1               	movwf	rx_wait@count+1	;volatile
  5446     0E95                     l1770:
  5447     0E95  0870               	movf	rx_wait@count,w	;volatile
  5448     0E96  0471               	iorwf	rx_wait@count+1,w	;volatile
  5449     0E97  1D03               	btfss	3,2
  5450     0E98  2E9A               	goto	u1201
  5451     0E99  2E9B               	goto	u1200
  5452     0E9A                     u1201:
  5453     0E9A  2E9C               	goto	l91
  5454     0E9B                     u1200:
  5455     0E9B  2EA8               	goto	l1782
  5456     0E9C                     l91:
  5457                           
  5458                           ;./Commands.h: 53:     ANSELCbits.ANSC6 = 0;;./Commands.h: 54:     ANSELCbits.ANSC7 = 0;
  5459     0E9C  002E               	movlb	14	; select bank14
  5460     0E9D  1E8F               	btfss	15,5	;volatile
  5461     0E9E  2EA0               	goto	u1211
  5462     0E9F  2EA1               	goto	u1210
  5463     0EA0                     u1211:
  5464     0EA0  2EA3               	goto	l1778
  5465     0EA1                     u1210:
  5466     0EA1                     l1774:
  5467                           
  5468                           ;./Commands.h: 55: ;./Commands.h: 56:     TX1STAbits.SYNC = 0;
  5469     0EA1  3001               	movlw	1
  5470     0EA2  2EA9               	goto	l94
  5471     0EA3                     l1778:
  5472                           
  5473                           ;./Commands.h: 58:     RC1STAbits.SPEN = 1;
  5474     0EA3  3001               	movlw	1
  5475     0EA4  02F0               	subwf	rx_wait@count,f	;volatile
  5476     0EA5  3000               	movlw	0
  5477     0EA6  3BF1               	subwfb	rx_wait@count+1,f	;volatile
  5478     0EA7  2E95               	goto	l1770
  5479     0EA8                     l1782:
  5480                           
  5481                           ;./Commands.h: 59:     RC1STAbits.CREN = 1;
  5482     0EA8  3000               	movlw	0
  5483     0EA9                     l94:
  5484     0EA9  0008               	return
  5485     0EAA                     __end_of_rx_wait:
  5486                           
  5487                           	psect	text20
  5488     00B0                     __ptext20:	
  5489 ;; *************** function ___lwdiv *****************
  5490 ;; Defined at:
  5491 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  divisor         2    0[COMMON] unsigned int 
  5494 ;;  dividend        2    2[COMMON] unsigned int 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  quotient        2    5[COMMON] unsigned int 
  5497 ;;  counter         1    7[COMMON] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  2    0[COMMON] unsigned int 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5507 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5508 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5509 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5510 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5511 ;;Total ram usage:        8 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_user_data_receive
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520     00B0                     ___lwdiv:	
  5521                           ;psect for function ___lwdiv
  5522                           
  5523     00B0                     l1804:	
  5524                           ;incstack = 0
  5525                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5526                           
  5527     00B0  01F5               	clrf	___lwdiv@quotient
  5528     00B1  01F6               	clrf	___lwdiv@quotient+1
  5529     00B2                     l1806:
  5530     00B2  0870               	movf	___lwdiv@divisor,w
  5531     00B3  0471               	iorwf	___lwdiv@divisor+1,w
  5532     00B4  1903               	btfsc	3,2
  5533     00B5  28B7               	goto	u1241
  5534     00B6  28B8               	goto	u1240
  5535     00B7                     u1241:
  5536     00B7  28E7               	goto	l1826
  5537     00B8                     u1240:
  5538     00B8                     l1808:
  5539     00B8  01F7               	clrf	___lwdiv@counter
  5540     00B9  0AF7               	incf	___lwdiv@counter,f
  5541     00BA  28C4               	goto	l1814
  5542     00BB                     l1810:
  5543     00BB  3001               	movlw	1
  5544     00BC                     u1255:
  5545     00BC  35F0               	lslf	___lwdiv@divisor,f
  5546     00BD  0DF1               	rlf	___lwdiv@divisor+1,f
  5547     00BE  0B89               	decfsz	9,f
  5548     00BF  28BC               	goto	u1255
  5549     00C0                     l1812:
  5550     00C0  3001               	movlw	1
  5551     00C1  00F4               	movwf	??___lwdiv
  5552     00C2  0874               	movf	??___lwdiv,w
  5553     00C3  07F7               	addwf	___lwdiv@counter,f
  5554     00C4                     l1814:
  5555     00C4  1FF1               	btfss	___lwdiv@divisor+1,7
  5556     00C5  28C7               	goto	u1261
  5557     00C6  28C8               	goto	u1260
  5558     00C7                     u1261:
  5559     00C7  28BB               	goto	l1810
  5560     00C8                     u1260:
  5561     00C8                     l1816:
  5562     00C8  3001               	movlw	1
  5563     00C9                     u1275:
  5564     00C9  35F5               	lslf	___lwdiv@quotient,f
  5565     00CA  0DF6               	rlf	___lwdiv@quotient+1,f
  5566     00CB  0B89               	decfsz	9,f
  5567     00CC  28C9               	goto	u1275
  5568     00CD  0871               	movf	___lwdiv@divisor+1,w
  5569     00CE  0273               	subwf	___lwdiv@dividend+1,w
  5570     00CF  1D03               	skipz
  5571     00D0  28D3               	goto	u1285
  5572     00D1  0870               	movf	___lwdiv@divisor,w
  5573     00D2  0272               	subwf	___lwdiv@dividend,w
  5574     00D3                     u1285:
  5575     00D3  1C03               	skipc
  5576     00D4  28D6               	goto	u1281
  5577     00D5  28D7               	goto	u1280
  5578     00D6                     u1281:
  5579     00D6  28DC               	goto	l1822
  5580     00D7                     u1280:
  5581     00D7                     l1818:
  5582     00D7  0870               	movf	___lwdiv@divisor,w
  5583     00D8  02F2               	subwf	___lwdiv@dividend,f
  5584     00D9  0871               	movf	___lwdiv@divisor+1,w
  5585     00DA  3BF3               	subwfb	___lwdiv@dividend+1,f
  5586     00DB                     l1820:
  5587     00DB  1475               	bsf	___lwdiv@quotient,0
  5588     00DC                     l1822:
  5589     00DC  3001               	movlw	1
  5590     00DD                     u1295:
  5591     00DD  36F1               	lsrf	___lwdiv@divisor+1,f
  5592     00DE  0CF0               	rrf	___lwdiv@divisor,f
  5593     00DF  0B89               	decfsz	9,f
  5594     00E0  28DD               	goto	u1295
  5595     00E1                     l1824:
  5596     00E1  3001               	movlw	1
  5597     00E2  02F7               	subwf	___lwdiv@counter,f
  5598     00E3  1D03               	btfss	3,2
  5599     00E4  28E6               	goto	u1301
  5600     00E5  28E7               	goto	u1300
  5601     00E6                     u1301:
  5602     00E6  28C8               	goto	l1816
  5603     00E7                     u1300:
  5604     00E7                     l1826:
  5605     00E7  0876               	movf	___lwdiv@quotient+1,w
  5606     00E8  00F1               	movwf	?___lwdiv+1
  5607     00E9  0875               	movf	___lwdiv@quotient,w
  5608     00EA  00F0               	movwf	?___lwdiv
  5609     00EB                     l815:
  5610     00EB  0008               	return
  5611     00EC                     __end_of___lwdiv:
  5612                           
  5613                           	psect	text21
  5614     004C                     __ptext21:	
  5615 ;; *************** function _surface_exploration *****************
  5616 ;; Defined at:
  5617 ;;		line 253 in file "./Commands.h"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;  taskID_l        1    wreg     unsigned char 
  5620 ;;  taskID_u        1    8[COMMON] unsigned char 
  5621 ;;  value_l         1    9[COMMON] unsigned char 
  5622 ;;  value_u         1   10[COMMON] unsigned char 
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;  taskID_l        1    0[BANK0 ] unsigned char 
  5625 ;;  11779          10    1[BANK0 ] volatile unsigned char [
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  1    wreg      void 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/0
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5635 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;Total ram usage:       15 bytes
  5640 ;; Hardware stack levels used: 1
  5641 ;; Hardware stack levels required when called: 2
  5642 ;; This function calls:
  5643 ;;		_UART_send
  5644 ;; This function is called by:
  5645 ;;		_IR_zone
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649     004C                     _surface_exploration:	
  5650                           ;psect for function _surface_exploration
  5651                           
  5652                           
  5653                           ;incstack = 0
  5654                           ; Regs used in _surface_exploration: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5655                           ;surface_exploration@taskID_l stored from wreg
  5656     004C  0020               	movlb	0	; select bank0
  5657     004D  00A0               	movwf	surface_exploration@taskID_l
  5658     004E                     l2062:
  5659     004E                     l2064:
  5660     004E  3020               	movlw	low surface_exploration@F11778
  5661     004F  0086               	movwf	6
  5662     0050  3001               	movlw	high surface_exploration@F11778
  5663     0051  0087               	movwf	7
  5664     0052  3021               	movlw	low surface_exploration@11779
  5665     0053  0084               	movwf	4
  5666     0054  3000               	movlw	high surface_exploration@11779
  5667     0055  0085               	movwf	5
  5668     0056  300A               	movlw	10
  5669     0057  00FB               	movwf	??_surface_exploration
  5670     0058                     u1700:
  5671     0058  0016               	moviw fsr1++
  5672     0059  001A               	movwi fsr0++
  5673     005A  0BFB               	decfsz	??_surface_exploration,f
  5674     005B  2858               	goto	u1700
  5675     005C                     l2066:
  5676     005C  30FE               	movlw	254
  5677     005D  0020               	movlb	0	; select bank0
  5678     005E  00A1               	movwf	surface_exploration@11779	;volatile
  5679     005F                     l2068:
  5680     005F  3019               	movlw	25
  5681     0060  00A2               	movwf	surface_exploration@11779+1	;volatile
  5682     0061                     l2070:
  5683     0061  3001               	movlw	1
  5684     0062  00A3               	movwf	surface_exploration@11779+2	;volatile
  5685     0063                     l2072:
  5686     0063  300A               	movlw	10
  5687     0064  00A4               	movwf	surface_exploration@11779+3	;volatile
  5688     0065                     l2074:
  5689     0065  3004               	movlw	4
  5690     0066  00A5               	movwf	surface_exploration@11779+4	;volatile
  5691     0067                     l2076:
  5692     0067  01A6               	clrf	surface_exploration@11779+5	;volatile
  5693     0068                     l2078:
  5694     0068  0820               	movf	surface_exploration@taskID_l,w
  5695     0069  00A7               	movwf	surface_exploration@11779+6	;volatile
  5696     006A                     l2080:
  5697     006A  0878               	movf	surface_exploration@taskID_u,w
  5698     006B  00A8               	movwf	surface_exploration@11779+7	;volatile
  5699     006C                     l2082:
  5700     006C  0879               	movf	surface_exploration@value_l,w
  5701     006D  00A9               	movwf	surface_exploration@11779+8	;volatile
  5702     006E                     l2084:
  5703     006E  087A               	movf	surface_exploration@value_u,w
  5704     006F  00AA               	movwf	surface_exploration@11779+9	;volatile
  5705     0070                     l2086:
  5706     0070  300A               	movlw	10
  5707     0071  00F2               	movwf	UART_send@size
  5708     0072  3000               	movlw	0
  5709     0073  00F3               	movwf	UART_send@size+1
  5710     0074  3021               	movlw	(low (surface_exploration@11779| 0))& (0+255)
  5711     0075  318F  277F  3180   	fcall	_UART_send
  5712     0078  3A00               	xorlw	0
  5713     0079  1903               	skipnz
  5714     007A  287C               	goto	u1711
  5715     007B  287D               	goto	u1710
  5716     007C                     u1711:
  5717     007C  284E               	goto	l2064
  5718     007D                     u1710:
  5719     007D                     l227:
  5720     007D  0008               	return
  5721     007E                     __end_of_surface_exploration:
  5722                           
  5723                           	psect	text22
  5724     0FA8                     __ptext22:	
  5725 ;; *************** function _set_laser *****************
  5726 ;; Defined at:
  5727 ;;		line 220 in file "./Commands.h"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  en              1    wreg     unsigned char 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  en              1    0[BANK0 ] unsigned char 
  5732 ;;  11752           7    1[BANK0 ] volatile unsigned char [
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;Total ram usage:        9 bytes
  5747 ;; Hardware stack levels used: 1
  5748 ;; Hardware stack levels required when called: 2
  5749 ;; This function calls:
  5750 ;;		_UART_send
  5751 ;; This function is called by:
  5752 ;;		_IR_zone
  5753 ;;		_shield_code
  5754 ;;		_main
  5755 ;; This function uses a non-reentrant model
  5756 ;;
  5757                           
  5758     0FA8                     _set_laser:	
  5759                           ;psect for function _set_laser
  5760                           
  5761                           
  5762                           ;incstack = 0
  5763                           ; Regs used in _set_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5764                           ;set_laser@en stored from wreg
  5765     0FA8  0020               	movlb	0	; select bank0
  5766     0FA9  00A0               	movwf	set_laser@en
  5767     0FAA                     l2036:
  5768     0FAA                     l2038:	
  5769                           ;./Commands.h: 220:     int size=size_lower;;./Commands.h: 221:     size += size_upper <
      +                          < 8;;./Commands.h: 222:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x8
      +                          1, 0x09, size_lower, size_upper}, 6)){}
  5770                           
  5771     0FAA  30B8               	movlw	low set_laser@F11751
  5772     0FAB  0086               	movwf	6
  5773     0FAC  3000               	movlw	high set_laser@F11751
  5774     0FAD  0087               	movwf	7
  5775     0FAE  3021               	movlw	low set_laser@11752
  5776     0FAF  0084               	movwf	4
  5777     0FB0  3000               	movlw	high set_laser@11752
  5778     0FB1  0085               	movwf	5
  5779     0FB2  3007               	movlw	7
  5780     0FB3  00F8               	movwf	??_set_laser
  5781     0FB4                     u1660:
  5782     0FB4  0016               	moviw fsr1++
  5783     0FB5  001A               	movwi fsr0++
  5784     0FB6  0BF8               	decfsz	??_set_laser,f
  5785     0FB7  2FB4               	goto	u1660
  5786     0FB8                     l2040:
  5787     0FB8  30FE               	movlw	254
  5788     0FB9  0020               	movlb	0	; select bank0
  5789     0FBA  00A1               	movwf	set_laser@11752	;volatile
  5790     0FBB                     l2042:
  5791     0FBB  3019               	movlw	25
  5792     0FBC  00A2               	movwf	set_laser@11752+1	;volatile
  5793     0FBD                     l2044:
  5794     0FBD  3001               	movlw	1
  5795     0FBE  00A3               	movwf	set_laser@11752+2	;volatile
  5796     0FBF                     l2046:
  5797     0FBF  3008               	movlw	8
  5798     0FC0  00A4               	movwf	set_laser@11752+3	;volatile
  5799     0FC1                     l2048:
  5800     0FC1  3001               	movlw	1
  5801     0FC2  00A5               	movwf	set_laser@11752+4	;volatile
  5802     0FC3                     l2050:
  5803     0FC3  01A6               	clrf	set_laser@11752+5	;volatile
  5804     0FC4                     l2052:
  5805     0FC4  0820               	movf	set_laser@en,w
  5806     0FC5  00A7               	movwf	set_laser@11752+6	;volatile
  5807     0FC6                     l2054:
  5808     0FC6  3007               	movlw	7
  5809     0FC7  00F2               	movwf	UART_send@size
  5810     0FC8  3000               	movlw	0
  5811     0FC9  00F3               	movwf	UART_send@size+1
  5812     0FCA  3021               	movlw	(low (set_laser@11752| 0))& (0+255)
  5813     0FCB  318F  277F  318F   	fcall	_UART_send
  5814     0FCE  3A00               	xorlw	0
  5815     0FCF  1903               	skipnz
  5816     0FD0  2FD2               	goto	u1671
  5817     0FD1  2FD3               	goto	u1670
  5818     0FD2                     u1671:
  5819     0FD2  2FAA               	goto	l2038
  5820     0FD3                     u1670:
  5821     0FD3                     l176:
  5822     0FD3  0008               	return
  5823     0FD4                     __end_of_set_laser:
  5824                           
  5825                           	psect	text23
  5826     0F7F                     __ptext23:	
  5827 ;; *************** function _UART_send *****************
  5828 ;; Defined at:
  5829 ;;		line 62 in file "./Commands.h"
  5830 ;; Parameters:    Size  Location     Type
  5831 ;;  message         1    wreg     PTR volatile unsigned ch
  5832 ;;		 -> ore_type@11783(7), surface_exploration@11779(10), custom_laser@11771(6), transmit_repair@11765(6), 
  5833 ;;		 -> request_repair@11762(6), transmit_shield_code@11759(6), shoot_laser@11756(7), set_laser@11752(7), 
  5834 ;;		 -> servo@11748(10), motor@11741(10), user_data_send@11729(6), PCLS_info_send@11721(6), 
  5835 ;;  size            2    2[COMMON] unsigned int 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  message         1    6[COMMON] PTR volatile unsigned ch
  5838 ;;		 -> ore_type@11783(7), surface_exploration@11779(10), custom_laser@11771(6), transmit_repair@11765(6), 
  5839 ;;		 -> request_repair@11762(6), transmit_shield_code@11759(6), shoot_laser@11756(7), set_laser@11752(7), 
  5840 ;;		 -> servo@11748(10), motor@11741(10), user_data_send@11729(6), PCLS_info_send@11721(6), 
  5841 ;;  i               1    7[COMMON] volatile unsigned char 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      unsigned char 
  5844 ;; Registers used:
  5845 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5851 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5855 ;;Total ram usage:        6 bytes
  5856 ;; Hardware stack levels used: 1
  5857 ;; Hardware stack levels required when called: 1
  5858 ;; This function calls:
  5859 ;;		_tx_wait
  5860 ;; This function is called by:
  5861 ;;		_PCLS_info_send
  5862 ;;		_user_data_send
  5863 ;;		_motor
  5864 ;;		_set_laser
  5865 ;;		_transmit_shield_code
  5866 ;;		_surface_exploration
  5867 ;;		_ore_type
  5868 ;;		_servo
  5869 ;;		_shoot_laser
  5870 ;;		_request_repair
  5871 ;;		_transmit_repair
  5872 ;;		_custom_laser
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876     0F7F                     _UART_send:	
  5877                           ;psect for function _UART_send
  5878                           
  5879                           
  5880                           ;incstack = 0
  5881                           ; Regs used in _UART_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5882                           ;UART_send@message stored from wreg
  5883     0F7F  00F6               	movwf	UART_send@message
  5884     0F80                     l1786:
  5885                           
  5886                           ;./Commands.h: 62: ;./Commands.h: 63:     BAUD1CONbits.BRG16 = 1;;./Commands.h: 64:     
      +                          SP1BRGLbits.SP1BRGL = 0x44;;./Commands.h: 66:     RC6PPS = 0x10;
  5887     0F80  01F7               	clrf	UART_send@i	;volatile
  5888     0F81  2F99               	goto	l1798
  5889     0F82                     l1788:
  5890                           
  5891                           ;./Commands.h: 67: };./Commands.h: 68: 
  5892     0F82  318E  2678  318F   	fcall	_tx_wait
  5893     0F85  3A00               	xorlw	0
  5894     0F86  1D03               	skipz
  5895     0F87  2F89               	goto	u1221
  5896     0F88  2F8A               	goto	u1220
  5897     0F89                     u1221:
  5898     0F89  2F8C               	goto	l1794
  5899     0F8A                     u1220:
  5900     0F8A                     l1790:
  5901                           
  5902                           ;./Commands.h: 69: void PCLS_info_send();./Commands.h: 70: {
  5903     0F8A  3000               	movlw	0
  5904     0F8B  2FA7               	goto	l100
  5905     0F8C                     l1794:
  5906                           
  5907                           ;./Commands.h: 72: }
  5908     0F8C  0877               	movf	UART_send@i,w
  5909     0F8D  0776               	addwf	UART_send@message,w
  5910     0F8E  00F4               	movwf	??_UART_send
  5911     0F8F  0874               	movf	??_UART_send,w
  5912     0F90  0086               	movwf	6
  5913     0F91  0187               	clrf	7
  5914     0F92  0801               	movf	1,w
  5915     0F93  0022               	movlb	2	; select bank2
  5916     0F94  009A               	movwf	26	;volatile
  5917     0F95                     l1796:
  5918                           
  5919                           ;./Commands.h: 73: 
  5920     0F95  3001               	movlw	1
  5921     0F96  00F4               	movwf	??_UART_send
  5922     0F97  0874               	movf	??_UART_send,w
  5923     0F98  07F7               	addwf	UART_send@i,f	;volatile
  5924     0F99                     l1798:
  5925     0F99  0877               	movf	UART_send@i,w	;volatile
  5926     0F9A  00F4               	movwf	??_UART_send
  5927     0F9B  01F5               	clrf	??_UART_send+1
  5928     0F9C  0873               	movf	UART_send@size+1,w
  5929     0F9D  0275               	subwf	??_UART_send+1,w
  5930     0F9E  1D03               	skipz
  5931     0F9F  2FA2               	goto	u1235
  5932     0FA0  0872               	movf	UART_send@size,w
  5933     0FA1  0274               	subwf	??_UART_send,w
  5934     0FA2                     u1235:
  5935     0FA2  1C03               	skipc
  5936     0FA3  2FA5               	goto	u1231
  5937     0FA4  2FA6               	goto	u1230
  5938     0FA5                     u1231:
  5939     0FA5  2F82               	goto	l1788
  5940     0FA6                     u1230:
  5941     0FA6                     l1800:
  5942                           
  5943                           ;./Commands.h: 75: {
  5944     0FA6  3001               	movlw	1
  5945     0FA7                     l100:
  5946     0FA7  0008               	return
  5947     0FA8                     __end_of_UART_send:
  5948                           
  5949                           	psect	text24
  5950     0E78                     __ptext24:	
  5951 ;; *************** function _tx_wait *****************
  5952 ;; Defined at:
  5953 ;;		line 36 in file "./Commands.h"
  5954 ;; Parameters:    Size  Location     Type
  5955 ;;		None
  5956 ;; Auto vars:     Size  Location     Type
  5957 ;;  count           2    0[COMMON] volatile unsigned int 
  5958 ;; Return value:  Size  Location     Type
  5959 ;;                  1    wreg      unsigned char 
  5960 ;; Registers used:
  5961 ;;		wreg, status,2, status,0
  5962 ;; Tracked objects:
  5963 ;;		On entry : 0/0
  5964 ;;		On exit  : 0/0
  5965 ;;		Unchanged: 0/0
  5966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5970 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5971 ;;Total ram usage:        2 bytes
  5972 ;; Hardware stack levels used: 1
  5973 ;; This function calls:
  5974 ;;		Nothing
  5975 ;; This function is called by:
  5976 ;;		_UART_send
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980     0E78                     _tx_wait:	
  5981                           ;psect for function _tx_wait
  5982                           
  5983     0E78                     l1750:	
  5984                           ;incstack = 0
  5985                           ; Regs used in _tx_wait: [wreg+status,2+status,0]
  5986                           
  5987                           
  5988                           ;./Commands.h: 38: ;./Commands.h: 39:     for (i=0; i < size; i++)
  5989     0E78  30E8               	movlw	232
  5990     0E79  00F0               	movwf	tx_wait@count	;volatile
  5991     0E7A  3003               	movlw	3
  5992     0E7B  00F1               	movwf	tx_wait@count+1	;volatile
  5993     0E7C                     l1752:
  5994     0E7C  0870               	movf	tx_wait@count,w	;volatile
  5995     0E7D  0471               	iorwf	tx_wait@count+1,w	;volatile
  5996     0E7E  1D03               	btfss	3,2
  5997     0E7F  2E81               	goto	u1181
  5998     0E80  2E82               	goto	u1180
  5999     0E81                     u1181:
  6000     0E81  2E83               	goto	l85
  6001     0E82                     u1180:
  6002     0E82  2E8F               	goto	l1764
  6003     0E83                     l85:
  6004                           
  6005                           ;./Commands.h: 40:     {;./Commands.h: 41:         if(!tx_wait())
  6006     0E83  002E               	movlb	14	; select bank14
  6007     0E84  1E0F               	btfss	15,4	;volatile
  6008     0E85  2E87               	goto	u1191
  6009     0E86  2E88               	goto	u1190
  6010     0E87                     u1191:
  6011     0E87  2E8A               	goto	l1760
  6012     0E88                     u1190:
  6013     0E88                     l1756:
  6014                           
  6015                           ;./Commands.h: 42:         {;./Commands.h: 43:             return 0;
  6016     0E88  3001               	movlw	1
  6017     0E89  2E90               	goto	l88
  6018     0E8A                     l1760:
  6019                           
  6020                           ;./Commands.h: 45:         TXREG = message[i];
  6021     0E8A  3001               	movlw	1
  6022     0E8B  02F0               	subwf	tx_wait@count,f	;volatile
  6023     0E8C  3000               	movlw	0
  6024     0E8D  3BF1               	subwfb	tx_wait@count+1,f	;volatile
  6025     0E8E  2E7C               	goto	l1752
  6026     0E8F                     l1764:
  6027                           
  6028                           ;./Commands.h: 46:     }
  6029     0E8F  3000               	movlw	0
  6030     0E90                     l88:
  6031     0E90  0008               	return
  6032     0E91                     __end_of_tx_wait:
  6033                           
  6034                           	psect	text25
  6035     0F18                     __ptext25:	
  6036 ;; *************** function ___wmul *****************
  6037 ;; Defined at:
  6038 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6041 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  product         2    4[BANK0 ] unsigned int 
  6044 ;; Return value:  Size  Location     Type
  6045 ;;                  2    0[BANK0 ] unsigned int 
  6046 ;; Registers used:
  6047 ;;		wreg, status,2, status,0
  6048 ;; Tracked objects:
  6049 ;;		On entry : 0/0
  6050 ;;		On exit  : 0/0
  6051 ;;		Unchanged: 0/0
  6052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6053 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6054 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6056 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6057 ;;Total ram usage:        6 bytes
  6058 ;; Hardware stack levels used: 1
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_Vdrive
  6063 ;;		_drive
  6064 ;;		_IR_zone
  6065 ;; This function uses a non-reentrant model
  6066 ;;
  6067                           
  6068     0F18                     ___wmul:	
  6069                           ;psect for function ___wmul
  6070                           
  6071     0F18                     l1964:	
  6072                           ;incstack = 0
  6073                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6074                           
  6075     0F18  0020               	movlb	0	; select bank0
  6076     0F19  01A4               	clrf	___wmul@product
  6077     0F1A  01A5               	clrf	___wmul@product+1
  6078     0F1B                     l1966:
  6079     0F1B  1C20               	btfss	___wmul@multiplier,0
  6080     0F1C  2F1E               	goto	u1501
  6081     0F1D  2F1F               	goto	u1500
  6082     0F1E                     u1501:
  6083     0F1E  2F23               	goto	l535
  6084     0F1F                     u1500:
  6085     0F1F                     l1968:
  6086     0F1F  0822               	movf	___wmul@multiplicand,w
  6087     0F20  07A4               	addwf	___wmul@product,f
  6088     0F21  0823               	movf	___wmul@multiplicand+1,w
  6089     0F22  3DA5               	addwfc	___wmul@product+1,f
  6090     0F23                     l535:
  6091     0F23  3001               	movlw	1
  6092     0F24                     u1515:
  6093     0F24  35A2               	lslf	___wmul@multiplicand,f
  6094     0F25  0DA3               	rlf	___wmul@multiplicand+1,f
  6095     0F26  0B89               	decfsz	9,f
  6096     0F27  2F24               	goto	u1515
  6097     0F28                     l1970:
  6098     0F28  3001               	movlw	1
  6099     0F29                     u1525:
  6100     0F29  36A1               	lsrf	___wmul@multiplier+1,f
  6101     0F2A  0CA0               	rrf	___wmul@multiplier,f
  6102     0F2B  0B89               	decfsz	9,f
  6103     0F2C  2F29               	goto	u1525
  6104     0F2D                     l1972:
  6105     0F2D  0820               	movf	___wmul@multiplier,w
  6106     0F2E  0421               	iorwf	___wmul@multiplier+1,w
  6107     0F2F  1D03               	btfss	3,2
  6108     0F30  2F32               	goto	u1531
  6109     0F31  2F33               	goto	u1530
  6110     0F32                     u1531:
  6111     0F32  2F1B               	goto	l1966
  6112     0F33                     u1530:
  6113     0F33                     l1974:
  6114     0F33  0825               	movf	___wmul@product+1,w
  6115     0F34  00A1               	movwf	?___wmul+1
  6116     0F35  0824               	movf	___wmul@product,w
  6117     0F36  00A0               	movwf	?___wmul
  6118     0F37                     l537:
  6119     0F37  0008               	return
  6120     0F38                     __end_of___wmul:
  6121                           
  6122                           	psect	text26
  6123     0E30                     __ptext26:	
  6124 ;; *************** function _IR_init *****************
  6125 ;; Defined at:
  6126 ;;		line 12 in file "./IR.h"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;		None
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0, pclath, cstack
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6144 ;;Total ram usage:        0 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 1
  6147 ;; This function calls:
  6148 ;;		_read_adc
  6149 ;; This function is called by:
  6150 ;;		_main
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154     0E30                     _IR_init:	
  6155                           ;psect for function _IR_init
  6156                           
  6157     0E30                     l2268:	
  6158                           ;incstack = 0
  6159                           ; Regs used in _IR_init: [wreg+status,2+status,0+pclath+cstack]
  6160                           
  6161                           
  6162                           ;./IR.h: 14:     TRISAbits.TRISA1 = 0;
  6163     0E30  300C               	movlw	12
  6164     0E31  318F  2758  318E   	fcall	_read_adc
  6165     0E34  0870               	movf	?_read_adc,w
  6166     0E35  3EC0               	addlw	192
  6167     0E36  0021               	movlb	1	; select bank1
  6168     0E37  00E8               	movwf	_IR_base^(0+128)	;volatile
  6169     0E38  30FF               	movlw	255
  6170     0E39  3D71               	addwfc	?_read_adc+1,w
  6171     0E3A  00E9               	movwf	(_IR_base+1)^(0+128)	;volatile
  6172     0E3B                     l322:
  6173     0E3B  0008               	return
  6174     0E3C                     __end_of_IR_init:
  6175                           
  6176                           	psect	text27
  6177     001C                     __ptext27:	
  6178 ;; *************** function _IR *****************
  6179 ;; Defined at:
  6180 ;;		line 17 in file "./IR.h"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;  ADC_val         2   10[COMMON] volatile unsigned int 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      void 
  6187 ;; Registers used:
  6188 ;;		wreg, pclath, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6197 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6198 ;;Total ram usage:        4 bytes
  6199 ;; Hardware stack levels used: 1
  6200 ;; Hardware stack levels required when called: 1
  6201 ;; This function calls:
  6202 ;;		_read_adc
  6203 ;; This function is called by:
  6204 ;;		_main
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208     001C                     _IR:	
  6209                           ;psect for function _IR
  6210                           
  6211     001C                     l2270:	
  6212                           ;incstack = 0
  6213                           ; Regs used in _IR: [wreg+pclath+cstack]
  6214                           
  6215                           
  6216                           ;./IR.h: 19:     if (ADC_val > IR_base);./IR.h: 21:         LATAbits.LATA1 = 1;
  6217     001C  0020               	movlb	0	; select bank0
  6218     001D  1011               	bcf	17,0	;volatile
  6219                           
  6220                           ;./IR.h: 22:         LATAbits.LATA1 = 1;
  6221     001E  1091               	bcf	17,1	;volatile
  6222                           
  6223                           ;./IR.h: 23:         LATAbits.LATA2 = 1;
  6224     001F  1111               	bcf	17,2	;volatile
  6225                           
  6226                           ;./IR.h: 24:         LATAbits.LATA3 = 1;
  6227     0020  1191               	bcf	17,3	;volatile
  6228     0021                     l2272:
  6229                           
  6230                           ;./IR.h: 26:     else
  6231     0021  300C               	movlw	12
  6232     0022  318F  2758  3180   	fcall	_read_adc
  6233     0025  0871               	movf	?_read_adc+1,w
  6234     0026  00FB               	movwf	IR@ADC_val+1	;volatile
  6235     0027  0870               	movf	?_read_adc,w
  6236     0028  00FA               	movwf	IR@ADC_val	;volatile
  6237     0029                     l2274:
  6238                           
  6239                           ;./IR.h: 27:     {
  6240     0029  087B               	movf	IR@ADC_val+1,w	;volatile
  6241     002A  0021               	movlb	1	; select bank1
  6242     002B  0269               	subwf	(_IR_base+1)^(0+128),w	;volatile
  6243     002C  1D03               	skipz
  6244     002D  2830               	goto	u2015
  6245     002E  087A               	movf	IR@ADC_val,w	;volatile
  6246     002F  0268               	subwf	_IR_base^(0+128),w	;volatile
  6247     0030                     u2015:
  6248     0030  1803               	skipnc
  6249     0031  2833               	goto	u2011
  6250     0032  2834               	goto	u2010
  6251     0033                     u2011:
  6252     0033  283A               	goto	l325
  6253     0034                     u2010:
  6254     0034                     l2276:
  6255                           
  6256                           ;./IR.h: 28:         LATAbits.LATA0 = 0;;./IR.h: 29:         LATAbits.LATA1 = 0;
  6257     0034  0020               	movlb	0	; select bank0
  6258     0035  1496               	bsf	22,1	;volatile
  6259                           
  6260                           ;./IR.h: 30:         LATAbits.LATA2 = 0;
  6261     0036  1496               	bsf	22,1	;volatile
  6262                           
  6263                           ;./IR.h: 31:         LATAbits.LATA3 = 0;
  6264     0037  1516               	bsf	22,2	;volatile
  6265                           
  6266                           ;./IR.h: 32:         _delay((unsigned long)((3000)*(400000/4000.0)));
  6267     0038  1596               	bsf	22,3	;volatile
  6268                           
  6269                           ;./IR.h: 33:     }
  6270     0039  284B               	goto	l327
  6271     003A                     l325:	
  6272                           ;./IR.h: 34: }
  6273                           
  6274                           
  6275                           ;./IR.h: 35: void IR_zone(){;./IR.h: 36:     user_data();
  6276     003A  0020               	movlb	0	; select bank0
  6277     003B  1016               	bcf	22,0	;volatile
  6278                           
  6279                           ;./IR.h: 37:     volatile unsigned char zone = 100/6;
  6280     003C  1096               	bcf	22,1	;volatile
  6281                           
  6282                           ;./IR.h: 38:     volatile unsigned char i;
  6283     003D  1116               	bcf	22,2	;volatile
  6284                           
  6285                           ;./IR.h: 39:     for(i=1;i<7;i++){
  6286     003E  1196               	bcf	22,3	;volatile
  6287     003F                     l2278:
  6288                           
  6289                           ;./IR.h: 40:         if(potA< zone*i){
  6290     003F  3002               	movlw	2
  6291     0040  00F9               	movwf	??_IR+1
  6292     0041  3086               	movlw	134
  6293     0042  00F8               	movwf	??_IR
  6294     0043  3099               	movlw	153
  6295     0044                     u2497:
  6296     0044  0B89               	decfsz	9,f
  6297     0045  2844               	goto	u2497
  6298     0046  0BF8               	decfsz	??_IR,f
  6299     0047  2844               	goto	u2497
  6300     0048  0BF9               	decfsz	??_IR+1,f
  6301     0049  2844               	goto	u2497
  6302     004A  0000               	nop
  6303     004B                     l327:
  6304     004B  0008               	return
  6305     004C                     __end_of_IR:
  6306                           
  6307                           	psect	text28
  6308     0F58                     __ptext28:	
  6309 ;; *************** function _read_adc *****************
  6310 ;; Defined at:
  6311 ;;		line 33 in file "./Line Follower.h"
  6312 ;; Parameters:    Size  Location     Type
  6313 ;;  sensor          1    wreg     unsigned char 
  6314 ;; Auto vars:     Size  Location     Type
  6315 ;;  sensor          1    5[COMMON] unsigned char 
  6316 ;;  ADC_val         2    6[COMMON] volatile unsigned int 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  2    0[COMMON] int 
  6319 ;; Registers used:
  6320 ;;		wreg
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6327 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6328 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6329 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6330 ;;Total ram usage:        8 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; This function calls:
  6333 ;;		Nothing
  6334 ;; This function is called by:
  6335 ;;		_line_follower
  6336 ;;		_IR_init
  6337 ;;		_IR
  6338 ;;		_main
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342     0F58                     _read_adc:	
  6343                           ;psect for function _read_adc
  6344                           
  6345                           
  6346                           ;incstack = 0
  6347                           ; Regs used in _read_adc: [wreg]
  6348                           ;read_adc@sensor stored from wreg
  6349     0F58  00F5               	movwf	read_adc@sensor
  6350     0F59                     l2124:
  6351                           
  6352                           ;./Line Follower.h: 33:  while(ADCON0bits.ADGO){};./Line Follower.h: 34:     ADC_val = A
      +                          DRESH << 8;;./Line Follower.h: 35:     ADC_val += ADRESL;;./Line Follower.h: 37: }
  6353     0F59  0875               	movf	read_adc@sensor,w
  6354     0F5A  0021               	movlb	1	; select bank1
  6355     0F5B  009E               	movwf	30	;volatile
  6356     0F5C                     l2126:
  6357                           
  6358                           ;./Line Follower.h: 38: 
  6359     0F5C  1413               	bsf	19,0	;volatile
  6360                           
  6361                           ;./Line Follower.h: 39: void line_follower()
  6362     0F5D  300D               	movlw	13
  6363     0F5E  00F2               	movwf	??_read_adc
  6364     0F5F  30FC               	movlw	252
  6365     0F60                     u2507:
  6366     0F60  0B89               	decfsz	9,f
  6367     0F61  2F60               	goto	u2507
  6368     0F62  0BF2               	decfsz	??_read_adc,f
  6369     0F63  2F60               	goto	u2507
  6370     0F64                     l289:	
  6371                           ;./Line Follower.h: 41:     volatile unsigned int l_val, m_val, r_val;
  6372                           
  6373     0F64  0021               	movlb	1	; select bank1
  6374     0F65  1813               	btfsc	19,0	;volatile
  6375     0F66  2F68               	goto	u1821
  6376     0F67  2F69               	goto	u1820
  6377     0F68                     u1821:
  6378     0F68  2F64               	goto	l289
  6379     0F69                     u1820:
  6380     0F69                     l2128:
  6381                           
  6382                           ;./Line Follower.h: 42: 
  6383     0F69  080D               	movf	13,w	;volatile
  6384     0F6A  00F2               	movwf	??_read_adc
  6385     0F6B  01F3               	clrf	??_read_adc+1
  6386     0F6C  0872               	movf	??_read_adc,w
  6387     0F6D  00F3               	movwf	??_read_adc+1
  6388     0F6E  01F2               	clrf	??_read_adc
  6389     0F6F  0872               	movf	??_read_adc,w
  6390     0F70  00F6               	movwf	read_adc@ADC_val	;volatile
  6391     0F71  0873               	movf	??_read_adc+1,w
  6392     0F72  00F7               	movwf	read_adc@ADC_val+1	;volatile
  6393                           
  6394                           ;./Line Follower.h: 43:     TRISAbits.TRISA0 = 0;
  6395     0F73  080C               	movf	12,w	;volatile
  6396     0F74  00F2               	movwf	??_read_adc
  6397     0F75  01F3               	clrf	??_read_adc+1
  6398     0F76  0872               	movf	??_read_adc,w
  6399     0F77  07F6               	addwf	read_adc@ADC_val,f	;volatile
  6400     0F78  0873               	movf	??_read_adc+1,w
  6401     0F79  3DF7               	addwfc	read_adc@ADC_val+1,f	;volatile
  6402                           
  6403                           ;./Line Follower.h: 44:     TRISAbits.TRISA1 = 0;
  6404     0F7A  0877               	movf	read_adc@ADC_val+1,w	;volatile
  6405     0F7B  00F1               	movwf	?_read_adc+1
  6406     0F7C  0876               	movf	read_adc@ADC_val,w	;volatile
  6407     0F7D  00F0               	movwf	?_read_adc
  6408     0F7E                     l292:
  6409     0F7E  0008               	return
  6410     0F7F                     __end_of_read_adc:
  6411                           
  6412                           	psect	text29
  6413     0E48                     __ptext29:	
  6414 ;; *************** function _ADC_init *****************
  6415 ;; Defined at:
  6416 ;;		line 19 in file "./Line Follower.h"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;                  1    wreg      void 
  6423 ;; Registers used:
  6424 ;;		wreg, status,2
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;Total ram usage:        0 bytes
  6435 ;; Hardware stack levels used: 1
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_main
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443     0E48                     _ADC_init:	
  6444                           ;psect for function _ADC_init
  6445                           
  6446     0E48                     l2196:	
  6447                           ;incstack = 0
  6448                           ; Regs used in _ADC_init: [wreg+status,2]
  6449                           
  6450                           
  6451                           ;./Line Follower.h: 21: 
  6452     0E48  0020               	movlb	0	; select bank0
  6453     0E49  1091               	bcf	17,1	;volatile
  6454                           
  6455                           ;./Line Follower.h: 22:     ADPCH = 0b1011;
  6456     0E4A  003E               	movlb	30	; select bank30
  6457     0E4B  1438               	bsf	56,0	;volatile
  6458     0E4C                     l2198:
  6459                           
  6460                           ;./Line Follower.h: 24: 
  6461     0E4C  3091               	movlw	145
  6462     0E4D  0021               	movlb	1	; select bank1
  6463     0E4E  0093               	movwf	19	;volatile
  6464                           
  6465                           ;./Line Follower.h: 25: int read_adc(char sensor)
  6466     0E4F  30FF               	movlw	255
  6467     0E50  0098               	movwf	24	;volatile
  6468     0E51                     l2200:
  6469                           
  6470                           ;./Line Follower.h: 26: {
  6471     0E51  019A               	clrf	26	;volatile
  6472     0E52                     l2202:
  6473                           
  6474                           ;./Line Follower.h: 27:  volatile unsigned int ADC_val;
  6475     0E52  019C               	clrf	28	;volatile
  6476                           
  6477                           ;./Line Follower.h: 28: 
  6478     0E53  303F               	movlw	63
  6479     0E54  009D               	movwf	29	;volatile
  6480                           
  6481                           ;./Line Follower.h: 30:  ADCON0bits.ADGO = 1;
  6482     0E55  300B               	movlw	11
  6483     0E56  009E               	movwf	30	;volatile
  6484     0E57                     l286:
  6485     0E57  0008               	return
  6486     0E58                     __end_of_ADC_init:
  6487     007E                     btemp	set	126	;btemp
  6488     007E                     wtemp0	set	126
  6489                           
  6490                           	psect	config
  6491                           
  6492                           ;Config register CONFIG1 @ 0x8007
  6493                           ;	External Oscillator mode selection bits
  6494                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  6495                           ;	Power-up default value for COSC bits
  6496                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  6497                           ;	Clock Out Enable bit
  6498                           ;	CLKOUTEN = ON, CLKOUT function is enabled; FOSC/4 clock appears at OSC2
  6499                           ;	Clock Switch Enable bit
  6500                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6501                           ;	Fail-Safe Clock Monitor Enable bit
  6502                           ;	FCMEN = ON, FSCM timer enabled
  6503     8007                     	org	32775
  6504     8007  3E8F               	dw	16015
  6505                           
  6506                           ;Config register CONFIG3 @ 0x8009
  6507                           ;	WDT Period Select bits
  6508                           ;	WDTCPS = 0x1F, unprogrammed default
  6509                           ;	WDT operating mode
  6510                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  6511                           ;	WDT Window Select bits
  6512                           ;	WDTCWS = 0x7, unprogrammed default
  6513                           ;	WDT input clock selector
  6514                           ;	WDTCCS = 0x7, unprogrammed default
  6515     8009                     	org	32777
  6516     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         88
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     38      80
    BANK1            80      0      74
    BANK2            80      0      20
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send@message	PTR volatile unsigned char  size(1) Largest target is 10
		 -> ore_type@11783(BANK0[7]), surface_exploration@11779(BANK0[10]), custom_laser@11771(COMMON[6]), transmit_repair@11765(COMMON[6]), 
		 -> request_repair@11762(COMMON[6]), transmit_shield_code@11759(BANK0[6]), shoot_laser@11756(COMMON[7]), set_laser@11752(BANK0[7]), 
		 -> servo@11748(COMMON[10]), motor@11741(BANK0[10]), user_data_send@11729(BANK0[6]), PCLS_info_send@11721(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_line_follower
    _main->_shield_code
    _shield_code->_user_data
    _transmit_shield_code->_UART_send
    _PCLS_info->_PCLS_info_send
    _PCLS_info_send->_UART_send
    _PCLS_info_receive->_rx_wait
    _servos->_user_data
    _ore_type->_UART_send
    _line_follower->_motor
    _Vdrive->___awdiv
    _motor->_UART_send
    ___awdiv->_abs
    _user_data->_user_data_receive
    _user_data_send->_UART_send
    _user_data_receive->___lwdiv
    _surface_exploration->_UART_send
    _set_laser->_UART_send
    _UART_send->_tx_wait
    ___wmul->___awdiv
    _IR_init->_read_adc
    _IR->_read_adc

Critical Paths under _main in BANK0

    _main->_drive
    _PCLS_info->_PCLS_info_receive
    _line_follower->_motor
    _Vdrive->_motor
    _user_data->_user_data_receive

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   38590
                                             36 BANK0      2     2      0
                           _ADC_init
                                 _IR
                            _IR_init
                            _IR_zone
                          _UART_init
                              _drive
                      _line_follower
                           _ore_type
                           _read_adc
                             _servos
                          _set_laser
                        _shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _shield_code                                          2     2      0    8425
                                             12 COMMON     2     2      0
                          _PCLS_info
                          _set_laser
               _transmit_shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (2) _transmit_shield_code                                 7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _PCLS_info                                            0     0      0    1854
                  _PCLS_info_receive
                     _PCLS_info_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_receive                                   17    17      0     277
                                              2 COMMON     3     3      0
                                              0 BANK0     14    14      0
                            _rx_wait
 ---------------------------------------------------------------------------------
 (1) _servos                                               4     4      0    3300
                                             28 BANK0      4     4      0
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _ore_type                                             9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (1) _line_follower                                        8     8      0    3041
                                             12 COMMON     2     2      0
                                             11 BANK0      6     6      0
                                _abs
                              _motor
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _drive                                                8     8      0    9008
                                             28 BANK0      8     8      0
                             _Vdrive
                             ___wmul
                          _user_data
 ---------------------------------------------------------------------------------
 (2) _Vdrive                                              12     8      4    4988
                                             11 BANK0     12     8      4
                            ___awdiv
                             ___wmul
                                _abs
                              _motor
 ---------------------------------------------------------------------------------
 (2) _motor                                               15    12      3    2338
                                              8 COMMON     4     1      3
                                              0 BANK0     11    11      0
                          _UART_send
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     522
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              4 COMMON     9     5      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_zone                                              6     6      0    7917
                                             28 BANK0      6     6      0
                             ___wmul
                          _set_laser
                _surface_exploration
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _user_data                                            1     1      0    3250
                                             11 COMMON     1     1      0
                  _user_data_receive
                     _user_data_send
 ---------------------------------------------------------------------------------
 (2) _user_data_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _user_data_receive                                   31    31      0    1673
                                              8 COMMON     3     3      0
                                              0 BANK0     28    28      0
                            ___lwdiv
                            _rx_wait
 ---------------------------------------------------------------------------------
 (3) _rx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1074
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _surface_exploration                                 15    12      3    2110
                                              8 COMMON     4     1      3
                                              0 BANK0     11    11      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _set_laser                                            9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (3) _UART_send                                            6     4      2    1553
                                              2 COMMON     6     4      2
                            _tx_wait
 ---------------------------------------------------------------------------------
 (4) _tx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     700
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _IR_init                                              0     0      0      46
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _IR                                                   4     4      0      69
                                              8 COMMON     4     4      0
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             8     6      2      46
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _IR
     _read_adc
   _IR_init
     _read_adc
   _IR_zone
     ___wmul
       ___awdiv (ARG)
         _abs (ARG)
       _abs (ARG)
     _set_laser
       _UART_send
         _tx_wait
     _surface_exploration
       _UART_send
     _user_data
       _user_data_receive
         ___lwdiv
         _rx_wait
       _user_data_send
         _UART_send
   _UART_init
   _drive
     _Vdrive
       ___awdiv
       ___wmul
       _abs
       _motor
         _UART_send
         _abs (ARG)
     ___wmul
     _user_data
   _line_follower
     _abs
     _motor
     _read_adc
   _ore_type
     _UART_send
   _read_adc
   _servos
     _user_data
   _set_laser
   _shield_code
     _PCLS_info
       _PCLS_info_receive
         _rx_wait
       _PCLS_info_send
         _UART_send
     _set_laser
     _transmit_shield_code
       _UART_send
     _user_data
   _user_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     26      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      14       9       25.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      BC      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      BC      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Apr 08 18:10:40 2024

                          l91 0E9C                            l85 0E83                            l94 0EA9  
                          l88 0E90                            _IR 001C                  ___awdiv@sign 007A  
         ___wmul@multiplicand 0022     __end_of_user_data_receive 07CD                           ?_IR 0070  
                         l100 0FA7                           l104 0E67                           l112 0EFB  
                         l141 07CC                           l301 040C                           l134 0EDF  
                         l126 0E47                           l311 048D                           l119 016B  
                         l144 0763                           l152 001B                           l160 00AF  
                         l305 0436                           l322 0E3B                           l314 04C8  
                         l306 0450                           l227 007D                           l315 04DA  
                         l235 0FFF                           l252 0634                           l308 046B  
                         l325 003A                           l333 02EA                           l317 050C  
                         l238 053D                           l327 004B                           l351 01FC  
                         l176 0FD3                           l192 0F17                           l249 0606  
                         l257 0129                           l353 020F                           l346 01E2  
                         l338 01B8                           l355 0210                           l347 01DD  
                         l292 0F7E                           l286 0E57                           l535 0F23  
                         l295 03EE                           l289 0F64                           l537 0F37  
                         l298 03FD                           l815 00EB                           l688 026F  
                         l995 0EC3                           l998 0EC3                           _abs 0EAA  
                         _swA 0050                           _swB 004E                           _swC 004C  
                         _swD 004A                           wreg 0009                          ??_IR 0078  
                _BAUD1CONbits 011F                          l2000 023A                          l2010 0256  
                        l2002 023E                          ?_abs 0070                          l2012 025B  
                        l2004 0242                          l2100 0570                          l2006 0251  
                        l2014 0261                          l2110 05CC                          l2102 057D  
                        l2022 0E3C                          l2200 0E51                          l2040 0FB8  
                        l2032 000C                          l2016 0266                          l2008 0255  
                        l2120 0617                          l2112 05F1                          l2104 058B  
                        l2202 0E52                          l2050 0FC3                          l2042 0FBB  
                        l2034 0014                          l2018 026B                          l2122 061A  
                        l2114 05FF                          l2106 05B0                          l2210 0401  
                        l2026 0E3F                          l2124 0F59                          l2052 0FC4  
                        l2044 0FBD                          l2036 0FAA                          l2028 0009  
                        l2300 02C6                          l2132 0E58                          l2116 0603  
                        l2108 05BE                          l2220 042B                          l2212 040A  
                        l2204 03E7                          l2060 0F0A                          l2126 0F5C  
                        l2054 0FC6                          l2046 0FBF                          l2038 0FAA  
                        l2070 0061                          l2062 004E                          l2302 02D7  
                        l2134 0E62                          l2118 0613                          l2230 044E  
                        l2222 042D                          l2214 0410                          l2206 03F2  
                        l2310 016C                          l2128 0F69                          l2048 0FC1  
                        l2080 006A                          l2072 0063                          l2064 004E  
                        l2240 046C                          l2232 0451                          l2224 0435  
                        l2216 0419                          l2208 03FB                          l2056 0EFC  
                        l2320 0181                          l2312 016F                          l2082 006C  
                        l2074 0065                          l2066 005C                          l2306 02E5  
                        l2090 051B                          l2250 04AE                          l2242 0479  
                        l2234 045B                          l2226 0440                          l2218 0423  
                        l2170 0FE9                          l2162 0FD6                          l2058 0EFC  
                        l2330 01A9                          l2322 0185                          l2314 0172  
                        l2084 006E                          l2076 0067                          l2068 005F  
                        l2092 0529                          l2260 04E8                          l2252 04B4  
                        l2244 0481                          l2236 0465                          l2228 0444  
                        l2180 0FF2                          l2172 0FEB                          l2164 0FD6  
                        l2340 01CC                          l2332 01B4                          l2324 0190  
                        l2316 0177                          l2270 001C                          l2086 0070  
                        l2078 0068                          l2094 0542                          l2190 0102  
                        l2182 00EC                          l2262 04ED                          l2254 04BA  
                        l2246 049A                          l2238 0469                          l2174 0FED  
                        l2166 0FE4                          l2350 01DE                          l2342 01CE  
                        l2334 01B9                          l2326 019F                          l2318 017A  
                        l2430 02F7                          l2272 0021                          l1800 0FA6  
                        l2280 0270                          l2096 054F                          l2088 050D  
                        l2192 010E                          l2184 00EF                          l2264 0508  
                        l2256 04C0                          l2248 04A2                          l2176 0FEF  
                        l2168 0FE7                          l2352 01EB                          l2344 01D1  
                        l2336 01BF                          l2328 01A2                          l2440 031D  
                        l2432 02FE                          l2424 02EB                          l2274 0029  
                        l1810 00BB                          l2290 027F                          l2282 0273  
                        l2098 0563                          l2194 011E                          l2186 00F9  
                        l2266 050A                          l2258 04D5                          l2178 0FF0  
                        l2362 01FD                          l2354 01ED                          l2346 01DA  
                        l2338 01C2                          l2450 0341                          l2442 0323  
                        l2434 030A                          l2426 02F1                          l2196 0E48  
                        l2276 0034                          l2268 0E30                          l1820 00DB  
                        l1812 00C0                          l1804 00B0                          l1900 06F7  
                        l2292 029B                          l2284 0276                          l2188 00FE  
                        l2364 0201                          l2356 01F0                          l2460 0374  
                        l2452 0352                          l2444 032A                          l2436 0310  
                        l2428 02F4                          l2198 0E4C                          l2278 003F  
                        l1750 0E78                          l1822 00DC                          l1814 00C4  
                        l1806 00B2                          l1910 0734                          l1902 0701  
                        l2294 029F                          l2286 0278                          l2366 0207  
                        l2358 01F9                          l1830 0EE0                          l2470 0395  
                        l2462 0378                          l2454 0356                          l2446 0330  
                        l2438 0317                          l1760 0E8A                          l1752 0E7C  
                        l1824 00E1                          l1816 00C8                          l1808 00B8  
                        l1920 075A                          l1912 073B                          l1904 0712  
                        l2296 02AC                          l2368 020D                          l1840 012F  
                        l1832 0EE0                          l2480 03AC                          l2472 0399  
                        l2464 0385                          l2448 0334                          l2456 0368  
                        l1818 00D7                          l1826 00E7                          l1770 0E95  
                        l1930 07B9                          l1922 075F                          l1914 0745  
                        l1906 0719                          l2298 02BD                          l1842 0137  
                        l1850 0147                          l1834 0EEE                          l2490 03CB  
                        l2482 03B0                          l2474 039C                          l2458 036E  
                        l2466 0388                          l1756 0E88                          l1764 0E8F  
                        l1924 0796                          l1916 074E                          l1908 0723  
                        l1860 0ED2                          l1940 0091                          l1852 014D  
                        l1844 0140                          l1836 012A                          l2484 03BE  
                        l2476 039F                          l2468 038F                          l1790 0F8A  
                        l1774 0EA1                          l1782 0EA8                          l1926 07A8  
                        l1918 0751                          l1870 064B                          l1862 0635  
                        l1950 009A                          l1942 0093                          l1934 0080  
                        l1838 012D                          l2486 03C1                          l2478 03A6  
                        l2494 03CF                          l1768 0E91                          l1928 07AF  
                        l1880 066D                          l1864 0638                          l1856 0EC4  
                        l1960 0EAA                          l1952 009C                          l1944 0095  
                        l1936 0080                          l1848 0142                          l2488 03C4  
                        l2496 03D6                          l1970 0F28                          l1794 0F8C  
                        l1786 0F80                          l1778 0EA3                          l1890 06A9  
                        l1882 067D                          l1874 064D                          l1866 063A  
                        l1858 0EC4                          l1962 0EB7                          l1954 009E  
                        l1946 0097                          l1938 008E                          l2498 03DE  
                        l1972 0F2D                          l1964 0F18                          l1796 0F95  
                        l1788 0F82                          l1892 06B3                          l1884 0684  
                        l1868 0642                          l1876 0652                          l1980 0212  
                        l1956 00A0                          l1948 0099                          l1974 0F33  
                        l1966 0F1B                          l1798 0F99                          l1894 06B7  
                        l1886 068E                          l1878 0658                          l1990 0226  
                        l1982 0216                          l1958 00A2                          l1968 0F1F  
                        l1896 06DF                          l1888 06A2                          l1992 022A  
                        l1984 021B                          l1898 06EF                          l1994 022C  
                        l1986 021D                          l1978 0211                          l1996 0232  
                        l1988 0221                          l1998 0235                          u1200 0E9B  
                        u2000 04E8                          u1201 0E9A                          u2001 04E7  
                        u2010 0034                          u1210 0EA1                          u2011 0033  
                        u1211 0EA0                          u1220 0F8A                          u1300 00E7  
                        u2020 027E                          u2100 0207                          u1221 0F89  
                        u1301 00E6                          u2021 027D                          u2005 04E4  
                        u2101 0206                          u1230 0FA6                          u2030 029B  
                        u2110 020D                          u1310 0EEA                          u2015 0030  
                        u1231 0FA5                          u2031 029A                          u2111 020C  
                        u1240 00B8                          u1400 070C                          u1320 0EFB  
                        u2040 0177                          u1241 00B7                          u1321 0EFA  
                        u2041 0176                          u1410 072D                          u1330 0137  
                        u2050 0181                          u2210 02FE                          u1235 0FA2  
                        u1411 072B                          u2035 0297                          u1331 0136  
                        u2051 0180                          u2211 02FD                          u1500 0F1F  
                        u1180 0E82                          u1260 00C8                          u1420 072E  
                        u2060 01CC                          u1340 014D                          u2300 03A6  
                        u2220 0317                          u1501 0F1E                          u1181 0E81  
                        u1261 00C7                          u2061 01CB                          u1341 014C  
                        u2301 03A5                          u2221 0316                          u1190 0E88  
                        u1430 074E                          u1350 0ECE                          u2070 01DA  
                        u2310 03AC                          u2230 031D                          u1191 0E87  
                        u1255 00BC                          u1431 074D                          u2071 01D9  
                        u2311 03AB                          u2231 031C                          u1280 00D7  
                        u1440 075A                          u1360 0EDF                          u1600 0251  
                        u2080 01EB                          u2320 03CB                          u2240 032A  
                        u1281 00D6                          u1441 0759                          u1361 0EDE  
                        u1601 0250                          u2081 01EA                          u2321 03CA  
                        u2241 0329                          u1530 0F33                          u1450 077E  
                        u1370 0642                          u2090 01F9                          u2330 03D6  
                        u2250 0330                          u1531 0F32                          u1515 0F24  
                        u1275 00C9                          u1451 077C                          u1371 0641  
                        u2091 01F8                          u2331 03D5                          u2251 032F  
                        u1700 0058                          u1460 077F                          u1380 0658  
                        u1620 0261                          u1540 0216                          u2340 03DE  
                        u2260 036E                          u1525 0F29                          u1285 00D3  
                        u1381 0657                          u1621 0260                          u1605 024D  
                        u1541 0215                          u2341 03DD                          u2261 036D  
                        u1710 007D                          u1390 070B                          u1630 0266  
                        u1550 0221                          u1470 008A                          u2270 0374  
                        u1711 007C                          u1295 00DD                          u1391 0709  
                        u1631 0265                          u1615 0257                          u1551 0220  
                        u2407 018A                          u2271 0373                          u1560 0232  
                        u1480 00AF                          u1800 05FF                          u1720 051B  
                        u1640 0E47                          u2280 038F                          u1561 0231  
                        u1481 00AE                          u1801 05FE                          u1721 051A  
                        u1641 0E46                          u2417 0199                          u2281 038E  
                        u1650 0014                          u1490 0EB7                          u1810 0613  
                        u1730 0529                          u2290 0395                          u2507 0F60  
                        u1651 0013                          u1491 0EB6                          u1811 0612  
                        u1731 0528                          u2427 01A5                          u2291 0394  
                        u1820 0F69                          u1660 0FB4                          u1580 0242  
                        u1740 0542                          u1900 0410                          u1821 0F68  
                        u1581 0241                          u1805 05FB                          u1741 0541  
                        u1725 0517                          u1901 040F                          u2437 01AE  
                        u2357 033A                          u1670 0FD3                          u1750 054F  
                        u1910 0423                          u1671 0FD2                          u2447 02A5  
                        u1575 0236                          u1495 0EB3                          u1815 060F  
                        u1751 054E                          u1735 0525                          u1911 0422  
                        u2367 034B                          u1760 057D                          u1920 0440  
                        u1680 0F06                          u2457 02B6                          u1761 057C  
                        u1921 043F                          u2377 035C                          u1770 058B  
                        u1930 045B                          u1850 0FE0                          u1690 0F17  
                        u2467 02CC                          u1595 0243                          u1771 058A  
                        u1755 054B                          u1931 045A                          u1915 041F  
                        u1691 0F16                          u2387 037E                          u1780 05BE  
                        u1940 0479                          u1860 0FFF                          u2477 02DD  
                        u1781 05BD                          u1765 0579                          u1941 0478  
                        u1925 043C                          u1861 0FFE                          u2397 03B6  
                        u1790 05CC                          u1870 00F9                          u1950 049A  
                        u2487 0017                          u1791 05CB                          u1775 0587  
                        u1871 00F8                          u1951 0499                          u1935 0457  
                        u1960 04B4                          u1880 03F2                          u2497 0044  
                        u1785 05BA                          u1961 04B3                          u1945 0475  
                        u1881 03F1                          u1970 04BA                          u1890 0401  
                        u1795 05C8                          u1971 04B9                          u1955 0496  
                        u1891 0400                          u1980 04C0                          u1981 04BF  
                        u1990 04D5                          u1991 04D4                          u1995 04D1  
                        abs@a 0070                          _edge 0058                          _fast 0064  
                        _main 02EB                          _serA 00C9                          _lpin 006E  
                        _potA 0048                          _potB 0046                          _mpin 006D  
                        _rpin 006C                          fsr0h 0005                          fsr1h 0007  
                        indf0 0000                          fsr0l 0004                          _slow 0062  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
             __end_of_IR_init 0E3C               __end_of_IR_zone 02EB                          start 0002  
            __end_of_ADC_init 0E58  __end_of_transmit_shield_code 0F18                         ??_abs 0072  
   surface_exploration@F11778 0120                         _ADACQ 009D                         ?_main 0070  
                       _ADCLK 0098                         _ADPCH 009E                         _ADREF 009A  
             __end_of___awdiv 0270                         _ADPRE 009C               ___awdiv@divisor 0074  
             __end_of___lwdiv 00EC               ___awdiv@counter 0079                         _RCREG 0119  
                       _TXREG 011A                         _l_dir 005B                         _l_vec 006A  
                       _drive 00EC                         _r_dir 005A                         _r_vec 0068  
                       _motor 007E                         status 0003               __end_of_rx_wait 0EAA  
                       wtemp0 007E               __end_of_tx_wait 0E91               __initialization 07CD  
                __end_of_main 03E7                        ??_main 0044           PCLS_info_send@11721 0020  
            ??_PCLS_info_send 0078                        _ADCON0 0093                        ?_drive 0070  
                      _ADRESH 008D                        _ADRESL 008C                     ??_IR_init 0078  
            ___awdiv@dividend 0076                        ?_motor 0078                     ??_IR_zone 003C  
                      _RC6PPS 0F26             __end_of_PCLS_info 0E48                  ?_shield_code 0070  
                      _Vdrive 050D                        ___wmul 0F18             __end_of_UART_init 0E68  
                   ??___awdiv 0078             __end_of_UART_send 0FA8                        _health 00C5  
                   ??___lwdiv 0074              __end_of_read_adc 0F7F                        _teamID 005F  
            ___awdiv@quotient 007B                        _joy_lx 00C7                        _joy_ly 0052  
                      _joy_rx 0056                        _joy_ry 0054                        _servos 01B9  
                      drive@x 003E                        drive@y 0040              __end_of_ore_type 1000  
                   ?_ADC_init 0070             _PCLS_info_receive 012A      surface_exploration@11779 0021  
                   ??_rx_wait 0070                     ??_tx_wait 0070                  rx_wait@count 0070  
          ?_PCLS_info_receive 0070          _transmit_shield_code 0EFC             shoot_laser@F11755 00B1  
                   IR@ADC_val 007A       __end_of__initialization 07FD           ??_PCLS_info_receive 0072  
              __pcstackCOMMON 0070            custom_laser@F11770 00BF                  __pidataBANK0 0E68  
                __pidataBANK1 0F38          request_repair@F11761 00D0                 __end_of_drive 012A  
               __end_of_motor 00B0   surface_exploration@taskID_l 0020   surface_exploration@taskID_u 0078  
                  __end_of_IR 004C     __end_of_PCLS_info_receive 016C                 _line_follower 03E7  
                  ??_ADC_init 0070                       ??_drive 003C         ?_transmit_shield_code 0070  
                     ??_motor 007B                    __pbssBANK0 0046                    __pbssBANK1 00A0  
                  __pbssBANK2 0120          PCLS_info_send@F11720 00E2                    __pmaintext 02EB  
                     ?_Vdrive 002B                       ?___wmul 0020                       ?_servos 0070  
         _surface_exploration 004C                ?_line_follower 0070                ore_type@F11782 00AA  
              _user_data_send 0EC4                       _IR_base 00E8                       _IR_init 0E30  
                     _IR_zone 0270                  tx_wait@count 0070                     ?_read_adc 0070  
             Vdrive@right_dir 0032          ?_surface_exploration 0078                   motor@F11740 00A0  
                   ?_ore_type 0070                       Vdrive@x 002D                       Vdrive@y 002B  
                     ___awdiv 0211                       ___lwdiv 00B0                       __ptext1 016C  
                     __ptext2 0EFC                       __ptext3 0E3C                       __ptext4 0EE0  
                     __ptext5 012A                       __ptext6 01B9                       __ptext7 0FD4  
                     __ptext8 03E7                       __ptext9 00EC               read_adc@ADC_val 0076  
              set_laser@11752 0021        __end_of_user_data_send 0EE0     transmit_shield_code@11759 0020  
                 set_laser@en 0020                   servo@F11747 012A        ??_transmit_shield_code 0078  
                     _rx_wait 0E91                       clrloop0 0E25                       _tx_wait 0E78  
        end_of_initialization 07FD                       init_ram 0E2A                    ??_read_adc 0072  
                     initloop 0E2B             __end_of_set_laser 0FD4         ??_surface_exploration 007B  
  transmit_shield_code@F11758 00D6                     _PCLS_info 0E3C                    ??_ore_type 0078  
                     servos@i 003C                       servos@j 003E             __end_of_user_data 001C  
          user_data_receive@j 003B            user_data_receive@r 0020            user_data_receive@s 003A  
                   _UART_init 0E58                     _UART_send 0F7F               ??_line_follower 007C  
             ?_user_data_send 0070                     _TRISAbits 0011                     _TRISCbits 0013  
                  ?_PCLS_info 0070                __end_of_Vdrive 0635                __end_of___wmul 0F38  
                  ?_UART_init 0070                    ?_UART_send 0072                __end_of_servos 0211  
         start_initialization 07CD                   __end_of_abs 0EC4            PCLS_info_receive@j 002D  
          PCLS_info_receive@r 0020            PCLS_info_receive@s 002C                      ??_Vdrive 002F  
                    ??___wmul 007D                   __pdataBANK0 0060                   __pdataBANK1 00CA  
                    ??_servos 007C                     ___latbits 0002                   IR_zone@zone 0040  
               __pcstackBANK0 0020              UART_send@message 0076                      ?_IR_init 0070  
                    ?_IR_zone 0070                   ??_PCLS_info 0079              ___lwdiv@dividend 0072  
                    ?___awdiv 0074                      ?___lwdiv 0070                 ore_type@11783 0021  
              Vdrive@left_dir 0031                   ??_UART_init 0070                   ??_UART_send 0074  
                  motor@11741 0021                      _ADC_init 0E48                      IR_zone@i 0041  
            ___lwdiv@quotient 0075                      ?_rx_wait 0070                      ?_tx_wait 0070  
               ??_shield_code 007C                ___wmul@product 0024                      _LATAbits 0016  
                    _LATCbits 0018                     clear_ram0 0E24                    UART_send@i 0077  
                    _PIR1bits 070D                      _PIR3bits 070F                     _set_laser 0FA8  
                   _speed_inc 0060              ??_user_data_send 0078                    _ADCON0bits 0093  
              read_adc@sensor 0075             ___wmul@multiplier 0020                     _user_data 0009  
 __end_of_surface_exploration 007E                _PCLS_info_send 0EE0                   _auto_switch 0059  
                  ?_set_laser 0070           __end_of_shield_code 01B9            line_follower@l_val 002B  
          line_follower@m_val 002D            line_follower@r_val 002F                   _SP1BRGLbits 011B  
                  _ANSELAbits 0F38                    _ANSELCbits 0F4E                   _line_colour 0066  
                  ?_user_data 0070         __end_of_line_follower 050D                 UART_send@size 0072  
             ___lwdiv@divisor 0070               ___lwdiv@counter 0077                      __ptext10 050D  
                    __ptext11 007E                      __ptext20 00B0                      __ptext12 0EAA  
                    __ptext21 004C                      __ptext13 0211                      __ptext22 0FA8  
                    __ptext14 0E58                      __ptext23 0F7F                      __ptext15 0270  
                    __ptext24 0E78                      __ptext16 0009                      __ptext25 0F18  
                    __ptext17 0EC4                      __ptext26 0E30                      __ptext18 0635  
                    __ptext27 001C                      __ptext19 0E91                      __ptext28 0F58  
                    __ptext29 0E48        __end_of_PCLS_info_send 0EFC                 Vdrive@l_motor 0033  
               Vdrive@r_motor 0035    surface_exploration@value_l 0079    surface_exploration@value_u 007A  
                    _read_adc 0F58                  ore_type@type 0020                     motor@dirA 0020  
                   motor@dirB 0079                     motor@pwmA 0078                     motor@pwmB 007A  
             set_laser@F11751 00B8                      _playerID 005E                    _RC1STAbits 011D  
                    _ore_type 0FD4                      _starting 006F                      drive@dir 0042  
                 _repair_flag 005C          user_data_send@F11728 00DC               ?_PCLS_info_send 0070  
                 _shield_code 016C                   _shield_flag 005D                   ??_set_laser 0078  
         user_data_send@11729 0020             _user_data_receive 0635                   ??_user_data 007B  
          ?_user_data_receive 0070                    _TX1STAbits 011E         transmit_repair@F11764 00CA  
         ??_user_data_receive 0078  
