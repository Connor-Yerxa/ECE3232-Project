

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Apr 07 00:09:09 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    45                           	dabs	1,0x7E,2
    46     0000                     
    47                           ; Generated 11/01/2024 GMT
    48                           ; 
    49                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F18855 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     001C                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     008C                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0110                     	;# 
   136     0110                     	;# 
   137     0111                     	;# 
   138     0112                     	;# 
   139     0112                     	;# 
   140     0113                     	;# 
   141     0114                     	;# 
   142     0114                     	;# 
   143     0115                     	;# 
   144     0116                     	;# 
   145     0116                     	;# 
   146     0117                     	;# 
   147     0119                     	;# 
   148     0119                     	;# 
   149     0119                     	;# 
   150     011A                     	;# 
   151     011A                     	;# 
   152     011A                     	;# 
   153     011B                     	;# 
   154     011B                     	;# 
   155     011B                     	;# 
   156     011B                     	;# 
   157     011B                     	;# 
   158     011C                     	;# 
   159     011C                     	;# 
   160     011C                     	;# 
   161     011D                     	;# 
   162     011D                     	;# 
   163     011D                     	;# 
   164     011E                     	;# 
   165     011E                     	;# 
   166     011E                     	;# 
   167     011F                     	;# 
   168     011F                     	;# 
   169     011F                     	;# 
   170     011F                     	;# 
   171     011F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     018E                     	;# 
   175     018F                     	;# 
   176     0190                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0196                     	;# 
   180     0197                     	;# 
   181     0198                     	;# 
   182     0199                     	;# 
   183     019A                     	;# 
   184     019B                     	;# 
   185     019C                     	;# 
   186     020C                     	;# 
   187     020C                     	;# 
   188     020D                     	;# 
   189     020E                     	;# 
   190     020F                     	;# 
   191     020F                     	;# 
   192     0210                     	;# 
   193     0210                     	;# 
   194     0211                     	;# 
   195     0211                     	;# 
   196     0212                     	;# 
   197     0212                     	;# 
   198     0213                     	;# 
   199     0214                     	;# 
   200     0215                     	;# 
   201     0215                     	;# 
   202     0216                     	;# 
   203     0216                     	;# 
   204     0217                     	;# 
   205     0217                     	;# 
   206     0218                     	;# 
   207     0218                     	;# 
   208     0219                     	;# 
   209     021A                     	;# 
   210     021B                     	;# 
   211     021B                     	;# 
   212     021C                     	;# 
   213     021C                     	;# 
   214     021D                     	;# 
   215     021D                     	;# 
   216     021E                     	;# 
   217     021F                     	;# 
   218     028C                     	;# 
   219     028C                     	;# 
   220     028D                     	;# 
   221     028D                     	;# 
   222     028E                     	;# 
   223     028F                     	;# 
   224     0290                     	;# 
   225     0290                     	;# 
   226     0291                     	;# 
   227     0292                     	;# 
   228     0292                     	;# 
   229     0293                     	;# 
   230     0293                     	;# 
   231     0294                     	;# 
   232     0295                     	;# 
   233     0296                     	;# 
   234     0296                     	;# 
   235     0297                     	;# 
   236     0298                     	;# 
   237     0298                     	;# 
   238     0299                     	;# 
   239     0299                     	;# 
   240     029A                     	;# 
   241     029B                     	;# 
   242     029C                     	;# 
   243     029C                     	;# 
   244     029D                     	;# 
   245     030C                     	;# 
   246     030C                     	;# 
   247     030D                     	;# 
   248     030E                     	;# 
   249     030F                     	;# 
   250     0310                     	;# 
   251     0310                     	;# 
   252     0311                     	;# 
   253     0312                     	;# 
   254     0313                     	;# 
   255     0314                     	;# 
   256     0314                     	;# 
   257     0315                     	;# 
   258     0316                     	;# 
   259     0317                     	;# 
   260     0318                     	;# 
   261     0318                     	;# 
   262     0319                     	;# 
   263     031A                     	;# 
   264     031B                     	;# 
   265     031C                     	;# 
   266     031C                     	;# 
   267     031D                     	;# 
   268     031E                     	;# 
   269     031F                     	;# 
   270     038C                     	;# 
   271     038C                     	;# 
   272     038D                     	;# 
   273     038E                     	;# 
   274     0390                     	;# 
   275     0390                     	;# 
   276     0391                     	;# 
   277     0392                     	;# 
   278     040C                     	;# 
   279     040D                     	;# 
   280     040E                     	;# 
   281     040F                     	;# 
   282     0410                     	;# 
   283     0411                     	;# 
   284     0416                     	;# 
   285     0416                     	;# 
   286     0417                     	;# 
   287     0418                     	;# 
   288     0418                     	;# 
   289     0419                     	;# 
   290     041A                     	;# 
   291     041A                     	;# 
   292     041B                     	;# 
   293     041C                     	;# 
   294     041C                     	;# 
   295     041D                     	;# 
   296     041E                     	;# 
   297     041F                     	;# 
   298     048C                     	;# 
   299     048C                     	;# 
   300     048D                     	;# 
   301     048E                     	;# 
   302     048F                     	;# 
   303     048F                     	;# 
   304     0490                     	;# 
   305     0491                     	;# 
   306     0492                     	;# 
   307     0492                     	;# 
   308     0493                     	;# 
   309     0494                     	;# 
   310     0495                     	;# 
   311     0495                     	;# 
   312     0496                     	;# 
   313     0497                     	;# 
   314     0498                     	;# 
   315     0499                     	;# 
   316     049A                     	;# 
   317     049B                     	;# 
   318     049C                     	;# 
   319     049D                     	;# 
   320     050C                     	;# 
   321     050C                     	;# 
   322     050D                     	;# 
   323     050E                     	;# 
   324     050F                     	;# 
   325     050F                     	;# 
   326     0510                     	;# 
   327     0511                     	;# 
   328     0512                     	;# 
   329     0512                     	;# 
   330     0513                     	;# 
   331     0514                     	;# 
   332     0515                     	;# 
   333     0515                     	;# 
   334     0516                     	;# 
   335     0517                     	;# 
   336     0518                     	;# 
   337     0519                     	;# 
   338     051A                     	;# 
   339     051B                     	;# 
   340     051C                     	;# 
   341     051D                     	;# 
   342     058C                     	;# 
   343     058C                     	;# 
   344     058D                     	;# 
   345     058E                     	;# 
   346     058F                     	;# 
   347     058F                     	;# 
   348     0590                     	;# 
   349     0591                     	;# 
   350     0592                     	;# 
   351     0593                     	;# 
   352     060C                     	;# 
   353     060D                     	;# 
   354     060E                     	;# 
   355     060F                     	;# 
   356     0610                     	;# 
   357     0611                     	;# 
   358     0612                     	;# 
   359     0613                     	;# 
   360     0614                     	;# 
   361     0616                     	;# 
   362     0617                     	;# 
   363     0618                     	;# 
   364     0619                     	;# 
   365     061A                     	;# 
   366     061B                     	;# 
   367     061C                     	;# 
   368     061D                     	;# 
   369     061E                     	;# 
   370     068C                     	;# 
   371     068D                     	;# 
   372     068E                     	;# 
   373     068F                     	;# 
   374     0690                     	;# 
   375     0691                     	;# 
   376     0692                     	;# 
   377     0693                     	;# 
   378     0694                     	;# 
   379     070C                     	;# 
   380     070D                     	;# 
   381     070E                     	;# 
   382     070F                     	;# 
   383     0710                     	;# 
   384     0711                     	;# 
   385     0712                     	;# 
   386     0713                     	;# 
   387     0714                     	;# 
   388     0716                     	;# 
   389     0717                     	;# 
   390     0718                     	;# 
   391     0719                     	;# 
   392     071A                     	;# 
   393     071B                     	;# 
   394     071C                     	;# 
   395     071D                     	;# 
   396     071E                     	;# 
   397     0796                     	;# 
   398     0797                     	;# 
   399     0798                     	;# 
   400     0799                     	;# 
   401     079A                     	;# 
   402     079B                     	;# 
   403     080C                     	;# 
   404     080D                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0811                     	;# 
   409     0812                     	;# 
   410     0813                     	;# 
   411     0814                     	;# 
   412     081A                     	;# 
   413     081B                     	;# 
   414     081C                     	;# 
   415     081D                     	;# 
   416     081E                     	;# 
   417     081F                     	;# 
   418     088C                     	;# 
   419     088D                     	;# 
   420     088E                     	;# 
   421     088F                     	;# 
   422     0890                     	;# 
   423     0891                     	;# 
   424     0892                     	;# 
   425     0893                     	;# 
   426     0895                     	;# 
   427     0896                     	;# 
   428     0897                     	;# 
   429     0898                     	;# 
   430     0899                     	;# 
   431     089A                     	;# 
   432     089B                     	;# 
   433     090C                     	;# 
   434     090E                     	;# 
   435     090F                     	;# 
   436     091F                     	;# 
   437     091F                     	;# 
   438     098F                     	;# 
   439     098F                     	;# 
   440     0990                     	;# 
   441     0991                     	;# 
   442     0992                     	;# 
   443     0993                     	;# 
   444     0994                     	;# 
   445     0995                     	;# 
   446     0996                     	;# 
   447     0997                     	;# 
   448     0E0F                     	;# 
   449     0E10                     	;# 
   450     0E11                     	;# 
   451     0E12                     	;# 
   452     0E13                     	;# 
   453     0E14                     	;# 
   454     0E15                     	;# 
   455     0E16                     	;# 
   456     0E17                     	;# 
   457     0E18                     	;# 
   458     0E19                     	;# 
   459     0E1A                     	;# 
   460     0E1B                     	;# 
   461     0E1C                     	;# 
   462     0E1D                     	;# 
   463     0E1E                     	;# 
   464     0E1F                     	;# 
   465     0E20                     	;# 
   466     0E21                     	;# 
   467     0E22                     	;# 
   468     0E23                     	;# 
   469     0E24                     	;# 
   470     0E25                     	;# 
   471     0E26                     	;# 
   472     0E27                     	;# 
   473     0E28                     	;# 
   474     0E29                     	;# 
   475     0E2A                     	;# 
   476     0E2B                     	;# 
   477     0E2C                     	;# 
   478     0E2D                     	;# 
   479     0E2E                     	;# 
   480     0E2F                     	;# 
   481     0E30                     	;# 
   482     0E31                     	;# 
   483     0E32                     	;# 
   484     0E33                     	;# 
   485     0E34                     	;# 
   486     0E35                     	;# 
   487     0E36                     	;# 
   488     0E37                     	;# 
   489     0E8F                     	;# 
   490     0E90                     	;# 
   491     0E91                     	;# 
   492     0E92                     	;# 
   493     0E93                     	;# 
   494     0E94                     	;# 
   495     0E95                     	;# 
   496     0E96                     	;# 
   497     0E97                     	;# 
   498     0E9C                     	;# 
   499     0E9D                     	;# 
   500     0E9E                     	;# 
   501     0EA1                     	;# 
   502     0EA2                     	;# 
   503     0EA3                     	;# 
   504     0EA4                     	;# 
   505     0EA5                     	;# 
   506     0EA9                     	;# 
   507     0EAA                     	;# 
   508     0EAB                     	;# 
   509     0EAC                     	;# 
   510     0EB1                     	;# 
   511     0EB2                     	;# 
   512     0EB3                     	;# 
   513     0EB8                     	;# 
   514     0EB9                     	;# 
   515     0EBA                     	;# 
   516     0EBB                     	;# 
   517     0EBC                     	;# 
   518     0EBD                     	;# 
   519     0EBE                     	;# 
   520     0EC3                     	;# 
   521     0EC5                     	;# 
   522     0EC6                     	;# 
   523     0EC7                     	;# 
   524     0EC8                     	;# 
   525     0EC9                     	;# 
   526     0ECA                     	;# 
   527     0ECB                     	;# 
   528     0ECC                     	;# 
   529     0F10                     	;# 
   530     0F11                     	;# 
   531     0F12                     	;# 
   532     0F13                     	;# 
   533     0F14                     	;# 
   534     0F15                     	;# 
   535     0F16                     	;# 
   536     0F17                     	;# 
   537     0F18                     	;# 
   538     0F19                     	;# 
   539     0F1A                     	;# 
   540     0F1B                     	;# 
   541     0F1C                     	;# 
   542     0F1D                     	;# 
   543     0F1E                     	;# 
   544     0F1F                     	;# 
   545     0F20                     	;# 
   546     0F21                     	;# 
   547     0F22                     	;# 
   548     0F23                     	;# 
   549     0F24                     	;# 
   550     0F25                     	;# 
   551     0F26                     	;# 
   552     0F27                     	;# 
   553     0F38                     	;# 
   554     0F39                     	;# 
   555     0F3A                     	;# 
   556     0F3B                     	;# 
   557     0F3C                     	;# 
   558     0F3D                     	;# 
   559     0F3E                     	;# 
   560     0F3F                     	;# 
   561     0F40                     	;# 
   562     0F41                     	;# 
   563     0F43                     	;# 
   564     0F44                     	;# 
   565     0F45                     	;# 
   566     0F46                     	;# 
   567     0F47                     	;# 
   568     0F48                     	;# 
   569     0F49                     	;# 
   570     0F4A                     	;# 
   571     0F4B                     	;# 
   572     0F4C                     	;# 
   573     0F4E                     	;# 
   574     0F4F                     	;# 
   575     0F50                     	;# 
   576     0F51                     	;# 
   577     0F52                     	;# 
   578     0F53                     	;# 
   579     0F54                     	;# 
   580     0F55                     	;# 
   581     0F56                     	;# 
   582     0F57                     	;# 
   583     0F65                     	;# 
   584     0F68                     	;# 
   585     0F69                     	;# 
   586     0F6A                     	;# 
   587     0F6B                     	;# 
   588     0FE4                     	;# 
   589     0FE5                     	;# 
   590     0FE6                     	;# 
   591     0FE7                     	;# 
   592     0FE8                     	;# 
   593     0FE9                     	;# 
   594     0FEA                     	;# 
   595     0FEB                     	;# 
   596     0FED                     	;# 
   597     0FEE                     	;# 
   598     0FEF                     	;# 
   599     0000                     	;# 
   600     0001                     	;# 
   601     0002                     	;# 
   602     0003                     	;# 
   603     0004                     	;# 
   604     0005                     	;# 
   605     0006                     	;# 
   606     0007                     	;# 
   607     0008                     	;# 
   608     0009                     	;# 
   609     000A                     	;# 
   610     000B                     	;# 
   611     000C                     	;# 
   612     000D                     	;# 
   613     000E                     	;# 
   614     0010                     	;# 
   615     0011                     	;# 
   616     0012                     	;# 
   617     0013                     	;# 
   618     0016                     	;# 
   619     0017                     	;# 
   620     0018                     	;# 
   621     001C                     	;# 
   622     001C                     	;# 
   623     001D                     	;# 
   624     001D                     	;# 
   625     001E                     	;# 
   626     001F                     	;# 
   627     008C                     	;# 
   628     008C                     	;# 
   629     008D                     	;# 
   630     008E                     	;# 
   631     008E                     	;# 
   632     008F                     	;# 
   633     0090                     	;# 
   634     0090                     	;# 
   635     0091                     	;# 
   636     0093                     	;# 
   637     0094                     	;# 
   638     0095                     	;# 
   639     0096                     	;# 
   640     0097                     	;# 
   641     0098                     	;# 
   642     0099                     	;# 
   643     009A                     	;# 
   644     009B                     	;# 
   645     009C                     	;# 
   646     009D                     	;# 
   647     009E                     	;# 
   648     010C                     	;# 
   649     010D                     	;# 
   650     010E                     	;# 
   651     010E                     	;# 
   652     010F                     	;# 
   653     0110                     	;# 
   654     0110                     	;# 
   655     0111                     	;# 
   656     0112                     	;# 
   657     0112                     	;# 
   658     0113                     	;# 
   659     0114                     	;# 
   660     0114                     	;# 
   661     0115                     	;# 
   662     0116                     	;# 
   663     0116                     	;# 
   664     0117                     	;# 
   665     0119                     	;# 
   666     0119                     	;# 
   667     0119                     	;# 
   668     011A                     	;# 
   669     011A                     	;# 
   670     011A                     	;# 
   671     011B                     	;# 
   672     011B                     	;# 
   673     011B                     	;# 
   674     011B                     	;# 
   675     011B                     	;# 
   676     011C                     	;# 
   677     011C                     	;# 
   678     011C                     	;# 
   679     011D                     	;# 
   680     011D                     	;# 
   681     011D                     	;# 
   682     011E                     	;# 
   683     011E                     	;# 
   684     011E                     	;# 
   685     011F                     	;# 
   686     011F                     	;# 
   687     011F                     	;# 
   688     011F                     	;# 
   689     011F                     	;# 
   690     018C                     	;# 
   691     018D                     	;# 
   692     018E                     	;# 
   693     018F                     	;# 
   694     0190                     	;# 
   695     0191                     	;# 
   696     0192                     	;# 
   697     0196                     	;# 
   698     0197                     	;# 
   699     0198                     	;# 
   700     0199                     	;# 
   701     019A                     	;# 
   702     019B                     	;# 
   703     019C                     	;# 
   704     020C                     	;# 
   705     020C                     	;# 
   706     020D                     	;# 
   707     020E                     	;# 
   708     020F                     	;# 
   709     020F                     	;# 
   710     0210                     	;# 
   711     0210                     	;# 
   712     0211                     	;# 
   713     0211                     	;# 
   714     0212                     	;# 
   715     0212                     	;# 
   716     0213                     	;# 
   717     0214                     	;# 
   718     0215                     	;# 
   719     0215                     	;# 
   720     0216                     	;# 
   721     0216                     	;# 
   722     0217                     	;# 
   723     0217                     	;# 
   724     0218                     	;# 
   725     0218                     	;# 
   726     0219                     	;# 
   727     021A                     	;# 
   728     021B                     	;# 
   729     021B                     	;# 
   730     021C                     	;# 
   731     021C                     	;# 
   732     021D                     	;# 
   733     021D                     	;# 
   734     021E                     	;# 
   735     021F                     	;# 
   736     028C                     	;# 
   737     028C                     	;# 
   738     028D                     	;# 
   739     028D                     	;# 
   740     028E                     	;# 
   741     028F                     	;# 
   742     0290                     	;# 
   743     0290                     	;# 
   744     0291                     	;# 
   745     0292                     	;# 
   746     0292                     	;# 
   747     0293                     	;# 
   748     0293                     	;# 
   749     0294                     	;# 
   750     0295                     	;# 
   751     0296                     	;# 
   752     0296                     	;# 
   753     0297                     	;# 
   754     0298                     	;# 
   755     0298                     	;# 
   756     0299                     	;# 
   757     0299                     	;# 
   758     029A                     	;# 
   759     029B                     	;# 
   760     029C                     	;# 
   761     029C                     	;# 
   762     029D                     	;# 
   763     030C                     	;# 
   764     030C                     	;# 
   765     030D                     	;# 
   766     030E                     	;# 
   767     030F                     	;# 
   768     0310                     	;# 
   769     0310                     	;# 
   770     0311                     	;# 
   771     0312                     	;# 
   772     0313                     	;# 
   773     0314                     	;# 
   774     0314                     	;# 
   775     0315                     	;# 
   776     0316                     	;# 
   777     0317                     	;# 
   778     0318                     	;# 
   779     0318                     	;# 
   780     0319                     	;# 
   781     031A                     	;# 
   782     031B                     	;# 
   783     031C                     	;# 
   784     031C                     	;# 
   785     031D                     	;# 
   786     031E                     	;# 
   787     031F                     	;# 
   788     038C                     	;# 
   789     038C                     	;# 
   790     038D                     	;# 
   791     038E                     	;# 
   792     0390                     	;# 
   793     0390                     	;# 
   794     0391                     	;# 
   795     0392                     	;# 
   796     040C                     	;# 
   797     040D                     	;# 
   798     040E                     	;# 
   799     040F                     	;# 
   800     0410                     	;# 
   801     0411                     	;# 
   802     0416                     	;# 
   803     0416                     	;# 
   804     0417                     	;# 
   805     0418                     	;# 
   806     0418                     	;# 
   807     0419                     	;# 
   808     041A                     	;# 
   809     041A                     	;# 
   810     041B                     	;# 
   811     041C                     	;# 
   812     041C                     	;# 
   813     041D                     	;# 
   814     041E                     	;# 
   815     041F                     	;# 
   816     048C                     	;# 
   817     048C                     	;# 
   818     048D                     	;# 
   819     048E                     	;# 
   820     048F                     	;# 
   821     048F                     	;# 
   822     0490                     	;# 
   823     0491                     	;# 
   824     0492                     	;# 
   825     0492                     	;# 
   826     0493                     	;# 
   827     0494                     	;# 
   828     0495                     	;# 
   829     0495                     	;# 
   830     0496                     	;# 
   831     0497                     	;# 
   832     0498                     	;# 
   833     0499                     	;# 
   834     049A                     	;# 
   835     049B                     	;# 
   836     049C                     	;# 
   837     049D                     	;# 
   838     050C                     	;# 
   839     050C                     	;# 
   840     050D                     	;# 
   841     050E                     	;# 
   842     050F                     	;# 
   843     050F                     	;# 
   844     0510                     	;# 
   845     0511                     	;# 
   846     0512                     	;# 
   847     0512                     	;# 
   848     0513                     	;# 
   849     0514                     	;# 
   850     0515                     	;# 
   851     0515                     	;# 
   852     0516                     	;# 
   853     0517                     	;# 
   854     0518                     	;# 
   855     0519                     	;# 
   856     051A                     	;# 
   857     051B                     	;# 
   858     051C                     	;# 
   859     051D                     	;# 
   860     058C                     	;# 
   861     058C                     	;# 
   862     058D                     	;# 
   863     058E                     	;# 
   864     058F                     	;# 
   865     058F                     	;# 
   866     0590                     	;# 
   867     0591                     	;# 
   868     0592                     	;# 
   869     0593                     	;# 
   870     060C                     	;# 
   871     060D                     	;# 
   872     060E                     	;# 
   873     060F                     	;# 
   874     0610                     	;# 
   875     0611                     	;# 
   876     0612                     	;# 
   877     0613                     	;# 
   878     0614                     	;# 
   879     0616                     	;# 
   880     0617                     	;# 
   881     0618                     	;# 
   882     0619                     	;# 
   883     061A                     	;# 
   884     061B                     	;# 
   885     061C                     	;# 
   886     061D                     	;# 
   887     061E                     	;# 
   888     068C                     	;# 
   889     068D                     	;# 
   890     068E                     	;# 
   891     068F                     	;# 
   892     0690                     	;# 
   893     0691                     	;# 
   894     0692                     	;# 
   895     0693                     	;# 
   896     0694                     	;# 
   897     070C                     	;# 
   898     070D                     	;# 
   899     070E                     	;# 
   900     070F                     	;# 
   901     0710                     	;# 
   902     0711                     	;# 
   903     0712                     	;# 
   904     0713                     	;# 
   905     0714                     	;# 
   906     0716                     	;# 
   907     0717                     	;# 
   908     0718                     	;# 
   909     0719                     	;# 
   910     071A                     	;# 
   911     071B                     	;# 
   912     071C                     	;# 
   913     071D                     	;# 
   914     071E                     	;# 
   915     0796                     	;# 
   916     0797                     	;# 
   917     0798                     	;# 
   918     0799                     	;# 
   919     079A                     	;# 
   920     079B                     	;# 
   921     080C                     	;# 
   922     080D                     	;# 
   923     080E                     	;# 
   924     080F                     	;# 
   925     0810                     	;# 
   926     0811                     	;# 
   927     0812                     	;# 
   928     0813                     	;# 
   929     0814                     	;# 
   930     081A                     	;# 
   931     081B                     	;# 
   932     081C                     	;# 
   933     081D                     	;# 
   934     081E                     	;# 
   935     081F                     	;# 
   936     088C                     	;# 
   937     088D                     	;# 
   938     088E                     	;# 
   939     088F                     	;# 
   940     0890                     	;# 
   941     0891                     	;# 
   942     0892                     	;# 
   943     0893                     	;# 
   944     0895                     	;# 
   945     0896                     	;# 
   946     0897                     	;# 
   947     0898                     	;# 
   948     0899                     	;# 
   949     089A                     	;# 
   950     089B                     	;# 
   951     090C                     	;# 
   952     090E                     	;# 
   953     090F                     	;# 
   954     091F                     	;# 
   955     091F                     	;# 
   956     098F                     	;# 
   957     098F                     	;# 
   958     0990                     	;# 
   959     0991                     	;# 
   960     0992                     	;# 
   961     0993                     	;# 
   962     0994                     	;# 
   963     0995                     	;# 
   964     0996                     	;# 
   965     0997                     	;# 
   966     0E0F                     	;# 
   967     0E10                     	;# 
   968     0E11                     	;# 
   969     0E12                     	;# 
   970     0E13                     	;# 
   971     0E14                     	;# 
   972     0E15                     	;# 
   973     0E16                     	;# 
   974     0E17                     	;# 
   975     0E18                     	;# 
   976     0E19                     	;# 
   977     0E1A                     	;# 
   978     0E1B                     	;# 
   979     0E1C                     	;# 
   980     0E1D                     	;# 
   981     0E1E                     	;# 
   982     0E1F                     	;# 
   983     0E20                     	;# 
   984     0E21                     	;# 
   985     0E22                     	;# 
   986     0E23                     	;# 
   987     0E24                     	;# 
   988     0E25                     	;# 
   989     0E26                     	;# 
   990     0E27                     	;# 
   991     0E28                     	;# 
   992     0E29                     	;# 
   993     0E2A                     	;# 
   994     0E2B                     	;# 
   995     0E2C                     	;# 
   996     0E2D                     	;# 
   997     0E2E                     	;# 
   998     0E2F                     	;# 
   999     0E30                     	;# 
  1000     0E31                     	;# 
  1001     0E32                     	;# 
  1002     0E33                     	;# 
  1003     0E34                     	;# 
  1004     0E35                     	;# 
  1005     0E36                     	;# 
  1006     0E37                     	;# 
  1007     0E8F                     	;# 
  1008     0E90                     	;# 
  1009     0E91                     	;# 
  1010     0E92                     	;# 
  1011     0E93                     	;# 
  1012     0E94                     	;# 
  1013     0E95                     	;# 
  1014     0E96                     	;# 
  1015     0E97                     	;# 
  1016     0E9C                     	;# 
  1017     0E9D                     	;# 
  1018     0E9E                     	;# 
  1019     0EA1                     	;# 
  1020     0EA2                     	;# 
  1021     0EA3                     	;# 
  1022     0EA4                     	;# 
  1023     0EA5                     	;# 
  1024     0EA9                     	;# 
  1025     0EAA                     	;# 
  1026     0EAB                     	;# 
  1027     0EAC                     	;# 
  1028     0EB1                     	;# 
  1029     0EB2                     	;# 
  1030     0EB3                     	;# 
  1031     0EB8                     	;# 
  1032     0EB9                     	;# 
  1033     0EBA                     	;# 
  1034     0EBB                     	;# 
  1035     0EBC                     	;# 
  1036     0EBD                     	;# 
  1037     0EBE                     	;# 
  1038     0EC3                     	;# 
  1039     0EC5                     	;# 
  1040     0EC6                     	;# 
  1041     0EC7                     	;# 
  1042     0EC8                     	;# 
  1043     0EC9                     	;# 
  1044     0ECA                     	;# 
  1045     0ECB                     	;# 
  1046     0ECC                     	;# 
  1047     0F10                     	;# 
  1048     0F11                     	;# 
  1049     0F12                     	;# 
  1050     0F13                     	;# 
  1051     0F14                     	;# 
  1052     0F15                     	;# 
  1053     0F16                     	;# 
  1054     0F17                     	;# 
  1055     0F18                     	;# 
  1056     0F19                     	;# 
  1057     0F1A                     	;# 
  1058     0F1B                     	;# 
  1059     0F1C                     	;# 
  1060     0F1D                     	;# 
  1061     0F1E                     	;# 
  1062     0F1F                     	;# 
  1063     0F20                     	;# 
  1064     0F21                     	;# 
  1065     0F22                     	;# 
  1066     0F23                     	;# 
  1067     0F24                     	;# 
  1068     0F25                     	;# 
  1069     0F26                     	;# 
  1070     0F27                     	;# 
  1071     0F38                     	;# 
  1072     0F39                     	;# 
  1073     0F3A                     	;# 
  1074     0F3B                     	;# 
  1075     0F3C                     	;# 
  1076     0F3D                     	;# 
  1077     0F3E                     	;# 
  1078     0F3F                     	;# 
  1079     0F40                     	;# 
  1080     0F41                     	;# 
  1081     0F43                     	;# 
  1082     0F44                     	;# 
  1083     0F45                     	;# 
  1084     0F46                     	;# 
  1085     0F47                     	;# 
  1086     0F48                     	;# 
  1087     0F49                     	;# 
  1088     0F4A                     	;# 
  1089     0F4B                     	;# 
  1090     0F4C                     	;# 
  1091     0F4E                     	;# 
  1092     0F4F                     	;# 
  1093     0F50                     	;# 
  1094     0F51                     	;# 
  1095     0F52                     	;# 
  1096     0F53                     	;# 
  1097     0F54                     	;# 
  1098     0F55                     	;# 
  1099     0F56                     	;# 
  1100     0F57                     	;# 
  1101     0F65                     	;# 
  1102     0F68                     	;# 
  1103     0F69                     	;# 
  1104     0F6A                     	;# 
  1105     0F6B                     	;# 
  1106     0FE4                     	;# 
  1107     0FE5                     	;# 
  1108     0FE6                     	;# 
  1109     0FE7                     	;# 
  1110     0FE8                     	;# 
  1111     0FE9                     	;# 
  1112     0FEA                     	;# 
  1113     0FEB                     	;# 
  1114     0FED                     	;# 
  1115     0FEE                     	;# 
  1116     0FEF                     	;# 
  1117                           
  1118                           	psect	idataBANK0
  1119     0FF0                     __pidataBANK0:
  1120                           
  1121                           ;initializer for _speed_inc
  1122     0FF0  3432               	retlw	50
  1123     0FF1  3400               	retlw	0
  1124                           
  1125                           ;initializer for _slow
  1126     0FF2  3496               	retlw	150
  1127     0FF3  3400               	retlw	0
  1128                           
  1129                           ;initializer for _fast
  1130     0FF4  3496               	retlw	150
  1131     0FF5  3400               	retlw	0
  1132                           
  1133                           ;initializer for _line_colour
  1134     0FF6  34C0               	retlw	192
  1135     0FF7  348E               	retlw	142
  1136                           
  1137                           ;initializer for _r_vec
  1138     0FF8  3464               	retlw	100
  1139     0FF9  3400               	retlw	0
  1140                           
  1141                           ;initializer for _l_vec
  1142     0FFA  3464               	retlw	100
  1143     0FFB  3400               	retlw	0
  1144                           
  1145                           ;initializer for _rpin
  1146     0FFC  340A               	retlw	10
  1147                           
  1148                           ;initializer for _mpin
  1149     0FFD  3409               	retlw	9
  1150                           
  1151                           ;initializer for _lpin
  1152     0FFE  340B               	retlw	11
  1153                           
  1154                           ;initializer for _starting
  1155     0FFF  3401               	retlw	1
  1156                           
  1157                           	psect	idataBANK1
  1158     00DA                     __pidataBANK1:
  1159                           
  1160                           ;initializer for transmit_repair@F11768
  1161     00DA  34FE               	retlw	254
  1162     00DB  3419               	retlw	25
  1163     00DC  3401               	retlw	1
  1164     00DD  3409               	retlw	9
  1165     00DE  3401               	retlw	1
  1166     00DF  3400               	retlw	0
  1167                           
  1168                           ;initializer for request_repair@F11765
  1169     00E0  34FE               	retlw	254
  1170     00E1  3419               	retlw	25
  1171     00E2  3403               	retlw	3
  1172     00E3  3409               	retlw	9
  1173     00E4  3400               	retlw	0
  1174     00E5  3400               	retlw	0
  1175                           
  1176                           ;initializer for transmit_shield_code@F11762
  1177     00E6  34FE               	retlw	254
  1178     00E7  3419               	retlw	25
  1179     00E8  3402               	retlw	2
  1180     00E9  3409               	retlw	9
  1181     00EA  3400               	retlw	0
  1182     00EB  3400               	retlw	0
  1183                           
  1184                           ;initializer for user_data_send@F11732
  1185     00EC  34FE               	retlw	254
  1186     00ED  3419               	retlw	25
  1187     00EE  3401               	retlw	1
  1188     00EF  3405               	retlw	5
  1189     00F0  3400               	retlw	0
  1190     00F1  3400               	retlw	0
  1191                           
  1192                           ;initializer for PCLS_info_send@F11724
  1193     00F2  34FE               	retlw	254
  1194     00F3  3419               	retlw	25
  1195     00F4  3401               	retlw	1
  1196     00F5  3404               	retlw	4
  1197     00F6  3400               	retlw	0
  1198     00F7  3400               	retlw	0
  1199                           
  1200                           ;initializer for _IR_base
  1201     00F8  3400               	retlw	0
  1202     00F9  34B2               	retlw	178
  1203     0018                     _LATCbits	set	24
  1204     0013                     _TRISCbits	set	19
  1205     0016                     _LATAbits	set	22
  1206     0011                     _TRISAbits	set	17
  1207     008C                     _ADRESL	set	140
  1208     008D                     _ADRESH	set	141
  1209     0093                     _ADCON0bits	set	147
  1210     009E                     _ADPCH	set	158
  1211     009D                     _ADACQ	set	157
  1212     009C                     _ADPRE	set	156
  1213     009A                     _ADREF	set	154
  1214     0098                     _ADCLK	set	152
  1215     0093                     _ADCON0	set	147
  1216     0119                     _RCREG	set	281
  1217     011B                     _SP1BRGLbits	set	283
  1218     011F                     _BAUD1CONbits	set	287
  1219     011D                     _RC1STAbits	set	285
  1220     011E                     _TX1STAbits	set	286
  1221     011A                     _TXREG	set	282
  1222     070D                     _PIR1bits	set	1805
  1223     070F                     _PIR3bits	set	1807
  1224     0F38                     _ANSELAbits	set	3896
  1225     0F26                     _RC6PPS	set	3878
  1226     0F4E                     _ANSELCbits	set	3918
  1227                           
  1228                           	psect	cinit
  1229     07CD                     start_initialization:	
  1230                           ; #config settings
  1231                           
  1232     07CD                     __initialization:
  1233                           
  1234                           ; Initialize objects allocated to BANK0
  1235     07CD  30F0               	movlw	low __pidataBANK0
  1236     07CE  0084               	movwf	4
  1237     07CF  308F               	movlw	(high __pidataBANK0)| (0+128)
  1238     07D0  0085               	movwf	5
  1239     07D1  3060               	movlw	low __pdataBANK0
  1240     07D2  0086               	movwf	6
  1241     07D3  3000               	movlw	high __pdataBANK0
  1242     07D4  0087               	movwf	7
  1243     07D5  3010               	movlw	16
  1244     07D6  318F  27BE  3187   	fcall	init_ram
  1245                           
  1246                           ; Initialize objects allocated to BANK1
  1247     07D9  30DA               	movlw	low __pidataBANK1
  1248     07DA  0084               	movwf	4
  1249     07DB  3080               	movlw	(high __pidataBANK1)| (0+128)
  1250     07DC  0085               	movwf	5
  1251     07DD  30C7               	movlw	low __pdataBANK1
  1252     07DE  0086               	movwf	6
  1253     07DF  3000               	movlw	high __pdataBANK1
  1254     07E0  0087               	movwf	7
  1255     07E1  3020               	movlw	32
  1256     07E2  318F  27BE  3187   	fcall	init_ram
  1257                           
  1258                           ; Clear objects allocated to BANK0
  1259     07E5  3044               	movlw	low __pbssBANK0
  1260     07E6  0084               	movwf	4
  1261     07E7  3000               	movlw	high __pbssBANK0
  1262     07E8  0085               	movwf	5
  1263     07E9  301C               	movlw	28
  1264     07EA  318F  27B8  3187   	fcall	clear_ram0
  1265                           
  1266                           ; Clear objects allocated to BANK1
  1267     07ED  30A0               	movlw	low __pbssBANK1
  1268     07EE  0084               	movwf	4
  1269     07EF  3000               	movlw	high __pbssBANK1
  1270     07F0  0085               	movwf	5
  1271     07F1  3027               	movlw	39
  1272     07F2  318F  27B8  3187   	fcall	clear_ram0
  1273                           
  1274                           ; Clear objects allocated to BANK2
  1275     07F5  3020               	movlw	low __pbssBANK2
  1276     07F6  0084               	movwf	4
  1277     07F7  3001               	movlw	high __pbssBANK2
  1278     07F8  0085               	movwf	5
  1279     07F9  3014               	movlw	20
  1280     07FA  318F  27B8  3187   	fcall	clear_ram0
  1281     07FD                     end_of_initialization:	
  1282                           ;End of C runtime variable initialization code
  1283                           
  1284     07FD                     __end_of__initialization:
  1285     07FD  0020               	movlb	0
  1286     07FE  3182  2AFE         	ljmp	_main	;jump to C main() function
  1287                           
  1288                           	psect	bssBANK0
  1289     0044                     __pbssBANK0:
  1290     0044                     _potB:
  1291     0044                     	ds	2
  1292     0046                     _potA:
  1293     0046                     	ds	2
  1294     0048                     _swD:
  1295     0048                     	ds	2
  1296     004A                     _swC:
  1297     004A                     	ds	2
  1298     004C                     _swB:
  1299     004C                     	ds	2
  1300     004E                     _swA:
  1301     004E                     	ds	2
  1302     0050                     _joy_lx:
  1303     0050                     	ds	2
  1304     0052                     _joy_ly:
  1305     0052                     	ds	2
  1306     0054                     _joy_ry:
  1307     0054                     	ds	2
  1308     0056                     _joy_rx:
  1309     0056                     	ds	2
  1310     0058                     _serA:
  1311     0058                     	ds	1
  1312     0059                     _auto_switch:
  1313     0059                     	ds	1
  1314     005A                     _r_dir:
  1315     005A                     	ds	1
  1316     005B                     _l_dir:
  1317     005B                     	ds	1
  1318     005C                     _repair_flag:
  1319     005C                     	ds	1
  1320     005D                     _shield_flag:
  1321     005D                     	ds	1
  1322     005E                     _playerID:
  1323     005E                     	ds	1
  1324     005F                     _teamID:
  1325     005F                     	ds	1
  1326                           
  1327                           	psect	dataBANK0
  1328     0060                     __pdataBANK0:
  1329     0060                     _speed_inc:
  1330     0060                     	ds	2
  1331     0062                     _slow:
  1332     0062                     	ds	2
  1333     0064                     _fast:
  1334     0064                     	ds	2
  1335     0066                     _line_colour:
  1336     0066                     	ds	2
  1337     0068                     _r_vec:
  1338     0068                     	ds	2
  1339     006A                     _l_vec:
  1340     006A                     	ds	2
  1341     006C                     _rpin:
  1342     006C                     	ds	1
  1343     006D                     _mpin:
  1344     006D                     	ds	1
  1345     006E                     _lpin:
  1346     006E                     	ds	1
  1347     006F                     _starting:
  1348     006F                     	ds	1
  1349                           
  1350                           	psect	bssBANK1
  1351     00A0                     __pbssBANK1:
  1352     00A0                     motor@F11744:
  1353     00A0                     	ds	10
  1354     00AA                     ore_type@F11786:
  1355     00AA                     	ds	7
  1356     00B1                     shoot_laser@F11759:
  1357     00B1                     	ds	7
  1358     00B8                     set_laser@F11755:
  1359     00B8                     	ds	7
  1360     00BF                     custom_laser@F11774:
  1361     00BF                     	ds	6
  1362     00C5                     _health:
  1363     00C5                     	ds	2
  1364                           
  1365                           	psect	dataBANK1
  1366     00C7                     __pdataBANK1:
  1367     00C7                     transmit_repair@F11768:
  1368     00C7                     	ds	6
  1369     00CD                     request_repair@F11765:
  1370     00CD                     	ds	6
  1371     00D3                     transmit_shield_code@F11762:
  1372     00D3                     	ds	6
  1373     00D9                     user_data_send@F11732:
  1374     00D9                     	ds	6
  1375     00DF                     PCLS_info_send@F11724:
  1376     00DF                     	ds	6
  1377     00E5                     _IR_base:
  1378     00E5                     	ds	2
  1379                           
  1380                           	psect	bssBANK2
  1381     0120                     __pbssBANK2:
  1382     0120                     surface_exploration@F11782:
  1383     0120                     	ds	10
  1384     012A                     servo@F11751:
  1385     012A                     	ds	10
  1386                           
  1387                           	psect	inittext
  1388     0FBE                     init_ram:
  1389     0FBE  00FE               	movwf	btemp
  1390     0FBF                     initloop:
  1391     0FBF  0012               	moviw fsr0++
  1392     0FC0  001E               	movwi fsr1++
  1393     0FC1  0BFE               	decfsz	btemp,f
  1394     0FC2  2FBF               	goto	initloop
  1395     0FC3  3400               	retlw	0
  1396                           
  1397                           	psect	clrtext
  1398     0FB8                     clear_ram0:	
  1399                           ;	Called with FSR0 containing the base address, and
  1400                           ;	WREG with the size to clear
  1401                           
  1402     0FB8  0064               	clrwdt	;clear the watchdog before getting into this loop
  1403     0FB9                     clrloop0:
  1404     0FB9  0180               	clrf	0	;clear RAM location pointed to by FSR
  1405     0FBA  3101               	addfsr 0,1
  1406     0FBB  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1407     0FBC  2FB9               	goto	clrloop0	;have we reached the end yet?
  1408     0FBD  3400               	retlw	0	;all done for this memory range, return
  1409                           
  1410                           	psect	cstackCOMMON
  1411     0070                     __pcstackCOMMON:
  1412     0070                     ?_tx_wait:
  1413     0070                     ??_tx_wait:	
  1414                           ; 1 bytes @ 0x0
  1415                           
  1416     0070                     ?_rx_wait:	
  1417                           ; 1 bytes @ 0x0
  1418                           
  1419     0070                     ??_rx_wait:	
  1420                           ; 1 bytes @ 0x0
  1421                           
  1422     0070                     ?_UART_init:	
  1423                           ; 1 bytes @ 0x0
  1424                           
  1425     0070                     ??_UART_init:	
  1426                           ; 1 bytes @ 0x0
  1427                           
  1428     0070                     ?_PCLS_info_send:	
  1429                           ; 1 bytes @ 0x0
  1430                           
  1431     0070                     ?_PCLS_info_receive:	
  1432                           ; 1 bytes @ 0x0
  1433                           
  1434     0070                     ?_PCLS_info:	
  1435                           ; 1 bytes @ 0x0
  1436                           
  1437     0070                     ?_user_data_send:	
  1438                           ; 1 bytes @ 0x0
  1439                           
  1440     0070                     ?_user_data_receive:	
  1441                           ; 1 bytes @ 0x0
  1442                           
  1443     0070                     ?_user_data:	
  1444                           ; 1 bytes @ 0x0
  1445                           
  1446     0070                     ?_set_laser:	
  1447                           ; 1 bytes @ 0x0
  1448                           
  1449     0070                     ?_shoot_laser:	
  1450                           ; 1 bytes @ 0x0
  1451                           
  1452     0070                     ?_transmit_shield_code:	
  1453                           ; 1 bytes @ 0x0
  1454                           
  1455     0070                     ?_drive:	
  1456                           ; 1 bytes @ 0x0
  1457                           
  1458     0070                     ?_ADC_init:	
  1459                           ; 1 bytes @ 0x0
  1460                           
  1461     0070                     ??_ADC_init:	
  1462                           ; 1 bytes @ 0x0
  1463                           
  1464     0070                     ?_line_follower:	
  1465                           ; 1 bytes @ 0x0
  1466                           
  1467     0070                     ?_IR_init:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470     0070                     ?_IR:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473     0070                     ?_shield_code:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476     0070                     ?_servos:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479     0070                     ?_main:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482     0070                     ?_abs:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485     0070                     ?_read_adc:	
  1486                           ; 2 bytes @ 0x0
  1487                           
  1488     0070                     ?___lwdiv:	
  1489                           ; 2 bytes @ 0x0
  1490                           
  1491     0070                     tx_wait@count:	
  1492                           ; 2 bytes @ 0x0
  1493                           
  1494     0070                     rx_wait@count:	
  1495                           ; 2 bytes @ 0x0
  1496                           
  1497     0070                     ___lwdiv@divisor:	
  1498                           ; 2 bytes @ 0x0
  1499                           
  1500     0070                     abs@a:	
  1501                           ; 2 bytes @ 0x0
  1502                           
  1503                           
  1504                           ; 2 bytes @ 0x0
  1505     0070                     	ds	2
  1506     0072                     ??_abs:
  1507     0072                     ?_UART_send:	
  1508                           ; 1 bytes @ 0x2
  1509                           
  1510     0072                     ??_PCLS_info_receive:	
  1511                           ; 1 bytes @ 0x2
  1512                           
  1513     0072                     ??_read_adc:	
  1514                           ; 1 bytes @ 0x2
  1515                           
  1516     0072                     UART_send@size:	
  1517                           ; 1 bytes @ 0x2
  1518                           
  1519     0072                     ___lwdiv@dividend:	
  1520                           ; 2 bytes @ 0x2
  1521                           
  1522                           
  1523                           ; 2 bytes @ 0x2
  1524     0072                     	ds	2
  1525     0074                     ??_UART_send:
  1526     0074                     ??___lwdiv:	
  1527                           ; 1 bytes @ 0x4
  1528                           
  1529     0074                     ?___awdiv:	
  1530                           ; 1 bytes @ 0x4
  1531                           
  1532     0074                     ___awdiv@divisor:	
  1533                           ; 2 bytes @ 0x4
  1534                           
  1535                           
  1536                           ; 2 bytes @ 0x4
  1537     0074                     	ds	1
  1538     0075                     read_adc@sensor:
  1539     0075                     ___lwdiv@quotient:	
  1540                           ; 1 bytes @ 0x5
  1541                           
  1542                           
  1543                           ; 2 bytes @ 0x5
  1544     0075                     	ds	1
  1545     0076                     UART_send@message:
  1546     0076                     read_adc@ADC_val:	
  1547                           ; 1 bytes @ 0x6
  1548                           
  1549     0076                     ___awdiv@dividend:	
  1550                           ; 2 bytes @ 0x6
  1551                           
  1552                           
  1553                           ; 2 bytes @ 0x6
  1554     0076                     	ds	1
  1555     0077                     UART_send@i:
  1556     0077                     ___lwdiv@counter:	
  1557                           ; 1 bytes @ 0x7
  1558                           
  1559                           
  1560                           ; 1 bytes @ 0x7
  1561     0077                     	ds	1
  1562     0078                     ??_PCLS_info_send:
  1563     0078                     ??_user_data_send:	
  1564                           ; 1 bytes @ 0x8
  1565                           
  1566     0078                     ??_user_data_receive:	
  1567                           ; 1 bytes @ 0x8
  1568                           
  1569     0078                     ?_motor:	
  1570                           ; 1 bytes @ 0x8
  1571                           
  1572     0078                     ??_set_laser:	
  1573                           ; 1 bytes @ 0x8
  1574                           
  1575     0078                     ??_shoot_laser:	
  1576                           ; 1 bytes @ 0x8
  1577                           
  1578     0078                     ??_transmit_shield_code:	
  1579                           ; 1 bytes @ 0x8
  1580                           
  1581     0078                     ??_IR_init:	
  1582                           ; 1 bytes @ 0x8
  1583                           
  1584     0078                     ??_IR:	
  1585                           ; 1 bytes @ 0x8
  1586                           
  1587     0078                     ??___awdiv:	
  1588                           ; 1 bytes @ 0x8
  1589                           
  1590     0078                     motor@pwmA:	
  1591                           ; 1 bytes @ 0x8
  1592                           
  1593                           
  1594                           ; 1 bytes @ 0x8
  1595     0078                     	ds	1
  1596     0079                     ??_PCLS_info:
  1597     0079                     motor@dirB:	
  1598                           ; 1 bytes @ 0x9
  1599                           
  1600     0079                     ___awdiv@counter:	
  1601                           ; 1 bytes @ 0x9
  1602                           
  1603                           
  1604                           ; 1 bytes @ 0x9
  1605     0079                     	ds	1
  1606     007A                     motor@pwmB:
  1607     007A                     ___awdiv@sign:	
  1608                           ; 1 bytes @ 0xA
  1609                           
  1610     007A                     IR@ADC_val:	
  1611                           ; 1 bytes @ 0xA
  1612                           
  1613                           
  1614                           ; 2 bytes @ 0xA
  1615     007A                     	ds	1
  1616     007B                     ??_user_data:
  1617     007B                     ??_motor:	
  1618                           ; 1 bytes @ 0xB
  1619                           
  1620     007B                     ___awdiv@quotient:	
  1621                           ; 1 bytes @ 0xB
  1622                           
  1623                           
  1624                           ; 2 bytes @ 0xB
  1625     007B                     	ds	1
  1626     007C                     ??_line_follower:
  1627     007C                     ??_shield_code:	
  1628                           ; 1 bytes @ 0xC
  1629                           
  1630     007C                     ??_servos:	
  1631                           ; 1 bytes @ 0xC
  1632                           
  1633                           
  1634                           ; 1 bytes @ 0xC
  1635     007C                     	ds	1
  1636     007D                     ??___wmul:
  1637                           
  1638                           ; 1 bytes @ 0xD
  1639     007D                     	ds	1
  1640     007E                     ??_main:
  1641                           
  1642                           	psect	cstackBANK0
  1643     0020                     __pcstackBANK0:	
  1644                           ; 1 bytes @ 0xE
  1645                           
  1646     0020                     ?___wmul:
  1647     0020                     motor@dirA:	
  1648                           ; 2 bytes @ 0x0
  1649                           
  1650     0020                     set_laser@en:	
  1651                           ; 1 bytes @ 0x0
  1652                           
  1653     0020                     shoot_laser@en:	
  1654                           ; 1 bytes @ 0x0
  1655                           
  1656     0020                     ___wmul@multiplier:	
  1657                           ; 1 bytes @ 0x0
  1658                           
  1659     0020                     PCLS_info_send@11725:	
  1660                           ; 2 bytes @ 0x0
  1661                           
  1662     0020                     user_data_send@11733:	
  1663                           ; 6 bytes @ 0x0
  1664                           
  1665     0020                     transmit_shield_code@11763:	
  1666                           ; 6 bytes @ 0x0
  1667                           
  1668     0020                     PCLS_info_receive@r:	
  1669                           ; 6 bytes @ 0x0
  1670                           
  1671     0020                     user_data_receive@r:	
  1672                           ; 12 bytes @ 0x0
  1673                           
  1674                           
  1675                           ; 26 bytes @ 0x0
  1676     0020                     	ds	1
  1677     0021                     set_laser@11756:
  1678     0021                     shoot_laser@11760:	
  1679                           ; 7 bytes @ 0x1
  1680                           
  1681     0021                     motor@11745:	
  1682                           ; 7 bytes @ 0x1
  1683                           
  1684                           
  1685                           ; 10 bytes @ 0x1
  1686     0021                     	ds	1
  1687     0022                     ___wmul@multiplicand:
  1688                           
  1689                           ; 2 bytes @ 0x2
  1690     0022                     	ds	2
  1691     0024                     ___wmul@product:
  1692                           
  1693                           ; 2 bytes @ 0x4
  1694     0024                     	ds	7
  1695     002B                     ?_Vdrive:
  1696     002B                     Vdrive@y:	
  1697                           ; 1 bytes @ 0xB
  1698                           
  1699     002B                     line_follower@l_val:	
  1700                           ; 2 bytes @ 0xB
  1701                           
  1702                           
  1703                           ; 2 bytes @ 0xB
  1704     002B                     	ds	1
  1705     002C                     PCLS_info_receive@s:
  1706                           
  1707                           ; 1 bytes @ 0xC
  1708     002C                     	ds	1
  1709     002D                     PCLS_info_receive@j:
  1710     002D                     Vdrive@x:	
  1711                           ; 1 bytes @ 0xD
  1712                           
  1713     002D                     line_follower@m_val:	
  1714                           ; 2 bytes @ 0xD
  1715                           
  1716                           
  1717                           ; 2 bytes @ 0xD
  1718     002D                     	ds	2
  1719     002F                     ??_Vdrive:
  1720     002F                     line_follower@r_val:	
  1721                           ; 1 bytes @ 0xF
  1722                           
  1723                           
  1724                           ; 2 bytes @ 0xF
  1725     002F                     	ds	2
  1726     0031                     Vdrive@left_dir:
  1727                           
  1728                           ; 1 bytes @ 0x11
  1729     0031                     	ds	1
  1730     0032                     Vdrive@right_dir:
  1731                           
  1732                           ; 1 bytes @ 0x12
  1733     0032                     	ds	1
  1734     0033                     Vdrive@l_motor:
  1735                           
  1736                           ; 2 bytes @ 0x13
  1737     0033                     	ds	2
  1738     0035                     Vdrive@r_motor:
  1739                           
  1740                           ; 2 bytes @ 0x15
  1741     0035                     	ds	5
  1742     003A                     user_data_receive@s:
  1743                           
  1744                           ; 1 bytes @ 0x1A
  1745     003A                     	ds	1
  1746     003B                     user_data_receive@j:
  1747                           
  1748                           ; 1 bytes @ 0x1B
  1749     003B                     	ds	1
  1750     003C                     ??_drive:
  1751     003C                     servos@i:	
  1752                           ; 1 bytes @ 0x1C
  1753                           
  1754                           
  1755                           ; 2 bytes @ 0x1C
  1756     003C                     	ds	2
  1757     003E                     drive@x:
  1758     003E                     servos@j:	
  1759                           ; 2 bytes @ 0x1E
  1760                           
  1761                           
  1762                           ; 2 bytes @ 0x1E
  1763     003E                     	ds	2
  1764     0040                     drive@y:
  1765                           
  1766                           ; 2 bytes @ 0x20
  1767     0040                     	ds	2
  1768     0042                     drive@dir:
  1769                           
  1770                           ; 2 bytes @ 0x22
  1771     0042                     	ds	2
  1772                           
  1773                           	psect	maintext
  1774     02FE                     __pmaintext:	
  1775 ;;
  1776 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1777 ;;
  1778 ;; *************** function _main *****************
  1779 ;; Defined at:
  1780 ;;		line 91 in file "Master.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : B1F/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1798 ;;Total ram usage:        0 bytes
  1799 ;; Hardware stack levels required when called: 5
  1800 ;; This function calls:
  1801 ;;		_ADC_init
  1802 ;;		_IR
  1803 ;;		_IR_init
  1804 ;;		_UART_init
  1805 ;;		_drive
  1806 ;;		_line_follower
  1807 ;;		_read_adc
  1808 ;;		_servos
  1809 ;;		_shield_code
  1810 ;;		_user_data
  1811 ;; This function is called by:
  1812 ;;		Startup code after reset
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816     02FE                     _main:	
  1817                           ;psect for function _main
  1818                           
  1819     02FE                     l2287:	
  1820                           ;incstack = 0
  1821                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1822                           
  1823     02FE  318F  27E0  3182   	fcall	_UART_init
  1824     0301                     l2289:
  1825     0301  3180  2021  3182   	fcall	_user_data
  1826     0304                     l2291:
  1827     0304  318F  27D0  3182   	fcall	_ADC_init
  1828     0307                     l2293:
  1829     0307  0020               	movlb	0	; select bank0
  1830     0308  084C               	movf	_swB,w	;volatile
  1831     0309  044D               	iorwf	_swB+1,w	;volatile
  1832     030A  1903               	btfsc	3,2
  1833     030B  2B0D               	goto	u2011
  1834     030C  2B0E               	goto	u2010
  1835     030D                     u2011:
  1836     030D  2B3C               	goto	l2311
  1837     030E                     u2010:
  1838     030E                     l2295:
  1839     030E  3009               	movlw	9
  1840     030F  3180  20FA  3182   	fcall	_read_adc
  1841     0312  0870               	movf	?_read_adc,w
  1842     0313  3E00               	addlw	0
  1843     0314  0020               	movlb	0	; select bank0
  1844     0315  00E6               	movwf	_line_colour	;volatile
  1845     0316  30FF               	movlw	255
  1846     0317  3D71               	addwfc	?_read_adc+1,w
  1847     0318  00E7               	movwf	_line_colour+1	;volatile
  1848     0319  2B20               	goto	l2299
  1849     031A                     l2297:
  1850     031A  3184  2405  3182   	fcall	_line_follower
  1851     031D  3180  2021  3182   	fcall	_user_data
  1852     0320                     l2299:
  1853     0320  0020               	movlb	0	; select bank0
  1854     0321  084C               	movf	_swB,w	;volatile
  1855     0322  044D               	iorwf	_swB+1,w	;volatile
  1856     0323  1D03               	btfss	3,2
  1857     0324  2B26               	goto	u2021
  1858     0325  2B27               	goto	u2020
  1859     0326                     u2021:
  1860     0326  2B1A               	goto	l2297
  1861     0327                     u2020:
  1862     0327  2B3C               	goto	l2311
  1863     0328                     l2301:
  1864     0328  318F  27C4  3182   	fcall	_IR_init
  1865     032B                     l2303:
  1866     032B  3182  2240  3182   	fcall	_drive
  1867     032E  2B35               	goto	l2309
  1868     032F                     l2305:
  1869     032F  3181  21A2  3182   	fcall	_IR
  1870     0332                     l2307:
  1871     0332  3180  2021  3182   	fcall	_user_data
  1872     0335                     l2309:
  1873     0335  0020               	movlb	0	; select bank0
  1874     0336  0848               	movf	_swD,w	;volatile
  1875     0337  0449               	iorwf	_swD+1,w	;volatile
  1876     0338  1D03               	btfss	3,2
  1877     0339  2B3B               	goto	u2031
  1878     033A  2B3C               	goto	u2030
  1879     033B                     u2031:
  1880     033B  2B2F               	goto	l2305
  1881     033C                     u2030:
  1882     033C                     l2311:
  1883     033C  3002               	movlw	2
  1884     033D  064A               	xorwf	_swC,w	;volatile
  1885     033E  044B               	iorwf	_swC+1,w	;volatile
  1886     033F  1903               	btfsc	3,2
  1887     0340  2B42               	goto	u2041
  1888     0341  2B43               	goto	u2040
  1889     0342                     u2041:
  1890     0342  2B28               	goto	l2301
  1891     0343                     u2040:
  1892     0343                     l2313:
  1893     0343  3182  227E  3182   	fcall	_shield_code
  1894                           
  1895                           ;Master.c: 125:     servos();
  1896     0346  3183  234E  3182   	fcall	_servos
  1897                           
  1898                           ;Master.c: 127:     drive();
  1899     0349  3182  2240  3182   	fcall	_drive
  1900     034C                     l364:
  1901     034C  3180  2802         	ljmp	start
  1902     034E                     __end_of_main:
  1903                           
  1904                           	psect	text1
  1905     027E                     __ptext1:	
  1906 ;; *************** function _shield_code *****************
  1907 ;; Defined at:
  1908 ;;		line 10 in file "./SheildCode.h"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1924 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1926 ;;Total ram usage:        2 bytes
  1927 ;; Hardware stack levels used: 1
  1928 ;; Hardware stack levels required when called: 4
  1929 ;; This function calls:
  1930 ;;		_PCLS_info
  1931 ;;		_set_laser
  1932 ;;		_shoot_laser
  1933 ;;		_transmit_shield_code
  1934 ;;		_user_data
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940     027E                     _shield_code:	
  1941                           ;psect for function _shield_code
  1942                           
  1943     027E                     l2149:	
  1944                           ;incstack = 0
  1945                           ; Regs used in _shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1946                           
  1947                           
  1948                           ;./SheildCode.h: 11:    transmit_shield_code();
  1949     027E  3180  2004  3182   	fcall	_PCLS_info
  1950     0281                     l2151:
  1951                           
  1952                           ;./SheildCode.h: 12:             _delay((unsigned long)((100)*(400000/4000.0)));
  1953     0281  3001               	movlw	1
  1954     0282  0020               	movlb	0	; select bank0
  1955     0283  00DD               	movwf	_shield_flag	;volatile
  1956     0284                     l2153:
  1957                           
  1958                           ;./SheildCode.h: 13:             set_laser(0);
  1959     0284  085D               	movf	_shield_flag,w	;volatile
  1960     0285  1903               	btfsc	3,2
  1961     0286  2A88               	goto	u1821
  1962     0287  2A89               	goto	u1820
  1963     0288                     u1821:
  1964     0288  2ABB               	goto	l331
  1965     0289                     u1820:
  1966     0289                     l2155:
  1967                           
  1968                           ;./SheildCode.h: 14:             _delay((unsigned long)((6000)*(400000/4000.0)));
  1969     0289  3180  2021  3182   	fcall	_user_data
  1970     028C                     l2157:
  1971                           
  1972                           ;./SheildCode.h: 15:   }
  1973     028C  0020               	movlb	0	; select bank0
  1974     028D  084E               	movf	_swA,w	;volatile
  1975     028E  044F               	iorwf	_swA+1,w	;volatile
  1976     028F  1903               	btfsc	3,2
  1977     0290  2A92               	goto	u1831
  1978     0291  2A93               	goto	u1830
  1979     0292                     u1831:
  1980     0292  2ABB               	goto	l331
  1981     0293                     u1830:
  1982     0293                     l2159:
  1983                           
  1984                           ;./SheildCode.h: 16:  }
  1985     0293  3001               	movlw	1
  1986     0294  3181  214A  3182   	fcall	_set_laser
  1987     0297                     l2161:
  1988                           
  1989                           ;./SheildCode.h: 17: }
  1990     0297  300D               	movlw	13
  1991     0298  00FC               	movwf	??_shield_code
  1992     0299  30FC               	movlw	252
  1993     029A                     u2057:
  1994     029A  0B89               	decfsz	9,f
  1995     029B  2A9A               	goto	u2057
  1996     029C  0BFC               	decfsz	??_shield_code,f
  1997     029D  2A9A               	goto	u2057
  1998     029E                     l2163:
  1999     029E  3001               	movlw	1
  2000     029F  3181  2176  3182   	fcall	_shoot_laser
  2001     02A2                     l2165:
  2002     02A2  3180  209E  3182   	fcall	_transmit_shield_code
  2003     02A5                     l2167:
  2004     02A5  300D               	movlw	13
  2005     02A6  00FC               	movwf	??_shield_code
  2006     02A7  30FC               	movlw	252
  2007     02A8                     u2067:
  2008     02A8  0B89               	decfsz	9,f
  2009     02A9  2AA8               	goto	u2067
  2010     02AA  0BFC               	decfsz	??_shield_code,f
  2011     02AB  2AA8               	goto	u2067
  2012     02AC  3000               	movlw	0
  2013     02AD  3181  214A  3182   	fcall	_set_laser
  2014     02B0                     l2169:
  2015     02B0  3004               	movlw	4
  2016     02B1  00FD               	movwf	??_shield_code+1
  2017     02B2  300C               	movlw	12
  2018     02B3  00FC               	movwf	??_shield_code
  2019     02B4  3034               	movlw	52
  2020     02B5                     u2077:
  2021     02B5  0B89               	decfsz	9,f
  2022     02B6  2AB5               	goto	u2077
  2023     02B7  0BFC               	decfsz	??_shield_code,f
  2024     02B8  2AB5               	goto	u2077
  2025     02B9  0BFD               	decfsz	??_shield_code+1,f
  2026     02BA  2AB5               	goto	u2077
  2027     02BB                     l331:
  2028     02BB  0008               	return
  2029     02BC                     __end_of_shield_code:
  2030                           
  2031                           	psect	text2
  2032     009E                     __ptext2:	
  2033 ;; *************** function _transmit_shield_code *****************
  2034 ;; Defined at:
  2035 ;;		line 230 in file "./Commands.h"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  11763           6    0[BANK0 ] volatile unsigned char [
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  1    wreg      void 
  2042 ;; Registers used:
  2043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2050 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2052 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2053 ;;Total ram usage:        7 bytes
  2054 ;; Hardware stack levels used: 1
  2055 ;; Hardware stack levels required when called: 2
  2056 ;; This function calls:
  2057 ;;		_UART_send
  2058 ;; This function is called by:
  2059 ;;		_shield_code
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           
  2063     009E                     _transmit_shield_code:	
  2064                           ;psect for function _transmit_shield_code
  2065                           
  2066     009E                     l1979:	
  2067                           ;incstack = 0
  2068                           ; Regs used in _transmit_shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2069                           
  2070     009E                     l1981:	
  2071                           ;./Commands.h: 232: {
  2072                           
  2073     009E  30D3               	movlw	low transmit_shield_code@F11762
  2074     009F  0086               	movwf	6
  2075     00A0  3000               	movlw	high transmit_shield_code@F11762
  2076     00A1  0087               	movwf	7
  2077     00A2  3020               	movlw	low transmit_shield_code@11763
  2078     00A3  0084               	movwf	4
  2079     00A4  3000               	movlw	high transmit_shield_code@11763
  2080     00A5  0085               	movwf	5
  2081     00A6  3006               	movlw	6
  2082     00A7  00F8               	movwf	??_transmit_shield_code
  2083     00A8                     u1550:
  2084     00A8  0016               	moviw fsr1++
  2085     00A9  001A               	movwi fsr0++
  2086     00AA  0BF8               	decfsz	??_transmit_shield_code,f
  2087     00AB  28A8               	goto	u1550
  2088     00AC                     l1983:
  2089     00AC  3006               	movlw	6
  2090     00AD  00F2               	movwf	UART_send@size
  2091     00AE  3000               	movlw	0
  2092     00AF  00F3               	movwf	UART_send@size+1
  2093     00B0  3020               	movlw	(low (transmit_shield_code@11763| 0))& (0+255)
  2094     00B1  3181  2121  3180   	fcall	_UART_send
  2095     00B4  3A00               	xorlw	0
  2096     00B5  1903               	skipnz
  2097     00B6  28B8               	goto	u1561
  2098     00B7  28B9               	goto	u1560
  2099     00B8                     u1561:
  2100     00B8  289E               	goto	l1981
  2101     00B9                     u1560:
  2102     00B9                     l192:
  2103     00B9  0008               	return
  2104     00BA                     __end_of_transmit_shield_code:
  2105                           
  2106                           	psect	text3
  2107     0176                     __ptext3:	
  2108 ;; *************** function _shoot_laser *****************
  2109 ;; Defined at:
  2110 ;;		line 225 in file "./Commands.h"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  en              1    wreg     unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  en              1    0[BANK0 ] unsigned char 
  2115 ;;  11760           7    1[BANK0 ] volatile unsigned char [
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2126 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2127 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2128 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2129 ;;Total ram usage:        9 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 2
  2132 ;; This function calls:
  2133 ;;		_UART_send
  2134 ;; This function is called by:
  2135 ;;		_shield_code
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139     0176                     _shoot_laser:	
  2140                           ;psect for function _shoot_laser
  2141                           
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _shoot_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2145                           ;shoot_laser@en stored from wreg
  2146     0176  0020               	movlb	0	; select bank0
  2147     0177  00A0               	movwf	shoot_laser@en
  2148     0178                     l1959:
  2149     0178                     l1961:	
  2150                           ;./Commands.h: 225: ;./Commands.h: 226: void surface_exploration(unsigned char taskID_l,
      +                           unsigned char taskID_u, unsigned char value_l, unsigned char value_u);./Commands.h: 227
      +                          : {
  2151                           
  2152     0178  30B1               	movlw	low shoot_laser@F11759
  2153     0179  0086               	movwf	6
  2154     017A  3000               	movlw	high shoot_laser@F11759
  2155     017B  0087               	movwf	7
  2156     017C  3021               	movlw	low shoot_laser@11760
  2157     017D  0084               	movwf	4
  2158     017E  3000               	movlw	high shoot_laser@11760
  2159     017F  0085               	movwf	5
  2160     0180  3007               	movlw	7
  2161     0181  00F8               	movwf	??_shoot_laser
  2162     0182                     u1530:
  2163     0182  0016               	moviw fsr1++
  2164     0183  001A               	movwi fsr0++
  2165     0184  0BF8               	decfsz	??_shoot_laser,f
  2166     0185  2982               	goto	u1530
  2167     0186                     l1963:
  2168     0186  30FE               	movlw	254
  2169     0187  0020               	movlb	0	; select bank0
  2170     0188  00A1               	movwf	shoot_laser@11760	;volatile
  2171     0189                     l1965:
  2172     0189  3019               	movlw	25
  2173     018A  00A2               	movwf	shoot_laser@11760+1	;volatile
  2174     018B                     l1967:
  2175     018B  3001               	movlw	1
  2176     018C  00A3               	movwf	shoot_laser@11760+2	;volatile
  2177     018D                     l1969:
  2178     018D  3009               	movlw	9
  2179     018E  00A4               	movwf	shoot_laser@11760+3	;volatile
  2180     018F                     l1971:
  2181     018F  3001               	movlw	1
  2182     0190  00A5               	movwf	shoot_laser@11760+4	;volatile
  2183     0191                     l1973:
  2184     0191  01A6               	clrf	shoot_laser@11760+5	;volatile
  2185     0192                     l1975:
  2186     0192  0820               	movf	shoot_laser@en,w
  2187     0193  00A7               	movwf	shoot_laser@11760+6	;volatile
  2188     0194                     l1977:
  2189     0194  3007               	movlw	7
  2190     0195  00F2               	movwf	UART_send@size
  2191     0196  3000               	movlw	0
  2192     0197  00F3               	movwf	UART_send@size+1
  2193     0198  3021               	movlw	(low (shoot_laser@11760| 0))& (0+255)
  2194     0199  3181  2121  3181   	fcall	_UART_send
  2195     019C  3A00               	xorlw	0
  2196     019D  1903               	skipnz
  2197     019E  29A0               	goto	u1541
  2198     019F  29A1               	goto	u1540
  2199     01A0                     u1541:
  2200     01A0  2978               	goto	l1961
  2201     01A1                     u1540:
  2202     01A1                     l184:
  2203     01A1  0008               	return
  2204     01A2                     __end_of_shoot_laser:
  2205                           
  2206                           	psect	text4
  2207     014A                     __ptext4:	
  2208 ;; *************** function _set_laser *****************
  2209 ;; Defined at:
  2210 ;;		line 220 in file "./Commands.h"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  en              1    wreg     unsigned char 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  en              1    0[BANK0 ] unsigned char 
  2215 ;;  11756           7    1[BANK0 ] volatile unsigned char [
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2226 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2228 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2229 ;;Total ram usage:        9 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 2
  2232 ;; This function calls:
  2233 ;;		_UART_send
  2234 ;; This function is called by:
  2235 ;;		_shield_code
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239     014A                     _set_laser:	
  2240                           ;psect for function _set_laser
  2241                           
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _set_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2245                           ;set_laser@en stored from wreg
  2246     014A  0020               	movlb	0	; select bank0
  2247     014B  00A0               	movwf	set_laser@en
  2248     014C                     l1939:
  2249     014C                     l1941:	
  2250                           ;./Commands.h: 220:     int size=size_lower;;./Commands.h: 221:     size += size_upper <
      +                          < 8;;./Commands.h: 222:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x8
      +                          1, 0x09, size_lower, size_upper}, 6)){}
  2251                           
  2252     014C  30B8               	movlw	low set_laser@F11755
  2253     014D  0086               	movwf	6
  2254     014E  3000               	movlw	high set_laser@F11755
  2255     014F  0087               	movwf	7
  2256     0150  3021               	movlw	low set_laser@11756
  2257     0151  0084               	movwf	4
  2258     0152  3000               	movlw	high set_laser@11756
  2259     0153  0085               	movwf	5
  2260     0154  3007               	movlw	7
  2261     0155  00F8               	movwf	??_set_laser
  2262     0156                     u1510:
  2263     0156  0016               	moviw fsr1++
  2264     0157  001A               	movwi fsr0++
  2265     0158  0BF8               	decfsz	??_set_laser,f
  2266     0159  2956               	goto	u1510
  2267     015A                     l1943:
  2268     015A  30FE               	movlw	254
  2269     015B  0020               	movlb	0	; select bank0
  2270     015C  00A1               	movwf	set_laser@11756	;volatile
  2271     015D                     l1945:
  2272     015D  3019               	movlw	25
  2273     015E  00A2               	movwf	set_laser@11756+1	;volatile
  2274     015F                     l1947:
  2275     015F  3001               	movlw	1
  2276     0160  00A3               	movwf	set_laser@11756+2	;volatile
  2277     0161                     l1949:
  2278     0161  3008               	movlw	8
  2279     0162  00A4               	movwf	set_laser@11756+3	;volatile
  2280     0163                     l1951:
  2281     0163  3001               	movlw	1
  2282     0164  00A5               	movwf	set_laser@11756+4	;volatile
  2283     0165                     l1953:
  2284     0165  01A6               	clrf	set_laser@11756+5	;volatile
  2285     0166                     l1955:
  2286     0166  0820               	movf	set_laser@en,w
  2287     0167  00A7               	movwf	set_laser@11756+6	;volatile
  2288     0168                     l1957:
  2289     0168  3007               	movlw	7
  2290     0169  00F2               	movwf	UART_send@size
  2291     016A  3000               	movlw	0
  2292     016B  00F3               	movwf	UART_send@size+1
  2293     016C  3021               	movlw	(low (set_laser@11756| 0))& (0+255)
  2294     016D  3181  2121  3181   	fcall	_UART_send
  2295     0170  3A00               	xorlw	0
  2296     0171  1903               	skipnz
  2297     0172  2974               	goto	u1521
  2298     0173  2975               	goto	u1520
  2299     0174                     u1521:
  2300     0174  294C               	goto	l1941
  2301     0175                     u1520:
  2302     0175                     l176:
  2303     0175  0008               	return
  2304     0176                     __end_of_set_laser:
  2305                           
  2306                           	psect	text5
  2307     0004                     __ptext5:	
  2308 ;; *************** function _PCLS_info *****************
  2309 ;; Defined at:
  2310 ;;		line 126 in file "./Commands.h"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 3
  2331 ;; This function calls:
  2332 ;;		_PCLS_info_receive
  2333 ;;		_PCLS_info_send
  2334 ;; This function is called by:
  2335 ;;		_shield_code
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339     0004                     _PCLS_info:	
  2340                           ;psect for function _PCLS_info
  2341                           
  2342     0004                     l1925:	
  2343                           ;incstack = 0
  2344                           ; Regs used in _PCLS_info: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2345                           
  2346                           
  2347                           ;./Commands.h: 128: 
  2348     0004  3180  2082  3180   	fcall	_PCLS_info_send
  2349     0007                     l1929:	
  2350                           ;./Commands.h: 129:     joy_rx = r[6];
  2351                           
  2352                           
  2353                           ;./Commands.h: 129:     joy_rx = r[6];
  2354     0007  3182  22BC  3180   	fcall	_PCLS_info_receive
  2355     000A  3A00               	xorlw	0
  2356     000B  1903               	skipnz
  2357     000C  280E               	goto	u1491
  2358     000D  280F               	goto	u1490
  2359     000E                     u1491:
  2360     000E  2804               	goto	l1925
  2361     000F                     u1490:
  2362     000F                     l126:
  2363     000F  0008               	return
  2364     0010                     __end_of_PCLS_info:
  2365                           
  2366                           	psect	text6
  2367     0082                     __ptext6:	
  2368 ;; *************** function _PCLS_info_send *****************
  2369 ;; Defined at:
  2370 ;;		line 96 in file "./Commands.h"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  11725           6    0[BANK0 ] volatile unsigned char [
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2387 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2388 ;;Total ram usage:        7 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 2
  2391 ;; This function calls:
  2392 ;;		_UART_send
  2393 ;; This function is called by:
  2394 ;;		_PCLS_info
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398     0082                     _PCLS_info_send:	
  2399                           ;psect for function _PCLS_info_send
  2400                           
  2401     0082                     l1729:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _PCLS_info_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2404                           
  2405     0082                     l1731:	
  2406                           ;./Commands.h: 98: 
  2407                           
  2408     0082  30DF               	movlw	low PCLS_info_send@F11724
  2409     0083  0086               	movwf	6
  2410     0084  3000               	movlw	high PCLS_info_send@F11724
  2411     0085  0087               	movwf	7
  2412     0086  3020               	movlw	low PCLS_info_send@11725
  2413     0087  0084               	movwf	4
  2414     0088  3000               	movlw	high PCLS_info_send@11725
  2415     0089  0085               	movwf	5
  2416     008A  3006               	movlw	6
  2417     008B  00F8               	movwf	??_PCLS_info_send
  2418     008C                     u1160:
  2419     008C  0016               	moviw fsr1++
  2420     008D  001A               	movwi fsr0++
  2421     008E  0BF8               	decfsz	??_PCLS_info_send,f
  2422     008F  288C               	goto	u1160
  2423     0090                     l1733:
  2424     0090  3006               	movlw	6
  2425     0091  00F2               	movwf	UART_send@size
  2426     0092  3000               	movlw	0
  2427     0093  00F3               	movwf	UART_send@size+1
  2428     0094  3020               	movlw	(low (PCLS_info_send@11725| 0))& (0+255)
  2429     0095  3181  2121  3180   	fcall	_UART_send
  2430     0098  3A00               	xorlw	0
  2431     0099  1903               	skipnz
  2432     009A  289C               	goto	u1171
  2433     009B  289D               	goto	u1170
  2434     009C                     u1171:
  2435     009C  2882               	goto	l1731
  2436     009D                     u1170:
  2437     009D                     l112:
  2438     009D  0008               	return
  2439     009E                     __end_of_PCLS_info_send:
  2440                           
  2441                           	psect	text7
  2442     02BC                     __ptext7:	
  2443 ;; *************** function _PCLS_info_receive *****************
  2444 ;; Defined at:
  2445 ;;		line 101 in file "./Commands.h"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;  r              12    0[BANK0 ] volatile unsigned char [
  2450 ;;  j               1   13[BANK0 ] volatile unsigned char 
  2451 ;;  s               1   12[BANK0 ] volatile unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  1    wreg      unsigned char 
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2462 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2463 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2464 ;;      Totals:         3      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2465 ;;Total ram usage:       17 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 1
  2468 ;; This function calls:
  2469 ;;		_rx_wait
  2470 ;; This function is called by:
  2471 ;;		_PCLS_info
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475     02BC                     _PCLS_info_receive:	
  2476                           ;psect for function _PCLS_info_receive
  2477                           
  2478     02BC                     l1735:	
  2479                           ;incstack = 0
  2480                           ; Regs used in _PCLS_info_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2481                           
  2482                           
  2483                           ;./Commands.h: 103:     {
  2484     02BC  300C               	movlw	12
  2485     02BD  0020               	movlb	0	; select bank0
  2486     02BE  00AC               	movwf	PCLS_info_receive@s	;volatile
  2487     02BF                     l1737:
  2488                           
  2489                           ;./Commands.h: 105:     }
  2490     02BF  01AD               	clrf	PCLS_info_receive@j	;volatile
  2491     02C0  2AD9               	goto	l1749
  2492     02C1                     l1739:
  2493                           
  2494                           ;./Commands.h: 106: };./Commands.h: 107: 
  2495     02C1  3180  204D  3182   	fcall	_rx_wait
  2496     02C4  3A00               	xorlw	0
  2497     02C5  1903               	skipnz
  2498     02C6  2AC8               	goto	u1181
  2499     02C7  2AC9               	goto	u1180
  2500     02C8                     u1181:
  2501     02C8  2AD2               	goto	l1743
  2502     02C9                     u1180:
  2503     02C9                     l1741:
  2504                           
  2505                           ;./Commands.h: 108: void user_data_send();./Commands.h: 109: {
  2506     02C9  0020               	movlb	0	; select bank0
  2507     02CA  082D               	movf	PCLS_info_receive@j,w
  2508     02CB  3E20               	addlw	(low (PCLS_info_receive@r| 0))& (0+255)
  2509     02CC  0086               	movwf	6
  2510     02CD  0187               	clrf	7
  2511     02CE  0022               	movlb	2	; select bank2
  2512     02CF  0819               	movf	25,w	;volatile
  2513     02D0  0081               	movwf	1
  2514                           
  2515                           ;./Commands.h: 110:     while(!UART_send((volatile unsigned char []) {0xFE, 0x19, 0x01, 
      +                          0x05, 0x00, 0x00}, 6)){}
  2516     02D1  2AD4               	goto	l1747
  2517     02D2                     l1743:
  2518                           
  2519                           ;./Commands.h: 112: ;./Commands.h: 113: volatile unsigned char user_data_receive()
  2520     02D2  3000               	movlw	0
  2521     02D3  2AFD               	goto	l119
  2522     02D4                     l1747:
  2523                           
  2524                           ;./Commands.h: 115:     volatile char s=26, j, r[26];
  2525     02D4  3001               	movlw	1
  2526     02D5  00F2               	movwf	??_PCLS_info_receive
  2527     02D6  0872               	movf	??_PCLS_info_receive,w
  2528     02D7  0020               	movlb	0	; select bank0
  2529     02D8  07AD               	addwf	PCLS_info_receive@j,f	;volatile
  2530     02D9                     l1749:
  2531     02D9  082C               	movf	PCLS_info_receive@s,w	;volatile
  2532     02DA  022D               	subwf	PCLS_info_receive@j,w	;volatile
  2533     02DB  1C03               	skipc
  2534     02DC  2ADE               	goto	u1191
  2535     02DD  2ADF               	goto	u1190
  2536     02DE                     u1191:
  2537     02DE  2AC1               	goto	l1739
  2538     02DF                     u1190:
  2539     02DF                     l1751:
  2540                           
  2541                           ;./Commands.h: 117:     for (j=0; j < s; j++)
  2542     02DF  0826               	movf	PCLS_info_receive@r+6,w	;volatile
  2543     02E0  00DF               	movwf	_teamID	;volatile
  2544                           
  2545                           ;./Commands.h: 118:     {
  2546     02E1  0827               	movf	PCLS_info_receive@r+7,w	;volatile
  2547     02E2  00DE               	movwf	_playerID	;volatile
  2548                           
  2549                           ;./Commands.h: 119:         if (rx_wait())
  2550     02E3  0828               	movf	PCLS_info_receive@r+8,w	;volatile
  2551     02E4  00F2               	movwf	??_PCLS_info_receive
  2552     02E5  01F3               	clrf	??_PCLS_info_receive+1
  2553     02E6  0872               	movf	??_PCLS_info_receive,w
  2554     02E7  0021               	movlb	1	; select bank1
  2555     02E8  00C5               	movwf	_health^(0+128)	;volatile
  2556     02E9  0873               	movf	??_PCLS_info_receive+1,w
  2557     02EA  00C6               	movwf	(_health+1)^(0+128)	;volatile
  2558                           
  2559                           ;./Commands.h: 120:         {
  2560     02EB  0020               	movlb	0	; select bank0
  2561     02EC  0829               	movf	PCLS_info_receive@r+9,w	;volatile
  2562     02ED  00F2               	movwf	??_PCLS_info_receive
  2563     02EE  01F3               	clrf	??_PCLS_info_receive+1
  2564     02EF  0872               	movf	??_PCLS_info_receive,w
  2565     02F0  00F3               	movwf	??_PCLS_info_receive+1
  2566     02F1  01F2               	clrf	??_PCLS_info_receive
  2567     02F2  0872               	movf	??_PCLS_info_receive,w
  2568     02F3  0021               	movlb	1	; select bank1
  2569     02F4  07C5               	addwf	_health^(0+128),f	;volatile
  2570     02F5  0873               	movf	??_PCLS_info_receive+1,w
  2571     02F6  3DC6               	addwfc	(_health+1)^(0+128),f	;volatile
  2572                           
  2573                           ;./Commands.h: 121:             r[j] = RCREG;
  2574     02F7  0020               	movlb	0	; select bank0
  2575     02F8  082A               	movf	PCLS_info_receive@r+10,w	;volatile
  2576     02F9  00DD               	movwf	_shield_flag	;volatile
  2577                           
  2578                           ;./Commands.h: 122:         }
  2579     02FA  082B               	movf	PCLS_info_receive@r+11,w	;volatile
  2580     02FB  00DC               	movwf	_repair_flag	;volatile
  2581                           
  2582                           ;./Commands.h: 123:         else
  2583     02FC  3001               	movlw	1
  2584     02FD                     l119:
  2585     02FD  0008               	return
  2586     02FE                     __end_of_PCLS_info_receive:
  2587                           
  2588                           	psect	text8
  2589     034E                     __ptext8:	
  2590 ;; *************** function _servos *****************
  2591 ;; Defined at:
  2592 ;;		line 29 in file "Master.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;		None
  2595 ;; Auto vars:     Size  Location     Type
  2596 ;;  j               2   30[BANK0 ] int 
  2597 ;;  i               2   28[BANK0 ] int 
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2608 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2610 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2611 ;;Total ram usage:        4 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 4
  2614 ;; This function calls:
  2615 ;;		_user_data
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621     034E                     _servos:	
  2622                           ;psect for function _servos
  2623                           
  2624     034E                     l2171:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _servos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2627                           
  2628                           
  2629                           ;Master.c: 31:         LATCbits.LATC3 = 0;;Master.c: 32:         i=1;
  2630     034E  0020               	movlb	0	; select bank0
  2631     034F  1193               	bcf	19,3	;volatile
  2632                           
  2633                           ;Master.c: 33:     }}
  2634     0350  1213               	bcf	19,4	;volatile
  2635                           
  2636                           ;Master.c: 35:     if(potB < 25)
  2637     0351  1293               	bcf	19,5	;volatile
  2638                           
  2639                           ;Master.c: 36:     {
  2640     0352  1013               	bcf	19,0	;volatile
  2641                           
  2642                           ;Master.c: 38:         LATCbits.LATC0 = 0;
  2643     0353  1391               	bcf	17,7	;volatile
  2644     0354                     l2173:
  2645                           
  2646                           ;Master.c: 40:     }
  2647     0354  3180  2021  3183   	fcall	_user_data
  2648     0357                     l2175:
  2649                           
  2650                           ;Master.c: 42:     {
  2651     0357  3000               	movlw	0
  2652     0358  0020               	movlb	0	; select bank0
  2653     0359  0247               	subwf	_potA+1,w	;volatile
  2654     035A  3019               	movlw	25
  2655     035B  1903               	skipnz
  2656     035C  0246               	subwf	_potA,w	;volatile
  2657     035D  1803               	skipnc
  2658     035E  2B60               	goto	u1841
  2659     035F  2B61               	goto	u1840
  2660     0360                     u1841:
  2661     0360  2B66               	goto	l2181
  2662     0361                     u1840:
  2663     0361                     l2177:
  2664                           
  2665                           ;Master.c: 43:         LATCbits.LATC5 = 1;;Master.c: 44:         LATCbits.LATC0 = 1;
  2666     0361  1598               	bsf	24,3	;volatile
  2667                           
  2668                           ;Master.c: 45:         j=0;
  2669     0362  1218               	bcf	24,4	;volatile
  2670     0363                     l2179:
  2671                           
  2672                           ;Master.c: 46:     }
  2673     0363  01BC               	clrf	servos@i
  2674     0364  01BD               	clrf	servos@i+1
  2675                           
  2676                           ;Master.c: 47:     else
  2677     0365  2B77               	goto	l337
  2678     0366                     l2181:
  2679     0366  3000               	movlw	0
  2680     0367  0247               	subwf	_potA+1,w	;volatile
  2681     0368  304C               	movlw	76
  2682     0369  1903               	skipnz
  2683     036A  0246               	subwf	_potA,w	;volatile
  2684     036B  1C03               	skipc
  2685     036C  2B6E               	goto	u1851
  2686     036D  2B6F               	goto	u1850
  2687     036E                     u1851:
  2688     036E  2B72               	goto	l338
  2689     036F                     u1850:
  2690     036F                     l2183:
  2691                           
  2692                           ;Master.c: 49:         LATCbits.LATC5 = 0;;Master.c: 50:         j=1;
  2693     036F  1598               	bsf	24,3	;volatile
  2694                           
  2695                           ;Master.c: 51:     }}
  2696     0370  1618               	bsf	24,4	;volatile
  2697     0371  2B63               	goto	l2179
  2698     0372                     l338:	
  2699                           ;Master.c: 54:     else{LATAbits.LATA7=0;}
  2700                           
  2701                           
  2702                           ;Master.c: 55: };Master.c: 56: 
  2703     0372  1198               	bcf	24,3	;volatile
  2704     0373                     l2187:
  2705                           
  2706                           ;Master.c: 57: void claw()
  2707     0373  3001               	movlw	1
  2708     0374  00BC               	movwf	servos@i
  2709     0375  3000               	movlw	0
  2710     0376  00BD               	movwf	servos@i+1
  2711     0377                     l337:
  2712                           
  2713                           ;Master.c: 60: 
  2714     0377  3000               	movlw	0
  2715     0378  0245               	subwf	_potB+1,w	;volatile
  2716     0379  3019               	movlw	25
  2717     037A  1903               	skipnz
  2718     037B  0244               	subwf	_potB,w	;volatile
  2719     037C  1803               	skipnc
  2720     037D  2B7F               	goto	u1861
  2721     037E  2B80               	goto	u1860
  2722     037F                     u1861:
  2723     037F  2B85               	goto	l2193
  2724     0380                     u1860:
  2725     0380                     l2189:
  2726                           
  2727                           ;Master.c: 61:     servo(0, 0, 0, potA);;Master.c: 62: }
  2728     0380  1698               	bsf	24,5	;volatile
  2729                           
  2730                           ;Master.c: 63: 
  2731     0381  1018               	bcf	24,0	;volatile
  2732     0382                     l2191:
  2733                           
  2734                           ;Master.c: 64: 
  2735     0382  01BE               	clrf	servos@j
  2736     0383  01BF               	clrf	servos@j+1
  2737                           
  2738                           ;Master.c: 65: 
  2739     0384  2B96               	goto	l2201
  2740     0385                     l2193:
  2741     0385  3000               	movlw	0
  2742     0386  0245               	subwf	_potB+1,w	;volatile
  2743     0387  304C               	movlw	76
  2744     0388  1903               	skipnz
  2745     0389  0244               	subwf	_potB,w	;volatile
  2746     038A  1C03               	skipc
  2747     038B  2B8D               	goto	u1871
  2748     038C  2B8E               	goto	u1870
  2749     038D                     u1871:
  2750     038D  2B91               	goto	l342
  2751     038E                     u1870:
  2752     038E                     l2195:
  2753                           
  2754                           ;Master.c: 67:     UART_init();;Master.c: 68:     user_data();
  2755     038E  1698               	bsf	24,5	;volatile
  2756                           
  2757                           ;Master.c: 69:     ADC_init();
  2758     038F  1418               	bsf	24,0	;volatile
  2759     0390  2B82               	goto	l2191
  2760     0391                     l342:	
  2761                           ;Master.c: 72:     {
  2762                           
  2763                           
  2764                           ;Master.c: 73:         line_colour = read_adc(mpin) - 0x100;;Master.c: 74:         while
      +                          (swB)
  2765     0391  1298               	bcf	24,5	;volatile
  2766     0392                     l2199:
  2767                           
  2768                           ;Master.c: 75:         {
  2769     0392  3001               	movlw	1
  2770     0393  00BE               	movwf	servos@j
  2771     0394  3000               	movlw	0
  2772     0395  00BF               	movwf	servos@j+1
  2773     0396                     l2201:
  2774                           
  2775                           ;Master.c: 78:         }
  2776     0396  083C               	movf	servos@i,w
  2777     0397  043D               	iorwf	servos@i+1,w
  2778     0398  1903               	btfsc	3,2
  2779     0399  2B9B               	goto	u1881
  2780     039A  2B9C               	goto	u1880
  2781     039B                     u1881:
  2782     039B  2BA4               	goto	l344
  2783     039C                     u1880:
  2784     039C                     l2203:
  2785     039C  083E               	movf	servos@j,w
  2786     039D  043F               	iorwf	servos@j+1,w
  2787     039E  1903               	btfsc	3,2
  2788     039F  2BA1               	goto	u1891
  2789     03A0  2BA2               	goto	u1890
  2790     03A1                     u1891:
  2791     03A1  2BA4               	goto	l344
  2792     03A2                     u1890:
  2793     03A2                     l2205:
  2794     03A2  1796               	bsf	22,7	;volatile
  2795     03A3  2BA5               	goto	l346
  2796     03A4                     l344:	
  2797                           ;Master.c: 79:     }
  2798                           
  2799     03A4  1396               	bcf	22,7	;volatile
  2800     03A5                     l346:
  2801     03A5  0008               	return
  2802     03A6                     __end_of_servos:
  2803                           
  2804                           	psect	text9
  2805     0405                     __ptext9:	
  2806 ;; *************** function _line_follower *****************
  2807 ;; Defined at:
  2808 ;;		line 47 in file "./Line Follower.h"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;  r_val           2   15[BANK0 ] volatile unsigned int 
  2813 ;;  m_val           2   13[BANK0 ] volatile unsigned int 
  2814 ;;  l_val           2   11[BANK0 ] volatile unsigned int 
  2815 ;; Return value:  Size  Location     Type
  2816 ;;                  1    wreg      void 
  2817 ;; Registers used:
  2818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2819 ;; Tracked objects:
  2820 ;;		On entry : 0/0
  2821 ;;		On exit  : 0/0
  2822 ;;		Unchanged: 0/0
  2823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2825 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2826 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2827 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2828 ;;Total ram usage:        8 bytes
  2829 ;; Hardware stack levels used: 1
  2830 ;; Hardware stack levels required when called: 3
  2831 ;; This function calls:
  2832 ;;		_abs
  2833 ;;		_motor
  2834 ;;		_read_adc
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840     0405                     _line_follower:	
  2841                           ;psect for function _line_follower
  2842                           
  2843     0405                     l2081:	
  2844                           ;incstack = 0
  2845                           ; Regs used in _line_follower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2846                           
  2847                           
  2848                           ;./Line Follower.h: 49:     ADCON0bits.ADGO = 1;;./Line Follower.h: 51:     l_val = read
      +                          _adc(lpin);
  2849     0405  0020               	movlb	0	; select bank0
  2850     0406  1011               	bcf	17,0	;volatile
  2851                           
  2852                           ;./Line Follower.h: 52:     ADCON0bits.ADGO = 1;
  2853     0407  1091               	bcf	17,1	;volatile
  2854                           
  2855                           ;./Line Follower.h: 53:     while(ADCON0bits.ADGO){}
  2856     0408  1111               	bcf	17,2	;volatile
  2857                           
  2858                           ;./Line Follower.h: 55:     ADCON0bits.ADGO = 1;
  2859     0409  1196               	bcf	22,3	;volatile
  2860                           
  2861                           ;./Line Follower.h: 57:     r_val = read_adc(rpin);
  2862     040A  0021               	movlb	1	; select bank1
  2863     040B  1413               	bsf	19,0	;volatile
  2864     040C                     l295:	
  2865                           ;./Line Follower.h: 58: 
  2866                           
  2867     040C  1813               	btfsc	19,0	;volatile
  2868     040D  2C0F               	goto	u1711
  2869     040E  2C10               	goto	u1710
  2870     040F                     u1711:
  2871     040F  2C0C               	goto	l295
  2872     0410                     u1710:
  2873     0410                     l2083:
  2874                           
  2875                           ;./Line Follower.h: 59:     if(m_val > line_colour)
  2876     0410  300B               	movlw	11
  2877     0411  3180  20FA  3184   	fcall	_read_adc
  2878     0414  0871               	movf	?_read_adc+1,w
  2879     0415  0020               	movlb	0	; select bank0
  2880     0416  00AC               	movwf	line_follower@l_val+1	;volatile
  2881     0417  0870               	movf	?_read_adc,w
  2882     0418  00AB               	movwf	line_follower@l_val	;volatile
  2883     0419                     l2085:
  2884                           
  2885                           ;./Line Follower.h: 60:     {
  2886     0419  0021               	movlb	1	; select bank1
  2887     041A  1413               	bsf	19,0	;volatile
  2888     041B                     l298:	
  2889                           ;./Line Follower.h: 61:   l_vec = fast;
  2890                           
  2891     041B  1813               	btfsc	19,0	;volatile
  2892     041C  2C1E               	goto	u1721
  2893     041D  2C1F               	goto	u1720
  2894     041E                     u1721:
  2895     041E  2C1B               	goto	l298
  2896     041F                     u1720:
  2897     041F                     l2087:
  2898                           
  2899                           ;./Line Follower.h: 62:   r_vec = fast;
  2900     041F  3009               	movlw	9
  2901     0420  3180  20FA  3184   	fcall	_read_adc
  2902     0423  0871               	movf	?_read_adc+1,w
  2903     0424  0020               	movlb	0	; select bank0
  2904     0425  00AE               	movwf	line_follower@m_val+1	;volatile
  2905     0426  0870               	movf	?_read_adc,w
  2906     0427  00AD               	movwf	line_follower@m_val	;volatile
  2907     0428                     l2089:
  2908                           
  2909                           ;./Line Follower.h: 63:         LATAbits.LATA1 = 1;
  2910     0428  0021               	movlb	1	; select bank1
  2911     0429  1413               	bsf	19,0	;volatile
  2912     042A                     l301:	
  2913                           ;./Line Follower.h: 64:     }
  2914                           
  2915     042A  1813               	btfsc	19,0	;volatile
  2916     042B  2C2D               	goto	u1731
  2917     042C  2C2E               	goto	u1730
  2918     042D                     u1731:
  2919     042D  2C2A               	goto	l301
  2920     042E                     u1730:
  2921     042E                     l2091:
  2922                           
  2923                           ;./Line Follower.h: 65:     else
  2924     042E  300A               	movlw	10
  2925     042F  3180  20FA  3184   	fcall	_read_adc
  2926     0432  0871               	movf	?_read_adc+1,w
  2927     0433  0020               	movlb	0	; select bank0
  2928     0434  00B0               	movwf	line_follower@r_val+1	;volatile
  2929     0435  0870               	movf	?_read_adc,w
  2930     0436  00AF               	movwf	line_follower@r_val	;volatile
  2931     0437                     l2093:
  2932                           
  2933                           ;./Line Follower.h: 67:   l_vec = slow;
  2934     0437  082E               	movf	line_follower@m_val+1,w	;volatile
  2935     0438  0267               	subwf	_line_colour+1,w	;volatile
  2936     0439  1D03               	skipz
  2937     043A  2C3D               	goto	u1745
  2938     043B  082D               	movf	line_follower@m_val,w	;volatile
  2939     043C  0266               	subwf	_line_colour,w	;volatile
  2940     043D                     u1745:
  2941     043D  1803               	skipnc
  2942     043E  2C40               	goto	u1741
  2943     043F  2C41               	goto	u1740
  2944     0440                     u1741:
  2945     0440  2C4B               	goto	l2099
  2946     0441                     u1740:
  2947     0441                     l2095:
  2948                           
  2949                           ;./Line Follower.h: 68:   r_vec = slow;;./Line Follower.h: 69:         LATAbits.LATA1 = 
      +                          0;
  2950     0441  0865               	movf	_fast+1,w	;volatile
  2951     0442  00EB               	movwf	_l_vec+1	;volatile
  2952     0443  0864               	movf	_fast,w	;volatile
  2953     0444  00EA               	movwf	_l_vec	;volatile
  2954                           
  2955                           ;./Line Follower.h: 70:     }
  2956     0445  0865               	movf	_fast+1,w	;volatile
  2957     0446  00E9               	movwf	_r_vec+1	;volatile
  2958     0447  0864               	movf	_fast,w	;volatile
  2959     0448  00E8               	movwf	_r_vec	;volatile
  2960     0449                     l2097:
  2961                           
  2962                           ;./Line Follower.h: 71: 
  2963     0449  1496               	bsf	22,1	;volatile
  2964                           
  2965                           ;./Line Follower.h: 72:     if(l_val > line_colour)
  2966     044A  2C54               	goto	l305
  2967     044B                     l2099:
  2968                           
  2969                           ;./Line Follower.h: 74:   l_vec += speed_inc;;./Line Follower.h: 75:   r_vec -= speed_in
      +                          c*2;
  2970     044B  0863               	movf	_slow+1,w	;volatile
  2971     044C  00EB               	movwf	_l_vec+1	;volatile
  2972     044D  0862               	movf	_slow,w	;volatile
  2973     044E  00EA               	movwf	_l_vec	;volatile
  2974                           
  2975                           ;./Line Follower.h: 76:         LATAbits.LATA2 = 1;
  2976     044F  0863               	movf	_slow+1,w	;volatile
  2977     0450  00E9               	movwf	_r_vec+1	;volatile
  2978     0451  0862               	movf	_slow,w	;volatile
  2979     0452  00E8               	movwf	_r_vec	;volatile
  2980     0453                     l2101:
  2981                           
  2982                           ;./Line Follower.h: 77:     }
  2983     0453  1096               	bcf	22,1	;volatile
  2984     0454                     l305:	
  2985                           ;./Line Follower.h: 78:     else {LATAbits.LATA2 = 0;}
  2986                           
  2987                           
  2988                           ;./Line Follower.h: 80:     if(r_val > line_colour)
  2989     0454  082C               	movf	line_follower@l_val+1,w	;volatile
  2990     0455  0267               	subwf	_line_colour+1,w	;volatile
  2991     0456  1D03               	skipz
  2992     0457  2C5A               	goto	u1755
  2993     0458  082B               	movf	line_follower@l_val,w	;volatile
  2994     0459  0266               	subwf	_line_colour,w	;volatile
  2995     045A                     u1755:
  2996     045A  1803               	skipnc
  2997     045B  2C5D               	goto	u1751
  2998     045C  2C5E               	goto	u1750
  2999     045D                     u1751:
  3000     045D  2C6E               	goto	l306
  3001     045E                     u1750:
  3002     045E                     l2103:
  3003                           
  3004                           ;./Line Follower.h: 81:     {;./Line Follower.h: 82:   l_vec -= speed_inc*2;
  3005     045E  0860               	movf	_speed_inc,w	;volatile
  3006     045F  07EA               	addwf	_l_vec,f	;volatile
  3007     0460  0861               	movf	_speed_inc+1,w	;volatile
  3008     0461  3DEB               	addwfc	_l_vec+1,f	;volatile
  3009     0462                     l2105:
  3010                           
  3011                           ;./Line Follower.h: 83:   r_vec += speed_inc;
  3012     0462  0861               	movf	_speed_inc+1,w	;volatile
  3013     0463  00FD               	movwf	??_line_follower+1
  3014     0464  0860               	movf	_speed_inc,w	;volatile
  3015     0465  00FC               	movwf	??_line_follower
  3016     0466  35FC               	lslf	??_line_follower,f
  3017     0467  0DFD               	rlf	??_line_follower+1,f
  3018     0468  087C               	movf	??_line_follower,w
  3019     0469  02E8               	subwf	_r_vec,f	;volatile
  3020     046A  087D               	movf	??_line_follower+1,w
  3021     046B  3BE9               	subwfb	_r_vec+1,f	;volatile
  3022     046C                     l2107:
  3023                           
  3024                           ;./Line Follower.h: 84:         LATAbits.LATA0 = 1;
  3025     046C  1516               	bsf	22,2	;volatile
  3026                           
  3027                           ;./Line Follower.h: 85:     }
  3028     046D  2C6F               	goto	l2109
  3029     046E                     l306:	
  3030                           ;./Line Follower.h: 86:     else {LATAbits.LATA0 = 0;}
  3031                           
  3032     046E  1116               	bcf	22,2	;volatile
  3033     046F                     l2109:
  3034                           
  3035                           ;./Line Follower.h: 88:     if(l_vec >= 100)
  3036     046F  0830               	movf	line_follower@r_val+1,w	;volatile
  3037     0470  0267               	subwf	_line_colour+1,w	;volatile
  3038     0471  1D03               	skipz
  3039     0472  2C75               	goto	u1765
  3040     0473  082F               	movf	line_follower@r_val,w	;volatile
  3041     0474  0266               	subwf	_line_colour,w	;volatile
  3042     0475                     u1765:
  3043     0475  1803               	skipnc
  3044     0476  2C78               	goto	u1761
  3045     0477  2C79               	goto	u1760
  3046     0478                     u1761:
  3047     0478  2C89               	goto	l308
  3048     0479                     u1760:
  3049     0479                     l2111:
  3050                           
  3051                           ;./Line Follower.h: 89:     {;./Line Follower.h: 90:         l_dir = 1;
  3052     0479  0861               	movf	_speed_inc+1,w	;volatile
  3053     047A  00FD               	movwf	??_line_follower+1
  3054     047B  0860               	movf	_speed_inc,w	;volatile
  3055     047C  00FC               	movwf	??_line_follower
  3056     047D  35FC               	lslf	??_line_follower,f
  3057     047E  0DFD               	rlf	??_line_follower+1,f
  3058     047F  087C               	movf	??_line_follower,w
  3059     0480  02EA               	subwf	_l_vec,f	;volatile
  3060     0481  087D               	movf	??_line_follower+1,w
  3061     0482  3BEB               	subwfb	_l_vec+1,f	;volatile
  3062     0483                     l2113:
  3063                           
  3064                           ;./Line Follower.h: 91:         l_vec -= 100;
  3065     0483  0860               	movf	_speed_inc,w	;volatile
  3066     0484  07E8               	addwf	_r_vec,f	;volatile
  3067     0485  0861               	movf	_speed_inc+1,w	;volatile
  3068     0486  3DE9               	addwfc	_r_vec+1,f	;volatile
  3069     0487                     l2115:
  3070                           
  3071                           ;./Line Follower.h: 92:     }
  3072     0487  1416               	bsf	22,0	;volatile
  3073                           
  3074                           ;./Line Follower.h: 93:     else
  3075     0488  2C8A               	goto	l2117
  3076     0489                     l308:	
  3077                           ;./Line Follower.h: 94:     {
  3078                           
  3079     0489  1016               	bcf	22,0	;volatile
  3080     048A                     l2117:
  3081                           
  3082                           ;./Line Follower.h: 96:         l_vec = 100 - l_vec;
  3083     048A  086B               	movf	_l_vec+1,w	;volatile
  3084     048B  3A80               	xorlw	128
  3085     048C  00FC               	movwf	??_line_follower
  3086     048D  3080               	movlw	128
  3087     048E  027C               	subwf	??_line_follower,w
  3088     048F  1D03               	skipz
  3089     0490  2C93               	goto	u1775
  3090     0491  3064               	movlw	100
  3091     0492  026A               	subwf	_l_vec,w	;volatile
  3092     0493                     u1775:
  3093     0493  1C03               	skipc
  3094     0494  2C96               	goto	u1771
  3095     0495  2C97               	goto	u1770
  3096     0496                     u1771:
  3097     0496  2C9F               	goto	l2121
  3098     0497                     u1770:
  3099     0497                     l2119:
  3100                           
  3101                           ;./Line Follower.h: 97:     };./Line Follower.h: 98: 
  3102     0497  3001               	movlw	1
  3103     0498  0020               	movlb	0	; select bank0
  3104     0499  00DB               	movwf	_l_dir	;volatile
  3105                           
  3106                           ;./Line Follower.h: 99:     if(r_vec >= 100)
  3107     049A  309C               	movlw	156
  3108     049B  07EA               	addwf	_l_vec,f	;volatile
  3109     049C  30FF               	movlw	255
  3110     049D  3DEB               	addwfc	_l_vec+1,f	;volatile
  3111                           
  3112                           ;./Line Follower.h: 100:     {
  3113     049E  2CAB               	goto	l311
  3114     049F                     l2121:
  3115                           
  3116                           ;./Line Follower.h: 102: ;./Line Follower.h: 103:         r_vec -= 100;
  3117     049F  3002               	movlw	2
  3118     04A0  0020               	movlb	0	; select bank0
  3119     04A1  00DB               	movwf	_l_dir	;volatile
  3120                           
  3121                           ;./Line Follower.h: 104:     }
  3122     04A2  3064               	movlw	100
  3123     04A3  00FC               	movwf	??_line_follower
  3124     04A4  086A               	movf	_l_vec,w	;volatile
  3125     04A5  027C               	subwf	??_line_follower,w
  3126     04A6  00EA               	movwf	_l_vec	;volatile
  3127     04A7  096B               	comf	_l_vec+1,w	;volatile
  3128     04A8  1803               	skipnc
  3129     04A9  0A89               	incf	9,f
  3130     04AA  00EB               	movwf	_l_vec+1	;volatile
  3131     04AB                     l311:	
  3132                           ;./Line Follower.h: 105:     else
  3133                           
  3134                           
  3135                           ;./Line Follower.h: 107:         r_dir = 2;
  3136     04AB  0869               	movf	_r_vec+1,w	;volatile
  3137     04AC  3A80               	xorlw	128
  3138     04AD  00FC               	movwf	??_line_follower
  3139     04AE  3080               	movlw	128
  3140     04AF  027C               	subwf	??_line_follower,w
  3141     04B0  1D03               	skipz
  3142     04B1  2CB4               	goto	u1785
  3143     04B2  3064               	movlw	100
  3144     04B3  0268               	subwf	_r_vec,w	;volatile
  3145     04B4                     u1785:
  3146     04B4  1C03               	skipc
  3147     04B5  2CB7               	goto	u1781
  3148     04B6  2CB8               	goto	u1780
  3149     04B7                     u1781:
  3150     04B7  2CC0               	goto	l2125
  3151     04B8                     u1780:
  3152     04B8                     l2123:
  3153                           
  3154                           ;./Line Follower.h: 108:         r_vec = 100 - r_vec;;./Line Follower.h: 109:     }
  3155     04B8  3001               	movlw	1
  3156     04B9  0020               	movlb	0	; select bank0
  3157     04BA  00DA               	movwf	_r_dir	;volatile
  3158                           
  3159                           ;./Line Follower.h: 111:     if(l_vec > 200){l_vec = 200;}
  3160     04BB  309C               	movlw	156
  3161     04BC  07E8               	addwf	_r_vec,f	;volatile
  3162     04BD  30FF               	movlw	255
  3163     04BE  3DE9               	addwfc	_r_vec+1,f	;volatile
  3164                           
  3165                           ;./Line Follower.h: 112:     if(r_vec > 200){r_vec = 200;}
  3166     04BF  2CCC               	goto	l313
  3167     04C0                     l2125:
  3168                           
  3169                           ;./Line Follower.h: 114:     PIR1bits.ADIF = 0;;./Line Follower.h: 115:     ADCON0bits.A
      +                          DGO = 1;
  3170     04C0  3002               	movlw	2
  3171     04C1  0020               	movlb	0	; select bank0
  3172     04C2  00DA               	movwf	_r_dir	;volatile
  3173                           
  3174                           ;./Line Follower.h: 116: }
  3175     04C3  3064               	movlw	100
  3176     04C4  00FC               	movwf	??_line_follower
  3177     04C5  0868               	movf	_r_vec,w	;volatile
  3178     04C6  027C               	subwf	??_line_follower,w
  3179     04C7  00E8               	movwf	_r_vec	;volatile
  3180     04C8  0969               	comf	_r_vec+1,w	;volatile
  3181     04C9  1803               	skipnc
  3182     04CA  0A89               	incf	9,f
  3183     04CB  00E9               	movwf	_r_vec+1	;volatile
  3184     04CC                     l313:
  3185     04CC  086B               	movf	_l_vec+1,w	;volatile
  3186     04CD  3A80               	xorlw	128
  3187     04CE  00FC               	movwf	??_line_follower
  3188     04CF  3080               	movlw	128
  3189     04D0  027C               	subwf	??_line_follower,w
  3190     04D1  1D03               	skipz
  3191     04D2  2CD5               	goto	u1795
  3192     04D3  30C9               	movlw	201
  3193     04D4  026A               	subwf	_l_vec,w	;volatile
  3194     04D5                     u1795:
  3195     04D5  1C03               	skipc
  3196     04D6  2CD8               	goto	u1791
  3197     04D7  2CD9               	goto	u1790
  3198     04D8                     u1791:
  3199     04D8  2CDE               	goto	l314
  3200     04D9                     u1790:
  3201     04D9                     l2127:
  3202     04D9  30C8               	movlw	200
  3203     04DA  0020               	movlb	0	; select bank0
  3204     04DB  00EA               	movwf	_l_vec	;volatile
  3205     04DC  3000               	movlw	0
  3206     04DD  00EB               	movwf	_l_vec+1	;volatile
  3207     04DE                     l314:
  3208     04DE  0020               	movlb	0	; select bank0
  3209     04DF  0869               	movf	_r_vec+1,w	;volatile
  3210     04E0  3A80               	xorlw	128
  3211     04E1  00FC               	movwf	??_line_follower
  3212     04E2  3080               	movlw	128
  3213     04E3  027C               	subwf	??_line_follower,w
  3214     04E4  1D03               	skipz
  3215     04E5  2CE8               	goto	u1805
  3216     04E6  30C9               	movlw	201
  3217     04E7  0268               	subwf	_r_vec,w	;volatile
  3218     04E8                     u1805:
  3219     04E8  1C03               	skipc
  3220     04E9  2CEB               	goto	u1801
  3221     04EA  2CEC               	goto	u1800
  3222     04EB                     u1801:
  3223     04EB  2CF1               	goto	l2131
  3224     04EC                     u1800:
  3225     04EC                     l2129:
  3226     04EC  30C8               	movlw	200
  3227     04ED  0020               	movlb	0	; select bank0
  3228     04EE  00E8               	movwf	_r_vec	;volatile
  3229     04EF  3000               	movlw	0
  3230     04F0  00E9               	movwf	_r_vec+1	;volatile
  3231     04F1                     l2131:
  3232     04F1  0020               	movlb	0	; select bank0
  3233     04F2  086B               	movf	_l_vec+1,w	;volatile
  3234     04F3  00F1               	movwf	abs@a+1
  3235     04F4  086A               	movf	_l_vec,w	;volatile
  3236     04F5  00F0               	movwf	abs@a
  3237     04F6  3180  2010  3184   	fcall	_abs
  3238     04F9  0870               	movf	?_abs,w
  3239     04FA  00F8               	movwf	motor@pwmA
  3240     04FB  0020               	movlb	0	; select bank0
  3241     04FC  085A               	movf	_r_dir,w	;volatile
  3242     04FD  00F9               	movwf	motor@dirB
  3243     04FE  0869               	movf	_r_vec+1,w	;volatile
  3244     04FF  00F1               	movwf	abs@a+1
  3245     0500  0868               	movf	_r_vec,w	;volatile
  3246     0501  00F0               	movwf	abs@a
  3247     0502  3180  2010  3184   	fcall	_abs
  3248     0505  0870               	movf	?_abs,w
  3249     0506  00FA               	movwf	motor@pwmB
  3250     0507  0020               	movlb	0	; select bank0
  3251     0508  085B               	movf	_l_dir,w	;volatile
  3252     0509  3181  21D2  3184   	fcall	_motor
  3253     050C                     l2133:
  3254     050C  002E               	movlb	14	; select bank14
  3255     050D  100D               	bcf	13,0	;volatile
  3256     050E                     l2135:
  3257     050E  0021               	movlb	1	; select bank1
  3258     050F  1413               	bsf	19,0	;volatile
  3259     0510                     l316:
  3260     0510  0008               	return
  3261     0511                     __end_of_line_follower:
  3262                           
  3263                           	psect	text10
  3264     0240                     __ptext10:	
  3265 ;; *************** function _drive *****************
  3266 ;; Defined at:
  3267 ;;		line 62 in file "./Driving.h"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;  dir             2   34[BANK0 ] volatile int 
  3272 ;;  y               2   32[BANK0 ] volatile int 
  3273 ;;  x               2   30[BANK0 ] volatile int 
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3284 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3285 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3286 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3287 ;;Total ram usage:        8 bytes
  3288 ;; Hardware stack levels used: 1
  3289 ;; Hardware stack levels required when called: 4
  3290 ;; This function calls:
  3291 ;;		_Vdrive
  3292 ;;		___wmul
  3293 ;;		_user_data
  3294 ;; This function is called by:
  3295 ;;		_main
  3296 ;; This function uses a non-reentrant model
  3297 ;;
  3298                           
  3299     0240                     _drive:	
  3300                           ;psect for function _drive
  3301                           
  3302     0240                     l2059:	
  3303                           ;incstack = 0
  3304                           ; Regs used in _drive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3305                           
  3306                           
  3307                           ;./Driving.h: 64:     x = (joy_rx - 50)*2;;./Driving.h: 65:     y = dir * (joy_ly);;./Dr
      +                          iving.h: 67:     Vdrive(y, x);
  3308     0240  3180  2021  3182   	fcall	_user_data
  3309     0243                     l2061:
  3310     0243  3000               	movlw	0
  3311     0244  0020               	movlb	0	; select bank0
  3312     0245  0255               	subwf	_joy_ry+1,w	;volatile
  3313     0246  301A               	movlw	26
  3314     0247  1903               	skipnz
  3315     0248  0254               	subwf	_joy_ry,w	;volatile
  3316     0249  1C03               	skipc
  3317     024A  2A4C               	goto	u1701
  3318     024B  2A4D               	goto	u1700
  3319     024C                     u1701:
  3320     024C  2A52               	goto	l2065
  3321     024D                     u1700:
  3322     024D                     l2063:
  3323     024D  3001               	movlw	1
  3324     024E  00C2               	movwf	drive@dir	;volatile
  3325     024F  3000               	movlw	0
  3326     0250  00C3               	movwf	drive@dir+1	;volatile
  3327     0251  2A56               	goto	l2067
  3328     0252                     l2065:
  3329     0252  30FF               	movlw	255
  3330     0253  00C2               	movwf	drive@dir	;volatile
  3331     0254  30FF               	movlw	255
  3332     0255  00C3               	movwf	drive@dir+1	;volatile
  3333     0256                     l2067:
  3334     0256  0857               	movf	_joy_rx+1,w	;volatile
  3335     0257  00BD               	movwf	??_drive+1
  3336     0258  0856               	movf	_joy_rx,w	;volatile
  3337     0259  00BC               	movwf	??_drive
  3338     025A  35BC               	lslf	??_drive,f
  3339     025B  0DBD               	rlf	??_drive+1,f
  3340     025C  083C               	movf	??_drive,w
  3341     025D  3E9C               	addlw	156
  3342     025E  00BE               	movwf	drive@x	;volatile
  3343     025F  30FF               	movlw	255
  3344     0260  3D3D               	addwfc	??_drive+1,w
  3345     0261  00BF               	movwf	drive@x+1	;volatile
  3346     0262                     l2069:
  3347     0262  0843               	movf	drive@dir+1,w	;volatile
  3348     0263  00A1               	movwf	___wmul@multiplier+1
  3349     0264  0842               	movf	drive@dir,w	;volatile
  3350     0265  00A0               	movwf	___wmul@multiplier
  3351     0266  0853               	movf	_joy_ly+1,w	;volatile
  3352     0267  00A3               	movwf	___wmul@multiplicand+1
  3353     0268  0852               	movf	_joy_ly,w	;volatile
  3354     0269  00A2               	movwf	___wmul@multiplicand
  3355     026A  3180  20BA  3182   	fcall	___wmul
  3356     026D  0020               	movlb	0	; select bank0
  3357     026E  0821               	movf	?___wmul+1,w
  3358     026F  00C1               	movwf	drive@y+1	;volatile
  3359     0270  0820               	movf	?___wmul,w
  3360     0271  00C0               	movwf	drive@y	;volatile
  3361     0272                     l2071:
  3362     0272  0841               	movf	drive@y+1,w	;volatile
  3363     0273  00AC               	movwf	Vdrive@y+1
  3364     0274  0840               	movf	drive@y,w	;volatile
  3365     0275  00AB               	movwf	Vdrive@y
  3366     0276  083F               	movf	drive@x+1,w	;volatile
  3367     0277  00AE               	movwf	Vdrive@x+1
  3368     0278  083E               	movf	drive@x,w	;volatile
  3369     0279  00AD               	movwf	Vdrive@x
  3370     027A  3185  2511  3182   	fcall	_Vdrive
  3371     027D                     l257:
  3372     027D  0008               	return
  3373     027E                     __end_of_drive:
  3374                           
  3375                           	psect	text11
  3376     0021                     __ptext11:	
  3377 ;; *************** function _user_data *****************
  3378 ;; Defined at:
  3379 ;;		line 200 in file "./Commands.h"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;		None
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;		None
  3384 ;; Return value:  Size  Location     Type
  3385 ;;                  1    wreg      void 
  3386 ;; Registers used:
  3387 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3388 ;; Tracked objects:
  3389 ;;		On entry : 0/0
  3390 ;;		On exit  : 0/0
  3391 ;;		Unchanged: 0/0
  3392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3395 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3396 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3397 ;;Total ram usage:        1 bytes
  3398 ;; Hardware stack levels used: 1
  3399 ;; Hardware stack levels required when called: 3
  3400 ;; This function calls:
  3401 ;;		_user_data_receive
  3402 ;;		_user_data_send
  3403 ;; This function is called by:
  3404 ;;		_drive
  3405 ;;		_shield_code
  3406 ;;		_servos
  3407 ;;		_main
  3408 ;;		_claw
  3409 ;; This function uses a non-reentrant model
  3410 ;;
  3411                           
  3412     0021                     _user_data:	
  3413                           ;psect for function _user_data
  3414                           
  3415     0021                     l1931:	
  3416                           ;incstack = 0
  3417                           ; Regs used in _user_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3418                           
  3419                           
  3420                           ;./Commands.h: 202: 
  3421     0021  3180  2066  3180   	fcall	_user_data_send
  3422     0024                     l1935:	
  3423                           ;./Commands.h: 203: void transmit_shield_code()
  3424                           
  3425                           
  3426                           ;./Commands.h: 203: void transmit_shield_code()
  3427     0024  3186  2639  3180   	fcall	_user_data_receive
  3428     0027  3A00               	xorlw	0
  3429     0028  1903               	skipnz
  3430     0029  282B               	goto	u1501
  3431     002A  282C               	goto	u1500
  3432     002B                     u1501:
  3433     002B  2821               	goto	l1931
  3434     002C                     u1500:
  3435     002C                     l1937:
  3436                           
  3437                           ;./Commands.h: 207: 
  3438     002C  300D               	movlw	13
  3439     002D  00FB               	movwf	??_user_data
  3440     002E  30FC               	movlw	252
  3441     002F                     u2087:
  3442     002F  0B89               	decfsz	9,f
  3443     0030  282F               	goto	u2087
  3444     0031  0BFB               	decfsz	??_user_data,f
  3445     0032  282F               	goto	u2087
  3446     0033                     l152:
  3447     0033  0008               	return
  3448     0034                     __end_of_user_data:
  3449                           
  3450                           	psect	text12
  3451     0066                     __ptext12:	
  3452 ;; *************** function _user_data_send *****************
  3453 ;; Defined at:
  3454 ;;		line 135 in file "./Commands.h"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;		None
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  11733           6    0[BANK0 ] volatile unsigned char [
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3469 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3471 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3472 ;;Total ram usage:        7 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; Hardware stack levels required when called: 2
  3475 ;; This function calls:
  3476 ;;		_UART_send
  3477 ;; This function is called by:
  3478 ;;		_user_data
  3479 ;; This function uses a non-reentrant model
  3480 ;;
  3481                           
  3482     0066                     _user_data_send:	
  3483                           ;psect for function _user_data_send
  3484                           
  3485     0066                     l1755:	
  3486                           ;incstack = 0
  3487                           ; Regs used in _user_data_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3488                           
  3489     0066                     l1757:	
  3490                           ;./Commands.h: 137:     joy_ry /= 10;
  3491                           
  3492     0066  30D9               	movlw	low user_data_send@F11732
  3493     0067  0086               	movwf	6
  3494     0068  3000               	movlw	high user_data_send@F11732
  3495     0069  0087               	movwf	7
  3496     006A  3020               	movlw	low user_data_send@11733
  3497     006B  0084               	movwf	4
  3498     006C  3000               	movlw	high user_data_send@11733
  3499     006D  0085               	movwf	5
  3500     006E  3006               	movlw	6
  3501     006F  00F8               	movwf	??_user_data_send
  3502     0070                     u1200:
  3503     0070  0016               	moviw fsr1++
  3504     0071  001A               	movwi fsr0++
  3505     0072  0BF8               	decfsz	??_user_data_send,f
  3506     0073  2870               	goto	u1200
  3507     0074                     l1759:
  3508     0074  3006               	movlw	6
  3509     0075  00F2               	movwf	UART_send@size
  3510     0076  3000               	movlw	0
  3511     0077  00F3               	movwf	UART_send@size+1
  3512     0078  3020               	movlw	(low (user_data_send@11733| 0))& (0+255)
  3513     0079  3181  2121  3180   	fcall	_UART_send
  3514     007C  3A00               	xorlw	0
  3515     007D  1903               	skipnz
  3516     007E  2880               	goto	u1211
  3517     007F  2881               	goto	u1210
  3518     0080                     u1211:
  3519     0080  2866               	goto	l1757
  3520     0081                     u1210:
  3521     0081                     l134:
  3522     0081  0008               	return
  3523     0082                     __end_of_user_data_send:
  3524                           
  3525                           	psect	text13
  3526     0639                     __ptext13:	
  3527 ;; *************** function _user_data_receive *****************
  3528 ;; Defined at:
  3529 ;;		line 140 in file "./Commands.h"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;		None
  3532 ;; Auto vars:     Size  Location     Type
  3533 ;;  r              26    0[BANK0 ] volatile unsigned char [
  3534 ;;  j               1   27[BANK0 ] volatile unsigned char 
  3535 ;;  s               1   26[BANK0 ] volatile unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      unsigned char 
  3538 ;; Registers used:
  3539 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3546 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3547 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3548 ;;      Totals:         3      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3549 ;;Total ram usage:       31 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 1
  3552 ;; This function calls:
  3553 ;;		___lwdiv
  3554 ;;		_rx_wait
  3555 ;; This function is called by:
  3556 ;;		_user_data
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560     0639                     _user_data_receive:	
  3561                           ;psect for function _user_data_receive
  3562                           
  3563     0639                     l1761:	
  3564                           ;incstack = 0
  3565                           ; Regs used in _user_data_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3566                           
  3567                           
  3568                           ;./Commands.h: 142:     joy_ly /= 10;
  3569     0639  301A               	movlw	26
  3570     063A  0020               	movlb	0	; select bank0
  3571     063B  00BA               	movwf	user_data_receive@s	;volatile
  3572     063C                     l1763:
  3573                           
  3574                           ;./Commands.h: 144:     joy_lx = r[12];
  3575     063C  01BB               	clrf	user_data_receive@j	;volatile
  3576     063D  2E56               	goto	l1775
  3577     063E                     l1765:
  3578                           
  3579                           ;./Commands.h: 145:     joy_lx += r[13] << 8;;./Commands.h: 146:     joy_lx -= 1000;
  3580     063E  3180  204D  3186   	fcall	_rx_wait
  3581     0641  3A00               	xorlw	0
  3582     0642  1903               	skipnz
  3583     0643  2E45               	goto	u1221
  3584     0644  2E46               	goto	u1220
  3585     0645                     u1221:
  3586     0645  2E4F               	goto	l1769
  3587     0646                     u1220:
  3588     0646                     l1767:
  3589                           
  3590                           ;./Commands.h: 147:     joy_lx /= 10;;./Commands.h: 148: 
  3591     0646  0020               	movlb	0	; select bank0
  3592     0647  083B               	movf	user_data_receive@j,w
  3593     0648  3E20               	addlw	(low (user_data_receive@r| 0))& (0+255)
  3594     0649  0086               	movwf	6
  3595     064A  0187               	clrf	7
  3596     064B  0022               	movlb	2	; select bank2
  3597     064C  0819               	movf	25,w	;volatile
  3598     064D  0081               	movwf	1
  3599                           
  3600                           ;./Commands.h: 149:     swA = r[14];
  3601     064E  2E51               	goto	l1773
  3602     064F                     l1769:
  3603                           
  3604                           ;./Commands.h: 151:     swA = swA > 1500;;./Commands.h: 152:     swB = r[16];
  3605     064F  3000               	movlw	0
  3606     0650  2FCC               	goto	l141
  3607     0651                     l1773:
  3608                           
  3609                           ;./Commands.h: 154:     swB = swB > 1500;
  3610     0651  3001               	movlw	1
  3611     0652  00F8               	movwf	??_user_data_receive
  3612     0653  0878               	movf	??_user_data_receive,w
  3613     0654  0020               	movlb	0	; select bank0
  3614     0655  07BB               	addwf	user_data_receive@j,f	;volatile
  3615     0656                     l1775:
  3616     0656  083A               	movf	user_data_receive@s,w	;volatile
  3617     0657  023B               	subwf	user_data_receive@j,w	;volatile
  3618     0658  1C03               	skipc
  3619     0659  2E5B               	goto	u1231
  3620     065A  2E5C               	goto	u1230
  3621     065B                     u1231:
  3622     065B  2E3E               	goto	l1765
  3623     065C                     u1230:
  3624     065C                     l1777:
  3625                           
  3626                           ;./Commands.h: 156:     swC += r[19] << 8;
  3627     065C  0826               	movf	user_data_receive@r+6,w	;volatile
  3628     065D  00F8               	movwf	??_user_data_receive
  3629     065E  01F9               	clrf	??_user_data_receive+1
  3630     065F  0878               	movf	??_user_data_receive,w
  3631     0660  00D6               	movwf	_joy_rx	;volatile
  3632     0661  0879               	movf	??_user_data_receive+1,w
  3633     0662  00D7               	movwf	_joy_rx+1	;volatile
  3634                           
  3635                           ;./Commands.h: 157:     if(swC == 1000){swC = 0;}
  3636     0663  0827               	movf	user_data_receive@r+7,w	;volatile
  3637     0664  00F8               	movwf	??_user_data_receive
  3638     0665  01F9               	clrf	??_user_data_receive+1
  3639     0666  0878               	movf	??_user_data_receive,w
  3640     0667  00F9               	movwf	??_user_data_receive+1
  3641     0668  01F8               	clrf	??_user_data_receive
  3642     0669  0878               	movf	??_user_data_receive,w
  3643     066A  07D6               	addwf	_joy_rx,f	;volatile
  3644     066B  0879               	movf	??_user_data_receive+1,w
  3645     066C  3DD7               	addwfc	_joy_rx+1,f	;volatile
  3646                           
  3647                           ;./Commands.h: 158:     else{if(swC == 1500){swC = 1;}
  3648     066D  30E8               	movlw	232
  3649     066E  02D6               	subwf	_joy_rx,f	;volatile
  3650     066F  3003               	movlw	3
  3651     0670  3BD7               	subwfb	_joy_rx+1,f	;volatile
  3652     0671                     l1779:
  3653                           
  3654                           ;./Commands.h: 159:     else {swC = 2;}}
  3655     0671  300A               	movlw	10
  3656     0672  00F0               	movwf	___lwdiv@divisor
  3657     0673  3000               	movlw	0
  3658     0674  00F1               	movwf	___lwdiv@divisor+1
  3659     0675  0857               	movf	_joy_rx+1,w	;volatile
  3660     0676  00F3               	movwf	___lwdiv@dividend+1
  3661     0677  0856               	movf	_joy_rx,w	;volatile
  3662     0678  00F2               	movwf	___lwdiv@dividend
  3663     0679  3182  2204  3186   	fcall	___lwdiv
  3664     067C  0871               	movf	?___lwdiv+1,w
  3665     067D  0020               	movlb	0	; select bank0
  3666     067E  00D7               	movwf	_joy_rx+1	;volatile
  3667     067F  0870               	movf	?___lwdiv,w
  3668     0680  00D6               	movwf	_joy_rx	;volatile
  3669     0681                     l1781:
  3670                           
  3671                           ;./Commands.h: 161:     swD += r[21] << 8;
  3672     0681  0828               	movf	user_data_receive@r+8,w	;volatile
  3673     0682  00F8               	movwf	??_user_data_receive
  3674     0683  01F9               	clrf	??_user_data_receive+1
  3675     0684  0878               	movf	??_user_data_receive,w
  3676     0685  00D4               	movwf	_joy_ry	;volatile
  3677     0686  0879               	movf	??_user_data_receive+1,w
  3678     0687  00D5               	movwf	_joy_ry+1	;volatile
  3679     0688                     l1783:
  3680                           
  3681                           ;./Commands.h: 162:     swD = swD > 1500;
  3682     0688  0829               	movf	user_data_receive@r+9,w	;volatile
  3683     0689  00F8               	movwf	??_user_data_receive
  3684     068A  01F9               	clrf	??_user_data_receive+1
  3685     068B  0878               	movf	??_user_data_receive,w
  3686     068C  00F9               	movwf	??_user_data_receive+1
  3687     068D  01F8               	clrf	??_user_data_receive
  3688     068E  0878               	movf	??_user_data_receive,w
  3689     068F  07D4               	addwf	_joy_ry,f	;volatile
  3690     0690  0879               	movf	??_user_data_receive+1,w
  3691     0691  3DD5               	addwfc	_joy_ry+1,f	;volatile
  3692     0692                     l1785:
  3693                           
  3694                           ;./Commands.h: 163: 
  3695     0692  30E8               	movlw	232
  3696     0693  02D4               	subwf	_joy_ry,f	;volatile
  3697     0694  3003               	movlw	3
  3698     0695  3BD5               	subwfb	_joy_ry+1,f	;volatile
  3699                           
  3700                           ;./Commands.h: 164:     potA = r[22];
  3701     0696  300A               	movlw	10
  3702     0697  00F0               	movwf	___lwdiv@divisor
  3703     0698  3000               	movlw	0
  3704     0699  00F1               	movwf	___lwdiv@divisor+1
  3705     069A  0855               	movf	_joy_ry+1,w	;volatile
  3706     069B  00F3               	movwf	___lwdiv@dividend+1
  3707     069C  0854               	movf	_joy_ry,w	;volatile
  3708     069D  00F2               	movwf	___lwdiv@dividend
  3709     069E  3182  2204  3186   	fcall	___lwdiv
  3710     06A1  0871               	movf	?___lwdiv+1,w
  3711     06A2  0020               	movlb	0	; select bank0
  3712     06A3  00D5               	movwf	_joy_ry+1	;volatile
  3713     06A4  0870               	movf	?___lwdiv,w
  3714     06A5  00D4               	movwf	_joy_ry	;volatile
  3715     06A6                     l1787:
  3716                           
  3717                           ;./Commands.h: 166:     potA = (potA - 1000)/10;
  3718     06A6  082A               	movf	user_data_receive@r+10,w	;volatile
  3719     06A7  00F8               	movwf	??_user_data_receive
  3720     06A8  01F9               	clrf	??_user_data_receive+1
  3721     06A9  0878               	movf	??_user_data_receive,w
  3722     06AA  00D2               	movwf	_joy_ly	;volatile
  3723     06AB  0879               	movf	??_user_data_receive+1,w
  3724     06AC  00D3               	movwf	_joy_ly+1	;volatile
  3725     06AD                     l1789:
  3726                           
  3727                           ;./Commands.h: 167:     potB = r[24];
  3728     06AD  082B               	movf	user_data_receive@r+11,w	;volatile
  3729     06AE  00F8               	movwf	??_user_data_receive
  3730     06AF  01F9               	clrf	??_user_data_receive+1
  3731     06B0  0878               	movf	??_user_data_receive,w
  3732     06B1  00F9               	movwf	??_user_data_receive+1
  3733     06B2  01F8               	clrf	??_user_data_receive
  3734     06B3  0878               	movf	??_user_data_receive,w
  3735     06B4  07D2               	addwf	_joy_ly,f	;volatile
  3736     06B5  0879               	movf	??_user_data_receive+1,w
  3737     06B6  3DD3               	addwfc	_joy_ly+1,f	;volatile
  3738     06B7                     l1791:
  3739                           
  3740                           ;./Commands.h: 168:     potB += r[25] << 8;
  3741     06B7  30E8               	movlw	232
  3742     06B8  02D2               	subwf	_joy_ly,f	;volatile
  3743     06B9  3003               	movlw	3
  3744     06BA  3BD3               	subwfb	_joy_ly+1,f	;volatile
  3745     06BB                     l1793:
  3746                           
  3747                           ;./Commands.h: 169:     potB = (potB - 1000)/10;
  3748     06BB  300A               	movlw	10
  3749     06BC  00F0               	movwf	___lwdiv@divisor
  3750     06BD  3000               	movlw	0
  3751     06BE  00F1               	movwf	___lwdiv@divisor+1
  3752     06BF  0853               	movf	_joy_ly+1,w	;volatile
  3753     06C0  00F3               	movwf	___lwdiv@dividend+1
  3754     06C1  0852               	movf	_joy_ly,w	;volatile
  3755     06C2  00F2               	movwf	___lwdiv@dividend
  3756     06C3  3182  2204  3186   	fcall	___lwdiv
  3757     06C6  0871               	movf	?___lwdiv+1,w
  3758     06C7  0020               	movlb	0	; select bank0
  3759     06C8  00D3               	movwf	_joy_ly+1	;volatile
  3760     06C9  0870               	movf	?___lwdiv,w
  3761     06CA  00D2               	movwf	_joy_ly	;volatile
  3762                           
  3763                           ;./Commands.h: 171: }
  3764     06CB  082C               	movf	user_data_receive@r+12,w	;volatile
  3765     06CC  00F8               	movwf	??_user_data_receive
  3766     06CD  01F9               	clrf	??_user_data_receive+1
  3767     06CE  0878               	movf	??_user_data_receive,w
  3768     06CF  00D0               	movwf	_joy_lx	;volatile
  3769     06D0  0879               	movf	??_user_data_receive+1,w
  3770     06D1  00D1               	movwf	_joy_lx+1	;volatile
  3771                           
  3772                           ;./Commands.h: 172: 
  3773     06D2  082D               	movf	user_data_receive@r+13,w	;volatile
  3774     06D3  00F8               	movwf	??_user_data_receive
  3775     06D4  01F9               	clrf	??_user_data_receive+1
  3776     06D5  0878               	movf	??_user_data_receive,w
  3777     06D6  00F9               	movwf	??_user_data_receive+1
  3778     06D7  01F8               	clrf	??_user_data_receive
  3779     06D8  0878               	movf	??_user_data_receive,w
  3780     06D9  07D0               	addwf	_joy_lx,f	;volatile
  3781     06DA  0879               	movf	??_user_data_receive+1,w
  3782     06DB  3DD1               	addwfc	_joy_lx+1,f	;volatile
  3783                           
  3784                           ;./Commands.h: 173: void user_data()
  3785     06DC  30E8               	movlw	232
  3786     06DD  02D0               	subwf	_joy_lx,f	;volatile
  3787     06DE  3003               	movlw	3
  3788     06DF  3BD1               	subwfb	_joy_lx+1,f	;volatile
  3789     06E0                     l1795:
  3790                           
  3791                           ;./Commands.h: 174: {
  3792     06E0  300A               	movlw	10
  3793     06E1  00F0               	movwf	___lwdiv@divisor
  3794     06E2  3000               	movlw	0
  3795     06E3  00F1               	movwf	___lwdiv@divisor+1
  3796     06E4  0851               	movf	_joy_lx+1,w	;volatile
  3797     06E5  00F3               	movwf	___lwdiv@dividend+1
  3798     06E6  0850               	movf	_joy_lx,w	;volatile
  3799     06E7  00F2               	movwf	___lwdiv@dividend
  3800     06E8  3182  2204  3186   	fcall	___lwdiv
  3801     06EB  0871               	movf	?___lwdiv+1,w
  3802     06EC  0020               	movlb	0	; select bank0
  3803     06ED  00D1               	movwf	_joy_lx+1	;volatile
  3804     06EE  0870               	movf	?___lwdiv,w
  3805     06EF  00D0               	movwf	_joy_lx	;volatile
  3806     06F0                     l1797:
  3807                           
  3808                           ;./Commands.h: 176:     while(!user_data_receive())
  3809     06F0  082E               	movf	user_data_receive@r+14,w	;volatile
  3810     06F1  00F8               	movwf	??_user_data_receive
  3811     06F2  01F9               	clrf	??_user_data_receive+1
  3812     06F3  0878               	movf	??_user_data_receive,w
  3813     06F4  00CE               	movwf	_swA	;volatile
  3814     06F5  0879               	movf	??_user_data_receive+1,w
  3815     06F6  00CF               	movwf	_swA+1	;volatile
  3816     06F7                     l1799:
  3817                           
  3818                           ;./Commands.h: 177:     {
  3819     06F7  082F               	movf	user_data_receive@r+15,w	;volatile
  3820     06F8  00F8               	movwf	??_user_data_receive
  3821     06F9  01F9               	clrf	??_user_data_receive+1
  3822     06FA  0878               	movf	??_user_data_receive,w
  3823     06FB  00F9               	movwf	??_user_data_receive+1
  3824     06FC  01F8               	clrf	??_user_data_receive
  3825     06FD  0878               	movf	??_user_data_receive,w
  3826     06FE  07CE               	addwf	_swA,f	;volatile
  3827     06FF  0879               	movf	??_user_data_receive+1,w
  3828     0700  3DCF               	addwfc	_swA+1,f	;volatile
  3829     0701                     l1801:
  3830                           
  3831                           ;./Commands.h: 178:         user_data_send();
  3832     0701  3005               	movlw	5
  3833     0702  024F               	subwf	_swA+1,w	;volatile
  3834     0703  30DD               	movlw	221
  3835     0704  1903               	skipnz
  3836     0705  024E               	subwf	_swA,w	;volatile
  3837     0706  1803               	skipnc
  3838     0707  2F09               	goto	u1241
  3839     0708  2F0B               	goto	u1240
  3840     0709                     u1241:
  3841     0709  3001               	movlw	1
  3842     070A  2F0C               	goto	u1250
  3843     070B                     u1240:
  3844     070B  3000               	movlw	0
  3845     070C                     u1250:
  3846     070C  00F8               	movwf	??_user_data_receive
  3847     070D  01F9               	clrf	??_user_data_receive+1
  3848     070E  0878               	movf	??_user_data_receive,w
  3849     070F  00CE               	movwf	_swA	;volatile
  3850     0710  0879               	movf	??_user_data_receive+1,w
  3851     0711  00CF               	movwf	_swA+1	;volatile
  3852     0712                     l1803:
  3853                           
  3854                           ;./Commands.h: 179:     }
  3855     0712  0830               	movf	user_data_receive@r+16,w	;volatile
  3856     0713  00F8               	movwf	??_user_data_receive
  3857     0714  01F9               	clrf	??_user_data_receive+1
  3858     0715  0878               	movf	??_user_data_receive,w
  3859     0716  00CC               	movwf	_swB	;volatile
  3860     0717  0879               	movf	??_user_data_receive+1,w
  3861     0718  00CD               	movwf	_swB+1	;volatile
  3862     0719                     l1805:
  3863                           
  3864                           ;./Commands.h: 180:     _delay((unsigned long)((100)*(400000/4000.0)));
  3865     0719  0831               	movf	user_data_receive@r+17,w	;volatile
  3866     071A  00F8               	movwf	??_user_data_receive
  3867     071B  01F9               	clrf	??_user_data_receive+1
  3868     071C  0878               	movf	??_user_data_receive,w
  3869     071D  00F9               	movwf	??_user_data_receive+1
  3870     071E  01F8               	clrf	??_user_data_receive
  3871     071F  0878               	movf	??_user_data_receive,w
  3872     0720  07CC               	addwf	_swB,f	;volatile
  3873     0721  0879               	movf	??_user_data_receive+1,w
  3874     0722  3DCD               	addwfc	_swB+1,f	;volatile
  3875     0723                     l1807:
  3876                           
  3877                           ;./Commands.h: 181: }
  3878     0723  3005               	movlw	5
  3879     0724  024D               	subwf	_swB+1,w	;volatile
  3880     0725  30DD               	movlw	221
  3881     0726  1903               	skipnz
  3882     0727  024C               	subwf	_swB,w	;volatile
  3883     0728  1803               	skipnc
  3884     0729  2F2B               	goto	u1261
  3885     072A  2F2D               	goto	u1260
  3886     072B                     u1261:
  3887     072B  3001               	movlw	1
  3888     072C  2F2E               	goto	u1270
  3889     072D                     u1260:
  3890     072D  3000               	movlw	0
  3891     072E                     u1270:
  3892     072E  00F8               	movwf	??_user_data_receive
  3893     072F  01F9               	clrf	??_user_data_receive+1
  3894     0730  0878               	movf	??_user_data_receive,w
  3895     0731  00CC               	movwf	_swB	;volatile
  3896     0732  0879               	movf	??_user_data_receive+1,w
  3897     0733  00CD               	movwf	_swB+1	;volatile
  3898     0734                     l1809:
  3899                           
  3900                           ;./Commands.h: 182: 
  3901     0734  0832               	movf	user_data_receive@r+18,w	;volatile
  3902     0735  00F8               	movwf	??_user_data_receive
  3903     0736  01F9               	clrf	??_user_data_receive+1
  3904     0737  0878               	movf	??_user_data_receive,w
  3905     0738  00CA               	movwf	_swC	;volatile
  3906     0739  0879               	movf	??_user_data_receive+1,w
  3907     073A  00CB               	movwf	_swC+1	;volatile
  3908     073B                     l1811:
  3909                           
  3910                           ;./Commands.h: 183: void motor(unsigned char dirA, unsigned char pwmA, unsigned char dir
      +                          B, unsigned char pwmB)
  3911     073B  0833               	movf	user_data_receive@r+19,w	;volatile
  3912     073C  00F8               	movwf	??_user_data_receive
  3913     073D  01F9               	clrf	??_user_data_receive+1
  3914     073E  0878               	movf	??_user_data_receive,w
  3915     073F  00F9               	movwf	??_user_data_receive+1
  3916     0740  01F8               	clrf	??_user_data_receive
  3917     0741  0878               	movf	??_user_data_receive,w
  3918     0742  07CA               	addwf	_swC,f	;volatile
  3919     0743  0879               	movf	??_user_data_receive+1,w
  3920     0744  3DCB               	addwfc	_swC+1,f	;volatile
  3921     0745                     l1813:
  3922                           
  3923                           ;./Commands.h: 184: {
  3924     0745  30E8               	movlw	232
  3925     0746  064A               	xorwf	_swC,w	;volatile
  3926     0747  3003               	movlw	3
  3927     0748  1903               	skipnz
  3928     0749  064B               	xorwf	_swC+1,w	;volatile
  3929     074A  1D03               	btfss	3,2
  3930     074B  2F4D               	goto	u1281
  3931     074C  2F4E               	goto	u1280
  3932     074D                     u1281:
  3933     074D  2F51               	goto	l1817
  3934     074E                     u1280:
  3935     074E                     l1815:
  3936     074E  01CA               	clrf	_swC	;volatile
  3937     074F  01CB               	clrf	_swC+1	;volatile
  3938     0750  2F63               	goto	l144
  3939     0751                     l1817:
  3940     0751  30DC               	movlw	220
  3941     0752  064A               	xorwf	_swC,w	;volatile
  3942     0753  3005               	movlw	5
  3943     0754  1903               	skipnz
  3944     0755  064B               	xorwf	_swC+1,w	;volatile
  3945     0756  1D03               	btfss	3,2
  3946     0757  2F59               	goto	u1291
  3947     0758  2F5A               	goto	u1290
  3948     0759                     u1291:
  3949     0759  2F5F               	goto	l1821
  3950     075A                     u1290:
  3951     075A                     l1819:
  3952     075A  3001               	movlw	1
  3953     075B  00CA               	movwf	_swC	;volatile
  3954     075C  3000               	movlw	0
  3955     075D  00CB               	movwf	_swC+1	;volatile
  3956     075E  2F63               	goto	l144
  3957     075F                     l1821:
  3958     075F  3002               	movlw	2
  3959     0760  00CA               	movwf	_swC	;volatile
  3960     0761  3000               	movlw	0
  3961     0762  00CB               	movwf	_swC+1	;volatile
  3962     0763                     l144:
  3963                           
  3964                           ;./Commands.h: 187: 
  3965     0763  0834               	movf	user_data_receive@r+20,w	;volatile
  3966     0764  00F8               	movwf	??_user_data_receive
  3967     0765  01F9               	clrf	??_user_data_receive+1
  3968     0766  0878               	movf	??_user_data_receive,w
  3969     0767  00C8               	movwf	_swD	;volatile
  3970     0768  0879               	movf	??_user_data_receive+1,w
  3971     0769  00C9               	movwf	_swD+1	;volatile
  3972                           
  3973                           ;./Commands.h: 188: void servo(unsigned char s1, unsigned char s2, unsigned char s3, uns
      +                          igned char s4)
  3974     076A  0835               	movf	user_data_receive@r+21,w	;volatile
  3975     076B  00F8               	movwf	??_user_data_receive
  3976     076C  01F9               	clrf	??_user_data_receive+1
  3977     076D  0878               	movf	??_user_data_receive,w
  3978     076E  00F9               	movwf	??_user_data_receive+1
  3979     076F  01F8               	clrf	??_user_data_receive
  3980     0770  0878               	movf	??_user_data_receive,w
  3981     0771  07C8               	addwf	_swD,f	;volatile
  3982     0772  0879               	movf	??_user_data_receive+1,w
  3983     0773  3DC9               	addwfc	_swD+1,f	;volatile
  3984                           
  3985                           ;./Commands.h: 189: {
  3986     0774  3005               	movlw	5
  3987     0775  0249               	subwf	_swD+1,w	;volatile
  3988     0776  30DD               	movlw	221
  3989     0777  1903               	skipnz
  3990     0778  0248               	subwf	_swD,w	;volatile
  3991     0779  1803               	skipnc
  3992     077A  2F7C               	goto	u1301
  3993     077B  2F7E               	goto	u1300
  3994     077C                     u1301:
  3995     077C  3001               	movlw	1
  3996     077D  2F7F               	goto	u1310
  3997     077E                     u1300:
  3998     077E  3000               	movlw	0
  3999     077F                     u1310:
  4000     077F  00F8               	movwf	??_user_data_receive
  4001     0780  01F9               	clrf	??_user_data_receive+1
  4002     0781  0878               	movf	??_user_data_receive,w
  4003     0782  00C8               	movwf	_swD	;volatile
  4004     0783  0879               	movf	??_user_data_receive+1,w
  4005     0784  00C9               	movwf	_swD+1	;volatile
  4006                           
  4007                           ;./Commands.h: 191: }
  4008     0785  0836               	movf	user_data_receive@r+22,w	;volatile
  4009     0786  00F8               	movwf	??_user_data_receive
  4010     0787  01F9               	clrf	??_user_data_receive+1
  4011     0788  0878               	movf	??_user_data_receive,w
  4012     0789  00C6               	movwf	_potA	;volatile
  4013     078A  0879               	movf	??_user_data_receive+1,w
  4014     078B  00C7               	movwf	_potA+1	;volatile
  4015                           
  4016                           ;./Commands.h: 192: 
  4017     078C  0837               	movf	user_data_receive@r+23,w	;volatile
  4018     078D  00F8               	movwf	??_user_data_receive
  4019     078E  01F9               	clrf	??_user_data_receive+1
  4020     078F  0878               	movf	??_user_data_receive,w
  4021     0790  00F9               	movwf	??_user_data_receive+1
  4022     0791  01F8               	clrf	??_user_data_receive
  4023     0792  0878               	movf	??_user_data_receive,w
  4024     0793  07C6               	addwf	_potA,f	;volatile
  4025     0794  0879               	movf	??_user_data_receive+1,w
  4026     0795  3DC7               	addwfc	_potA+1,f	;volatile
  4027     0796                     l1823:
  4028                           
  4029                           ;./Commands.h: 193: void set_laser(unsigned char en)
  4030     0796  300A               	movlw	10
  4031     0797  00F0               	movwf	___lwdiv@divisor
  4032     0798  3000               	movlw	0
  4033     0799  00F1               	movwf	___lwdiv@divisor+1
  4034     079A  0846               	movf	_potA,w	;volatile
  4035     079B  3E18               	addlw	24
  4036     079C  00F2               	movwf	___lwdiv@dividend
  4037     079D  30FC               	movlw	252
  4038     079E  3D47               	addwfc	_potA+1,w	;volatile
  4039     079F  00F3               	movwf	___lwdiv@dividend+1
  4040     07A0  3182  2204  3186   	fcall	___lwdiv
  4041     07A3  0871               	movf	?___lwdiv+1,w
  4042     07A4  0020               	movlb	0	; select bank0
  4043     07A5  00C7               	movwf	_potA+1	;volatile
  4044     07A6  0870               	movf	?___lwdiv,w
  4045     07A7  00C6               	movwf	_potA	;volatile
  4046     07A8                     l1825:
  4047                           
  4048                           ;./Commands.h: 194: {
  4049     07A8  0838               	movf	user_data_receive@r+24,w	;volatile
  4050     07A9  00F8               	movwf	??_user_data_receive
  4051     07AA  01F9               	clrf	??_user_data_receive+1
  4052     07AB  0878               	movf	??_user_data_receive,w
  4053     07AC  00C4               	movwf	_potB	;volatile
  4054     07AD  0879               	movf	??_user_data_receive+1,w
  4055     07AE  00C5               	movwf	_potB+1	;volatile
  4056     07AF                     l1827:
  4057                           
  4058                           ;./Commands.h: 195:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0
      +                          x08, 0x01, 0x00, en}, 7)){}
  4059     07AF  0839               	movf	user_data_receive@r+25,w	;volatile
  4060     07B0  00F8               	movwf	??_user_data_receive
  4061     07B1  01F9               	clrf	??_user_data_receive+1
  4062     07B2  0878               	movf	??_user_data_receive,w
  4063     07B3  00F9               	movwf	??_user_data_receive+1
  4064     07B4  01F8               	clrf	??_user_data_receive
  4065     07B5  0878               	movf	??_user_data_receive,w
  4066     07B6  07C4               	addwf	_potB,f	;volatile
  4067     07B7  0879               	movf	??_user_data_receive+1,w
  4068     07B8  3DC5               	addwfc	_potB+1,f	;volatile
  4069     07B9                     l1829:
  4070                           
  4071                           ;./Commands.h: 196: }
  4072     07B9  300A               	movlw	10
  4073     07BA  00F0               	movwf	___lwdiv@divisor
  4074     07BB  3000               	movlw	0
  4075     07BC  00F1               	movwf	___lwdiv@divisor+1
  4076     07BD  0844               	movf	_potB,w	;volatile
  4077     07BE  3E18               	addlw	24
  4078     07BF  00F2               	movwf	___lwdiv@dividend
  4079     07C0  30FC               	movlw	252
  4080     07C1  3D45               	addwfc	_potB+1,w	;volatile
  4081     07C2  00F3               	movwf	___lwdiv@dividend+1
  4082     07C3  3182  2204  3186   	fcall	___lwdiv
  4083     07C6  0871               	movf	?___lwdiv+1,w
  4084     07C7  0020               	movlb	0	; select bank0
  4085     07C8  00C5               	movwf	_potB+1	;volatile
  4086     07C9  0870               	movf	?___lwdiv,w
  4087     07CA  00C4               	movwf	_potB	;volatile
  4088                           
  4089                           ;./Commands.h: 197: 
  4090     07CB  3001               	movlw	1
  4091     07CC                     l141:
  4092     07CC  0008               	return
  4093     07CD                     __end_of_user_data_receive:
  4094                           
  4095                           	psect	text14
  4096     004D                     __ptext14:	
  4097 ;; *************** function _rx_wait *****************
  4098 ;; Defined at:
  4099 ;;		line 49 in file "./Commands.h"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;		None
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;  count           2    0[COMMON] volatile unsigned int 
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      unsigned char 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4114 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4117 ;;Total ram usage:        2 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_PCLS_info_receive
  4123 ;;		_user_data_receive
  4124 ;; This function uses a non-reentrant model
  4125 ;;
  4126                           
  4127     004D                     _rx_wait:	
  4128                           ;psect for function _rx_wait
  4129                           
  4130     004D                     l1667:	
  4131                           ;incstack = 0
  4132                           ; Regs used in _rx_wait: [wreg+status,2+status,0]
  4133                           
  4134                           
  4135                           ;./Commands.h: 51: void UART_init();./Commands.h: 52: {
  4136     004D  30E8               	movlw	232
  4137     004E  00F0               	movwf	rx_wait@count	;volatile
  4138     004F  3003               	movlw	3
  4139     0050  00F1               	movwf	rx_wait@count+1	;volatile
  4140     0051                     l1669:
  4141     0051  0870               	movf	rx_wait@count,w	;volatile
  4142     0052  0471               	iorwf	rx_wait@count+1,w	;volatile
  4143     0053  1D03               	btfss	3,2
  4144     0054  2856               	goto	u1051
  4145     0055  2857               	goto	u1050
  4146     0056                     u1051:
  4147     0056  2858               	goto	l91
  4148     0057                     u1050:
  4149     0057  2864               	goto	l1681
  4150     0058                     l91:
  4151                           
  4152                           ;./Commands.h: 53:     ANSELCbits.ANSC6 = 0;;./Commands.h: 54:     ANSELCbits.ANSC7 = 0;
  4153     0058  002E               	movlb	14	; select bank14
  4154     0059  1E8F               	btfss	15,5	;volatile
  4155     005A  285C               	goto	u1061
  4156     005B  285D               	goto	u1060
  4157     005C                     u1061:
  4158     005C  285F               	goto	l1677
  4159     005D                     u1060:
  4160     005D                     l1673:
  4161                           
  4162                           ;./Commands.h: 55: ;./Commands.h: 56:     TX1STAbits.SYNC = 0;
  4163     005D  3001               	movlw	1
  4164     005E  2865               	goto	l94
  4165     005F                     l1677:
  4166                           
  4167                           ;./Commands.h: 58:     RC1STAbits.SPEN = 1;
  4168     005F  3001               	movlw	1
  4169     0060  02F0               	subwf	rx_wait@count,f	;volatile
  4170     0061  3000               	movlw	0
  4171     0062  3BF1               	subwfb	rx_wait@count+1,f	;volatile
  4172     0063  2851               	goto	l1669
  4173     0064                     l1681:
  4174                           
  4175                           ;./Commands.h: 59:     RC1STAbits.CREN = 1;
  4176     0064  3000               	movlw	0
  4177     0065                     l94:
  4178     0065  0008               	return
  4179     0066                     __end_of_rx_wait:
  4180                           
  4181                           	psect	text15
  4182     0204                     __ptext15:	
  4183 ;; *************** function ___lwdiv *****************
  4184 ;; Defined at:
  4185 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  4186 ;; Parameters:    Size  Location     Type
  4187 ;;  divisor         2    0[COMMON] unsigned int 
  4188 ;;  dividend        2    2[COMMON] unsigned int 
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;  quotient        2    5[COMMON] unsigned int 
  4191 ;;  counter         1    7[COMMON] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  2    0[COMMON] unsigned int 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4202 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4204 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4205 ;;Total ram usage:        8 bytes
  4206 ;; Hardware stack levels used: 1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_user_data_receive
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214     0204                     ___lwdiv:	
  4215                           ;psect for function ___lwdiv
  4216                           
  4217     0204                     l1703:	
  4218                           ;incstack = 0
  4219                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4220                           
  4221     0204  01F5               	clrf	___lwdiv@quotient
  4222     0205  01F6               	clrf	___lwdiv@quotient+1
  4223     0206                     l1705:
  4224     0206  0870               	movf	___lwdiv@divisor,w
  4225     0207  0471               	iorwf	___lwdiv@divisor+1,w
  4226     0208  1903               	btfsc	3,2
  4227     0209  2A0B               	goto	u1091
  4228     020A  2A0C               	goto	u1090
  4229     020B                     u1091:
  4230     020B  2A3B               	goto	l1725
  4231     020C                     u1090:
  4232     020C                     l1707:
  4233     020C  01F7               	clrf	___lwdiv@counter
  4234     020D  0AF7               	incf	___lwdiv@counter,f
  4235     020E  2A18               	goto	l1713
  4236     020F                     l1709:
  4237     020F  3001               	movlw	1
  4238     0210                     u1105:
  4239     0210  35F0               	lslf	___lwdiv@divisor,f
  4240     0211  0DF1               	rlf	___lwdiv@divisor+1,f
  4241     0212  0B89               	decfsz	9,f
  4242     0213  2A10               	goto	u1105
  4243     0214                     l1711:
  4244     0214  3001               	movlw	1
  4245     0215  00F4               	movwf	??___lwdiv
  4246     0216  0874               	movf	??___lwdiv,w
  4247     0217  07F7               	addwf	___lwdiv@counter,f
  4248     0218                     l1713:
  4249     0218  1FF1               	btfss	___lwdiv@divisor+1,7
  4250     0219  2A1B               	goto	u1111
  4251     021A  2A1C               	goto	u1110
  4252     021B                     u1111:
  4253     021B  2A0F               	goto	l1709
  4254     021C                     u1110:
  4255     021C                     l1715:
  4256     021C  3001               	movlw	1
  4257     021D                     u1125:
  4258     021D  35F5               	lslf	___lwdiv@quotient,f
  4259     021E  0DF6               	rlf	___lwdiv@quotient+1,f
  4260     021F  0B89               	decfsz	9,f
  4261     0220  2A1D               	goto	u1125
  4262     0221  0871               	movf	___lwdiv@divisor+1,w
  4263     0222  0273               	subwf	___lwdiv@dividend+1,w
  4264     0223  1D03               	skipz
  4265     0224  2A27               	goto	u1135
  4266     0225  0870               	movf	___lwdiv@divisor,w
  4267     0226  0272               	subwf	___lwdiv@dividend,w
  4268     0227                     u1135:
  4269     0227  1C03               	skipc
  4270     0228  2A2A               	goto	u1131
  4271     0229  2A2B               	goto	u1130
  4272     022A                     u1131:
  4273     022A  2A30               	goto	l1721
  4274     022B                     u1130:
  4275     022B                     l1717:
  4276     022B  0870               	movf	___lwdiv@divisor,w
  4277     022C  02F2               	subwf	___lwdiv@dividend,f
  4278     022D  0871               	movf	___lwdiv@divisor+1,w
  4279     022E  3BF3               	subwfb	___lwdiv@dividend+1,f
  4280     022F                     l1719:
  4281     022F  1475               	bsf	___lwdiv@quotient,0
  4282     0230                     l1721:
  4283     0230  3001               	movlw	1
  4284     0231                     u1145:
  4285     0231  36F1               	lsrf	___lwdiv@divisor+1,f
  4286     0232  0CF0               	rrf	___lwdiv@divisor,f
  4287     0233  0B89               	decfsz	9,f
  4288     0234  2A31               	goto	u1145
  4289     0235                     l1723:
  4290     0235  3001               	movlw	1
  4291     0236  02F7               	subwf	___lwdiv@counter,f
  4292     0237  1D03               	btfss	3,2
  4293     0238  2A3A               	goto	u1151
  4294     0239  2A3B               	goto	u1150
  4295     023A                     u1151:
  4296     023A  2A1C               	goto	l1715
  4297     023B                     u1150:
  4298     023B                     l1725:
  4299     023B  0876               	movf	___lwdiv@quotient+1,w
  4300     023C  00F1               	movwf	?___lwdiv+1
  4301     023D  0875               	movf	___lwdiv@quotient,w
  4302     023E  00F0               	movwf	?___lwdiv
  4303     023F                     l796:
  4304     023F  0008               	return
  4305     0240                     __end_of___lwdiv:
  4306                           
  4307                           	psect	text16
  4308     0511                     __ptext16:	
  4309 ;; *************** function _Vdrive *****************
  4310 ;; Defined at:
  4311 ;;		line 10 in file "./Driving.h"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  y               2   11[BANK0 ] int 
  4314 ;;  x               2   13[BANK0 ] int 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  r_motor         2   21[BANK0 ] volatile int 
  4317 ;;  l_motor         2   19[BANK0 ] volatile int 
  4318 ;;  right_dir       1   18[BANK0 ] volatile unsigned char 
  4319 ;;  left_dir        1   17[BANK0 ] volatile unsigned char 
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1    wreg      void 
  4322 ;; Registers used:
  4323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/0
  4326 ;;		On exit  : 0/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4329 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4330 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4331 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4332 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4333 ;;Total ram usage:       12 bytes
  4334 ;; Hardware stack levels used: 1
  4335 ;; Hardware stack levels required when called: 3
  4336 ;; This function calls:
  4337 ;;		___awdiv
  4338 ;;		___wmul
  4339 ;;		_abs
  4340 ;;		_motor
  4341 ;; This function is called by:
  4342 ;;		_drive
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346     0511                     _Vdrive:	
  4347                           ;psect for function _Vdrive
  4348                           
  4349     0511                     l1985:	
  4350                           ;incstack = 0
  4351                           ; Regs used in _Vdrive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4352                           
  4353                           
  4354                           ;./Driving.h: 10:         r_motor = y + x;;./Driving.h: 11:     };./Driving.h: 12:     e
      +                          lse{if(x < 0 && y > 0);./Driving.h: 13:     {;./Driving.h: 15:         r_motor = y + (x*
      +                          2);
  4355     0511  0020               	movlb	0	; select bank0
  4356     0512  082E               	movf	Vdrive@x+1,w
  4357     0513  3A80               	xorlw	128
  4358     0514  00AF               	movwf	??_Vdrive
  4359     0515  3080               	movlw	128
  4360     0516  022F               	subwf	??_Vdrive,w
  4361     0517  1D03               	skipz
  4362     0518  2D1B               	goto	u1575
  4363     0519  3001               	movlw	1
  4364     051A  022D               	subwf	Vdrive@x,w
  4365     051B                     u1575:
  4366     051B  1C03               	skipc
  4367     051C  2D1E               	goto	u1571
  4368     051D  2D1F               	goto	u1570
  4369     051E                     u1571:
  4370     051E  2D41               	goto	l238
  4371     051F                     u1570:
  4372     051F                     l1987:
  4373     051F  0020               	movlb	0	; select bank0
  4374     0520  082C               	movf	Vdrive@y+1,w
  4375     0521  3A80               	xorlw	128
  4376     0522  00AF               	movwf	??_Vdrive
  4377     0523  3080               	movlw	128
  4378     0524  022F               	subwf	??_Vdrive,w
  4379     0525  1D03               	skipz
  4380     0526  2D29               	goto	u1585
  4381     0527  3001               	movlw	1
  4382     0528  022B               	subwf	Vdrive@y,w
  4383     0529                     u1585:
  4384     0529  1C03               	skipc
  4385     052A  2D2C               	goto	u1581
  4386     052B  2D2D               	goto	u1580
  4387     052C                     u1581:
  4388     052C  2D41               	goto	l238
  4389     052D                     u1580:
  4390     052D                     l1989:
  4391                           
  4392                           ;./Driving.h: 16:     };./Driving.h: 17:     else
  4393     052D  0020               	movlb	0	; select bank0
  4394     052E  082E               	movf	Vdrive@x+1,w
  4395     052F  00B0               	movwf	??_Vdrive+1
  4396     0530  082D               	movf	Vdrive@x,w
  4397     0531  00AF               	movwf	??_Vdrive
  4398     0532  35AF               	lslf	??_Vdrive,f
  4399     0533  0DB0               	rlf	??_Vdrive+1,f
  4400     0534  082F               	movf	??_Vdrive,w
  4401     0535  022B               	subwf	Vdrive@y,w
  4402     0536  00B3               	movwf	Vdrive@l_motor	;volatile
  4403     0537  0830               	movf	??_Vdrive+1,w
  4404     0538  3B2C               	subwfb	Vdrive@y+1,w
  4405     0539  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4406                           
  4407                           ;./Driving.h: 18:     {
  4408     053A  082D               	movf	Vdrive@x,w
  4409     053B  072B               	addwf	Vdrive@y,w
  4410     053C  00B5               	movwf	Vdrive@r_motor	;volatile
  4411     053D  082E               	movf	Vdrive@x+1,w
  4412     053E  3D2C               	addwfc	Vdrive@y+1,w
  4413     053F  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4414                           
  4415                           ;./Driving.h: 19:         l_motor = y - x;
  4416     0540  2D74               	goto	l1997
  4417     0541                     l238:	
  4418                           ;./Driving.h: 20:         r_motor = y + x;
  4419                           
  4420     0541  0020               	movlb	0	; select bank0
  4421     0542  1FAE               	btfss	Vdrive@x+1,7
  4422     0543  2D45               	goto	u1591
  4423     0544  2D46               	goto	u1590
  4424     0545                     u1591:
  4425     0545  2D67               	goto	l1995
  4426     0546                     u1590:
  4427     0546                     l1991:
  4428     0546  082C               	movf	Vdrive@y+1,w
  4429     0547  3A80               	xorlw	128
  4430     0548  00AF               	movwf	??_Vdrive
  4431     0549  3080               	movlw	128
  4432     054A  022F               	subwf	??_Vdrive,w
  4433     054B  1D03               	skipz
  4434     054C  2D4F               	goto	u1605
  4435     054D  3001               	movlw	1
  4436     054E  022B               	subwf	Vdrive@y,w
  4437     054F                     u1605:
  4438     054F  1C03               	skipc
  4439     0550  2D52               	goto	u1601
  4440     0551  2D53               	goto	u1600
  4441     0552                     u1601:
  4442     0552  2D67               	goto	l1995
  4443     0553                     u1600:
  4444     0553                     l1993:
  4445                           
  4446                           ;./Driving.h: 21:     }};./Driving.h: 22: 
  4447     0553  0020               	movlb	0	; select bank0
  4448     0554  082D               	movf	Vdrive@x,w
  4449     0555  022B               	subwf	Vdrive@y,w
  4450     0556  00B3               	movwf	Vdrive@l_motor	;volatile
  4451     0557  082E               	movf	Vdrive@x+1,w
  4452     0558  3B2C               	subwfb	Vdrive@y+1,w
  4453     0559  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4454                           
  4455                           ;./Driving.h: 23: 
  4456     055A  082E               	movf	Vdrive@x+1,w
  4457     055B  00B0               	movwf	??_Vdrive+1
  4458     055C  082D               	movf	Vdrive@x,w
  4459     055D  00AF               	movwf	??_Vdrive
  4460     055E  35AF               	lslf	??_Vdrive,f
  4461     055F  0DB0               	rlf	??_Vdrive+1,f
  4462     0560  082B               	movf	Vdrive@y,w
  4463     0561  072F               	addwf	??_Vdrive,w
  4464     0562  00B5               	movwf	Vdrive@r_motor	;volatile
  4465     0563  082C               	movf	Vdrive@y+1,w
  4466     0564  3D30               	addwfc	??_Vdrive+1,w
  4467     0565  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4468                           
  4469                           ;./Driving.h: 24:     if (l_motor > 100 || l_motor < -100)
  4470     0566  2D74               	goto	l1997
  4471     0567                     l1995:
  4472                           
  4473                           ;./Driving.h: 26:         l_motor = (l_motor/abs(l_motor)) * 100;;./Driving.h: 27:     }
  4474     0567  0020               	movlb	0	; select bank0
  4475     0568  082D               	movf	Vdrive@x,w
  4476     0569  022B               	subwf	Vdrive@y,w
  4477     056A  00B3               	movwf	Vdrive@l_motor	;volatile
  4478     056B  082E               	movf	Vdrive@x+1,w
  4479     056C  3B2C               	subwfb	Vdrive@y+1,w
  4480     056D  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4481                           
  4482                           ;./Driving.h: 28:     if (r_motor > 100 || r_motor < -100)
  4483     056E  082D               	movf	Vdrive@x,w
  4484     056F  072B               	addwf	Vdrive@y,w
  4485     0570  00B5               	movwf	Vdrive@r_motor	;volatile
  4486     0571  082E               	movf	Vdrive@x+1,w
  4487     0572  3D2C               	addwfc	Vdrive@y+1,w
  4488     0573  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4489     0574                     l1997:
  4490                           
  4491                           ;./Driving.h: 32: 
  4492     0574  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4493     0575  3A80               	xorlw	128
  4494     0576  00AF               	movwf	??_Vdrive
  4495     0577  3080               	movlw	128
  4496     0578  022F               	subwf	??_Vdrive,w
  4497     0579  1D03               	skipz
  4498     057A  2D7D               	goto	u1615
  4499     057B  3065               	movlw	101
  4500     057C  0233               	subwf	Vdrive@l_motor,w	;volatile
  4501     057D                     u1615:
  4502     057D  1803               	skipnc
  4503     057E  2D80               	goto	u1611
  4504     057F  2D81               	goto	u1610
  4505     0580                     u1611:
  4506     0580  2D8F               	goto	l2001
  4507     0581                     u1610:
  4508     0581                     l1999:
  4509     0581  0020               	movlb	0	; select bank0
  4510     0582  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4511     0583  3A80               	xorlw	128
  4512     0584  00AF               	movwf	??_Vdrive
  4513     0585  307F               	movlw	127
  4514     0586  022F               	subwf	??_Vdrive,w
  4515     0587  1D03               	skipz
  4516     0588  2D8B               	goto	u1625
  4517     0589  309C               	movlw	156
  4518     058A  0233               	subwf	Vdrive@l_motor,w	;volatile
  4519     058B                     u1625:
  4520     058B  1803               	skipnc
  4521     058C  2D8E               	goto	u1621
  4522     058D  2D8F               	goto	u1620
  4523     058E                     u1621:
  4524     058E  2DB4               	goto	l2003
  4525     058F                     u1620:
  4526     058F                     l2001:
  4527                           
  4528                           ;./Driving.h: 33:     if (l_motor > 0);./Driving.h: 34:     {
  4529     058F  0020               	movlb	0	; select bank0
  4530     0590  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4531     0591  00F1               	movwf	abs@a+1
  4532     0592  0833               	movf	Vdrive@l_motor,w	;volatile
  4533     0593  00F0               	movwf	abs@a
  4534     0594  3180  2010  3185   	fcall	_abs
  4535     0597  0871               	movf	?_abs+1,w
  4536     0598  00F5               	movwf	___awdiv@divisor+1
  4537     0599  0870               	movf	?_abs,w
  4538     059A  00F4               	movwf	___awdiv@divisor
  4539     059B  0020               	movlb	0	; select bank0
  4540     059C  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4541     059D  00F7               	movwf	___awdiv@dividend+1
  4542     059E  0833               	movf	Vdrive@l_motor,w	;volatile
  4543     059F  00F6               	movwf	___awdiv@dividend
  4544     05A0  3183  23A6  3185   	fcall	___awdiv
  4545     05A3  0875               	movf	?___awdiv+1,w
  4546     05A4  0020               	movlb	0	; select bank0
  4547     05A5  00A1               	movwf	___wmul@multiplier+1
  4548     05A6  0874               	movf	?___awdiv,w
  4549     05A7  00A0               	movwf	___wmul@multiplier
  4550     05A8  3064               	movlw	100
  4551     05A9  00A2               	movwf	___wmul@multiplicand
  4552     05AA  3000               	movlw	0
  4553     05AB  00A3               	movwf	___wmul@multiplicand+1
  4554     05AC  3180  20BA  3185   	fcall	___wmul
  4555     05AF  0020               	movlb	0	; select bank0
  4556     05B0  0821               	movf	?___wmul+1,w
  4557     05B1  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4558     05B2  0820               	movf	?___wmul,w
  4559     05B3  00B3               	movwf	Vdrive@l_motor	;volatile
  4560     05B4                     l2003:
  4561                           
  4562                           ;./Driving.h: 36:     }
  4563     05B4  0020               	movlb	0	; select bank0
  4564     05B5  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4565     05B6  3A80               	xorlw	128
  4566     05B7  00AF               	movwf	??_Vdrive
  4567     05B8  3080               	movlw	128
  4568     05B9  022F               	subwf	??_Vdrive,w
  4569     05BA  1D03               	skipz
  4570     05BB  2DBE               	goto	u1635
  4571     05BC  3065               	movlw	101
  4572     05BD  0235               	subwf	Vdrive@r_motor,w	;volatile
  4573     05BE                     u1635:
  4574     05BE  1803               	skipnc
  4575     05BF  2DC1               	goto	u1631
  4576     05C0  2DC2               	goto	u1630
  4577     05C1                     u1631:
  4578     05C1  2DD0               	goto	l2007
  4579     05C2                     u1630:
  4580     05C2                     l2005:
  4581     05C2  0020               	movlb	0	; select bank0
  4582     05C3  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4583     05C4  3A80               	xorlw	128
  4584     05C5  00AF               	movwf	??_Vdrive
  4585     05C6  307F               	movlw	127
  4586     05C7  022F               	subwf	??_Vdrive,w
  4587     05C8  1D03               	skipz
  4588     05C9  2DCC               	goto	u1645
  4589     05CA  309C               	movlw	156
  4590     05CB  0235               	subwf	Vdrive@r_motor,w	;volatile
  4591     05CC                     u1645:
  4592     05CC  1803               	skipnc
  4593     05CD  2DCF               	goto	u1641
  4594     05CE  2DD0               	goto	u1640
  4595     05CF                     u1641:
  4596     05CF  2DF5               	goto	l2009
  4597     05D0                     u1640:
  4598     05D0                     l2007:
  4599                           
  4600                           ;./Driving.h: 37:     else;./Driving.h: 38:     {
  4601     05D0  0020               	movlb	0	; select bank0
  4602     05D1  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4603     05D2  00F1               	movwf	abs@a+1
  4604     05D3  0835               	movf	Vdrive@r_motor,w	;volatile
  4605     05D4  00F0               	movwf	abs@a
  4606     05D5  3180  2010  3185   	fcall	_abs
  4607     05D8  0871               	movf	?_abs+1,w
  4608     05D9  00F5               	movwf	___awdiv@divisor+1
  4609     05DA  0870               	movf	?_abs,w
  4610     05DB  00F4               	movwf	___awdiv@divisor
  4611     05DC  0020               	movlb	0	; select bank0
  4612     05DD  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4613     05DE  00F7               	movwf	___awdiv@dividend+1
  4614     05DF  0835               	movf	Vdrive@r_motor,w	;volatile
  4615     05E0  00F6               	movwf	___awdiv@dividend
  4616     05E1  3183  23A6  3185   	fcall	___awdiv
  4617     05E4  0875               	movf	?___awdiv+1,w
  4618     05E5  0020               	movlb	0	; select bank0
  4619     05E6  00A1               	movwf	___wmul@multiplier+1
  4620     05E7  0874               	movf	?___awdiv,w
  4621     05E8  00A0               	movwf	___wmul@multiplier
  4622     05E9  3064               	movlw	100
  4623     05EA  00A2               	movwf	___wmul@multiplicand
  4624     05EB  3000               	movlw	0
  4625     05EC  00A3               	movwf	___wmul@multiplicand+1
  4626     05ED  3180  20BA  3185   	fcall	___wmul
  4627     05F0  0020               	movlb	0	; select bank0
  4628     05F1  0821               	movf	?___wmul+1,w
  4629     05F2  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4630     05F3  0820               	movf	?___wmul,w
  4631     05F4  00B5               	movwf	Vdrive@r_motor	;volatile
  4632     05F5                     l2009:
  4633                           
  4634                           ;./Driving.h: 41: 
  4635     05F5  0020               	movlb	0	; select bank0
  4636     05F6  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4637     05F7  3A80               	xorlw	128
  4638     05F8  00AF               	movwf	??_Vdrive
  4639     05F9  3080               	movlw	128
  4640     05FA  022F               	subwf	??_Vdrive,w
  4641     05FB  1D03               	skipz
  4642     05FC  2DFF               	goto	u1655
  4643     05FD  3001               	movlw	1
  4644     05FE  0233               	subwf	Vdrive@l_motor,w	;volatile
  4645     05FF                     u1655:
  4646     05FF  1C03               	skipc
  4647     0600  2E02               	goto	u1651
  4648     0601  2E03               	goto	u1650
  4649     0602                     u1651:
  4650     0602  2E07               	goto	l2013
  4651     0603                     u1650:
  4652     0603                     l2011:
  4653                           
  4654                           ;./Driving.h: 42:     if (r_motor > 0);./Driving.h: 43:     {
  4655     0603  3001               	movlw	1
  4656     0604  0020               	movlb	0	; select bank0
  4657     0605  00B1               	movwf	Vdrive@left_dir	;volatile
  4658                           
  4659                           ;./Driving.h: 44:         right_dir = 1;
  4660     0606  2E0A               	goto	l249
  4661     0607                     l2013:
  4662                           
  4663                           ;./Driving.h: 46:     else;./Driving.h: 47:     {
  4664     0607  3002               	movlw	2
  4665     0608  0020               	movlb	0	; select bank0
  4666     0609  00B1               	movwf	Vdrive@left_dir	;volatile
  4667     060A                     l249:	
  4668                           ;./Driving.h: 48:         right_dir = 2;
  4669                           
  4670                           
  4671                           ;./Driving.h: 50: 
  4672     060A  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4673     060B  3A80               	xorlw	128
  4674     060C  00AF               	movwf	??_Vdrive
  4675     060D  3080               	movlw	128
  4676     060E  022F               	subwf	??_Vdrive,w
  4677     060F  1D03               	skipz
  4678     0610  2E13               	goto	u1665
  4679     0611  3001               	movlw	1
  4680     0612  0235               	subwf	Vdrive@r_motor,w	;volatile
  4681     0613                     u1665:
  4682     0613  1C03               	skipc
  4683     0614  2E16               	goto	u1661
  4684     0615  2E17               	goto	u1660
  4685     0616                     u1661:
  4686     0616  2E1B               	goto	l2017
  4687     0617                     u1660:
  4688     0617                     l2015:
  4689                           
  4690                           ;./Driving.h: 51:     motor(left_dir, abs(l_motor), right_dir, abs(r_motor));;./Driving.
      +                          h: 52: }
  4691     0617  3001               	movlw	1
  4692     0618  0020               	movlb	0	; select bank0
  4693     0619  00B2               	movwf	Vdrive@right_dir	;volatile
  4694                           
  4695                           ;./Driving.h: 53: 
  4696     061A  2E1E               	goto	l2019
  4697     061B                     l2017:
  4698                           
  4699                           ;./Driving.h: 55: {;./Driving.h: 56:     volatile int dir;
  4700     061B  3002               	movlw	2
  4701     061C  0020               	movlb	0	; select bank0
  4702     061D  00B2               	movwf	Vdrive@right_dir	;volatile
  4703     061E                     l2019:
  4704                           
  4705                           ;./Driving.h: 59:     user_data();
  4706     061E  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4707     061F  00F1               	movwf	abs@a+1
  4708     0620  0833               	movf	Vdrive@l_motor,w	;volatile
  4709     0621  00F0               	movwf	abs@a
  4710     0622  3180  2010  3185   	fcall	_abs
  4711     0625  0870               	movf	?_abs,w
  4712     0626  00F8               	movwf	motor@pwmA
  4713     0627  0020               	movlb	0	; select bank0
  4714     0628  0832               	movf	Vdrive@right_dir,w	;volatile
  4715     0629  00F9               	movwf	motor@dirB
  4716     062A  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4717     062B  00F1               	movwf	abs@a+1
  4718     062C  0835               	movf	Vdrive@r_motor,w	;volatile
  4719     062D  00F0               	movwf	abs@a
  4720     062E  3180  2010  3185   	fcall	_abs
  4721     0631  0870               	movf	?_abs,w
  4722     0632  00FA               	movwf	motor@pwmB
  4723     0633  0020               	movlb	0	; select bank0
  4724     0634  0831               	movf	Vdrive@left_dir,w	;volatile
  4725     0635  3181  21D2  3185   	fcall	_motor
  4726     0638                     l252:
  4727     0638  0008               	return
  4728     0639                     __end_of_Vdrive:
  4729                           
  4730                           	psect	text17
  4731     01D2                     __ptext17:	
  4732 ;; *************** function _motor *****************
  4733 ;; Defined at:
  4734 ;;		line 210 in file "./Commands.h"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  dirA            1    wreg     unsigned char 
  4737 ;;  pwmA            1    8[COMMON] unsigned char 
  4738 ;;  dirB            1    9[COMMON] unsigned char 
  4739 ;;  pwmB            1   10[COMMON] unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  dirA            1    0[BANK0 ] unsigned char 
  4742 ;;  11745          10    1[BANK0 ] volatile unsigned char [
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4752 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4753 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4754 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4755 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4756 ;;Total ram usage:       15 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 2
  4759 ;; This function calls:
  4760 ;;		_UART_send
  4761 ;; This function is called by:
  4762 ;;		_Vdrive
  4763 ;;		_line_follower
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767     01D2                     _motor:	
  4768                           ;psect for function _motor
  4769                           
  4770                           
  4771                           ;incstack = 0
  4772                           ; Regs used in _motor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4773                           ;motor@dirA stored from wreg
  4774     01D2  0020               	movlb	0	; select bank0
  4775     01D3  00A0               	movwf	motor@dirA
  4776     01D4                     l1833:
  4777     01D4                     l1835:	
  4778                           ;./Commands.h: 210:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x03, 0
      +                          x09, 0x00, 0x00}, 6)){};./Commands.h: 211: };./Commands.h: 212: 
  4779                           
  4780     01D4  30A0               	movlw	low motor@F11744
  4781     01D5  0086               	movwf	6
  4782     01D6  3000               	movlw	high motor@F11744
  4783     01D7  0087               	movwf	7
  4784     01D8  3021               	movlw	low motor@11745
  4785     01D9  0084               	movwf	4
  4786     01DA  3000               	movlw	high motor@11745
  4787     01DB  0085               	movwf	5
  4788     01DC  300A               	movlw	10
  4789     01DD  00FB               	movwf	??_motor
  4790     01DE                     u1320:
  4791     01DE  0016               	moviw fsr1++
  4792     01DF  001A               	movwi fsr0++
  4793     01E0  0BFB               	decfsz	??_motor,f
  4794     01E1  29DE               	goto	u1320
  4795     01E2                     l1837:
  4796     01E2  30FE               	movlw	254
  4797     01E3  0020               	movlb	0	; select bank0
  4798     01E4  00A1               	movwf	motor@11745	;volatile
  4799     01E5                     l1839:
  4800     01E5  3019               	movlw	25
  4801     01E6  00A2               	movwf	motor@11745+1	;volatile
  4802     01E7                     l1841:
  4803     01E7  3001               	movlw	1
  4804     01E8  00A3               	movwf	motor@11745+2	;volatile
  4805     01E9                     l1843:
  4806     01E9  3006               	movlw	6
  4807     01EA  00A4               	movwf	motor@11745+3	;volatile
  4808     01EB                     l1845:
  4809     01EB  3004               	movlw	4
  4810     01EC  00A5               	movwf	motor@11745+4	;volatile
  4811     01ED                     l1847:
  4812     01ED  01A6               	clrf	motor@11745+5	;volatile
  4813     01EE                     l1849:
  4814     01EE  0820               	movf	motor@dirA,w
  4815     01EF  00A7               	movwf	motor@11745+6	;volatile
  4816     01F0                     l1851:
  4817     01F0  0878               	movf	motor@pwmA,w
  4818     01F1  00A8               	movwf	motor@11745+7	;volatile
  4819     01F2                     l1853:
  4820     01F2  0879               	movf	motor@dirB,w
  4821     01F3  00A9               	movwf	motor@11745+8	;volatile
  4822     01F4                     l1855:
  4823     01F4  087A               	movf	motor@pwmB,w
  4824     01F5  00AA               	movwf	motor@11745+9	;volatile
  4825     01F6                     l1857:
  4826     01F6  300A               	movlw	10
  4827     01F7  00F2               	movwf	UART_send@size
  4828     01F8  3000               	movlw	0
  4829     01F9  00F3               	movwf	UART_send@size+1
  4830     01FA  3021               	movlw	(low (motor@11745| 0))& (0+255)
  4831     01FB  3181  2121  3181   	fcall	_UART_send
  4832     01FE  3A00               	xorlw	0
  4833     01FF  1903               	skipnz
  4834     0200  2A02               	goto	u1331
  4835     0201  2A03               	goto	u1330
  4836     0202                     u1331:
  4837     0202  29D4               	goto	l1835
  4838     0203                     u1330:
  4839     0203                     l160:
  4840     0203  0008               	return
  4841     0204                     __end_of_motor:
  4842                           
  4843                           	psect	text18
  4844     0121                     __ptext18:	
  4845 ;; *************** function _UART_send *****************
  4846 ;; Defined at:
  4847 ;;		line 62 in file "./Commands.h"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;  message         1    wreg     PTR volatile unsigned ch
  4850 ;;		 -> ore_type@11787(7), surface_exploration@11783(10), custom_laser@11775(6), transmit_repair@11769(6), 
  4851 ;;		 -> request_repair@11766(6), transmit_shield_code@11763(6), shoot_laser@11760(7), set_laser@11756(7), 
  4852 ;;		 -> servo@11752(10), motor@11745(10), user_data_send@11733(6), PCLS_info_send@11725(6), 
  4853 ;;  size            2    2[COMMON] unsigned int 
  4854 ;; Auto vars:     Size  Location     Type
  4855 ;;  message         1    6[COMMON] PTR volatile unsigned ch
  4856 ;;		 -> ore_type@11787(7), surface_exploration@11783(10), custom_laser@11775(6), transmit_repair@11769(6), 
  4857 ;;		 -> request_repair@11766(6), transmit_shield_code@11763(6), shoot_laser@11760(7), set_laser@11756(7), 
  4858 ;;		 -> servo@11752(10), motor@11745(10), user_data_send@11733(6), PCLS_info_send@11725(6), 
  4859 ;;  i               1    7[COMMON] volatile unsigned char 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      unsigned char 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4869 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;Total ram usage:        6 bytes
  4874 ;; Hardware stack levels used: 1
  4875 ;; Hardware stack levels required when called: 1
  4876 ;; This function calls:
  4877 ;;		_tx_wait
  4878 ;; This function is called by:
  4879 ;;		_PCLS_info_send
  4880 ;;		_user_data_send
  4881 ;;		_motor
  4882 ;;		_set_laser
  4883 ;;		_shoot_laser
  4884 ;;		_transmit_shield_code
  4885 ;;		_servo
  4886 ;;		_request_repair
  4887 ;;		_transmit_repair
  4888 ;;		_custom_laser
  4889 ;;		_surface_exploration
  4890 ;;		_ore_type
  4891 ;; This function uses a non-reentrant model
  4892 ;;
  4893                           
  4894     0121                     _UART_send:	
  4895                           ;psect for function _UART_send
  4896                           
  4897                           
  4898                           ;incstack = 0
  4899                           ; Regs used in _UART_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4900                           ;UART_send@message stored from wreg
  4901     0121  00F6               	movwf	UART_send@message
  4902     0122                     l1685:
  4903                           
  4904                           ;./Commands.h: 62: ;./Commands.h: 63:     BAUD1CONbits.BRG16 = 1;;./Commands.h: 64:     
      +                          SP1BRGLbits.SP1BRGL = 0x44;;./Commands.h: 66:     RC6PPS = 0x10;
  4905     0122  01F7               	clrf	UART_send@i	;volatile
  4906     0123  293B               	goto	l1697
  4907     0124                     l1687:
  4908                           
  4909                           ;./Commands.h: 67: };./Commands.h: 68: 
  4910     0124  3180  2034  3181   	fcall	_tx_wait
  4911     0127  3A00               	xorlw	0
  4912     0128  1D03               	skipz
  4913     0129  292B               	goto	u1071
  4914     012A  292C               	goto	u1070
  4915     012B                     u1071:
  4916     012B  292E               	goto	l1693
  4917     012C                     u1070:
  4918     012C                     l1689:
  4919                           
  4920                           ;./Commands.h: 69: void PCLS_info_send();./Commands.h: 70: {
  4921     012C  3000               	movlw	0
  4922     012D  2949               	goto	l100
  4923     012E                     l1693:
  4924                           
  4925                           ;./Commands.h: 72: }
  4926     012E  0877               	movf	UART_send@i,w
  4927     012F  0776               	addwf	UART_send@message,w
  4928     0130  00F4               	movwf	??_UART_send
  4929     0131  0874               	movf	??_UART_send,w
  4930     0132  0086               	movwf	6
  4931     0133  0187               	clrf	7
  4932     0134  0801               	movf	1,w
  4933     0135  0022               	movlb	2	; select bank2
  4934     0136  009A               	movwf	26	;volatile
  4935     0137                     l1695:
  4936                           
  4937                           ;./Commands.h: 73: 
  4938     0137  3001               	movlw	1
  4939     0138  00F4               	movwf	??_UART_send
  4940     0139  0874               	movf	??_UART_send,w
  4941     013A  07F7               	addwf	UART_send@i,f	;volatile
  4942     013B                     l1697:
  4943     013B  0877               	movf	UART_send@i,w	;volatile
  4944     013C  00F4               	movwf	??_UART_send
  4945     013D  01F5               	clrf	??_UART_send+1
  4946     013E  0873               	movf	UART_send@size+1,w
  4947     013F  0275               	subwf	??_UART_send+1,w
  4948     0140  1D03               	skipz
  4949     0141  2944               	goto	u1085
  4950     0142  0872               	movf	UART_send@size,w
  4951     0143  0274               	subwf	??_UART_send,w
  4952     0144                     u1085:
  4953     0144  1C03               	skipc
  4954     0145  2947               	goto	u1081
  4955     0146  2948               	goto	u1080
  4956     0147                     u1081:
  4957     0147  2924               	goto	l1687
  4958     0148                     u1080:
  4959     0148                     l1699:
  4960                           
  4961                           ;./Commands.h: 75: {
  4962     0148  3001               	movlw	1
  4963     0149                     l100:
  4964     0149  0008               	return
  4965     014A                     __end_of_UART_send:
  4966                           
  4967                           	psect	text19
  4968     0034                     __ptext19:	
  4969 ;; *************** function _tx_wait *****************
  4970 ;; Defined at:
  4971 ;;		line 36 in file "./Commands.h"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;		None
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;  count           2    0[COMMON] volatile unsigned int 
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      unsigned char 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4986 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;Total ram usage:        2 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_UART_send
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998     0034                     _tx_wait:	
  4999                           ;psect for function _tx_wait
  5000                           
  5001     0034                     l1649:	
  5002                           ;incstack = 0
  5003                           ; Regs used in _tx_wait: [wreg+status,2+status,0]
  5004                           
  5005                           
  5006                           ;./Commands.h: 38: ;./Commands.h: 39:     for (i=0; i < size; i++)
  5007     0034  30E8               	movlw	232
  5008     0035  00F0               	movwf	tx_wait@count	;volatile
  5009     0036  3003               	movlw	3
  5010     0037  00F1               	movwf	tx_wait@count+1	;volatile
  5011     0038                     l1651:
  5012     0038  0870               	movf	tx_wait@count,w	;volatile
  5013     0039  0471               	iorwf	tx_wait@count+1,w	;volatile
  5014     003A  1D03               	btfss	3,2
  5015     003B  283D               	goto	u1031
  5016     003C  283E               	goto	u1030
  5017     003D                     u1031:
  5018     003D  283F               	goto	l85
  5019     003E                     u1030:
  5020     003E  284B               	goto	l1663
  5021     003F                     l85:
  5022                           
  5023                           ;./Commands.h: 40:     {;./Commands.h: 41:         if(!tx_wait())
  5024     003F  002E               	movlb	14	; select bank14
  5025     0040  1E0F               	btfss	15,4	;volatile
  5026     0041  2843               	goto	u1041
  5027     0042  2844               	goto	u1040
  5028     0043                     u1041:
  5029     0043  2846               	goto	l1659
  5030     0044                     u1040:
  5031     0044                     l1655:
  5032                           
  5033                           ;./Commands.h: 42:         {;./Commands.h: 43:             return 0;
  5034     0044  3001               	movlw	1
  5035     0045  284C               	goto	l88
  5036     0046                     l1659:
  5037                           
  5038                           ;./Commands.h: 45:         TXREG = message[i];
  5039     0046  3001               	movlw	1
  5040     0047  02F0               	subwf	tx_wait@count,f	;volatile
  5041     0048  3000               	movlw	0
  5042     0049  3BF1               	subwfb	tx_wait@count+1,f	;volatile
  5043     004A  2838               	goto	l1651
  5044     004B                     l1663:
  5045                           
  5046                           ;./Commands.h: 46:     }
  5047     004B  3000               	movlw	0
  5048     004C                     l88:
  5049     004C  0008               	return
  5050     004D                     __end_of_tx_wait:
  5051                           
  5052                           	psect	text20
  5053     0010                     __ptext20:	
  5054 ;; *************** function _abs *****************
  5055 ;; Defined at:
  5056 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  a               2    0[COMMON] int 
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  2    0[COMMON] int 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5073 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5074 ;;Total ram usage:        4 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; This function calls:
  5077 ;;		Nothing
  5078 ;; This function is called by:
  5079 ;;		_Vdrive
  5080 ;;		_line_follower
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084     0010                     _abs:	
  5085                           ;psect for function _abs
  5086                           
  5087     0010                     l1859:	
  5088                           ;incstack = 0
  5089                           ; Regs used in _abs: [wreg+status,2+status,0]
  5090                           
  5091     0010  1BF1               	btfsc	abs@a+1,7
  5092     0011  2813               	goto	u1341
  5093     0012  2814               	goto	u1340
  5094     0013                     u1341:
  5095     0013  2815               	goto	l1863
  5096     0014                     u1340:
  5097     0014                     l1861:
  5098     0014  2820               	goto	l979
  5099     0015                     l1863:
  5100     0015  0970               	comf	abs@a,w
  5101     0016  00F2               	movwf	??_abs
  5102     0017  0971               	comf	abs@a+1,w
  5103     0018  00F3               	movwf	??_abs+1
  5104     0019  0AF2               	incf	??_abs,f
  5105     001A  1903               	skipnz
  5106     001B  0AF3               	incf	??_abs+1,f
  5107     001C  0872               	movf	??_abs,w
  5108     001D  00F0               	movwf	?_abs
  5109     001E  0873               	movf	??_abs+1,w
  5110     001F  00F1               	movwf	?_abs+1
  5111     0020                     l979:
  5112     0020  0008               	return
  5113     0021                     __end_of_abs:
  5114                           
  5115                           	psect	text21
  5116     00BA                     __ptext21:	
  5117 ;; *************** function ___wmul *****************
  5118 ;; Defined at:
  5119 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  5120 ;; Parameters:    Size  Location     Type
  5121 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5122 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  product         2    4[BANK0 ] unsigned int 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  2    0[BANK0 ] unsigned int 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5137 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5138 ;;Total ram usage:        6 bytes
  5139 ;; Hardware stack levels used: 1
  5140 ;; This function calls:
  5141 ;;		Nothing
  5142 ;; This function is called by:
  5143 ;;		_Vdrive
  5144 ;;		_drive
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148     00BA                     ___wmul:	
  5149                           ;psect for function ___wmul
  5150                           
  5151     00BA                     l1867:	
  5152                           ;incstack = 0
  5153                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5154                           
  5155     00BA  0020               	movlb	0	; select bank0
  5156     00BB  01A4               	clrf	___wmul@product
  5157     00BC  01A5               	clrf	___wmul@product+1
  5158     00BD                     l1869:
  5159     00BD  1C20               	btfss	___wmul@multiplier,0
  5160     00BE  28C0               	goto	u1351
  5161     00BF  28C1               	goto	u1350
  5162     00C0                     u1351:
  5163     00C0  28C5               	goto	l516
  5164     00C1                     u1350:
  5165     00C1                     l1871:
  5166     00C1  0822               	movf	___wmul@multiplicand,w
  5167     00C2  07A4               	addwf	___wmul@product,f
  5168     00C3  0823               	movf	___wmul@multiplicand+1,w
  5169     00C4  3DA5               	addwfc	___wmul@product+1,f
  5170     00C5                     l516:
  5171     00C5  3001               	movlw	1
  5172     00C6                     u1365:
  5173     00C6  35A2               	lslf	___wmul@multiplicand,f
  5174     00C7  0DA3               	rlf	___wmul@multiplicand+1,f
  5175     00C8  0B89               	decfsz	9,f
  5176     00C9  28C6               	goto	u1365
  5177     00CA                     l1873:
  5178     00CA  3001               	movlw	1
  5179     00CB                     u1375:
  5180     00CB  36A1               	lsrf	___wmul@multiplier+1,f
  5181     00CC  0CA0               	rrf	___wmul@multiplier,f
  5182     00CD  0B89               	decfsz	9,f
  5183     00CE  28CB               	goto	u1375
  5184     00CF                     l1875:
  5185     00CF  0820               	movf	___wmul@multiplier,w
  5186     00D0  0421               	iorwf	___wmul@multiplier+1,w
  5187     00D1  1D03               	btfss	3,2
  5188     00D2  28D4               	goto	u1381
  5189     00D3  28D5               	goto	u1380
  5190     00D4                     u1381:
  5191     00D4  28BD               	goto	l1869
  5192     00D5                     u1380:
  5193     00D5                     l1877:
  5194     00D5  0825               	movf	___wmul@product+1,w
  5195     00D6  00A1               	movwf	?___wmul+1
  5196     00D7  0824               	movf	___wmul@product,w
  5197     00D8  00A0               	movwf	?___wmul
  5198     00D9                     l518:
  5199     00D9  0008               	return
  5200     00DA                     __end_of___wmul:
  5201                           
  5202                           	psect	text22
  5203     03A6                     __ptext22:	
  5204 ;; *************** function ___awdiv *****************
  5205 ;; Defined at:
  5206 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  divisor         2    4[COMMON] int 
  5209 ;;  dividend        2    6[COMMON] int 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  quotient        2   11[COMMON] int 
  5212 ;;  sign            1   10[COMMON] unsigned char 
  5213 ;;  counter         1    9[COMMON] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  2    4[COMMON] int 
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, status,0
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5223 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;Total ram usage:        9 bytes
  5228 ;; Hardware stack levels used: 1
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_Vdrive
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236     03A6                     ___awdiv:	
  5237                           ;psect for function ___awdiv
  5238                           
  5239     03A6                     l1881:	
  5240                           ;incstack = 0
  5241                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5242                           
  5243     03A6  01FA               	clrf	___awdiv@sign
  5244     03A7                     l1883:
  5245     03A7  1FF5               	btfss	___awdiv@divisor+1,7
  5246     03A8  2BAA               	goto	u1391
  5247     03A9  2BAB               	goto	u1390
  5248     03AA                     u1391:
  5249     03AA  2BB2               	goto	l1889
  5250     03AB                     u1390:
  5251     03AB                     l1885:
  5252     03AB  09F4               	comf	___awdiv@divisor,f
  5253     03AC  09F5               	comf	___awdiv@divisor+1,f
  5254     03AD  0AF4               	incf	___awdiv@divisor,f
  5255     03AE  1903               	skipnz
  5256     03AF  0AF5               	incf	___awdiv@divisor+1,f
  5257     03B0                     l1887:
  5258     03B0  01FA               	clrf	___awdiv@sign
  5259     03B1  0AFA               	incf	___awdiv@sign,f
  5260     03B2                     l1889:
  5261     03B2  1FF7               	btfss	___awdiv@dividend+1,7
  5262     03B3  2BB5               	goto	u1401
  5263     03B4  2BB6               	goto	u1400
  5264     03B5                     u1401:
  5265     03B5  2BBF               	goto	l1895
  5266     03B6                     u1400:
  5267     03B6                     l1891:
  5268     03B6  09F6               	comf	___awdiv@dividend,f
  5269     03B7  09F7               	comf	___awdiv@dividend+1,f
  5270     03B8  0AF6               	incf	___awdiv@dividend,f
  5271     03B9  1903               	skipnz
  5272     03BA  0AF7               	incf	___awdiv@dividend+1,f
  5273     03BB                     l1893:
  5274     03BB  3001               	movlw	1
  5275     03BC  00F8               	movwf	??___awdiv
  5276     03BD  0878               	movf	??___awdiv,w
  5277     03BE  06FA               	xorwf	___awdiv@sign,f
  5278     03BF                     l1895:
  5279     03BF  01FB               	clrf	___awdiv@quotient
  5280     03C0  01FC               	clrf	___awdiv@quotient+1
  5281     03C1                     l1897:
  5282     03C1  0874               	movf	___awdiv@divisor,w
  5283     03C2  0475               	iorwf	___awdiv@divisor+1,w
  5284     03C3  1903               	btfsc	3,2
  5285     03C4  2BC6               	goto	u1411
  5286     03C5  2BC7               	goto	u1410
  5287     03C6                     u1411:
  5288     03C6  2BF6               	goto	l1917
  5289     03C7                     u1410:
  5290     03C7                     l1899:
  5291     03C7  01F9               	clrf	___awdiv@counter
  5292     03C8  0AF9               	incf	___awdiv@counter,f
  5293     03C9  2BD3               	goto	l1905
  5294     03CA                     l1901:
  5295     03CA  3001               	movlw	1
  5296     03CB                     u1425:
  5297     03CB  35F4               	lslf	___awdiv@divisor,f
  5298     03CC  0DF5               	rlf	___awdiv@divisor+1,f
  5299     03CD  0B89               	decfsz	9,f
  5300     03CE  2BCB               	goto	u1425
  5301     03CF                     l1903:
  5302     03CF  3001               	movlw	1
  5303     03D0  00F8               	movwf	??___awdiv
  5304     03D1  0878               	movf	??___awdiv,w
  5305     03D2  07F9               	addwf	___awdiv@counter,f
  5306     03D3                     l1905:
  5307     03D3  1FF5               	btfss	___awdiv@divisor+1,7
  5308     03D4  2BD6               	goto	u1431
  5309     03D5  2BD7               	goto	u1430
  5310     03D6                     u1431:
  5311     03D6  2BCA               	goto	l1901
  5312     03D7                     u1430:
  5313     03D7                     l1907:
  5314     03D7  3001               	movlw	1
  5315     03D8                     u1445:
  5316     03D8  35FB               	lslf	___awdiv@quotient,f
  5317     03D9  0DFC               	rlf	___awdiv@quotient+1,f
  5318     03DA  0B89               	decfsz	9,f
  5319     03DB  2BD8               	goto	u1445
  5320     03DC  0875               	movf	___awdiv@divisor+1,w
  5321     03DD  0277               	subwf	___awdiv@dividend+1,w
  5322     03DE  1D03               	skipz
  5323     03DF  2BE2               	goto	u1455
  5324     03E0  0874               	movf	___awdiv@divisor,w
  5325     03E1  0276               	subwf	___awdiv@dividend,w
  5326     03E2                     u1455:
  5327     03E2  1C03               	skipc
  5328     03E3  2BE5               	goto	u1451
  5329     03E4  2BE6               	goto	u1450
  5330     03E5                     u1451:
  5331     03E5  2BEB               	goto	l1913
  5332     03E6                     u1450:
  5333     03E6                     l1909:
  5334     03E6  0874               	movf	___awdiv@divisor,w
  5335     03E7  02F6               	subwf	___awdiv@dividend,f
  5336     03E8  0875               	movf	___awdiv@divisor+1,w
  5337     03E9  3BF7               	subwfb	___awdiv@dividend+1,f
  5338     03EA                     l1911:
  5339     03EA  147B               	bsf	___awdiv@quotient,0
  5340     03EB                     l1913:
  5341     03EB  3001               	movlw	1
  5342     03EC                     u1465:
  5343     03EC  36F5               	lsrf	___awdiv@divisor+1,f
  5344     03ED  0CF4               	rrf	___awdiv@divisor,f
  5345     03EE  0B89               	decfsz	9,f
  5346     03EF  2BEC               	goto	u1465
  5347     03F0                     l1915:
  5348     03F0  3001               	movlw	1
  5349     03F1  02F9               	subwf	___awdiv@counter,f
  5350     03F2  1D03               	btfss	3,2
  5351     03F3  2BF5               	goto	u1471
  5352     03F4  2BF6               	goto	u1470
  5353     03F5                     u1471:
  5354     03F5  2BD7               	goto	l1907
  5355     03F6                     u1470:
  5356     03F6                     l1917:
  5357     03F6  087A               	movf	___awdiv@sign,w
  5358     03F7  1903               	btfsc	3,2
  5359     03F8  2BFA               	goto	u1481
  5360     03F9  2BFB               	goto	u1480
  5361     03FA                     u1481:
  5362     03FA  2C00               	goto	l1921
  5363     03FB                     u1480:
  5364     03FB                     l1919:
  5365     03FB  09FB               	comf	___awdiv@quotient,f
  5366     03FC  09FC               	comf	___awdiv@quotient+1,f
  5367     03FD  0AFB               	incf	___awdiv@quotient,f
  5368     03FE  1903               	skipnz
  5369     03FF  0AFC               	incf	___awdiv@quotient+1,f
  5370     0400                     l1921:
  5371     0400  087C               	movf	___awdiv@quotient+1,w
  5372     0401  00F5               	movwf	?___awdiv+1
  5373     0402  087B               	movf	___awdiv@quotient,w
  5374     0403  00F4               	movwf	?___awdiv
  5375     0404                     l669:
  5376     0404  0008               	return
  5377     0405                     __end_of___awdiv:
  5378                           
  5379                           	psect	text23
  5380     0FE0                     __ptext23:	
  5381 ;; *************** function _UART_init *****************
  5382 ;; Defined at:
  5383 ;;		line 78 in file "./Commands.h"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;		None
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5401 ;;Total ram usage:        0 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; This function calls:
  5404 ;;		Nothing
  5405 ;; This function is called by:
  5406 ;;		_main
  5407 ;; This function uses a non-reentrant model
  5408 ;;
  5409                           
  5410     0FE0                     _UART_init:	
  5411                           ;psect for function _UART_init
  5412                           
  5413     0FE0                     l2029:	
  5414                           ;incstack = 0
  5415                           ; Regs used in _UART_init: [wreg]
  5416                           
  5417                           
  5418                           ;./Commands.h: 80:         if (rx_wait())
  5419     0FE0  003E               	movlb	30	; select bank30
  5420     0FE1  134E               	bcf	78,6	;volatile
  5421                           
  5422                           ;./Commands.h: 81:         {
  5423     0FE2  13CE               	bcf	78,7	;volatile
  5424                           
  5425                           ;./Commands.h: 83:         }
  5426     0FE3  0022               	movlb	2	; select bank2
  5427     0FE4  121E               	bcf	30,4	;volatile
  5428                           
  5429                           ;./Commands.h: 84:         else
  5430     0FE5  169E               	bsf	30,5	;volatile
  5431                           
  5432                           ;./Commands.h: 85:         {
  5433     0FE6  179D               	bsf	29,7	;volatile
  5434                           
  5435                           ;./Commands.h: 86:             return 0;
  5436     0FE7  161D               	bsf	29,4	;volatile
  5437                           
  5438                           ;./Commands.h: 88:     }
  5439     0FE8  151E               	bsf	30,2	;volatile
  5440                           
  5441                           ;./Commands.h: 90:     teamID = r[6];
  5442     0FE9  159F               	bsf	31,3	;volatile
  5443     0FEA                     l2031:
  5444                           
  5445                           ;./Commands.h: 91:     playerID = r[7];
  5446     0FEA  3044               	movlw	68
  5447     0FEB  009B               	movwf	27	;volatile
  5448                           
  5449                           ;./Commands.h: 93:     health += r[9] << 8;
  5450     0FEC  3010               	movlw	16
  5451     0FED  003E               	movlb	30	; select bank30
  5452     0FEE  00A6               	movwf	38	;volatile
  5453     0FEF                     l104:
  5454     0FEF  0008               	return
  5455     0FF0                     __end_of_UART_init:
  5456                           
  5457                           	psect	text24
  5458     0FC4                     __ptext24:	
  5459 ;; *************** function _IR_init *****************
  5460 ;; Defined at:
  5461 ;;		line 12 in file "./IR.h"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;		None
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;		None
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      void 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0, pclath, cstack
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;Total ram usage:        0 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; Hardware stack levels required when called: 1
  5482 ;; This function calls:
  5483 ;;		_read_adc
  5484 ;; This function is called by:
  5485 ;;		_main
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489     0FC4                     _IR_init:	
  5490                           ;psect for function _IR_init
  5491                           
  5492     0FC4                     l2137:	
  5493                           ;incstack = 0
  5494                           ; Regs used in _IR_init: [wreg+status,2+status,0+pclath+cstack]
  5495                           
  5496                           
  5497                           ;./IR.h: 14:     TRISAbits.TRISA1 = 0;
  5498     0FC4  300C               	movlw	12
  5499     0FC5  3180  20FA  318F   	fcall	_read_adc
  5500     0FC8  0870               	movf	?_read_adc,w
  5501     0FC9  3EC0               	addlw	192
  5502     0FCA  0021               	movlb	1	; select bank1
  5503     0FCB  00E5               	movwf	_IR_base^(0+128)	;volatile
  5504     0FCC  30FF               	movlw	255
  5505     0FCD  3D71               	addwfc	?_read_adc+1,w
  5506     0FCE  00E6               	movwf	(_IR_base+1)^(0+128)	;volatile
  5507     0FCF                     l321:
  5508     0FCF  0008               	return
  5509     0FD0                     __end_of_IR_init:
  5510                           
  5511                           	psect	text25
  5512     01A2                     __ptext25:	
  5513 ;; *************** function _IR *****************
  5514 ;; Defined at:
  5515 ;;		line 17 in file "./IR.h"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;		None
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;  ADC_val         2   10[COMMON] volatile unsigned int 
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, pclath, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5531 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5532 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5533 ;;Total ram usage:        4 bytes
  5534 ;; Hardware stack levels used: 1
  5535 ;; Hardware stack levels required when called: 1
  5536 ;; This function calls:
  5537 ;;		_read_adc
  5538 ;; This function is called by:
  5539 ;;		_main
  5540 ;; This function uses a non-reentrant model
  5541 ;;
  5542                           
  5543     01A2                     _IR:	
  5544                           ;psect for function _IR
  5545                           
  5546     01A2                     l2139:	
  5547                           ;incstack = 0
  5548                           ; Regs used in _IR: [wreg+pclath+cstack]
  5549                           
  5550                           
  5551                           ;./IR.h: 19:     if (ADC_val > IR_base);./IR.h: 21:         LATAbits.LATA1 = 1;
  5552     01A2  0020               	movlb	0	; select bank0
  5553     01A3  1011               	bcf	17,0	;volatile
  5554                           
  5555                           ;./IR.h: 22:         LATAbits.LATA1 = 1;
  5556     01A4  1091               	bcf	17,1	;volatile
  5557                           
  5558                           ;./IR.h: 23:         LATAbits.LATA2 = 1;
  5559     01A5  1111               	bcf	17,2	;volatile
  5560                           
  5561                           ;./IR.h: 24:         LATAbits.LATA3 = 1;
  5562     01A6  1191               	bcf	17,3	;volatile
  5563     01A7                     l2141:
  5564                           
  5565                           ;./IR.h: 26:     else
  5566     01A7  300C               	movlw	12
  5567     01A8  3180  20FA  3181   	fcall	_read_adc
  5568     01AB  0871               	movf	?_read_adc+1,w
  5569     01AC  00FB               	movwf	IR@ADC_val+1	;volatile
  5570     01AD  0870               	movf	?_read_adc,w
  5571     01AE  00FA               	movwf	IR@ADC_val	;volatile
  5572     01AF                     l2143:
  5573                           
  5574                           ;./IR.h: 27:     {
  5575     01AF  087B               	movf	IR@ADC_val+1,w	;volatile
  5576     01B0  0021               	movlb	1	; select bank1
  5577     01B1  0266               	subwf	(_IR_base+1)^(0+128),w	;volatile
  5578     01B2  1D03               	skipz
  5579     01B3  29B6               	goto	u1815
  5580     01B4  087A               	movf	IR@ADC_val,w	;volatile
  5581     01B5  0265               	subwf	_IR_base^(0+128),w	;volatile
  5582     01B6                     u1815:
  5583     01B6  1803               	skipnc
  5584     01B7  29B9               	goto	u1811
  5585     01B8  29BA               	goto	u1810
  5586     01B9                     u1811:
  5587     01B9  29C0               	goto	l324
  5588     01BA                     u1810:
  5589     01BA                     l2145:
  5590                           
  5591                           ;./IR.h: 28:         LATAbits.LATA0 = 0;;./IR.h: 29:         LATAbits.LATA1 = 0;
  5592     01BA  0020               	movlb	0	; select bank0
  5593     01BB  1496               	bsf	22,1	;volatile
  5594                           
  5595                           ;./IR.h: 30:         LATAbits.LATA2 = 0;
  5596     01BC  1496               	bsf	22,1	;volatile
  5597                           
  5598                           ;./IR.h: 31:         LATAbits.LATA3 = 0;
  5599     01BD  1516               	bsf	22,2	;volatile
  5600                           
  5601                           ;./IR.h: 32:         _delay((unsigned long)((3000)*(400000/4000.0)));
  5602     01BE  1596               	bsf	22,3	;volatile
  5603                           
  5604                           ;./IR.h: 33:     }
  5605     01BF  29D1               	goto	l326
  5606     01C0                     l324:	
  5607                           ;./IR.h: 34: }
  5608                           
  5609     01C0  0020               	movlb	0	; select bank0
  5610     01C1  1016               	bcf	22,0	;volatile
  5611     01C2  1096               	bcf	22,1	;volatile
  5612     01C3  1116               	bcf	22,2	;volatile
  5613     01C4  1196               	bcf	22,3	;volatile
  5614     01C5                     l2147:
  5615     01C5  3002               	movlw	2
  5616     01C6  00F9               	movwf	??_IR+1
  5617     01C7  3086               	movlw	134
  5618     01C8  00F8               	movwf	??_IR
  5619     01C9  3099               	movlw	153
  5620     01CA                     u2097:
  5621     01CA  0B89               	decfsz	9,f
  5622     01CB  29CA               	goto	u2097
  5623     01CC  0BF8               	decfsz	??_IR,f
  5624     01CD  29CA               	goto	u2097
  5625     01CE  0BF9               	decfsz	??_IR+1,f
  5626     01CF  29CA               	goto	u2097
  5627     01D0  0000               	nop
  5628     01D1                     l326:
  5629     01D1  0008               	return
  5630     01D2                     __end_of_IR:
  5631                           
  5632                           	psect	text26
  5633     00FA                     __ptext26:	
  5634 ;; *************** function _read_adc *****************
  5635 ;; Defined at:
  5636 ;;		line 33 in file "./Line Follower.h"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  sensor          1    wreg     unsigned char 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  sensor          1    5[COMMON] unsigned char 
  5641 ;;  ADC_val         2    6[COMMON] volatile unsigned int 
  5642 ;; Return value:  Size  Location     Type
  5643 ;;                  2    0[COMMON] int 
  5644 ;; Registers used:
  5645 ;;		wreg
  5646 ;; Tracked objects:
  5647 ;;		On entry : 0/0
  5648 ;;		On exit  : 0/0
  5649 ;;		Unchanged: 0/0
  5650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5652 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;Total ram usage:        8 bytes
  5656 ;; Hardware stack levels used: 1
  5657 ;; This function calls:
  5658 ;;		Nothing
  5659 ;; This function is called by:
  5660 ;;		_line_follower
  5661 ;;		_IR_init
  5662 ;;		_IR
  5663 ;;		_main
  5664 ;; This function uses a non-reentrant model
  5665 ;;
  5666                           
  5667     00FA                     _read_adc:	
  5668                           ;psect for function _read_adc
  5669                           
  5670                           
  5671                           ;incstack = 0
  5672                           ; Regs used in _read_adc: [wreg]
  5673                           ;read_adc@sensor stored from wreg
  5674     00FA  00F5               	movwf	read_adc@sensor
  5675     00FB                     l2021:
  5676                           
  5677                           ;./Line Follower.h: 33:  while(ADCON0bits.ADGO){};./Line Follower.h: 34:     ADC_val = A
      +                          DRESH << 8;;./Line Follower.h: 35:     ADC_val += ADRESL;;./Line Follower.h: 37: }
  5678     00FB  0875               	movf	read_adc@sensor,w
  5679     00FC  0021               	movlb	1	; select bank1
  5680     00FD  009E               	movwf	30	;volatile
  5681     00FE                     l2023:
  5682                           
  5683                           ;./Line Follower.h: 38: 
  5684     00FE  1413               	bsf	19,0	;volatile
  5685                           
  5686                           ;./Line Follower.h: 39: void line_follower()
  5687     00FF  300D               	movlw	13
  5688     0100  00F2               	movwf	??_read_adc
  5689     0101  30FC               	movlw	252
  5690     0102                     u2107:
  5691     0102  0B89               	decfsz	9,f
  5692     0103  2902               	goto	u2107
  5693     0104  0BF2               	decfsz	??_read_adc,f
  5694     0105  2902               	goto	u2107
  5695     0106                     l289:	
  5696                           ;./Line Follower.h: 41:     volatile unsigned int l_val, m_val, r_val;
  5697                           
  5698     0106  0021               	movlb	1	; select bank1
  5699     0107  1813               	btfsc	19,0	;volatile
  5700     0108  290A               	goto	u1671
  5701     0109  290B               	goto	u1670
  5702     010A                     u1671:
  5703     010A  2906               	goto	l289
  5704     010B                     u1670:
  5705     010B                     l2025:
  5706                           
  5707                           ;./Line Follower.h: 42: 
  5708     010B  080D               	movf	13,w	;volatile
  5709     010C  00F2               	movwf	??_read_adc
  5710     010D  01F3               	clrf	??_read_adc+1
  5711     010E  0872               	movf	??_read_adc,w
  5712     010F  00F3               	movwf	??_read_adc+1
  5713     0110  01F2               	clrf	??_read_adc
  5714     0111  0872               	movf	??_read_adc,w
  5715     0112  00F6               	movwf	read_adc@ADC_val	;volatile
  5716     0113  0873               	movf	??_read_adc+1,w
  5717     0114  00F7               	movwf	read_adc@ADC_val+1	;volatile
  5718                           
  5719                           ;./Line Follower.h: 43:     TRISAbits.TRISA0 = 0;
  5720     0115  080C               	movf	12,w	;volatile
  5721     0116  00F2               	movwf	??_read_adc
  5722     0117  01F3               	clrf	??_read_adc+1
  5723     0118  0872               	movf	??_read_adc,w
  5724     0119  07F6               	addwf	read_adc@ADC_val,f	;volatile
  5725     011A  0873               	movf	??_read_adc+1,w
  5726     011B  3DF7               	addwfc	read_adc@ADC_val+1,f	;volatile
  5727                           
  5728                           ;./Line Follower.h: 44:     TRISAbits.TRISA1 = 0;
  5729     011C  0877               	movf	read_adc@ADC_val+1,w	;volatile
  5730     011D  00F1               	movwf	?_read_adc+1
  5731     011E  0876               	movf	read_adc@ADC_val,w	;volatile
  5732     011F  00F0               	movwf	?_read_adc
  5733     0120                     l292:
  5734     0120  0008               	return
  5735     0121                     __end_of_read_adc:
  5736                           
  5737                           	psect	text27
  5738     0FD0                     __ptext27:	
  5739 ;; *************** function _ADC_init *****************
  5740 ;; Defined at:
  5741 ;;		line 19 in file "./Line Follower.h"
  5742 ;; Parameters:    Size  Location     Type
  5743 ;;		None
  5744 ;; Auto vars:     Size  Location     Type
  5745 ;;		None
  5746 ;; Return value:  Size  Location     Type
  5747 ;;                  1    wreg      void 
  5748 ;; Registers used:
  5749 ;;		wreg, status,2
  5750 ;; Tracked objects:
  5751 ;;		On entry : 0/0
  5752 ;;		On exit  : 0/0
  5753 ;;		Unchanged: 0/0
  5754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;Total ram usage:        0 bytes
  5760 ;; Hardware stack levels used: 1
  5761 ;; This function calls:
  5762 ;;		Nothing
  5763 ;; This function is called by:
  5764 ;;		_main
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768     0FD0                     _ADC_init:	
  5769                           ;psect for function _ADC_init
  5770                           
  5771     0FD0                     l2073:	
  5772                           ;incstack = 0
  5773                           ; Regs used in _ADC_init: [wreg+status,2]
  5774                           
  5775                           
  5776                           ;./Line Follower.h: 21: 
  5777     0FD0  0020               	movlb	0	; select bank0
  5778     0FD1  1091               	bcf	17,1	;volatile
  5779                           
  5780                           ;./Line Follower.h: 22:     ADPCH = 0b1011;
  5781     0FD2  003E               	movlb	30	; select bank30
  5782     0FD3  1438               	bsf	56,0	;volatile
  5783     0FD4                     l2075:
  5784                           
  5785                           ;./Line Follower.h: 24: 
  5786     0FD4  3091               	movlw	145
  5787     0FD5  0021               	movlb	1	; select bank1
  5788     0FD6  0093               	movwf	19	;volatile
  5789                           
  5790                           ;./Line Follower.h: 25: int read_adc(char sensor)
  5791     0FD7  30FF               	movlw	255
  5792     0FD8  0098               	movwf	24	;volatile
  5793     0FD9                     l2077:
  5794                           
  5795                           ;./Line Follower.h: 26: {
  5796     0FD9  019A               	clrf	26	;volatile
  5797     0FDA                     l2079:
  5798                           
  5799                           ;./Line Follower.h: 27:  volatile unsigned int ADC_val;
  5800     0FDA  019C               	clrf	28	;volatile
  5801                           
  5802                           ;./Line Follower.h: 28: 
  5803     0FDB  303F               	movlw	63
  5804     0FDC  009D               	movwf	29	;volatile
  5805                           
  5806                           ;./Line Follower.h: 30:  ADCON0bits.ADGO = 1;
  5807     0FDD  300B               	movlw	11
  5808     0FDE  009E               	movwf	30	;volatile
  5809     0FDF                     l286:
  5810     0FDF  0008               	return
  5811     0FE0                     __end_of_ADC_init:
  5812     007E                     btemp	set	126	;btemp
  5813     007E                     wtemp0	set	126
  5814                           
  5815                           	psect	config
  5816                           
  5817                           ;Config register CONFIG1 @ 0x8007
  5818                           ;	External Oscillator mode selection bits
  5819                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  5820                           ;	Power-up default value for COSC bits
  5821                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  5822                           ;	Clock Out Enable bit
  5823                           ;	CLKOUTEN = ON, CLKOUT function is enabled; FOSC/4 clock appears at OSC2
  5824                           ;	Clock Switch Enable bit
  5825                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5826                           ;	Fail-Safe Clock Monitor Enable bit
  5827                           ;	FCMEN = ON, FSCM timer enabled
  5828     8007                     	org	32775
  5829     8007  3E8F               	dw	16015
  5830                           
  5831                           ;Config register CONFIG3 @ 0x8009
  5832                           ;	WDT Period Select bits
  5833                           ;	WDTCPS = 0x1F, unprogrammed default
  5834                           ;	WDT operating mode
  5835                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5836                           ;	WDT Window Select bits
  5837                           ;	WDTCWS = 0x7, unprogrammed default
  5838                           ;	WDT input clock selector
  5839                           ;	WDTCCS = 0x7, unprogrammed default
  5840     8009                     	org	32777
  5841     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         87
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      80
    BANK1            80      0      71
    BANK2            80      0      20
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send@message	PTR volatile unsigned char  size(1) Largest target is 10
		 -> custom_laser@11775(COMMON[6]), motor@11745(BANK0[10]), ore_type@11787(COMMON[7]), PCLS_info_send@11725(BANK0[6]), 
		 -> request_repair@11766(COMMON[6]), servo@11752(COMMON[10]), set_laser@11756(BANK0[7]), shoot_laser@11760(BANK0[7]), 
		 -> surface_exploration@11783(COMMON[10]), transmit_repair@11769(COMMON[6]), transmit_shield_code@11763(BANK0[6]), user_data_send@11733(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_line_follower
    _main->_shield_code
    _shield_code->_user_data
    _transmit_shield_code->_UART_send
    _shoot_laser->_UART_send
    _set_laser->_UART_send
    _PCLS_info->_PCLS_info_send
    _PCLS_info_send->_UART_send
    _PCLS_info_receive->_rx_wait
    _servos->_user_data
    _line_follower->_motor
    _user_data->_user_data_receive
    _user_data_send->_UART_send
    _user_data_receive->___lwdiv
    _Vdrive->___awdiv
    _motor->_UART_send
    _UART_send->_tx_wait
    ___wmul->___awdiv
    ___awdiv->_abs
    _IR_init->_read_adc
    _IR->_read_adc

Critical Paths under _main in BANK0

    _main->_drive
    _PCLS_info->_PCLS_info_receive
    _line_follower->_motor
    _user_data->_user_data_receive
    _Vdrive->_motor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   28559
                           _ADC_init
                                 _IR
                            _IR_init
                          _UART_init
                              _drive
                      _line_follower
                           _read_adc
                             _servos
                        _shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _shield_code                                          2     2      0   10169
                                             12 COMMON     2     2      0
                          _PCLS_info
                          _set_laser
                        _shoot_laser
               _transmit_shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (2) _transmit_shield_code                                 7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _shoot_laser                                          9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _set_laser                                            9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _PCLS_info                                            0     0      0    1854
                  _PCLS_info_receive
                     _PCLS_info_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_receive                                   17    17      0     277
                                              2 COMMON     3     3      0
                                              0 BANK0     14    14      0
                            _rx_wait
 ---------------------------------------------------------------------------------
 (1) _servos                                               4     4      0    3300
                                             28 BANK0      4     4      0
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _line_follower                                        8     8      0    2975
                                             12 COMMON     2     2      0
                                             11 BANK0      6     6      0
                                _abs
                              _motor
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _drive                                                8     8      0    8704
                                             28 BANK0      8     8      0
                             _Vdrive
                             ___wmul
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _user_data                                            1     1      0    3250
                                             11 COMMON     1     1      0
                  _user_data_receive
                     _user_data_send
 ---------------------------------------------------------------------------------
 (2) _user_data_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _user_data_receive                                   31    31      0    1673
                                              8 COMMON     3     3      0
                                              0 BANK0     28    28      0
                            ___lwdiv
                            _rx_wait
 ---------------------------------------------------------------------------------
 (3) _rx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1074
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Vdrive                                              12     8      4    4836
                                             11 BANK0     12     8      4
                            ___awdiv
                             ___wmul
                                _abs
                              _motor
 ---------------------------------------------------------------------------------
 (2) _motor                                               15    12      3    2338
                                              8 COMMON     4     1      3
                                              0 BANK0     11    11      0
                          _UART_send
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_send                                            6     4      2    1553
                                              2 COMMON     6     4      2
                            _tx_wait
 ---------------------------------------------------------------------------------
 (4) _tx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     522
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              4 COMMON     9     5      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_init                                              0     0      0      46
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _IR                                                   4     4      0      69
                                              8 COMMON     4     4      0
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             8     6      2      46
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _IR
     _read_adc
   _IR_init
     _read_adc
   _UART_init
   _drive
     _Vdrive
       ___awdiv
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
         _abs (ARG)
       _abs
       _motor
         _UART_send
           _tx_wait
         _abs (ARG)
     ___wmul
     _user_data
       _user_data_receive
         ___lwdiv
         _rx_wait
       _user_data_send
         _UART_send
   _line_follower
     _abs
     _motor
     _read_adc
   _read_adc
   _servos
     _user_data
   _shield_code
     _PCLS_info
       _PCLS_info_receive
         _rx_wait
       _PCLS_info_send
         _UART_send
     _set_laser
       _UART_send
     _shoot_laser
       _UART_send
     _transmit_shield_code
       _UART_send
     _user_data
   _user_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      14       9       25.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Apr 07 00:09:09 2024

                          l91 0058                            l85 003F                            l94 0065  
                          l88 004C                            _IR 01A2                  ___awdiv@sign 007A  
         ___wmul@multiplicand 0022     __end_of_user_data_receive 07CD                           ?_IR 0070  
                         l100 0149                           l104 0FEF                           l112 009D  
                         l141 07CC                           l301 042A                           l134 0081  
                         l126 000F                           l311 04AB                           l119 02FD  
                         l160 0203                           l144 0763                           l152 0033  
                         l321 0FCF                           l313 04CC                           l305 0454  
                         l314 04DE                           l306 046E                           l331 02BB  
                         l324 01C0                           l252 0638                           l316 0510  
                         l308 0489                           l326 01D1                           l238 0541  
                         l342 0391                           l344 03A4                           l176 0175  
                         l184 01A1                           l192 00B9                           l249 060A  
                         l257 027D                           l337 0377                           l346 03A5  
                         l338 0372                           l292 0120                           l516 00C5  
                         l364 034C                           l286 0FDF                           l518 00D9  
                         l295 040C                           l289 0106                           l298 041B  
                         l669 0404                           l796 023F                           l979 0020  
                         _abs 0010                           _swA 004E                           _swB 004C  
                         _swC 004A                           _swD 0048                           wreg 0009  
                        ??_IR 0078                  _BAUD1CONbits 011F                          l2001 058F  
                        l2011 0603                          l2003 05B4                          ?_abs 0070  
                        l2021 00FB                          l2013 0607                          l2005 05C2  
                        l2101 0453                          l2023 00FE                          l2031 0FEA  
                        l2015 0617                          l2007 05D0                          l2111 0479  
                        l2103 045E                          l2025 010B                          l2017 061B  
                        l2009 05F5                          l2121 049F                          l2113 0483  
                        l2105 0462                          l2201 0396                          l2019 061E  
                        l2131 04F1                          l2123 04B8                          l2115 0487  
                        l2107 046C                          l2203 039C                          l2141 01A7  
                        l2029 0FE0                          l2061 0243                          l2133 050C  
                        l2125 04C0                          l2117 048A                          l2109 046F  
                        l2205 03A2                          l2301 0328                          l2143 01AF  
                        l2071 0272                          l2063 024D                          l2135 050E  
                        l2127 04D9                          l2119 0497                          l2151 0281  
                        l2303 032B                          l2311 033C                          l2073 0FD0  
                        l2145 01BA                          l2137 0FC4                          l2065 0252  
                        l2129 04EC                          l2081 0405                          l2161 0297  
                        l2153 0284                          l2313 0343                          l2305 032F  
                        l2075 0FD4                          l2147 01C5                          l2139 01A2  
                        l2067 0256                          l2059 0240                          l2091 042E  
                        l2083 0410                          l2171 034E                          l2163 029E  
                        l2155 0289                          l2307 0332                          l2077 0FD9  
                        l2069 0262                          l2093 0437                          l2085 0419  
                        l2181 0366                          l2173 0354                          l2165 02A2  
                        l2157 028C                          l2149 027E                          l2309 0335  
                        l2079 0FDA                          l1711 0214                          l1703 0204  
                        l2095 0441                          l2087 041F                          l2191 0382  
                        l2183 036F                          l2175 0357                          l2167 02A5  
                        l2159 0293                          l1721 0230                          l1713 0218  
                        l1705 0206                          l1801 0701                          l2097 0449  
                        l2089 0428                          l2193 0385                          l2177 0361  
                        l2169 02B0                          l1651 0038                          l1723 0235  
                        l1715 021C                          l1707 020C                          l1811 073B  
                        l1803 0712                          l2099 044B                          l2195 038E  
                        l2187 0373                          l2179 0363                          l1731 0082  
                        l2291 0304                          l1901 03CA                          l1717 022B  
                        l1709 020F                          l1725 023B                          l1821 075F  
                        l1813 0745                          l1805 0719                          l2189 0380  
                        l1741 02C9                          l1733 0090                          l2293 0307  
                        l1911 03EA                          l1903 03CF                          l1655 0044  
                        l1663 004B                          l1719 022F                          l1823 0796  
                        l1815 074E                          l1807 0723                          l2199 0392  
                        l1751 02DF                          l1743 02D2                          l1735 02BC  
                        l2295 030E                          l2287 02FE                          l1921 0400  
                        l1913 03EB                          l1905 03D3                          l1649 0034  
                        l1841 01E7                          l1833 01D4                          l1673 005D  
                        l1681 0064                          l1825 07A8                          l1817 0751  
                        l1809 0734                          l1761 0639                          l1737 02BF  
                        l1729 0082                          l2297 031A                          l2289 0301  
                        l1915 03F0                          l1907 03D7                          l1659 0046  
                        l1851 01F0                          l1843 01E9                          l1835 01D4  
                        l1667 004D                          l1827 07AF                          l1819 075A  
                        l1763 063C                          l1755 0066                          l1931 0021  
                        l1747 02D4                          l1739 02C1                          l2299 0320  
                        l1909 03E6                          l1917 03F6                          l1861 0014  
                        l1693 012E                          l1685 0122                          l1853 01F2  
                        l1845 01EB                          l1837 01E2                          l1677 005F  
                        l1669 0051                          l1829 07B9                          l1781 0681  
                        l1773 0651                          l1765 063E                          l1757 0066  
                        l1749 02D9                          l1925 0004                          l1941 014C  
                        l1919 03FB                          l1871 00C1                          l1863 0015  
                        l1695 0137                          l1687 0124                          l1855 01F4  
                        l1847 01ED                          l1839 01E5                          l1791 06B7  
                        l1783 0688                          l1767 0646                          l1775 0656  
                        l1759 0074                          l1935 0024                          l1951 0163  
                        l1943 015A                          l1881 03A6                          l1873 00CA  
                        l1689 012C                          l1697 013B                          l1857 01F6  
                        l1849 01EE                          l1793 06BB                          l1785 0692  
                        l1777 065C                          l1769 064F                          l1937 002C  
                        l1929 0007                          l1953 0165                          l1945 015D  
                        l1961 0178                          l1891 03B6                          l1883 03A7  
                        l1875 00CF                          l1867 00BA                          l1859 0010  
                        l1699 0148                          l1795 06E0                          l1787 06A6  
                        l1779 0671                          l1955 0166                          l1947 015F  
                        l1939 014C                          l1971 018F                          l1963 0186  
                        l1893 03BB                          l1885 03AB                          l1877 00D5  
                        l1869 00BD                          l1797 06F0                          l1789 06AD  
                        l1957 0168                          l1949 0161                          l1973 0191  
                        l1965 0189                          l1981 009E                          l1895 03BF  
                        l1887 03B0                          l1991 0546                          l1799 06F7  
                        l1975 0192                          l1967 018B                          l1959 0178  
                        l1983 00AC                          l1897 03C1                          l1889 03B2  
                        l1993 0553                          l1985 0511                          l1977 0194  
                        l1969 018D                          l1899 03C7                          l1995 0567  
                        l1987 051F                          l1979 009E                          l1997 0574  
                        l1989 052D                          l1999 0581                          u1030 003E  
                        u1110 021C                          u1031 003D                          u1111 021B  
                        u1040 0044                          u1200 0070                          u1041 0043  
                        u1105 0210                          u1130 022B                          u1050 0057  
                        u1210 0081                          u2010 030E                          u1131 022A  
                        u1051 0056                          u1211 0080                          u2011 030D  
                        u1060 005D                          u1300 077E                          u1220 0646  
                        u2020 0327                          u1125 021D                          u1061 005C  
                        u1301 077C                          u1221 0645                          u2021 0326  
                        u1070 012C                          u1150 023B                          u1310 077F  
                        u1230 065C                          u2030 033C                          u1071 012B  
                        u1151 023A                          u1135 0227                          u1231 065B  
                        u2031 033B                          u1400 03B6                          u1080 0148  
                        u1320 01DE                          u1240 070B                          u1160 008C  
                        u2040 0343                          u1401 03B5                          u1081 0147  
                        u1145 0231                          u1241 0709                          u2041 0342  
                        u1410 03C7                          u1330 0203                          u1090 020C  
                        u1250 070C                          u1170 009D                          u2107 0102  
                        u1411 03C6                          u1331 0202                          u1091 020B  
                        u1171 009C                          u1340 0014                          u1260 072D  
                        u1500 002C                          u1180 02C9                          u1341 0013  
                        u1085 0144                          u1261 072B                          u1501 002B  
                        u1181 02C8                          u1430 03D7                          u1350 00C1  
                        u1270 072E                          u1190 02DF                          u1510 0156  
                        u1431 03D6                          u1351 00C0                          u1191 02DE  
                        u1600 0553                          u1280 074E                          u1520 0175  
                        u1425 03CB                          u1601 0552                          u1281 074D  
                        u1521 0174                          u2057 029A                          u1450 03E6  
                        u1610 0581                          u1290 075A                          u1530 0182  
                        u1451 03E5                          u1611 0580                          u1291 0759  
                        u2067 02A8                          u1380 00D5                          u1620 058F  
                        u1700 024D                          u1540 01A1                          u1445 03D8  
                        u1381 00D4                          u1365 00C6                          u1621 058E  
                        u1605 054F                          u1701 024C                          u1541 01A0  
                        u2077 02B5                          u1470 03F6                          u1390 03AB  
                        u1630 05C2                          u1710 0410                          u1550 00A8  
                        u1471 03F5                          u1455 03E2                          u1391 03AA  
                        u1375 00CB                          u1631 05C1                          u1615 057D  
                        u2087 002F                          u1711 040F                          u1480 03FB  
                        u1640 05D0                          u1800 04EC                          u1720 041F  
                        u1560 00B9                          u2097 01CA                          u1481 03FA  
                        u1465 03EC                          u1641 05CF                          u1625 058B  
                        u1801 04EB                          u1721 041E                          u1561 00B8  
                        u1810 01BA                          u1650 0603                          u1570 051F  
                        u1730 042E                          u1490 000F                          u1811 01B9  
                        u1651 0602                          u1635 05BE                          u1571 051E  
                        u1731 042D                          u1491 000E                          u1660 0617  
                        u1580 052D                          u1740 0441                          u1820 0289  
                        u1661 0616                          u1645 05CC                          u1581 052C  
                        u1805 04E8                          u1741 0440                          u1821 0288  
                        u1670 010B                          u1590 0546                          u1750 045E  
                        u1830 0293                          u1671 010A                          u1815 01B6  
                        u1655 05FF                          u1591 0545                          u1575 051B  
                        u1751 045D                          u1831 0292                          u1760 0479  
                        u1840 0361                          u1665 0613                          u1585 0529  
                        u1761 0478                          u1745 043D                          u1841 0360  
                        u1770 0497                          u1850 036F                          u1771 0496  
                        u1755 045A                          u1851 036E                          u1780 04B8  
                        u1860 0380                          u1781 04B7                          u1765 0475  
                        u1861 037F                          u1790 04D9                          u1870 038E  
                        u1791 04D8                          u1775 0493                          u1871 038D  
                        u1880 039C                          u1785 04B4                          u1881 039B  
                        u1890 03A2                          u1795 04D5                          u1891 03A1  
                        abs@a 0070                          _fast 0064                          _main 02FE  
                        _serA 0058                          _lpin 006E                          _potA 0046  
                        _potB 0044                          _mpin 006D                          _rpin 006C  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          _slow 0062                          indf1 0001  
                        fsr1l 0006                          btemp 007E               __end_of_IR_init 0FD0  
                        start 0002              __end_of_ADC_init 0FE0  __end_of_transmit_shield_code 00BA  
                       ??_abs 0072     surface_exploration@F11782 0120                 shoot_laser@en 0020  
                       _ADACQ 009D                         ?_main 0070                         _ADCLK 0098  
                       _ADPCH 009E                         _ADREF 009A               __end_of___awdiv 0405  
                       _ADPRE 009C               ___awdiv@divisor 0074               __end_of___lwdiv 0240  
             ___awdiv@counter 0079                         _RCREG 0119                         _TXREG 011A  
                       _l_dir 005B                         _l_vec 006A                         _drive 0240  
                       _r_dir 005A                         _r_vec 0068                         _motor 01D2  
                       status 0003               __end_of_rx_wait 0066                         wtemp0 007E  
             __end_of_tx_wait 004D               __initialization 07CD                  __end_of_main 034E  
                      ??_main 007E           PCLS_info_send@11725 0020              ??_PCLS_info_send 0078  
                      _ADCON0 0093                        ?_drive 0070                        _ADRESH 008D  
                      _ADRESL 008C                     ??_IR_init 0078              ___awdiv@dividend 0076  
                      ?_motor 0078                        _RC6PPS 0F26             __end_of_PCLS_info 0010  
                ?_shield_code 0070                        _Vdrive 0511                        ___wmul 00BA  
           __end_of_UART_init 0FF0                     ??___awdiv 0078             __end_of_UART_send 014A  
                      _health 00C5                     ??___lwdiv 0074              __end_of_read_adc 0121  
                      _teamID 005F              ___awdiv@quotient 007B                        _joy_lx 0050  
                      _joy_ly 0052                        _joy_rx 0056                        _joy_ry 0054  
                      _servos 034E                        drive@x 003E                        drive@y 0040  
                   ?_ADC_init 0070             _PCLS_info_receive 02BC                     ??_rx_wait 0070  
                   ??_tx_wait 0070                  rx_wait@count 0070                  ?_shoot_laser 0070  
          ?_PCLS_info_receive 0070          _transmit_shield_code 009E             shoot_laser@F11759 00B1  
                   IR@ADC_val 007A       __end_of__initialization 07FD           ??_PCLS_info_receive 0072  
              __pcstackCOMMON 0070            custom_laser@F11774 00BF                  __pidataBANK0 0FF0  
                __pidataBANK1 00DA          request_repair@F11765 00CD                 __end_of_drive 027E  
               __end_of_motor 0204                    __end_of_IR 01D2     __end_of_PCLS_info_receive 02FE  
               _line_follower 0405                    ??_ADC_init 0070                       ??_drive 003C  
       ?_transmit_shield_code 0070                       ??_motor 007B                    __pbssBANK0 0044  
                  __pbssBANK1 00A0                    __pbssBANK2 0120          PCLS_info_send@F11724 00DF  
                  __pmaintext 02FE                       ?_Vdrive 002B                       ?___wmul 0020  
                     ?_servos 0070                ?_line_follower 0070                ore_type@F11786 00AA  
              _user_data_send 0066                       _IR_base 00E5                       _IR_init 0FC4  
                tx_wait@count 0070                     ?_read_adc 0070               Vdrive@right_dir 0032  
                 motor@F11744 00A0                       Vdrive@x 002D                       Vdrive@y 002B  
                     ___awdiv 03A6                       ___lwdiv 0204                       __ptext1 027E  
                     __ptext2 009E                       __ptext3 0176                       __ptext4 014A  
                     __ptext5 0004                       __ptext6 0082                       __ptext7 02BC  
                     __ptext8 034E                       __ptext9 0405               read_adc@ADC_val 0076  
              set_laser@11756 0021        __end_of_user_data_send 0082     transmit_shield_code@11763 0020  
                 set_laser@en 0020                   servo@F11751 012A        ??_transmit_shield_code 0078  
                     _rx_wait 004D                       clrloop0 0FB9                       _tx_wait 0034  
        end_of_initialization 07FD                       init_ram 0FBE                    ??_read_adc 0072  
                     initloop 0FBF             __end_of_set_laser 0176    transmit_shield_code@F11762 00D3  
                   _PCLS_info 0004                       servos@i 003C                       servos@j 003E  
           __end_of_user_data 0034            user_data_receive@j 003B            user_data_receive@r 0020  
          user_data_receive@s 003A                     _UART_init 0FE0                     _UART_send 0121  
             ??_line_follower 007C               ?_user_data_send 0070                     _TRISAbits 0011  
                   _TRISCbits 0013                    ?_PCLS_info 0070                __end_of_Vdrive 0639  
              __end_of___wmul 00DA                    ?_UART_init 0070                    ?_UART_send 0072  
              __end_of_servos 03A6           start_initialization 07CD                   __end_of_abs 0021  
          PCLS_info_receive@j 002D            PCLS_info_receive@r 0020            PCLS_info_receive@s 002C  
                    ??_Vdrive 002F                      ??___wmul 007D                   __pdataBANK0 0060  
                 __pdataBANK1 00C7                      ??_servos 007C              shoot_laser@11760 0021  
                   ___latbits 0002                 __pcstackBANK0 0020              UART_send@message 0076  
                    ?_IR_init 0070                   ??_PCLS_info 0079              ___lwdiv@dividend 0072  
                    ?___awdiv 0074                      ?___lwdiv 0070                Vdrive@left_dir 0031  
                 ??_UART_init 0070                   ??_UART_send 0074                    motor@11745 0021  
                    _ADC_init 0FD0              ___lwdiv@quotient 0075                      ?_rx_wait 0070  
                    ?_tx_wait 0070                 ??_shield_code 007C                ___wmul@product 0024  
                    _LATAbits 0016                      _LATCbits 0018                     clear_ram0 0FB8  
                  UART_send@i 0077                      _PIR1bits 070D                      _PIR3bits 070F  
                   _set_laser 014A                     _speed_inc 0060              ??_user_data_send 0078  
                  _ADCON0bits 0093                read_adc@sensor 0075             ___wmul@multiplier 0020  
                   _user_data 0021                 ??_shoot_laser 0078                _PCLS_info_send 0082  
                 _auto_switch 0059                    ?_set_laser 0070           __end_of_shield_code 02BC  
          line_follower@l_val 002B            line_follower@m_val 002D            line_follower@r_val 002F  
                 _SP1BRGLbits 011B                    _ANSELAbits 0F38                    _ANSELCbits 0F4E  
                 _line_colour 0066                    ?_user_data 0070         __end_of_line_follower 0511  
               UART_send@size 0072               ___lwdiv@divisor 0070               ___lwdiv@counter 0077  
                    __ptext10 0240                      __ptext11 0021                      __ptext20 0010  
                    __ptext12 0066                      __ptext21 00BA                      __ptext13 0639  
                    __ptext22 03A6                      __ptext14 004D                      __ptext23 0FE0  
                    __ptext15 0204                      __ptext24 0FC4                      __ptext16 0511  
                    __ptext25 01A2                      __ptext17 01D2                      __ptext26 00FA  
                    __ptext18 0121                      __ptext27 0FD0                      __ptext19 0034  
      __end_of_PCLS_info_send 009E                 Vdrive@l_motor 0033                 Vdrive@r_motor 0035  
                    _read_adc 00FA           __end_of_shoot_laser 01A2                     motor@dirA 0020  
                   motor@dirB 0079                     motor@pwmA 0078                     motor@pwmB 007A  
             set_laser@F11755 00B8                      _playerID 005E                    _RC1STAbits 011D  
                    _starting 006F                      drive@dir 0042                   _repair_flag 005C  
        user_data_send@F11732 00D9               ?_PCLS_info_send 0070                   _shield_code 027E  
                 _shield_flag 005D                   ??_set_laser 0078           user_data_send@11733 0020  
           _user_data_receive 0639                   ??_user_data 007B            ?_user_data_receive 0070  
                  _TX1STAbits 011E         transmit_repair@F11768 00C7                   _shoot_laser 0176  
         ??_user_data_receive 0078  
