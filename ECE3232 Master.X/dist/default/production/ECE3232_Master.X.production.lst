

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Apr 05 00:31:45 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Generated 11/01/2024 GMT
    40                           ; 
    41                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18855 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     0010                     	;# 
    89     0011                     	;# 
    90     0012                     	;# 
    91     0013                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     001C                     	;# 
    96     001C                     	;# 
    97     001D                     	;# 
    98     001D                     	;# 
    99     001E                     	;# 
   100     001F                     	;# 
   101     008C                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     008E                     	;# 
   106     008F                     	;# 
   107     0090                     	;# 
   108     0090                     	;# 
   109     0091                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     010C                     	;# 
   123     010D                     	;# 
   124     010E                     	;# 
   125     010E                     	;# 
   126     010F                     	;# 
   127     0110                     	;# 
   128     0110                     	;# 
   129     0111                     	;# 
   130     0112                     	;# 
   131     0112                     	;# 
   132     0113                     	;# 
   133     0114                     	;# 
   134     0114                     	;# 
   135     0115                     	;# 
   136     0116                     	;# 
   137     0116                     	;# 
   138     0117                     	;# 
   139     0119                     	;# 
   140     0119                     	;# 
   141     0119                     	;# 
   142     011A                     	;# 
   143     011A                     	;# 
   144     011A                     	;# 
   145     011B                     	;# 
   146     011B                     	;# 
   147     011B                     	;# 
   148     011B                     	;# 
   149     011B                     	;# 
   150     011C                     	;# 
   151     011C                     	;# 
   152     011C                     	;# 
   153     011D                     	;# 
   154     011D                     	;# 
   155     011D                     	;# 
   156     011E                     	;# 
   157     011E                     	;# 
   158     011E                     	;# 
   159     011F                     	;# 
   160     011F                     	;# 
   161     011F                     	;# 
   162     011F                     	;# 
   163     011F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     018E                     	;# 
   167     018F                     	;# 
   168     0190                     	;# 
   169     0191                     	;# 
   170     0192                     	;# 
   171     0196                     	;# 
   172     0197                     	;# 
   173     0198                     	;# 
   174     0199                     	;# 
   175     019A                     	;# 
   176     019B                     	;# 
   177     019C                     	;# 
   178     020C                     	;# 
   179     020C                     	;# 
   180     020D                     	;# 
   181     020E                     	;# 
   182     020F                     	;# 
   183     020F                     	;# 
   184     0210                     	;# 
   185     0210                     	;# 
   186     0211                     	;# 
   187     0211                     	;# 
   188     0212                     	;# 
   189     0212                     	;# 
   190     0213                     	;# 
   191     0214                     	;# 
   192     0215                     	;# 
   193     0215                     	;# 
   194     0216                     	;# 
   195     0216                     	;# 
   196     0217                     	;# 
   197     0217                     	;# 
   198     0218                     	;# 
   199     0218                     	;# 
   200     0219                     	;# 
   201     021A                     	;# 
   202     021B                     	;# 
   203     021B                     	;# 
   204     021C                     	;# 
   205     021C                     	;# 
   206     021D                     	;# 
   207     021D                     	;# 
   208     021E                     	;# 
   209     021F                     	;# 
   210     028C                     	;# 
   211     028C                     	;# 
   212     028D                     	;# 
   213     028D                     	;# 
   214     028E                     	;# 
   215     028F                     	;# 
   216     0290                     	;# 
   217     0290                     	;# 
   218     0291                     	;# 
   219     0292                     	;# 
   220     0292                     	;# 
   221     0293                     	;# 
   222     0293                     	;# 
   223     0294                     	;# 
   224     0295                     	;# 
   225     0296                     	;# 
   226     0296                     	;# 
   227     0297                     	;# 
   228     0298                     	;# 
   229     0298                     	;# 
   230     0299                     	;# 
   231     0299                     	;# 
   232     029A                     	;# 
   233     029B                     	;# 
   234     029C                     	;# 
   235     029C                     	;# 
   236     029D                     	;# 
   237     030C                     	;# 
   238     030C                     	;# 
   239     030D                     	;# 
   240     030E                     	;# 
   241     030F                     	;# 
   242     0310                     	;# 
   243     0310                     	;# 
   244     0311                     	;# 
   245     0312                     	;# 
   246     0313                     	;# 
   247     0314                     	;# 
   248     0314                     	;# 
   249     0315                     	;# 
   250     0316                     	;# 
   251     0317                     	;# 
   252     0318                     	;# 
   253     0318                     	;# 
   254     0319                     	;# 
   255     031A                     	;# 
   256     031B                     	;# 
   257     031C                     	;# 
   258     031C                     	;# 
   259     031D                     	;# 
   260     031E                     	;# 
   261     031F                     	;# 
   262     038C                     	;# 
   263     038C                     	;# 
   264     038D                     	;# 
   265     038E                     	;# 
   266     0390                     	;# 
   267     0390                     	;# 
   268     0391                     	;# 
   269     0392                     	;# 
   270     040C                     	;# 
   271     040D                     	;# 
   272     040E                     	;# 
   273     040F                     	;# 
   274     0410                     	;# 
   275     0411                     	;# 
   276     0416                     	;# 
   277     0416                     	;# 
   278     0417                     	;# 
   279     0418                     	;# 
   280     0418                     	;# 
   281     0419                     	;# 
   282     041A                     	;# 
   283     041A                     	;# 
   284     041B                     	;# 
   285     041C                     	;# 
   286     041C                     	;# 
   287     041D                     	;# 
   288     041E                     	;# 
   289     041F                     	;# 
   290     048C                     	;# 
   291     048C                     	;# 
   292     048D                     	;# 
   293     048E                     	;# 
   294     048F                     	;# 
   295     048F                     	;# 
   296     0490                     	;# 
   297     0491                     	;# 
   298     0492                     	;# 
   299     0492                     	;# 
   300     0493                     	;# 
   301     0494                     	;# 
   302     0495                     	;# 
   303     0495                     	;# 
   304     0496                     	;# 
   305     0497                     	;# 
   306     0498                     	;# 
   307     0499                     	;# 
   308     049A                     	;# 
   309     049B                     	;# 
   310     049C                     	;# 
   311     049D                     	;# 
   312     050C                     	;# 
   313     050C                     	;# 
   314     050D                     	;# 
   315     050E                     	;# 
   316     050F                     	;# 
   317     050F                     	;# 
   318     0510                     	;# 
   319     0511                     	;# 
   320     0512                     	;# 
   321     0512                     	;# 
   322     0513                     	;# 
   323     0514                     	;# 
   324     0515                     	;# 
   325     0515                     	;# 
   326     0516                     	;# 
   327     0517                     	;# 
   328     0518                     	;# 
   329     0519                     	;# 
   330     051A                     	;# 
   331     051B                     	;# 
   332     051C                     	;# 
   333     051D                     	;# 
   334     058C                     	;# 
   335     058C                     	;# 
   336     058D                     	;# 
   337     058E                     	;# 
   338     058F                     	;# 
   339     058F                     	;# 
   340     0590                     	;# 
   341     0591                     	;# 
   342     0592                     	;# 
   343     0593                     	;# 
   344     060C                     	;# 
   345     060D                     	;# 
   346     060E                     	;# 
   347     060F                     	;# 
   348     0610                     	;# 
   349     0611                     	;# 
   350     0612                     	;# 
   351     0613                     	;# 
   352     0614                     	;# 
   353     0616                     	;# 
   354     0617                     	;# 
   355     0618                     	;# 
   356     0619                     	;# 
   357     061A                     	;# 
   358     061B                     	;# 
   359     061C                     	;# 
   360     061D                     	;# 
   361     061E                     	;# 
   362     068C                     	;# 
   363     068D                     	;# 
   364     068E                     	;# 
   365     068F                     	;# 
   366     0690                     	;# 
   367     0691                     	;# 
   368     0692                     	;# 
   369     0693                     	;# 
   370     0694                     	;# 
   371     070C                     	;# 
   372     070D                     	;# 
   373     070E                     	;# 
   374     070F                     	;# 
   375     0710                     	;# 
   376     0711                     	;# 
   377     0712                     	;# 
   378     0713                     	;# 
   379     0714                     	;# 
   380     0716                     	;# 
   381     0717                     	;# 
   382     0718                     	;# 
   383     0719                     	;# 
   384     071A                     	;# 
   385     071B                     	;# 
   386     071C                     	;# 
   387     071D                     	;# 
   388     071E                     	;# 
   389     0796                     	;# 
   390     0797                     	;# 
   391     0798                     	;# 
   392     0799                     	;# 
   393     079A                     	;# 
   394     079B                     	;# 
   395     080C                     	;# 
   396     080D                     	;# 
   397     080E                     	;# 
   398     080F                     	;# 
   399     0810                     	;# 
   400     0811                     	;# 
   401     0812                     	;# 
   402     0813                     	;# 
   403     0814                     	;# 
   404     081A                     	;# 
   405     081B                     	;# 
   406     081C                     	;# 
   407     081D                     	;# 
   408     081E                     	;# 
   409     081F                     	;# 
   410     088C                     	;# 
   411     088D                     	;# 
   412     088E                     	;# 
   413     088F                     	;# 
   414     0890                     	;# 
   415     0891                     	;# 
   416     0892                     	;# 
   417     0893                     	;# 
   418     0895                     	;# 
   419     0896                     	;# 
   420     0897                     	;# 
   421     0898                     	;# 
   422     0899                     	;# 
   423     089A                     	;# 
   424     089B                     	;# 
   425     090C                     	;# 
   426     090E                     	;# 
   427     090F                     	;# 
   428     091F                     	;# 
   429     091F                     	;# 
   430     098F                     	;# 
   431     098F                     	;# 
   432     0990                     	;# 
   433     0991                     	;# 
   434     0992                     	;# 
   435     0993                     	;# 
   436     0994                     	;# 
   437     0995                     	;# 
   438     0996                     	;# 
   439     0997                     	;# 
   440     0E0F                     	;# 
   441     0E10                     	;# 
   442     0E11                     	;# 
   443     0E12                     	;# 
   444     0E13                     	;# 
   445     0E14                     	;# 
   446     0E15                     	;# 
   447     0E16                     	;# 
   448     0E17                     	;# 
   449     0E18                     	;# 
   450     0E19                     	;# 
   451     0E1A                     	;# 
   452     0E1B                     	;# 
   453     0E1C                     	;# 
   454     0E1D                     	;# 
   455     0E1E                     	;# 
   456     0E1F                     	;# 
   457     0E20                     	;# 
   458     0E21                     	;# 
   459     0E22                     	;# 
   460     0E23                     	;# 
   461     0E24                     	;# 
   462     0E25                     	;# 
   463     0E26                     	;# 
   464     0E27                     	;# 
   465     0E28                     	;# 
   466     0E29                     	;# 
   467     0E2A                     	;# 
   468     0E2B                     	;# 
   469     0E2C                     	;# 
   470     0E2D                     	;# 
   471     0E2E                     	;# 
   472     0E2F                     	;# 
   473     0E30                     	;# 
   474     0E31                     	;# 
   475     0E32                     	;# 
   476     0E33                     	;# 
   477     0E34                     	;# 
   478     0E35                     	;# 
   479     0E36                     	;# 
   480     0E37                     	;# 
   481     0E8F                     	;# 
   482     0E90                     	;# 
   483     0E91                     	;# 
   484     0E92                     	;# 
   485     0E93                     	;# 
   486     0E94                     	;# 
   487     0E95                     	;# 
   488     0E96                     	;# 
   489     0E97                     	;# 
   490     0E9C                     	;# 
   491     0E9D                     	;# 
   492     0E9E                     	;# 
   493     0EA1                     	;# 
   494     0EA2                     	;# 
   495     0EA3                     	;# 
   496     0EA4                     	;# 
   497     0EA5                     	;# 
   498     0EA9                     	;# 
   499     0EAA                     	;# 
   500     0EAB                     	;# 
   501     0EAC                     	;# 
   502     0EB1                     	;# 
   503     0EB2                     	;# 
   504     0EB3                     	;# 
   505     0EB8                     	;# 
   506     0EB9                     	;# 
   507     0EBA                     	;# 
   508     0EBB                     	;# 
   509     0EBC                     	;# 
   510     0EBD                     	;# 
   511     0EBE                     	;# 
   512     0EC3                     	;# 
   513     0EC5                     	;# 
   514     0EC6                     	;# 
   515     0EC7                     	;# 
   516     0EC8                     	;# 
   517     0EC9                     	;# 
   518     0ECA                     	;# 
   519     0ECB                     	;# 
   520     0ECC                     	;# 
   521     0F10                     	;# 
   522     0F11                     	;# 
   523     0F12                     	;# 
   524     0F13                     	;# 
   525     0F14                     	;# 
   526     0F15                     	;# 
   527     0F16                     	;# 
   528     0F17                     	;# 
   529     0F18                     	;# 
   530     0F19                     	;# 
   531     0F1A                     	;# 
   532     0F1B                     	;# 
   533     0F1C                     	;# 
   534     0F1D                     	;# 
   535     0F1E                     	;# 
   536     0F1F                     	;# 
   537     0F20                     	;# 
   538     0F21                     	;# 
   539     0F22                     	;# 
   540     0F23                     	;# 
   541     0F24                     	;# 
   542     0F25                     	;# 
   543     0F26                     	;# 
   544     0F27                     	;# 
   545     0F38                     	;# 
   546     0F39                     	;# 
   547     0F3A                     	;# 
   548     0F3B                     	;# 
   549     0F3C                     	;# 
   550     0F3D                     	;# 
   551     0F3E                     	;# 
   552     0F3F                     	;# 
   553     0F40                     	;# 
   554     0F41                     	;# 
   555     0F43                     	;# 
   556     0F44                     	;# 
   557     0F45                     	;# 
   558     0F46                     	;# 
   559     0F47                     	;# 
   560     0F48                     	;# 
   561     0F49                     	;# 
   562     0F4A                     	;# 
   563     0F4B                     	;# 
   564     0F4C                     	;# 
   565     0F4E                     	;# 
   566     0F4F                     	;# 
   567     0F50                     	;# 
   568     0F51                     	;# 
   569     0F52                     	;# 
   570     0F53                     	;# 
   571     0F54                     	;# 
   572     0F55                     	;# 
   573     0F56                     	;# 
   574     0F57                     	;# 
   575     0F65                     	;# 
   576     0F68                     	;# 
   577     0F69                     	;# 
   578     0F6A                     	;# 
   579     0F6B                     	;# 
   580     0FE4                     	;# 
   581     0FE5                     	;# 
   582     0FE6                     	;# 
   583     0FE7                     	;# 
   584     0FE8                     	;# 
   585     0FE9                     	;# 
   586     0FEA                     	;# 
   587     0FEB                     	;# 
   588     0FED                     	;# 
   589     0FEE                     	;# 
   590     0FEF                     	;# 
   591     0000                     	;# 
   592     0001                     	;# 
   593     0002                     	;# 
   594     0003                     	;# 
   595     0004                     	;# 
   596     0005                     	;# 
   597     0006                     	;# 
   598     0007                     	;# 
   599     0008                     	;# 
   600     0009                     	;# 
   601     000A                     	;# 
   602     000B                     	;# 
   603     000C                     	;# 
   604     000D                     	;# 
   605     000E                     	;# 
   606     0010                     	;# 
   607     0011                     	;# 
   608     0012                     	;# 
   609     0013                     	;# 
   610     0016                     	;# 
   611     0017                     	;# 
   612     0018                     	;# 
   613     001C                     	;# 
   614     001C                     	;# 
   615     001D                     	;# 
   616     001D                     	;# 
   617     001E                     	;# 
   618     001F                     	;# 
   619     008C                     	;# 
   620     008C                     	;# 
   621     008D                     	;# 
   622     008E                     	;# 
   623     008E                     	;# 
   624     008F                     	;# 
   625     0090                     	;# 
   626     0090                     	;# 
   627     0091                     	;# 
   628     0093                     	;# 
   629     0094                     	;# 
   630     0095                     	;# 
   631     0096                     	;# 
   632     0097                     	;# 
   633     0098                     	;# 
   634     0099                     	;# 
   635     009A                     	;# 
   636     009B                     	;# 
   637     009C                     	;# 
   638     009D                     	;# 
   639     009E                     	;# 
   640     010C                     	;# 
   641     010D                     	;# 
   642     010E                     	;# 
   643     010E                     	;# 
   644     010F                     	;# 
   645     0110                     	;# 
   646     0110                     	;# 
   647     0111                     	;# 
   648     0112                     	;# 
   649     0112                     	;# 
   650     0113                     	;# 
   651     0114                     	;# 
   652     0114                     	;# 
   653     0115                     	;# 
   654     0116                     	;# 
   655     0116                     	;# 
   656     0117                     	;# 
   657     0119                     	;# 
   658     0119                     	;# 
   659     0119                     	;# 
   660     011A                     	;# 
   661     011A                     	;# 
   662     011A                     	;# 
   663     011B                     	;# 
   664     011B                     	;# 
   665     011B                     	;# 
   666     011B                     	;# 
   667     011B                     	;# 
   668     011C                     	;# 
   669     011C                     	;# 
   670     011C                     	;# 
   671     011D                     	;# 
   672     011D                     	;# 
   673     011D                     	;# 
   674     011E                     	;# 
   675     011E                     	;# 
   676     011E                     	;# 
   677     011F                     	;# 
   678     011F                     	;# 
   679     011F                     	;# 
   680     011F                     	;# 
   681     011F                     	;# 
   682     018C                     	;# 
   683     018D                     	;# 
   684     018E                     	;# 
   685     018F                     	;# 
   686     0190                     	;# 
   687     0191                     	;# 
   688     0192                     	;# 
   689     0196                     	;# 
   690     0197                     	;# 
   691     0198                     	;# 
   692     0199                     	;# 
   693     019A                     	;# 
   694     019B                     	;# 
   695     019C                     	;# 
   696     020C                     	;# 
   697     020C                     	;# 
   698     020D                     	;# 
   699     020E                     	;# 
   700     020F                     	;# 
   701     020F                     	;# 
   702     0210                     	;# 
   703     0210                     	;# 
   704     0211                     	;# 
   705     0211                     	;# 
   706     0212                     	;# 
   707     0212                     	;# 
   708     0213                     	;# 
   709     0214                     	;# 
   710     0215                     	;# 
   711     0215                     	;# 
   712     0216                     	;# 
   713     0216                     	;# 
   714     0217                     	;# 
   715     0217                     	;# 
   716     0218                     	;# 
   717     0218                     	;# 
   718     0219                     	;# 
   719     021A                     	;# 
   720     021B                     	;# 
   721     021B                     	;# 
   722     021C                     	;# 
   723     021C                     	;# 
   724     021D                     	;# 
   725     021D                     	;# 
   726     021E                     	;# 
   727     021F                     	;# 
   728     028C                     	;# 
   729     028C                     	;# 
   730     028D                     	;# 
   731     028D                     	;# 
   732     028E                     	;# 
   733     028F                     	;# 
   734     0290                     	;# 
   735     0290                     	;# 
   736     0291                     	;# 
   737     0292                     	;# 
   738     0292                     	;# 
   739     0293                     	;# 
   740     0293                     	;# 
   741     0294                     	;# 
   742     0295                     	;# 
   743     0296                     	;# 
   744     0296                     	;# 
   745     0297                     	;# 
   746     0298                     	;# 
   747     0298                     	;# 
   748     0299                     	;# 
   749     0299                     	;# 
   750     029A                     	;# 
   751     029B                     	;# 
   752     029C                     	;# 
   753     029C                     	;# 
   754     029D                     	;# 
   755     030C                     	;# 
   756     030C                     	;# 
   757     030D                     	;# 
   758     030E                     	;# 
   759     030F                     	;# 
   760     0310                     	;# 
   761     0310                     	;# 
   762     0311                     	;# 
   763     0312                     	;# 
   764     0313                     	;# 
   765     0314                     	;# 
   766     0314                     	;# 
   767     0315                     	;# 
   768     0316                     	;# 
   769     0317                     	;# 
   770     0318                     	;# 
   771     0318                     	;# 
   772     0319                     	;# 
   773     031A                     	;# 
   774     031B                     	;# 
   775     031C                     	;# 
   776     031C                     	;# 
   777     031D                     	;# 
   778     031E                     	;# 
   779     031F                     	;# 
   780     038C                     	;# 
   781     038C                     	;# 
   782     038D                     	;# 
   783     038E                     	;# 
   784     0390                     	;# 
   785     0390                     	;# 
   786     0391                     	;# 
   787     0392                     	;# 
   788     040C                     	;# 
   789     040D                     	;# 
   790     040E                     	;# 
   791     040F                     	;# 
   792     0410                     	;# 
   793     0411                     	;# 
   794     0416                     	;# 
   795     0416                     	;# 
   796     0417                     	;# 
   797     0418                     	;# 
   798     0418                     	;# 
   799     0419                     	;# 
   800     041A                     	;# 
   801     041A                     	;# 
   802     041B                     	;# 
   803     041C                     	;# 
   804     041C                     	;# 
   805     041D                     	;# 
   806     041E                     	;# 
   807     041F                     	;# 
   808     048C                     	;# 
   809     048C                     	;# 
   810     048D                     	;# 
   811     048E                     	;# 
   812     048F                     	;# 
   813     048F                     	;# 
   814     0490                     	;# 
   815     0491                     	;# 
   816     0492                     	;# 
   817     0492                     	;# 
   818     0493                     	;# 
   819     0494                     	;# 
   820     0495                     	;# 
   821     0495                     	;# 
   822     0496                     	;# 
   823     0497                     	;# 
   824     0498                     	;# 
   825     0499                     	;# 
   826     049A                     	;# 
   827     049B                     	;# 
   828     049C                     	;# 
   829     049D                     	;# 
   830     050C                     	;# 
   831     050C                     	;# 
   832     050D                     	;# 
   833     050E                     	;# 
   834     050F                     	;# 
   835     050F                     	;# 
   836     0510                     	;# 
   837     0511                     	;# 
   838     0512                     	;# 
   839     0512                     	;# 
   840     0513                     	;# 
   841     0514                     	;# 
   842     0515                     	;# 
   843     0515                     	;# 
   844     0516                     	;# 
   845     0517                     	;# 
   846     0518                     	;# 
   847     0519                     	;# 
   848     051A                     	;# 
   849     051B                     	;# 
   850     051C                     	;# 
   851     051D                     	;# 
   852     058C                     	;# 
   853     058C                     	;# 
   854     058D                     	;# 
   855     058E                     	;# 
   856     058F                     	;# 
   857     058F                     	;# 
   858     0590                     	;# 
   859     0591                     	;# 
   860     0592                     	;# 
   861     0593                     	;# 
   862     060C                     	;# 
   863     060D                     	;# 
   864     060E                     	;# 
   865     060F                     	;# 
   866     0610                     	;# 
   867     0611                     	;# 
   868     0612                     	;# 
   869     0613                     	;# 
   870     0614                     	;# 
   871     0616                     	;# 
   872     0617                     	;# 
   873     0618                     	;# 
   874     0619                     	;# 
   875     061A                     	;# 
   876     061B                     	;# 
   877     061C                     	;# 
   878     061D                     	;# 
   879     061E                     	;# 
   880     068C                     	;# 
   881     068D                     	;# 
   882     068E                     	;# 
   883     068F                     	;# 
   884     0690                     	;# 
   885     0691                     	;# 
   886     0692                     	;# 
   887     0693                     	;# 
   888     0694                     	;# 
   889     070C                     	;# 
   890     070D                     	;# 
   891     070E                     	;# 
   892     070F                     	;# 
   893     0710                     	;# 
   894     0711                     	;# 
   895     0712                     	;# 
   896     0713                     	;# 
   897     0714                     	;# 
   898     0716                     	;# 
   899     0717                     	;# 
   900     0718                     	;# 
   901     0719                     	;# 
   902     071A                     	;# 
   903     071B                     	;# 
   904     071C                     	;# 
   905     071D                     	;# 
   906     071E                     	;# 
   907     0796                     	;# 
   908     0797                     	;# 
   909     0798                     	;# 
   910     0799                     	;# 
   911     079A                     	;# 
   912     079B                     	;# 
   913     080C                     	;# 
   914     080D                     	;# 
   915     080E                     	;# 
   916     080F                     	;# 
   917     0810                     	;# 
   918     0811                     	;# 
   919     0812                     	;# 
   920     0813                     	;# 
   921     0814                     	;# 
   922     081A                     	;# 
   923     081B                     	;# 
   924     081C                     	;# 
   925     081D                     	;# 
   926     081E                     	;# 
   927     081F                     	;# 
   928     088C                     	;# 
   929     088D                     	;# 
   930     088E                     	;# 
   931     088F                     	;# 
   932     0890                     	;# 
   933     0891                     	;# 
   934     0892                     	;# 
   935     0893                     	;# 
   936     0895                     	;# 
   937     0896                     	;# 
   938     0897                     	;# 
   939     0898                     	;# 
   940     0899                     	;# 
   941     089A                     	;# 
   942     089B                     	;# 
   943     090C                     	;# 
   944     090E                     	;# 
   945     090F                     	;# 
   946     091F                     	;# 
   947     091F                     	;# 
   948     098F                     	;# 
   949     098F                     	;# 
   950     0990                     	;# 
   951     0991                     	;# 
   952     0992                     	;# 
   953     0993                     	;# 
   954     0994                     	;# 
   955     0995                     	;# 
   956     0996                     	;# 
   957     0997                     	;# 
   958     0E0F                     	;# 
   959     0E10                     	;# 
   960     0E11                     	;# 
   961     0E12                     	;# 
   962     0E13                     	;# 
   963     0E14                     	;# 
   964     0E15                     	;# 
   965     0E16                     	;# 
   966     0E17                     	;# 
   967     0E18                     	;# 
   968     0E19                     	;# 
   969     0E1A                     	;# 
   970     0E1B                     	;# 
   971     0E1C                     	;# 
   972     0E1D                     	;# 
   973     0E1E                     	;# 
   974     0E1F                     	;# 
   975     0E20                     	;# 
   976     0E21                     	;# 
   977     0E22                     	;# 
   978     0E23                     	;# 
   979     0E24                     	;# 
   980     0E25                     	;# 
   981     0E26                     	;# 
   982     0E27                     	;# 
   983     0E28                     	;# 
   984     0E29                     	;# 
   985     0E2A                     	;# 
   986     0E2B                     	;# 
   987     0E2C                     	;# 
   988     0E2D                     	;# 
   989     0E2E                     	;# 
   990     0E2F                     	;# 
   991     0E30                     	;# 
   992     0E31                     	;# 
   993     0E32                     	;# 
   994     0E33                     	;# 
   995     0E34                     	;# 
   996     0E35                     	;# 
   997     0E36                     	;# 
   998     0E37                     	;# 
   999     0E8F                     	;# 
  1000     0E90                     	;# 
  1001     0E91                     	;# 
  1002     0E92                     	;# 
  1003     0E93                     	;# 
  1004     0E94                     	;# 
  1005     0E95                     	;# 
  1006     0E96                     	;# 
  1007     0E97                     	;# 
  1008     0E9C                     	;# 
  1009     0E9D                     	;# 
  1010     0E9E                     	;# 
  1011     0EA1                     	;# 
  1012     0EA2                     	;# 
  1013     0EA3                     	;# 
  1014     0EA4                     	;# 
  1015     0EA5                     	;# 
  1016     0EA9                     	;# 
  1017     0EAA                     	;# 
  1018     0EAB                     	;# 
  1019     0EAC                     	;# 
  1020     0EB1                     	;# 
  1021     0EB2                     	;# 
  1022     0EB3                     	;# 
  1023     0EB8                     	;# 
  1024     0EB9                     	;# 
  1025     0EBA                     	;# 
  1026     0EBB                     	;# 
  1027     0EBC                     	;# 
  1028     0EBD                     	;# 
  1029     0EBE                     	;# 
  1030     0EC3                     	;# 
  1031     0EC5                     	;# 
  1032     0EC6                     	;# 
  1033     0EC7                     	;# 
  1034     0EC8                     	;# 
  1035     0EC9                     	;# 
  1036     0ECA                     	;# 
  1037     0ECB                     	;# 
  1038     0ECC                     	;# 
  1039     0F10                     	;# 
  1040     0F11                     	;# 
  1041     0F12                     	;# 
  1042     0F13                     	;# 
  1043     0F14                     	;# 
  1044     0F15                     	;# 
  1045     0F16                     	;# 
  1046     0F17                     	;# 
  1047     0F18                     	;# 
  1048     0F19                     	;# 
  1049     0F1A                     	;# 
  1050     0F1B                     	;# 
  1051     0F1C                     	;# 
  1052     0F1D                     	;# 
  1053     0F1E                     	;# 
  1054     0F1F                     	;# 
  1055     0F20                     	;# 
  1056     0F21                     	;# 
  1057     0F22                     	;# 
  1058     0F23                     	;# 
  1059     0F24                     	;# 
  1060     0F25                     	;# 
  1061     0F26                     	;# 
  1062     0F27                     	;# 
  1063     0F38                     	;# 
  1064     0F39                     	;# 
  1065     0F3A                     	;# 
  1066     0F3B                     	;# 
  1067     0F3C                     	;# 
  1068     0F3D                     	;# 
  1069     0F3E                     	;# 
  1070     0F3F                     	;# 
  1071     0F40                     	;# 
  1072     0F41                     	;# 
  1073     0F43                     	;# 
  1074     0F44                     	;# 
  1075     0F45                     	;# 
  1076     0F46                     	;# 
  1077     0F47                     	;# 
  1078     0F48                     	;# 
  1079     0F49                     	;# 
  1080     0F4A                     	;# 
  1081     0F4B                     	;# 
  1082     0F4C                     	;# 
  1083     0F4E                     	;# 
  1084     0F4F                     	;# 
  1085     0F50                     	;# 
  1086     0F51                     	;# 
  1087     0F52                     	;# 
  1088     0F53                     	;# 
  1089     0F54                     	;# 
  1090     0F55                     	;# 
  1091     0F56                     	;# 
  1092     0F57                     	;# 
  1093     0F65                     	;# 
  1094     0F68                     	;# 
  1095     0F69                     	;# 
  1096     0F6A                     	;# 
  1097     0F6B                     	;# 
  1098     0FE4                     	;# 
  1099     0FE5                     	;# 
  1100     0FE6                     	;# 
  1101     0FE7                     	;# 
  1102     0FE8                     	;# 
  1103     0FE9                     	;# 
  1104     0FEA                     	;# 
  1105     0FEB                     	;# 
  1106     0FED                     	;# 
  1107     0FEE                     	;# 
  1108     0FEF                     	;# 
  1109                           
  1110                           	psect	idataBANK0
  1111     020C                     __pidataBANK0:
  1112                           
  1113                           ;initializer for _IR_base
  1114     020C  3400               	retlw	0
  1115     020D  34B2               	retlw	178
  1116                           
  1117                           ;initializer for _speed_inc
  1118     020E  3419               	retlw	25
  1119     020F  3400               	retlw	0
  1120                           
  1121                           ;initializer for _slow
  1122     0210  3432               	retlw	50
  1123     0211  3400               	retlw	0
  1124                           
  1125                           ;initializer for _fast
  1126     0212  3464               	retlw	100
  1127     0213  3400               	retlw	0
  1128                           
  1129                           ;initializer for _line_colour
  1130     0214  34C0               	retlw	192
  1131     0215  348E               	retlw	142
  1132                           
  1133                           ;initializer for _rpin
  1134     0216  340A               	retlw	10
  1135                           
  1136                           ;initializer for _mpin
  1137     0217  3409               	retlw	9
  1138                           
  1139                           ;initializer for _lpin
  1140     0218  340B               	retlw	11
  1141                           
  1142                           ;initializer for _starting
  1143     0219  3401               	retlw	1
  1144                           
  1145                           	psect	idataBANK1
  1146     02CC                     __pidataBANK1:
  1147                           
  1148                           ;initializer for transmit_repair@F11768
  1149     02CC  34FE               	retlw	254
  1150     02CD  3419               	retlw	25
  1151     02CE  3401               	retlw	1
  1152     02CF  3409               	retlw	9
  1153     02D0  3401               	retlw	1
  1154     02D1  3400               	retlw	0
  1155                           
  1156                           ;initializer for request_repair@F11765
  1157     02D2  34FE               	retlw	254
  1158     02D3  3419               	retlw	25
  1159     02D4  3403               	retlw	3
  1160     02D5  3409               	retlw	9
  1161     02D6  3400               	retlw	0
  1162     02D7  3400               	retlw	0
  1163                           
  1164                           ;initializer for transmit_shield_code@F11762
  1165     02D8  34FE               	retlw	254
  1166     02D9  3419               	retlw	25
  1167     02DA  3402               	retlw	2
  1168     02DB  3409               	retlw	9
  1169     02DC  3400               	retlw	0
  1170     02DD  3400               	retlw	0
  1171                           
  1172                           ;initializer for user_data_send@F11732
  1173     02DE  34FE               	retlw	254
  1174     02DF  3419               	retlw	25
  1175     02E0  3401               	retlw	1
  1176     02E1  3405               	retlw	5
  1177     02E2  3400               	retlw	0
  1178     02E3  3400               	retlw	0
  1179                           
  1180                           ;initializer for PCLS_info_send@F11724
  1181     02E4  34FE               	retlw	254
  1182     02E5  3419               	retlw	25
  1183     02E6  3401               	retlw	1
  1184     02E7  3404               	retlw	4
  1185     02E8  3400               	retlw	0
  1186     02E9  3400               	retlw	0
  1187                           
  1188                           ;initializer for _speed_dec
  1189     02EA  3419               	retlw	25
  1190     02EB  3400               	retlw	0
  1191     0013                     _TRISCbits	set	19
  1192     0016                     _LATAbits	set	22
  1193     0011                     _TRISAbits	set	17
  1194     008C                     _ADRESL	set	140
  1195     008D                     _ADRESH	set	141
  1196     0093                     _ADCON0bits	set	147
  1197     009E                     _ADPCH	set	158
  1198     009D                     _ADACQ	set	157
  1199     009C                     _ADPRE	set	156
  1200     009A                     _ADREF	set	154
  1201     0098                     _ADCLK	set	152
  1202     0093                     _ADCON0	set	147
  1203     0119                     _RCREG	set	281
  1204     011B                     _SP1BRGLbits	set	283
  1205     011F                     _BAUD1CONbits	set	287
  1206     011D                     _RC1STAbits	set	285
  1207     011E                     _TX1STAbits	set	286
  1208     011A                     _TXREG	set	282
  1209     070D                     _PIR1bits	set	1805
  1210     070F                     _PIR3bits	set	1807
  1211     0F38                     _ANSELAbits	set	3896
  1212     0F26                     _RC6PPS	set	3878
  1213     0F4E                     _ANSELCbits	set	3918
  1214                           
  1215                           	psect	cinit
  1216     07CD                     start_initialization:	
  1217                           ; #config settings
  1218                           
  1219     07CD                     __initialization:
  1220                           
  1221                           ; Initialize objects allocated to BANK0
  1222     07CD  300C               	movlw	low __pidataBANK0
  1223     07CE  0084               	movwf	4
  1224     07CF  3082               	movlw	(high __pidataBANK0)| (0+128)
  1225     07D0  0085               	movwf	5
  1226     07D1  3061               	movlw	low __pdataBANK0
  1227     07D2  0086               	movwf	6
  1228     07D3  3000               	movlw	high __pdataBANK0
  1229     07D4  0087               	movwf	7
  1230     07D5  300E               	movlw	14
  1231     07D6  3181  21FA  3187   	fcall	init_ram
  1232                           
  1233                           ; Initialize objects allocated to BANK1
  1234     07D9  30CC               	movlw	low __pidataBANK1
  1235     07DA  0084               	movwf	4
  1236     07DB  3082               	movlw	(high __pidataBANK1)| (0+128)
  1237     07DC  0085               	movwf	5
  1238     07DD  30C7               	movlw	low __pdataBANK1
  1239     07DE  0086               	movwf	6
  1240     07DF  3000               	movlw	high __pdataBANK1
  1241     07E0  0087               	movwf	7
  1242     07E1  3020               	movlw	32
  1243     07E2  3181  21FA  3187   	fcall	init_ram
  1244                           
  1245                           ; Clear objects allocated to BANK0
  1246     07E5  3044               	movlw	low __pbssBANK0
  1247     07E6  0084               	movwf	4
  1248     07E7  3000               	movlw	high __pbssBANK0
  1249     07E8  0085               	movwf	5
  1250     07E9  301D               	movlw	29
  1251     07EA  3181  21F4  3187   	fcall	clear_ram0
  1252                           
  1253                           ; Clear objects allocated to BANK1
  1254     07ED  30A0               	movlw	low __pbssBANK1
  1255     07EE  0084               	movwf	4
  1256     07EF  3000               	movlw	high __pbssBANK1
  1257     07F0  0085               	movwf	5
  1258     07F1  3027               	movlw	39
  1259     07F2  3181  21F4  3187   	fcall	clear_ram0
  1260                           
  1261                           ; Clear objects allocated to BANK2
  1262     07F5  3020               	movlw	low __pbssBANK2
  1263     07F6  0084               	movwf	4
  1264     07F7  3001               	movlw	high __pbssBANK2
  1265     07F8  0085               	movwf	5
  1266     07F9  3014               	movlw	20
  1267     07FA  3181  21F4  3187   	fcall	clear_ram0
  1268     07FD                     end_of_initialization:	
  1269                           ;End of C runtime variable initialization code
  1270                           
  1271     07FD                     __end_of__initialization:
  1272     07FD  0020               	movlb	0
  1273     07FE  3184  2C10         	ljmp	_main	;jump to C main() function
  1274                           
  1275                           	psect	bssBANK0
  1276     0044                     __pbssBANK0:
  1277     0044                     _y_vec:
  1278     0044                     	ds	2
  1279     0046                     _health:
  1280     0046                     	ds	2
  1281     0048                     _potB:
  1282     0048                     	ds	2
  1283     004A                     _potA:
  1284     004A                     	ds	2
  1285     004C                     _swD:
  1286     004C                     	ds	2
  1287     004E                     _swC:
  1288     004E                     	ds	2
  1289     0050                     _swB:
  1290     0050                     	ds	2
  1291     0052                     _swA:
  1292     0052                     	ds	2
  1293     0054                     _joy_lx:
  1294     0054                     	ds	2
  1295     0056                     _joy_ly:
  1296     0056                     	ds	2
  1297     0058                     _joy_ry:
  1298     0058                     	ds	2
  1299     005A                     _joy_rx:
  1300     005A                     	ds	2
  1301     005C                     _auto_switch:
  1302     005C                     	ds	1
  1303     005D                     _repair_flag:
  1304     005D                     	ds	1
  1305     005E                     _shield_flag:
  1306     005E                     	ds	1
  1307     005F                     _playerID:
  1308     005F                     	ds	1
  1309     0060                     _teamID:
  1310     0060                     	ds	1
  1311                           
  1312                           	psect	dataBANK0
  1313     0061                     __pdataBANK0:
  1314     0061                     _IR_base:
  1315     0061                     	ds	2
  1316     0063                     _speed_inc:
  1317     0063                     	ds	2
  1318     0065                     _slow:
  1319     0065                     	ds	2
  1320     0067                     _fast:
  1321     0067                     	ds	2
  1322     0069                     _line_colour:
  1323     0069                     	ds	2
  1324     006B                     _rpin:
  1325     006B                     	ds	1
  1326     006C                     _mpin:
  1327     006C                     	ds	1
  1328     006D                     _lpin:
  1329     006D                     	ds	1
  1330     006E                     _starting:
  1331     006E                     	ds	1
  1332                           
  1333                           	psect	bssBANK1
  1334     00A0                     __pbssBANK1:
  1335     00A0                     motor@F11744:
  1336     00A0                     	ds	10
  1337     00AA                     ore_type@F11786:
  1338     00AA                     	ds	7
  1339     00B1                     shoot_laser@F11759:
  1340     00B1                     	ds	7
  1341     00B8                     set_laser@F11755:
  1342     00B8                     	ds	7
  1343     00BF                     custom_laser@F11774:
  1344     00BF                     	ds	6
  1345     00C5                     _x_vec:
  1346     00C5                     	ds	2
  1347                           
  1348                           	psect	dataBANK1
  1349     00C7                     __pdataBANK1:
  1350     00C7                     transmit_repair@F11768:
  1351     00C7                     	ds	6
  1352     00CD                     request_repair@F11765:
  1353     00CD                     	ds	6
  1354     00D3                     transmit_shield_code@F11762:
  1355     00D3                     	ds	6
  1356     00D9                     user_data_send@F11732:
  1357     00D9                     	ds	6
  1358     00DF                     PCLS_info_send@F11724:
  1359     00DF                     	ds	6
  1360     00E5                     _speed_dec:
  1361     00E5                     	ds	2
  1362                           
  1363                           	psect	bssBANK2
  1364     0120                     __pbssBANK2:
  1365     0120                     surface_exploration@F11782:
  1366     0120                     	ds	10
  1367     012A                     servo@F11751:
  1368     012A                     	ds	10
  1369                           
  1370                           	psect	inittext
  1371     01FA                     init_ram:
  1372     01FA  00FE               	movwf	btemp
  1373     01FB                     initloop:
  1374     01FB  0012               	moviw fsr0++
  1375     01FC  001E               	movwi fsr1++
  1376     01FD  0BFE               	decfsz	btemp,f
  1377     01FE  29FB               	goto	initloop
  1378     01FF  3400               	retlw	0
  1379                           
  1380                           	psect	clrtext
  1381     01F4                     clear_ram0:	
  1382                           ;	Called with FSR0 containing the base address, and
  1383                           ;	WREG with the size to clear
  1384                           
  1385     01F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1386     01F5                     clrloop0:
  1387     01F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1388     01F6  3101               	addfsr 0,1
  1389     01F7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1390     01F8  29F5               	goto	clrloop0	;have we reached the end yet?
  1391     01F9  3400               	retlw	0	;all done for this memory range, return
  1392                           
  1393                           	psect	cstackCOMMON
  1394     0070                     __pcstackCOMMON:
  1395     0070                     ?_tx_wait:
  1396     0070                     ??_tx_wait:	
  1397                           ; 1 bytes @ 0x0
  1398                           
  1399     0070                     ?_rx_wait:	
  1400                           ; 1 bytes @ 0x0
  1401                           
  1402     0070                     ??_rx_wait:	
  1403                           ; 1 bytes @ 0x0
  1404                           
  1405     0070                     ?_UART_init:	
  1406                           ; 1 bytes @ 0x0
  1407                           
  1408     0070                     ??_UART_init:	
  1409                           ; 1 bytes @ 0x0
  1410                           
  1411     0070                     ?_user_data_send:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414     0070                     ?_user_data_receive:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417     0070                     ?_user_data:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420     0070                     ?_drive:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423     0070                     ?_ADC_init:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426     0070                     ??_ADC_init:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429     0070                     ?_line_follower:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432     0070                     ?_IR_init:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435     0070                     ?_IR:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438     0070                     ?_main:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441     0070                     ?_abs:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444     0070                     ?_read_adc:	
  1445                           ; 2 bytes @ 0x0
  1446                           
  1447     0070                     ?___lwdiv:	
  1448                           ; 2 bytes @ 0x0
  1449                           
  1450     0070                     tx_wait@count:	
  1451                           ; 2 bytes @ 0x0
  1452                           
  1453     0070                     rx_wait@count:	
  1454                           ; 2 bytes @ 0x0
  1455                           
  1456     0070                     ___lwdiv@divisor:	
  1457                           ; 2 bytes @ 0x0
  1458                           
  1459     0070                     abs@a:	
  1460                           ; 2 bytes @ 0x0
  1461                           
  1462                           
  1463                           ; 2 bytes @ 0x0
  1464     0070                     	ds	2
  1465     0072                     ??_abs:
  1466     0072                     ?_UART_send:	
  1467                           ; 1 bytes @ 0x2
  1468                           
  1469     0072                     ??_read_adc:	
  1470                           ; 1 bytes @ 0x2
  1471                           
  1472     0072                     UART_send@size:	
  1473                           ; 1 bytes @ 0x2
  1474                           
  1475     0072                     ___lwdiv@dividend:	
  1476                           ; 2 bytes @ 0x2
  1477                           
  1478                           
  1479                           ; 2 bytes @ 0x2
  1480     0072                     	ds	2
  1481     0074                     ??_UART_send:
  1482     0074                     ??___lwdiv:	
  1483                           ; 1 bytes @ 0x4
  1484                           
  1485     0074                     ?___awdiv:	
  1486                           ; 1 bytes @ 0x4
  1487                           
  1488     0074                     ___awdiv@divisor:	
  1489                           ; 2 bytes @ 0x4
  1490                           
  1491                           
  1492                           ; 2 bytes @ 0x4
  1493     0074                     	ds	1
  1494     0075                     read_adc@sensor:
  1495     0075                     ___lwdiv@quotient:	
  1496                           ; 1 bytes @ 0x5
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0x5
  1500     0075                     	ds	1
  1501     0076                     UART_send@message:
  1502     0076                     read_adc@ADC_val:	
  1503                           ; 1 bytes @ 0x6
  1504                           
  1505     0076                     ___awdiv@dividend:	
  1506                           ; 2 bytes @ 0x6
  1507                           
  1508                           
  1509                           ; 2 bytes @ 0x6
  1510     0076                     	ds	1
  1511     0077                     UART_send@i:
  1512     0077                     ___lwdiv@counter:	
  1513                           ; 1 bytes @ 0x7
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x7
  1517     0077                     	ds	1
  1518     0078                     ??_user_data_send:
  1519     0078                     ??_user_data_receive:	
  1520                           ; 1 bytes @ 0x8
  1521                           
  1522     0078                     ?_motor:	
  1523                           ; 1 bytes @ 0x8
  1524                           
  1525     0078                     ??_line_follower:	
  1526                           ; 1 bytes @ 0x8
  1527                           
  1528     0078                     ??_IR_init:	
  1529                           ; 1 bytes @ 0x8
  1530                           
  1531     0078                     ??_IR:	
  1532                           ; 1 bytes @ 0x8
  1533                           
  1534     0078                     ??___awdiv:	
  1535                           ; 1 bytes @ 0x8
  1536                           
  1537     0078                     motor@pwmA:	
  1538                           ; 1 bytes @ 0x8
  1539                           
  1540     0078                     line_follower@l_val:	
  1541                           ; 1 bytes @ 0x8
  1542                           
  1543                           
  1544                           ; 2 bytes @ 0x8
  1545     0078                     	ds	1
  1546     0079                     motor@dirB:
  1547     0079                     ___awdiv@counter:	
  1548                           ; 1 bytes @ 0x9
  1549                           
  1550     0079                     IR@ADC_val:	
  1551                           ; 1 bytes @ 0x9
  1552                           
  1553                           
  1554                           ; 2 bytes @ 0x9
  1555     0079                     	ds	1
  1556     007A                     motor@pwmB:
  1557     007A                     ___awdiv@sign:	
  1558                           ; 1 bytes @ 0xA
  1559                           
  1560     007A                     line_follower@m_val:	
  1561                           ; 1 bytes @ 0xA
  1562                           
  1563                           
  1564                           ; 2 bytes @ 0xA
  1565     007A                     	ds	1
  1566     007B                     ??_user_data:
  1567     007B                     ??_motor:	
  1568                           ; 1 bytes @ 0xB
  1569                           
  1570     007B                     ___awdiv@quotient:	
  1571                           ; 1 bytes @ 0xB
  1572                           
  1573                           
  1574                           ; 2 bytes @ 0xB
  1575     007B                     	ds	1
  1576     007C                     line_follower@r_val:
  1577                           
  1578                           ; 2 bytes @ 0xC
  1579     007C                     	ds	1
  1580     007D                     ??___wmul:
  1581                           
  1582                           ; 1 bytes @ 0xD
  1583     007D                     	ds	1
  1584     007E                     ??_main:
  1585                           
  1586                           	psect	cstackBANK0
  1587     0020                     __pcstackBANK0:	
  1588                           ; 1 bytes @ 0xE
  1589                           
  1590     0020                     ?___wmul:
  1591     0020                     motor@dirA:	
  1592                           ; 2 bytes @ 0x0
  1593                           
  1594     0020                     ___wmul@multiplier:	
  1595                           ; 1 bytes @ 0x0
  1596                           
  1597     0020                     user_data_send@11733:	
  1598                           ; 2 bytes @ 0x0
  1599                           
  1600     0020                     user_data_receive@r:	
  1601                           ; 6 bytes @ 0x0
  1602                           
  1603                           
  1604                           ; 26 bytes @ 0x0
  1605     0020                     	ds	1
  1606     0021                     motor@11745:
  1607                           
  1608                           ; 10 bytes @ 0x1
  1609     0021                     	ds	1
  1610     0022                     ___wmul@multiplicand:
  1611                           
  1612                           ; 2 bytes @ 0x2
  1613     0022                     	ds	2
  1614     0024                     ___wmul@product:
  1615                           
  1616                           ; 2 bytes @ 0x4
  1617     0024                     	ds	7
  1618     002B                     ?_Vdrive:
  1619     002B                     Vdrive@y:	
  1620                           ; 1 bytes @ 0xB
  1621                           
  1622                           
  1623                           ; 2 bytes @ 0xB
  1624     002B                     	ds	2
  1625     002D                     Vdrive@x:
  1626                           
  1627                           ; 2 bytes @ 0xD
  1628     002D                     	ds	2
  1629     002F                     ??_Vdrive:
  1630                           
  1631                           ; 1 bytes @ 0xF
  1632     002F                     	ds	2
  1633     0031                     Vdrive@left_dir:
  1634                           
  1635                           ; 1 bytes @ 0x11
  1636     0031                     	ds	1
  1637     0032                     Vdrive@right_dir:
  1638                           
  1639                           ; 1 bytes @ 0x12
  1640     0032                     	ds	1
  1641     0033                     Vdrive@l_motor:
  1642                           
  1643                           ; 2 bytes @ 0x13
  1644     0033                     	ds	2
  1645     0035                     Vdrive@r_motor:
  1646                           
  1647                           ; 2 bytes @ 0x15
  1648     0035                     	ds	5
  1649     003A                     user_data_receive@s:
  1650                           
  1651                           ; 1 bytes @ 0x1A
  1652     003A                     	ds	1
  1653     003B                     user_data_receive@j:
  1654                           
  1655                           ; 1 bytes @ 0x1B
  1656     003B                     	ds	1
  1657     003C                     ??_drive:
  1658                           
  1659                           ; 1 bytes @ 0x1C
  1660     003C                     	ds	2
  1661     003E                     drive@x:
  1662                           
  1663                           ; 2 bytes @ 0x1E
  1664     003E                     	ds	2
  1665     0040                     drive@y:
  1666                           
  1667                           ; 2 bytes @ 0x20
  1668     0040                     	ds	2
  1669     0042                     drive@dir:
  1670                           
  1671                           ; 2 bytes @ 0x22
  1672     0042                     	ds	2
  1673                           
  1674                           	psect	maintext
  1675     0410                     __pmaintext:	
  1676 ;;
  1677 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1678 ;;
  1679 ;; *************** function _main *****************
  1680 ;; Defined at:
  1681 ;;		line 27 in file "Master.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : B1F/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1699 ;;Total ram usage:        0 bytes
  1700 ;; Hardware stack levels required when called: 5
  1701 ;; This function calls:
  1702 ;;		_ADC_init
  1703 ;;		_IR
  1704 ;;		_IR_init
  1705 ;;		_UART_init
  1706 ;;		_drive
  1707 ;;		_line_follower
  1708 ;;		_read_adc
  1709 ;;		_user_data
  1710 ;; This function is called by:
  1711 ;;		Startup code after reset
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715     0410                     _main:	
  1716                           ;psect for function _main
  1717                           
  1718     0410                     l2086:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1721                           
  1722                           
  1723                           ;Master.c: 28:     {
  1724     0410  3182  222A  3184   	fcall	_UART_init
  1725     0413                     l2088:
  1726                           
  1727                           ;Master.c: 29: 
  1728     0413  3182  224B  3184   	fcall	_user_data
  1729     0416                     l2090:
  1730                           
  1731                           ;Master.c: 30:         while(swA == 1){user_data();}
  1732     0416  3182  221A  3184   	fcall	_ADC_init
  1733     0419                     l2092:
  1734                           
  1735                           ;Master.c: 32: 
  1736     0419  0020               	movlb	0	; select bank0
  1737     041A  0850               	movf	_swB,w	;volatile
  1738     041B  0451               	iorwf	_swB+1,w	;volatile
  1739     041C  1903               	btfsc	3,2
  1740     041D  2C1F               	goto	u1791
  1741     041E  2C20               	goto	u1790
  1742     041F                     u1791:
  1743     041F  2C39               	goto	l2102
  1744     0420                     u1790:
  1745     0420                     l2094:
  1746     0420  3009               	movlw	9
  1747     0421  3182  22EC  3184   	fcall	_read_adc
  1748     0424  0870               	movf	?_read_adc,w
  1749     0425  3E00               	addlw	0
  1750     0426  0020               	movlb	0	; select bank0
  1751     0427  00E9               	movwf	_line_colour	;volatile
  1752     0428  30FF               	movlw	255
  1753     0429  3D71               	addwfc	?_read_adc+1,w
  1754     042A  00EA               	movwf	_line_colour+1	;volatile
  1755                           
  1756                           ;Master.c: 35:     return;
  1757     042B  2C32               	goto	l2100
  1758     042C                     l2096:
  1759                           
  1760                           ;Master.c: 36: }
  1761     042C  3184  24CA  3184   	fcall	_line_follower
  1762     042F                     l2098:
  1763     042F  3182  224B  3184   	fcall	_user_data
  1764     0432                     l2100:
  1765                           
  1766                           ;Master.c: 35:     return;
  1767     0432  0020               	movlb	0	; select bank0
  1768     0433  0850               	movf	_swB,w	;volatile
  1769     0434  0451               	iorwf	_swB+1,w	;volatile
  1770     0435  1D03               	btfss	3,2
  1771     0436  2C38               	goto	u1801
  1772     0437  2C39               	goto	u1800
  1773     0438                     u1801:
  1774     0438  2C2C               	goto	l2096
  1775     0439                     u1800:
  1776     0439                     l2102:
  1777     0439  3002               	movlw	2
  1778     043A  064E               	xorwf	_swC,w	;volatile
  1779     043B  044F               	iorwf	_swC+1,w	;volatile
  1780     043C  1D03               	btfss	3,2
  1781     043D  2C3F               	goto	u1811
  1782     043E  2C40               	goto	u1810
  1783     043F                     u1811:
  1784     043F  2C51               	goto	l2112
  1785     0440                     u1810:
  1786     0440                     l2104:
  1787     0440  3182  2200  3184   	fcall	_IR_init
  1788     0443  2C4A               	goto	l2110
  1789     0444                     l2106:
  1790     0444  3183  2313  3184   	fcall	_IR
  1791     0447                     l2108:
  1792     0447  3182  224B  3184   	fcall	_user_data
  1793     044A                     l2110:
  1794     044A  0020               	movlb	0	; select bank0
  1795     044B  084C               	movf	_swD,w	;volatile
  1796     044C  044D               	iorwf	_swD+1,w	;volatile
  1797     044D  1D03               	btfss	3,2
  1798     044E  2C50               	goto	u1821
  1799     044F  2C51               	goto	u1820
  1800     0450                     u1821:
  1801     0450  2C44               	goto	l2106
  1802     0451                     u1820:
  1803     0451                     l2112:
  1804     0451  3182  224B  3184   	fcall	_user_data
  1805     0454                     l2114:
  1806     0454  0020               	movlb	0	; select bank0
  1807     0455  0352               	decf	_swA,w	;volatile
  1808     0456  0453               	iorwf	_swA+1,w	;volatile
  1809     0457  1D03               	btfss	3,2
  1810     0458  2C5A               	goto	u1831
  1811     0459  2C5B               	goto	u1830
  1812     045A                     u1831:
  1813     045A  2C66               	goto	l2122
  1814     045B                     u1830:
  1815     045B  2C5F               	goto	l2120
  1816     045C                     l2118:
  1817     045C  3182  224B  3184   	fcall	_user_data
  1818     045F                     l2120:
  1819     045F  0020               	movlb	0	; select bank0
  1820     0460  0352               	decf	_swA,w	;volatile
  1821     0461  0453               	iorwf	_swA+1,w	;volatile
  1822     0462  1903               	btfsc	3,2
  1823     0463  2C65               	goto	u1841
  1824     0464  2C66               	goto	u1840
  1825     0465                     u1841:
  1826     0465  2C5C               	goto	l2118
  1827     0466                     u1840:
  1828     0466                     l2122:
  1829     0466  3183  23D2  3184   	fcall	_drive
  1830     0469                     l333:
  1831     0469  3180  2802         	ljmp	start
  1832     046B                     __end_of_main:
  1833                           
  1834                           	psect	text1
  1835     04CA                     __ptext1:	
  1836 ;; *************** function _line_follower *****************
  1837 ;; Defined at:
  1838 ;;		line 46 in file "./Line Follower.h"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  r_val           2   12[COMMON] volatile unsigned int 
  1843 ;;  m_val           2   10[COMMON] volatile unsigned int 
  1844 ;;  l_val           2    8[COMMON] volatile unsigned int 
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		wreg, pclath, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1858 ;;Total ram usage:        6 bytes
  1859 ;; Hardware stack levels used: 1
  1860 ;; Hardware stack levels required when called: 1
  1861 ;; This function calls:
  1862 ;;		_read_adc
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868     04CA                     _line_follower:	
  1869                           ;psect for function _line_follower
  1870                           
  1871     04CA                     l1884:	
  1872                           ;incstack = 0
  1873                           ; Regs used in _line_follower: [wreg+pclath+cstack]
  1874                           
  1875                           
  1876                           ;./Line Follower.h: 48:     l_val = read_adc(lpin);;./Line Follower.h: 50:     while(ADC
      +                          ON0bits.ADGO){}
  1877     04CA  0020               	movlb	0	; select bank0
  1878     04CB  1011               	bcf	17,0	;volatile
  1879                           
  1880                           ;./Line Follower.h: 51:     m_val = read_adc(mpin);
  1881     04CC  1091               	bcf	17,1	;volatile
  1882                           
  1883                           ;./Line Follower.h: 52:     ADCON0bits.ADGO = 1;
  1884     04CD  1111               	bcf	17,2	;volatile
  1885                           
  1886                           ;./Line Follower.h: 54:     r_val = read_adc(rpin);
  1887     04CE  0021               	movlb	1	; select bank1
  1888     04CF  1413               	bsf	19,0	;volatile
  1889     04D0                     l291:	
  1890                           ;./Line Follower.h: 55: 
  1891                           
  1892     04D0  1813               	btfsc	19,0	;volatile
  1893     04D1  2CD3               	goto	u1521
  1894     04D2  2CD4               	goto	u1520
  1895     04D3                     u1521:
  1896     04D3  2CD0               	goto	l291
  1897     04D4                     u1520:
  1898     04D4                     l1886:
  1899                           
  1900                           ;./Line Follower.h: 56:     if(m_val < line_colour)
  1901     04D4  300B               	movlw	11
  1902     04D5  3182  22EC  3184   	fcall	_read_adc
  1903     04D8  0871               	movf	?_read_adc+1,w
  1904     04D9  00F9               	movwf	line_follower@l_val+1	;volatile
  1905     04DA  0870               	movf	?_read_adc,w
  1906     04DB  00F8               	movwf	line_follower@l_val	;volatile
  1907     04DC                     l1888:
  1908                           
  1909                           ;./Line Follower.h: 57:     {
  1910     04DC  0021               	movlb	1	; select bank1
  1911     04DD  1413               	bsf	19,0	;volatile
  1912     04DE                     l294:	
  1913                           ;./Line Follower.h: 58:    y_vec = fast;
  1914                           
  1915     04DE  1813               	btfsc	19,0	;volatile
  1916     04DF  2CE1               	goto	u1531
  1917     04E0  2CE2               	goto	u1530
  1918     04E1                     u1531:
  1919     04E1  2CDE               	goto	l294
  1920     04E2                     u1530:
  1921     04E2                     l1890:
  1922                           
  1923                           ;./Line Follower.h: 59:         LATAbits.LATA1 = 1;
  1924     04E2  3009               	movlw	9
  1925     04E3  3182  22EC  3184   	fcall	_read_adc
  1926     04E6  0871               	movf	?_read_adc+1,w
  1927     04E7  00FB               	movwf	line_follower@m_val+1	;volatile
  1928     04E8  0870               	movf	?_read_adc,w
  1929     04E9  00FA               	movwf	line_follower@m_val	;volatile
  1930     04EA                     l1892:
  1931                           
  1932                           ;./Line Follower.h: 60:     }
  1933     04EA  0021               	movlb	1	; select bank1
  1934     04EB  1413               	bsf	19,0	;volatile
  1935     04EC                     l297:	
  1936                           ;./Line Follower.h: 61:     else
  1937                           
  1938     04EC  1813               	btfsc	19,0	;volatile
  1939     04ED  2CEF               	goto	u1541
  1940     04EE  2CF0               	goto	u1540
  1941     04EF                     u1541:
  1942     04EF  2CEC               	goto	l297
  1943     04F0                     u1540:
  1944     04F0                     l1894:
  1945                           
  1946                           ;./Line Follower.h: 62:     {
  1947     04F0  300A               	movlw	10
  1948     04F1  3182  22EC  3184   	fcall	_read_adc
  1949     04F4  0871               	movf	?_read_adc+1,w
  1950     04F5  00FD               	movwf	line_follower@r_val+1	;volatile
  1951     04F6  0870               	movf	?_read_adc,w
  1952     04F7  00FC               	movwf	line_follower@r_val	;volatile
  1953     04F8                     l1896:
  1954                           
  1955                           ;./Line Follower.h: 64:         LATAbits.LATA1 = 0;
  1956     04F8  0020               	movlb	0	; select bank0
  1957     04F9  086A               	movf	_line_colour+1,w	;volatile
  1958     04FA  027B               	subwf	line_follower@m_val+1,w	;volatile
  1959     04FB  1D03               	skipz
  1960     04FC  2CFF               	goto	u1555
  1961     04FD  0869               	movf	_line_colour,w	;volatile
  1962     04FE  027A               	subwf	line_follower@m_val,w	;volatile
  1963     04FF                     u1555:
  1964     04FF  1803               	skipnc
  1965     0500  2D02               	goto	u1551
  1966     0501  2D03               	goto	u1550
  1967     0502                     u1551:
  1968     0502  2D09               	goto	l1902
  1969     0503                     u1550:
  1970     0503                     l1898:
  1971                           
  1972                           ;./Line Follower.h: 65:     };./Line Follower.h: 66: 
  1973     0503  0868               	movf	_fast+1,w	;volatile
  1974     0504  00C5               	movwf	_y_vec+1	;volatile
  1975     0505  0867               	movf	_fast,w	;volatile
  1976     0506  00C4               	movwf	_y_vec	;volatile
  1977     0507                     l1900:
  1978                           
  1979                           ;./Line Follower.h: 67:     if(l_val < line_colour)
  1980     0507  1496               	bsf	22,1	;volatile
  1981                           
  1982                           ;./Line Follower.h: 68:     {
  1983     0508  2D0E               	goto	l301
  1984     0509                     l1902:
  1985                           
  1986                           ;./Line Follower.h: 70:         LATAbits.LATA2 = 1;;./Line Follower.h: 71:     }
  1987     0509  0866               	movf	_slow+1,w	;volatile
  1988     050A  00C5               	movwf	_y_vec+1	;volatile
  1989     050B  0865               	movf	_slow,w	;volatile
  1990     050C  00C4               	movwf	_y_vec	;volatile
  1991     050D                     l1904:
  1992                           
  1993                           ;./Line Follower.h: 72:     else {LATAbits.LATA2 = 0;}
  1994     050D  1096               	bcf	22,1	;volatile
  1995     050E                     l301:	
  1996                           ;./Line Follower.h: 73: 
  1997                           
  1998                           
  1999                           ;./Line Follower.h: 75:     {
  2000     050E  086A               	movf	_line_colour+1,w	;volatile
  2001     050F  0279               	subwf	line_follower@l_val+1,w	;volatile
  2002     0510  1D03               	skipz
  2003     0511  2D14               	goto	u1565
  2004     0512  0869               	movf	_line_colour,w	;volatile
  2005     0513  0278               	subwf	line_follower@l_val,w	;volatile
  2006     0514                     u1565:
  2007     0514  1803               	skipnc
  2008     0515  2D17               	goto	u1561
  2009     0516  2D18               	goto	u1560
  2010     0517                     u1561:
  2011     0517  2D1E               	goto	l302
  2012     0518                     u1560:
  2013     0518                     l1906:
  2014                           
  2015                           ;./Line Follower.h: 76:    y_vec += speed_inc;;./Line Follower.h: 77:         LATAbits.L
      +                          ATA0 = 1;
  2016     0518  0863               	movf	_speed_inc,w	;volatile
  2017     0519  02C4               	subwf	_y_vec,f	;volatile
  2018     051A  0864               	movf	_speed_inc+1,w	;volatile
  2019     051B  3BC5               	subwfb	_y_vec+1,f	;volatile
  2020     051C                     l1908:
  2021                           
  2022                           ;./Line Follower.h: 78:     }
  2023     051C  1516               	bsf	22,2	;volatile
  2024                           
  2025                           ;./Line Follower.h: 79:     else {LATAbits.LATA0 = 0;}
  2026     051D  2D1F               	goto	l1910
  2027     051E                     l302:	
  2028                           ;./Line Follower.h: 80: 
  2029                           
  2030     051E  1116               	bcf	22,2	;volatile
  2031     051F                     l1910:
  2032                           
  2033                           ;./Line Follower.h: 82:     PIR1bits.ADIF = 0;
  2034     051F  086A               	movf	_line_colour+1,w	;volatile
  2035     0520  027D               	subwf	line_follower@r_val+1,w	;volatile
  2036     0521  1D03               	skipz
  2037     0522  2D25               	goto	u1575
  2038     0523  0869               	movf	_line_colour,w	;volatile
  2039     0524  027C               	subwf	line_follower@r_val,w	;volatile
  2040     0525                     u1575:
  2041     0525  1803               	skipnc
  2042     0526  2D28               	goto	u1571
  2043     0527  2D29               	goto	u1570
  2044     0528                     u1571:
  2045     0528  2D2F               	goto	l304
  2046     0529                     u1570:
  2047     0529                     l1912:
  2048                           
  2049                           ;./Line Follower.h: 83:     ADCON0bits.ADGO = 1;;./Line Follower.h: 84: }
  2050     0529  0863               	movf	_speed_inc,w	;volatile
  2051     052A  07C4               	addwf	_y_vec,f	;volatile
  2052     052B  0864               	movf	_speed_inc+1,w	;volatile
  2053     052C  3DC5               	addwfc	_y_vec+1,f	;volatile
  2054     052D                     l1914:
  2055     052D  1416               	bsf	22,0	;volatile
  2056     052E  2D30               	goto	l305
  2057     052F                     l304:
  2058     052F  1016               	bcf	22,0	;volatile
  2059     0530                     l305:
  2060     0530  002E               	movlb	14	; select bank14
  2061     0531  100D               	bcf	13,0	;volatile
  2062     0532  0021               	movlb	1	; select bank1
  2063     0533  1413               	bsf	19,0	;volatile
  2064     0534                     l306:
  2065     0534  0008               	return
  2066     0535                     __end_of_line_follower:
  2067                           
  2068                           	psect	text2
  2069     03D2                     __ptext2:	
  2070 ;; *************** function _drive *****************
  2071 ;; Defined at:
  2072 ;;		line 62 in file "./Driving.h"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;		None
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  dir             2   34[BANK0 ] volatile int 
  2077 ;;  y               2   32[BANK0 ] volatile int 
  2078 ;;  x               2   30[BANK0 ] volatile int 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2089 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2090 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2091 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2092 ;;Total ram usage:        8 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; Hardware stack levels required when called: 4
  2095 ;; This function calls:
  2096 ;;		_Vdrive
  2097 ;;		___wmul
  2098 ;;		_user_data
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104     03D2                     _drive:	
  2105                           ;psect for function _drive
  2106                           
  2107     03D2                     l1862:	
  2108                           ;incstack = 0
  2109                           ; Regs used in _drive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2110                           
  2111                           
  2112                           ;./Driving.h: 64:     x = (joy_rx - 50)*2;;./Driving.h: 65:     y = dir * (joy_ly);;./Dr
      +                          iving.h: 67:     Vdrive(y, x);
  2113     03D2  3182  224B  3183   	fcall	_user_data
  2114     03D5                     l1864:
  2115     03D5  3000               	movlw	0
  2116     03D6  0020               	movlb	0	; select bank0
  2117     03D7  0259               	subwf	_joy_ry+1,w	;volatile
  2118     03D8  301A               	movlw	26
  2119     03D9  1903               	skipnz
  2120     03DA  0258               	subwf	_joy_ry,w	;volatile
  2121     03DB  1C03               	skipc
  2122     03DC  2BDE               	goto	u1511
  2123     03DD  2BDF               	goto	u1510
  2124     03DE                     u1511:
  2125     03DE  2BE4               	goto	l1868
  2126     03DF                     u1510:
  2127     03DF                     l1866:
  2128     03DF  3001               	movlw	1
  2129     03E0  00C2               	movwf	drive@dir	;volatile
  2130     03E1  3000               	movlw	0
  2131     03E2  00C3               	movwf	drive@dir+1	;volatile
  2132     03E3  2BE8               	goto	l1870
  2133     03E4                     l1868:
  2134     03E4  30FF               	movlw	255
  2135     03E5  00C2               	movwf	drive@dir	;volatile
  2136     03E6  30FF               	movlw	255
  2137     03E7  00C3               	movwf	drive@dir+1	;volatile
  2138     03E8                     l1870:
  2139     03E8  085B               	movf	_joy_rx+1,w	;volatile
  2140     03E9  00BD               	movwf	??_drive+1
  2141     03EA  085A               	movf	_joy_rx,w	;volatile
  2142     03EB  00BC               	movwf	??_drive
  2143     03EC  35BC               	lslf	??_drive,f
  2144     03ED  0DBD               	rlf	??_drive+1,f
  2145     03EE  083C               	movf	??_drive,w
  2146     03EF  3E9C               	addlw	156
  2147     03F0  00BE               	movwf	drive@x	;volatile
  2148     03F1  30FF               	movlw	255
  2149     03F2  3D3D               	addwfc	??_drive+1,w
  2150     03F3  00BF               	movwf	drive@x+1	;volatile
  2151     03F4                     l1872:
  2152     03F4  0843               	movf	drive@dir+1,w	;volatile
  2153     03F5  00A1               	movwf	___wmul@multiplier+1
  2154     03F6  0842               	movf	drive@dir,w	;volatile
  2155     03F7  00A0               	movwf	___wmul@multiplier
  2156     03F8  0857               	movf	_joy_ly+1,w	;volatile
  2157     03F9  00A3               	movwf	___wmul@multiplicand+1
  2158     03FA  0856               	movf	_joy_ly,w	;volatile
  2159     03FB  00A2               	movwf	___wmul@multiplicand
  2160     03FC  3182  22AC  3183   	fcall	___wmul
  2161     03FF  0020               	movlb	0	; select bank0
  2162     0400  0821               	movf	?___wmul+1,w
  2163     0401  00C1               	movwf	drive@y+1	;volatile
  2164     0402  0820               	movf	?___wmul,w
  2165     0403  00C0               	movwf	drive@y	;volatile
  2166     0404                     l1874:
  2167     0404  0841               	movf	drive@y+1,w	;volatile
  2168     0405  00AC               	movwf	Vdrive@y+1
  2169     0406  0840               	movf	drive@y,w	;volatile
  2170     0407  00AB               	movwf	Vdrive@y
  2171     0408  083F               	movf	drive@x+1,w	;volatile
  2172     0409  00AE               	movwf	Vdrive@x+1
  2173     040A  083E               	movf	drive@x,w	;volatile
  2174     040B  00AD               	movwf	Vdrive@x
  2175     040C  3185  2535  3183   	fcall	_Vdrive
  2176     040F                     l255:
  2177     040F  0008               	return
  2178     0410                     __end_of_drive:
  2179                           
  2180                           	psect	text3
  2181     024B                     __ptext3:	
  2182 ;; *************** function _user_data *****************
  2183 ;; Defined at:
  2184 ;;		line 198 in file "./Commands.h"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2200 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2202 ;;Total ram usage:        1 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 3
  2205 ;; This function calls:
  2206 ;;		_user_data_receive
  2207 ;;		_user_data_send
  2208 ;; This function is called by:
  2209 ;;		_drive
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214     024B                     _user_data:	
  2215                           ;psect for function _user_data
  2216                           
  2217     024B                     l1780:	
  2218                           ;incstack = 0
  2219                           ; Regs used in _user_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2220                           
  2221                           
  2222                           ;./Commands.h: 200: 
  2223     024B  3182  2290  3182   	fcall	_user_data_send
  2224     024E                     l1784:	
  2225                           ;./Commands.h: 201: void transmit_shield_code()
  2226                           
  2227                           
  2228                           ;./Commands.h: 201: void transmit_shield_code()
  2229     024E  3186  265D  3182   	fcall	_user_data_receive
  2230     0251  3A00               	xorlw	0
  2231     0252  1903               	skipnz
  2232     0253  2A55               	goto	u1351
  2233     0254  2A56               	goto	u1350
  2234     0255                     u1351:
  2235     0255  2A4B               	goto	l1780
  2236     0256                     u1350:
  2237     0256                     l1786:
  2238                           
  2239                           ;./Commands.h: 205: 
  2240     0256  300D               	movlw	13
  2241     0257  00FB               	movwf	??_user_data
  2242     0258  30FC               	movlw	252
  2243     0259                     u1857:
  2244     0259  0B89               	decfsz	9,f
  2245     025A  2A59               	goto	u1857
  2246     025B  0BFB               	decfsz	??_user_data,f
  2247     025C  2A59               	goto	u1857
  2248     025D                     l150:
  2249     025D  0008               	return
  2250     025E                     __end_of_user_data:
  2251                           
  2252                           	psect	text4
  2253     0290                     __ptext4:	
  2254 ;; *************** function _user_data_send *****************
  2255 ;; Defined at:
  2256 ;;		line 135 in file "./Commands.h"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;		None
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  11733           6    0[BANK0 ] volatile unsigned char [
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2271 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2272 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2273 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;Total ram usage:        7 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 2
  2277 ;; This function calls:
  2278 ;;		_UART_send
  2279 ;; This function is called by:
  2280 ;;		_user_data
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284     0290                     _user_data_send:	
  2285                           ;psect for function _user_data_send
  2286                           
  2287     0290                     l1618:	
  2288                           ;incstack = 0
  2289                           ; Regs used in _user_data_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2290                           
  2291     0290                     l1620:	
  2292                           ;./Commands.h: 137:     joy_ry /= 10;
  2293                           
  2294     0290  30D9               	movlw	low user_data_send@F11732
  2295     0291  0086               	movwf	6
  2296     0292  3000               	movlw	high user_data_send@F11732
  2297     0293  0087               	movwf	7
  2298     0294  3020               	movlw	low user_data_send@11733
  2299     0295  0084               	movwf	4
  2300     0296  3000               	movlw	high user_data_send@11733
  2301     0297  0085               	movwf	5
  2302     0298  3006               	movlw	6
  2303     0299  00F8               	movwf	??_user_data_send
  2304     029A                     u1060:
  2305     029A  0016               	moviw fsr1++
  2306     029B  001A               	movwi fsr0++
  2307     029C  0BF8               	decfsz	??_user_data_send,f
  2308     029D  2A9A               	goto	u1060
  2309     029E                     l1622:
  2310     029E  3006               	movlw	6
  2311     029F  00F2               	movwf	UART_send@size
  2312     02A0  3000               	movlw	0
  2313     02A1  00F3               	movwf	UART_send@size+1
  2314     02A2  3020               	movlw	(low (user_data_send@11733| 0))& (0+255)
  2315     02A3  3183  233B  3182   	fcall	_UART_send
  2316     02A6  3A00               	xorlw	0
  2317     02A7  1903               	skipnz
  2318     02A8  2AAA               	goto	u1071
  2319     02A9  2AAB               	goto	u1070
  2320     02AA                     u1071:
  2321     02AA  2A90               	goto	l1620
  2322     02AB                     u1070:
  2323     02AB                     l132:
  2324     02AB  0008               	return
  2325     02AC                     __end_of_user_data_send:
  2326                           
  2327                           	psect	text5
  2328     065D                     __ptext5:	
  2329 ;; *************** function _user_data_receive *****************
  2330 ;; Defined at:
  2331 ;;		line 140 in file "./Commands.h"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  r              26    0[BANK0 ] volatile unsigned char [
  2336 ;;  j               1   27[BANK0 ] volatile unsigned char 
  2337 ;;  s               1   26[BANK0 ] volatile unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      unsigned char 
  2340 ;; Registers used:
  2341 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2348 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2349 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2350 ;;      Totals:         3      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2351 ;;Total ram usage:       31 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 1
  2354 ;; This function calls:
  2355 ;;		___lwdiv
  2356 ;;		_rx_wait
  2357 ;; This function is called by:
  2358 ;;		_user_data
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362     065D                     _user_data_receive:	
  2363                           ;psect for function _user_data_receive
  2364                           
  2365     065D                     l1624:	
  2366                           ;incstack = 0
  2367                           ; Regs used in _user_data_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2368                           
  2369                           
  2370                           ;./Commands.h: 142:     joy_ly /= 10;
  2371     065D  301A               	movlw	26
  2372     065E  0020               	movlb	0	; select bank0
  2373     065F  00BA               	movwf	user_data_receive@s	;volatile
  2374     0660                     l1626:
  2375                           
  2376                           ;./Commands.h: 144:     joy_lx = r[12];
  2377     0660  01BB               	clrf	user_data_receive@j	;volatile
  2378     0661  2E7A               	goto	l1638
  2379     0662                     l1628:
  2380                           
  2381                           ;./Commands.h: 145:     joy_lx += r[13] << 8;;./Commands.h: 146:     joy_lx -= 1000;
  2382     0662  3182  2277  3186   	fcall	_rx_wait
  2383     0665  3A00               	xorlw	0
  2384     0666  1903               	skipnz
  2385     0667  2E69               	goto	u1081
  2386     0668  2E6A               	goto	u1080
  2387     0669                     u1081:
  2388     0669  2E73               	goto	l1632
  2389     066A                     u1080:
  2390     066A                     l1630:
  2391                           
  2392                           ;./Commands.h: 147:     joy_lx /= 10;;./Commands.h: 148: 
  2393     066A  0020               	movlb	0	; select bank0
  2394     066B  083B               	movf	user_data_receive@j,w
  2395     066C  3E20               	addlw	(low (user_data_receive@r| 0))& (0+255)
  2396     066D  0086               	movwf	6
  2397     066E  0187               	clrf	7
  2398     066F  0022               	movlb	2	; select bank2
  2399     0670  0819               	movf	25,w	;volatile
  2400     0671  0081               	movwf	1
  2401                           
  2402                           ;./Commands.h: 149:     swA = r[14];
  2403     0672  2E75               	goto	l1636
  2404     0673                     l1632:
  2405                           
  2406                           ;./Commands.h: 151:     swA = swA > 1500;;./Commands.h: 152:     swB = r[16];
  2407     0673  3000               	movlw	0
  2408     0674  2FCC               	goto	l139
  2409     0675                     l1636:
  2410                           
  2411                           ;./Commands.h: 154:     swB = swB > 1500;
  2412     0675  3001               	movlw	1
  2413     0676  00F8               	movwf	??_user_data_receive
  2414     0677  0878               	movf	??_user_data_receive,w
  2415     0678  0020               	movlb	0	; select bank0
  2416     0679  07BB               	addwf	user_data_receive@j,f	;volatile
  2417     067A                     l1638:
  2418     067A  083A               	movf	user_data_receive@s,w	;volatile
  2419     067B  023B               	subwf	user_data_receive@j,w	;volatile
  2420     067C  1C03               	skipc
  2421     067D  2E7F               	goto	u1091
  2422     067E  2E80               	goto	u1090
  2423     067F                     u1091:
  2424     067F  2E62               	goto	l1628
  2425     0680                     u1090:
  2426     0680                     l1640:
  2427                           
  2428                           ;./Commands.h: 156:     swC += r[19] << 8;
  2429     0680  0826               	movf	user_data_receive@r+6,w	;volatile
  2430     0681  00F8               	movwf	??_user_data_receive
  2431     0682  01F9               	clrf	??_user_data_receive+1
  2432     0683  0878               	movf	??_user_data_receive,w
  2433     0684  00DA               	movwf	_joy_rx	;volatile
  2434     0685  0879               	movf	??_user_data_receive+1,w
  2435     0686  00DB               	movwf	_joy_rx+1	;volatile
  2436                           
  2437                           ;./Commands.h: 157:     if(swC == 1000){swC = 0;}
  2438     0687  0827               	movf	user_data_receive@r+7,w	;volatile
  2439     0688  00F8               	movwf	??_user_data_receive
  2440     0689  01F9               	clrf	??_user_data_receive+1
  2441     068A  0878               	movf	??_user_data_receive,w
  2442     068B  00F9               	movwf	??_user_data_receive+1
  2443     068C  01F8               	clrf	??_user_data_receive
  2444     068D  0878               	movf	??_user_data_receive,w
  2445     068E  07DA               	addwf	_joy_rx,f	;volatile
  2446     068F  0879               	movf	??_user_data_receive+1,w
  2447     0690  3DDB               	addwfc	_joy_rx+1,f	;volatile
  2448                           
  2449                           ;./Commands.h: 158:     else{if(swC == 1500){swC = 1;}
  2450     0691  30E8               	movlw	232
  2451     0692  02DA               	subwf	_joy_rx,f	;volatile
  2452     0693  3003               	movlw	3
  2453     0694  3BDB               	subwfb	_joy_rx+1,f	;volatile
  2454     0695                     l1642:
  2455                           
  2456                           ;./Commands.h: 159:     else {swC = 2;}}
  2457     0695  300A               	movlw	10
  2458     0696  00F0               	movwf	___lwdiv@divisor
  2459     0697  3000               	movlw	0
  2460     0698  00F1               	movwf	___lwdiv@divisor+1
  2461     0699  085B               	movf	_joy_rx+1,w	;volatile
  2462     069A  00F3               	movwf	___lwdiv@dividend+1
  2463     069B  085A               	movf	_joy_rx,w	;volatile
  2464     069C  00F2               	movwf	___lwdiv@dividend
  2465     069D  3183  2396  3186   	fcall	___lwdiv
  2466     06A0  0871               	movf	?___lwdiv+1,w
  2467     06A1  0020               	movlb	0	; select bank0
  2468     06A2  00DB               	movwf	_joy_rx+1	;volatile
  2469     06A3  0870               	movf	?___lwdiv,w
  2470     06A4  00DA               	movwf	_joy_rx	;volatile
  2471     06A5                     l1644:
  2472                           
  2473                           ;./Commands.h: 161:     swD += r[21] << 8;
  2474     06A5  0828               	movf	user_data_receive@r+8,w	;volatile
  2475     06A6  00F8               	movwf	??_user_data_receive
  2476     06A7  01F9               	clrf	??_user_data_receive+1
  2477     06A8  0878               	movf	??_user_data_receive,w
  2478     06A9  00D8               	movwf	_joy_ry	;volatile
  2479     06AA  0879               	movf	??_user_data_receive+1,w
  2480     06AB  00D9               	movwf	_joy_ry+1	;volatile
  2481     06AC                     l1646:
  2482                           
  2483                           ;./Commands.h: 162:     swD = swD > 1500;
  2484     06AC  0829               	movf	user_data_receive@r+9,w	;volatile
  2485     06AD  00F8               	movwf	??_user_data_receive
  2486     06AE  01F9               	clrf	??_user_data_receive+1
  2487     06AF  0878               	movf	??_user_data_receive,w
  2488     06B0  00F9               	movwf	??_user_data_receive+1
  2489     06B1  01F8               	clrf	??_user_data_receive
  2490     06B2  0878               	movf	??_user_data_receive,w
  2491     06B3  07D8               	addwf	_joy_ry,f	;volatile
  2492     06B4  0879               	movf	??_user_data_receive+1,w
  2493     06B5  3DD9               	addwfc	_joy_ry+1,f	;volatile
  2494     06B6                     l1648:
  2495                           
  2496                           ;./Commands.h: 163: 
  2497     06B6  30E8               	movlw	232
  2498     06B7  02D8               	subwf	_joy_ry,f	;volatile
  2499     06B8  3003               	movlw	3
  2500     06B9  3BD9               	subwfb	_joy_ry+1,f	;volatile
  2501                           
  2502                           ;./Commands.h: 164:     potA = r[22];
  2503     06BA  300A               	movlw	10
  2504     06BB  00F0               	movwf	___lwdiv@divisor
  2505     06BC  3000               	movlw	0
  2506     06BD  00F1               	movwf	___lwdiv@divisor+1
  2507     06BE  0859               	movf	_joy_ry+1,w	;volatile
  2508     06BF  00F3               	movwf	___lwdiv@dividend+1
  2509     06C0  0858               	movf	_joy_ry,w	;volatile
  2510     06C1  00F2               	movwf	___lwdiv@dividend
  2511     06C2  3183  2396  3186   	fcall	___lwdiv
  2512     06C5  0871               	movf	?___lwdiv+1,w
  2513     06C6  0020               	movlb	0	; select bank0
  2514     06C7  00D9               	movwf	_joy_ry+1	;volatile
  2515     06C8  0870               	movf	?___lwdiv,w
  2516     06C9  00D8               	movwf	_joy_ry	;volatile
  2517     06CA                     l1650:
  2518                           
  2519                           ;./Commands.h: 166:     potB = r[24];
  2520     06CA  082A               	movf	user_data_receive@r+10,w	;volatile
  2521     06CB  00F8               	movwf	??_user_data_receive
  2522     06CC  01F9               	clrf	??_user_data_receive+1
  2523     06CD  0878               	movf	??_user_data_receive,w
  2524     06CE  00D6               	movwf	_joy_ly	;volatile
  2525     06CF  0879               	movf	??_user_data_receive+1,w
  2526     06D0  00D7               	movwf	_joy_ly+1	;volatile
  2527     06D1                     l1652:
  2528                           
  2529                           ;./Commands.h: 167:     potB += r[25] << 8;
  2530     06D1  082B               	movf	user_data_receive@r+11,w	;volatile
  2531     06D2  00F8               	movwf	??_user_data_receive
  2532     06D3  01F9               	clrf	??_user_data_receive+1
  2533     06D4  0878               	movf	??_user_data_receive,w
  2534     06D5  00F9               	movwf	??_user_data_receive+1
  2535     06D6  01F8               	clrf	??_user_data_receive
  2536     06D7  0878               	movf	??_user_data_receive,w
  2537     06D8  07D6               	addwf	_joy_ly,f	;volatile
  2538     06D9  0879               	movf	??_user_data_receive+1,w
  2539     06DA  3DD7               	addwfc	_joy_ly+1,f	;volatile
  2540     06DB                     l1654:
  2541                           
  2542                           ;./Commands.h: 168:     return 1;
  2543     06DB  30E8               	movlw	232
  2544     06DC  02D6               	subwf	_joy_ly,f	;volatile
  2545     06DD  3003               	movlw	3
  2546     06DE  3BD7               	subwfb	_joy_ly+1,f	;volatile
  2547     06DF                     l1656:
  2548                           
  2549                           ;./Commands.h: 169: }
  2550     06DF  300A               	movlw	10
  2551     06E0  00F0               	movwf	___lwdiv@divisor
  2552     06E1  3000               	movlw	0
  2553     06E2  00F1               	movwf	___lwdiv@divisor+1
  2554     06E3  0857               	movf	_joy_ly+1,w	;volatile
  2555     06E4  00F3               	movwf	___lwdiv@dividend+1
  2556     06E5  0856               	movf	_joy_ly,w	;volatile
  2557     06E6  00F2               	movwf	___lwdiv@dividend
  2558     06E7  3183  2396  3186   	fcall	___lwdiv
  2559     06EA  0871               	movf	?___lwdiv+1,w
  2560     06EB  0020               	movlb	0	; select bank0
  2561     06EC  00D7               	movwf	_joy_ly+1	;volatile
  2562     06ED  0870               	movf	?___lwdiv,w
  2563     06EE  00D6               	movwf	_joy_ly	;volatile
  2564                           
  2565                           ;./Commands.h: 171: void user_data()
  2566     06EF  082C               	movf	user_data_receive@r+12,w	;volatile
  2567     06F0  00F8               	movwf	??_user_data_receive
  2568     06F1  01F9               	clrf	??_user_data_receive+1
  2569     06F2  0878               	movf	??_user_data_receive,w
  2570     06F3  00D4               	movwf	_joy_lx	;volatile
  2571     06F4  0879               	movf	??_user_data_receive+1,w
  2572     06F5  00D5               	movwf	_joy_lx+1	;volatile
  2573                           
  2574                           ;./Commands.h: 172: {
  2575     06F6  082D               	movf	user_data_receive@r+13,w	;volatile
  2576     06F7  00F8               	movwf	??_user_data_receive
  2577     06F8  01F9               	clrf	??_user_data_receive+1
  2578     06F9  0878               	movf	??_user_data_receive,w
  2579     06FA  00F9               	movwf	??_user_data_receive+1
  2580     06FB  01F8               	clrf	??_user_data_receive
  2581     06FC  0878               	movf	??_user_data_receive,w
  2582     06FD  07D4               	addwf	_joy_lx,f	;volatile
  2583     06FE  0879               	movf	??_user_data_receive+1,w
  2584     06FF  3DD5               	addwfc	_joy_lx+1,f	;volatile
  2585                           
  2586                           ;./Commands.h: 173:     user_data_send();
  2587     0700  30E8               	movlw	232
  2588     0701  02D4               	subwf	_joy_lx,f	;volatile
  2589     0702  3003               	movlw	3
  2590     0703  3BD5               	subwfb	_joy_lx+1,f	;volatile
  2591     0704                     l1658:
  2592                           
  2593                           ;./Commands.h: 174:     while(!user_data_receive())
  2594     0704  300A               	movlw	10
  2595     0705  00F0               	movwf	___lwdiv@divisor
  2596     0706  3000               	movlw	0
  2597     0707  00F1               	movwf	___lwdiv@divisor+1
  2598     0708  0855               	movf	_joy_lx+1,w	;volatile
  2599     0709  00F3               	movwf	___lwdiv@dividend+1
  2600     070A  0854               	movf	_joy_lx,w	;volatile
  2601     070B  00F2               	movwf	___lwdiv@dividend
  2602     070C  3183  2396  3186   	fcall	___lwdiv
  2603     070F  0871               	movf	?___lwdiv+1,w
  2604     0710  0020               	movlb	0	; select bank0
  2605     0711  00D5               	movwf	_joy_lx+1	;volatile
  2606     0712  0870               	movf	?___lwdiv,w
  2607     0713  00D4               	movwf	_joy_lx	;volatile
  2608     0714                     l1660:
  2609                           
  2610                           ;./Commands.h: 176:         user_data_send();
  2611     0714  082E               	movf	user_data_receive@r+14,w	;volatile
  2612     0715  00F8               	movwf	??_user_data_receive
  2613     0716  01F9               	clrf	??_user_data_receive+1
  2614     0717  0878               	movf	??_user_data_receive,w
  2615     0718  00D2               	movwf	_swA	;volatile
  2616     0719  0879               	movf	??_user_data_receive+1,w
  2617     071A  00D3               	movwf	_swA+1	;volatile
  2618     071B                     l1662:
  2619                           
  2620                           ;./Commands.h: 177:     }
  2621     071B  082F               	movf	user_data_receive@r+15,w	;volatile
  2622     071C  00F8               	movwf	??_user_data_receive
  2623     071D  01F9               	clrf	??_user_data_receive+1
  2624     071E  0878               	movf	??_user_data_receive,w
  2625     071F  00F9               	movwf	??_user_data_receive+1
  2626     0720  01F8               	clrf	??_user_data_receive
  2627     0721  0878               	movf	??_user_data_receive,w
  2628     0722  07D2               	addwf	_swA,f	;volatile
  2629     0723  0879               	movf	??_user_data_receive+1,w
  2630     0724  3DD3               	addwfc	_swA+1,f	;volatile
  2631     0725                     l1664:
  2632                           
  2633                           ;./Commands.h: 178:     _delay((unsigned long)((100)*(400000/4000.0)));
  2634     0725  3005               	movlw	5
  2635     0726  0253               	subwf	_swA+1,w	;volatile
  2636     0727  30DD               	movlw	221
  2637     0728  1903               	skipnz
  2638     0729  0252               	subwf	_swA,w	;volatile
  2639     072A  1803               	skipnc
  2640     072B  2F2D               	goto	u1101
  2641     072C  2F2F               	goto	u1100
  2642     072D                     u1101:
  2643     072D  3001               	movlw	1
  2644     072E  2F30               	goto	u1110
  2645     072F                     u1100:
  2646     072F  3000               	movlw	0
  2647     0730                     u1110:
  2648     0730  00F8               	movwf	??_user_data_receive
  2649     0731  01F9               	clrf	??_user_data_receive+1
  2650     0732  0878               	movf	??_user_data_receive,w
  2651     0733  00D2               	movwf	_swA	;volatile
  2652     0734  0879               	movf	??_user_data_receive+1,w
  2653     0735  00D3               	movwf	_swA+1	;volatile
  2654     0736                     l1666:
  2655                           
  2656                           ;./Commands.h: 179: }
  2657     0736  0830               	movf	user_data_receive@r+16,w	;volatile
  2658     0737  00F8               	movwf	??_user_data_receive
  2659     0738  01F9               	clrf	??_user_data_receive+1
  2660     0739  0878               	movf	??_user_data_receive,w
  2661     073A  00D0               	movwf	_swB	;volatile
  2662     073B  0879               	movf	??_user_data_receive+1,w
  2663     073C  00D1               	movwf	_swB+1	;volatile
  2664     073D                     l1668:
  2665                           
  2666                           ;./Commands.h: 180: 
  2667     073D  0831               	movf	user_data_receive@r+17,w	;volatile
  2668     073E  00F8               	movwf	??_user_data_receive
  2669     073F  01F9               	clrf	??_user_data_receive+1
  2670     0740  0878               	movf	??_user_data_receive,w
  2671     0741  00F9               	movwf	??_user_data_receive+1
  2672     0742  01F8               	clrf	??_user_data_receive
  2673     0743  0878               	movf	??_user_data_receive,w
  2674     0744  07D0               	addwf	_swB,f	;volatile
  2675     0745  0879               	movf	??_user_data_receive+1,w
  2676     0746  3DD1               	addwfc	_swB+1,f	;volatile
  2677     0747                     l1670:
  2678                           
  2679                           ;./Commands.h: 181: void motor(unsigned char dirA, unsigned char pwmA, unsigned char dir
      +                          B, unsigned char pwmB)
  2680     0747  3005               	movlw	5
  2681     0748  0251               	subwf	_swB+1,w	;volatile
  2682     0749  30DD               	movlw	221
  2683     074A  1903               	skipnz
  2684     074B  0250               	subwf	_swB,w	;volatile
  2685     074C  1803               	skipnc
  2686     074D  2F4F               	goto	u1121
  2687     074E  2F51               	goto	u1120
  2688     074F                     u1121:
  2689     074F  3001               	movlw	1
  2690     0750  2F52               	goto	u1130
  2691     0751                     u1120:
  2692     0751  3000               	movlw	0
  2693     0752                     u1130:
  2694     0752  00F8               	movwf	??_user_data_receive
  2695     0753  01F9               	clrf	??_user_data_receive+1
  2696     0754  0878               	movf	??_user_data_receive,w
  2697     0755  00D0               	movwf	_swB	;volatile
  2698     0756  0879               	movf	??_user_data_receive+1,w
  2699     0757  00D1               	movwf	_swB+1	;volatile
  2700     0758                     l1672:
  2701                           
  2702                           ;./Commands.h: 182: {
  2703     0758  0832               	movf	user_data_receive@r+18,w	;volatile
  2704     0759  00F8               	movwf	??_user_data_receive
  2705     075A  01F9               	clrf	??_user_data_receive+1
  2706     075B  0878               	movf	??_user_data_receive,w
  2707     075C  00CE               	movwf	_swC	;volatile
  2708     075D  0879               	movf	??_user_data_receive+1,w
  2709     075E  00CF               	movwf	_swC+1	;volatile
  2710     075F                     l1674:
  2711                           
  2712                           ;./Commands.h: 183:     while (!UART_send((volatile unsigned char []) {0xFE, 0x19, 0x01,
      +                           0x06, 0x04, 0x00, dirA, pwmA, dirB, pwmB}, 10)){}
  2713     075F  0833               	movf	user_data_receive@r+19,w	;volatile
  2714     0760  00F8               	movwf	??_user_data_receive
  2715     0761  01F9               	clrf	??_user_data_receive+1
  2716     0762  0878               	movf	??_user_data_receive,w
  2717     0763  00F9               	movwf	??_user_data_receive+1
  2718     0764  01F8               	clrf	??_user_data_receive
  2719     0765  0878               	movf	??_user_data_receive,w
  2720     0766  07CE               	addwf	_swC,f	;volatile
  2721     0767  0879               	movf	??_user_data_receive+1,w
  2722     0768  3DCF               	addwfc	_swC+1,f	;volatile
  2723     0769                     l1676:
  2724                           
  2725                           ;./Commands.h: 184: }
  2726     0769  30E8               	movlw	232
  2727     076A  064E               	xorwf	_swC,w	;volatile
  2728     076B  3003               	movlw	3
  2729     076C  1903               	skipnz
  2730     076D  064F               	xorwf	_swC+1,w	;volatile
  2731     076E  1D03               	btfss	3,2
  2732     076F  2F71               	goto	u1141
  2733     0770  2F72               	goto	u1140
  2734     0771                     u1141:
  2735     0771  2F75               	goto	l1680
  2736     0772                     u1140:
  2737     0772                     l1678:
  2738     0772  01CE               	clrf	_swC	;volatile
  2739     0773  01CF               	clrf	_swC+1	;volatile
  2740     0774  2F87               	goto	l142
  2741     0775                     l1680:
  2742     0775  30DC               	movlw	220
  2743     0776  064E               	xorwf	_swC,w	;volatile
  2744     0777  3005               	movlw	5
  2745     0778  1903               	skipnz
  2746     0779  064F               	xorwf	_swC+1,w	;volatile
  2747     077A  1D03               	btfss	3,2
  2748     077B  2F7D               	goto	u1151
  2749     077C  2F7E               	goto	u1150
  2750     077D                     u1151:
  2751     077D  2F83               	goto	l1684
  2752     077E                     u1150:
  2753     077E                     l1682:
  2754     077E  3001               	movlw	1
  2755     077F  00CE               	movwf	_swC	;volatile
  2756     0780  3000               	movlw	0
  2757     0781  00CF               	movwf	_swC+1	;volatile
  2758     0782  2F87               	goto	l142
  2759     0783                     l1684:
  2760     0783  3002               	movlw	2
  2761     0784  00CE               	movwf	_swC	;volatile
  2762     0785  3000               	movlw	0
  2763     0786  00CF               	movwf	_swC+1	;volatile
  2764     0787                     l142:
  2765                           
  2766                           ;./Commands.h: 187: {
  2767     0787  0834               	movf	user_data_receive@r+20,w	;volatile
  2768     0788  00F8               	movwf	??_user_data_receive
  2769     0789  01F9               	clrf	??_user_data_receive+1
  2770     078A  0878               	movf	??_user_data_receive,w
  2771     078B  00CC               	movwf	_swD	;volatile
  2772     078C  0879               	movf	??_user_data_receive+1,w
  2773     078D  00CD               	movwf	_swD+1	;volatile
  2774                           
  2775                           ;./Commands.h: 188:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0
      +                          x07, 0x04, 0x00, s1, s2, s3, s4}, 10)){}
  2776     078E  0835               	movf	user_data_receive@r+21,w	;volatile
  2777     078F  00F8               	movwf	??_user_data_receive
  2778     0790  01F9               	clrf	??_user_data_receive+1
  2779     0791  0878               	movf	??_user_data_receive,w
  2780     0792  00F9               	movwf	??_user_data_receive+1
  2781     0793  01F8               	clrf	??_user_data_receive
  2782     0794  0878               	movf	??_user_data_receive,w
  2783     0795  07CC               	addwf	_swD,f	;volatile
  2784     0796  0879               	movf	??_user_data_receive+1,w
  2785     0797  3DCD               	addwfc	_swD+1,f	;volatile
  2786                           
  2787                           ;./Commands.h: 189: }
  2788     0798  3005               	movlw	5
  2789     0799  024D               	subwf	_swD+1,w	;volatile
  2790     079A  30DD               	movlw	221
  2791     079B  1903               	skipnz
  2792     079C  024C               	subwf	_swD,w	;volatile
  2793     079D  1803               	skipnc
  2794     079E  2FA0               	goto	u1161
  2795     079F  2FA2               	goto	u1160
  2796     07A0                     u1161:
  2797     07A0  3001               	movlw	1
  2798     07A1  2FA3               	goto	u1170
  2799     07A2                     u1160:
  2800     07A2  3000               	movlw	0
  2801     07A3                     u1170:
  2802     07A3  00F8               	movwf	??_user_data_receive
  2803     07A4  01F9               	clrf	??_user_data_receive+1
  2804     07A5  0878               	movf	??_user_data_receive,w
  2805     07A6  00CC               	movwf	_swD	;volatile
  2806     07A7  0879               	movf	??_user_data_receive+1,w
  2807     07A8  00CD               	movwf	_swD+1	;volatile
  2808                           
  2809                           ;./Commands.h: 191: void set_laser(unsigned char en)
  2810     07A9  0836               	movf	user_data_receive@r+22,w	;volatile
  2811     07AA  00F8               	movwf	??_user_data_receive
  2812     07AB  01F9               	clrf	??_user_data_receive+1
  2813     07AC  0878               	movf	??_user_data_receive,w
  2814     07AD  00CA               	movwf	_potA	;volatile
  2815     07AE  0879               	movf	??_user_data_receive+1,w
  2816     07AF  00CB               	movwf	_potA+1	;volatile
  2817                           
  2818                           ;./Commands.h: 192: {
  2819     07B0  0837               	movf	user_data_receive@r+23,w	;volatile
  2820     07B1  00F8               	movwf	??_user_data_receive
  2821     07B2  01F9               	clrf	??_user_data_receive+1
  2822     07B3  0878               	movf	??_user_data_receive,w
  2823     07B4  00F9               	movwf	??_user_data_receive+1
  2824     07B5  01F8               	clrf	??_user_data_receive
  2825     07B6  0878               	movf	??_user_data_receive,w
  2826     07B7  07CA               	addwf	_potA,f	;volatile
  2827     07B8  0879               	movf	??_user_data_receive+1,w
  2828     07B9  3DCB               	addwfc	_potA+1,f	;volatile
  2829                           
  2830                           ;./Commands.h: 193:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0
      +                          x08, 0x01, 0x00, en}, 7)){}
  2831     07BA  0838               	movf	user_data_receive@r+24,w	;volatile
  2832     07BB  00F8               	movwf	??_user_data_receive
  2833     07BC  01F9               	clrf	??_user_data_receive+1
  2834     07BD  0878               	movf	??_user_data_receive,w
  2835     07BE  00C8               	movwf	_potB	;volatile
  2836     07BF  0879               	movf	??_user_data_receive+1,w
  2837     07C0  00C9               	movwf	_potB+1	;volatile
  2838                           
  2839                           ;./Commands.h: 194: }
  2840     07C1  0839               	movf	user_data_receive@r+25,w	;volatile
  2841     07C2  00F8               	movwf	??_user_data_receive
  2842     07C3  01F9               	clrf	??_user_data_receive+1
  2843     07C4  0878               	movf	??_user_data_receive,w
  2844     07C5  00F9               	movwf	??_user_data_receive+1
  2845     07C6  01F8               	clrf	??_user_data_receive
  2846     07C7  0878               	movf	??_user_data_receive,w
  2847     07C8  07C8               	addwf	_potB,f	;volatile
  2848     07C9  0879               	movf	??_user_data_receive+1,w
  2849     07CA  3DC9               	addwfc	_potB+1,f	;volatile
  2850                           
  2851                           ;./Commands.h: 195: 
  2852     07CB  3001               	movlw	1
  2853     07CC                     l139:
  2854     07CC  0008               	return
  2855     07CD                     __end_of_user_data_receive:
  2856                           
  2857                           	psect	text6
  2858     0277                     __ptext6:	
  2859 ;; *************** function _rx_wait *****************
  2860 ;; Defined at:
  2861 ;;		line 49 in file "./Commands.h"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  count           2    0[COMMON] volatile unsigned int 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  1    wreg      unsigned char 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2879 ;;Total ram usage:        2 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_user_data_receive
  2885 ;;		_PCLS_info_receive
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889     0277                     _rx_wait:	
  2890                           ;psect for function _rx_wait
  2891                           
  2892     0277                     l1556:	
  2893                           ;incstack = 0
  2894                           ; Regs used in _rx_wait: [wreg+status,2+status,0]
  2895                           
  2896                           
  2897                           ;./Commands.h: 51: void UART_init();./Commands.h: 52: {
  2898     0277  30E8               	movlw	232
  2899     0278  00F0               	movwf	rx_wait@count	;volatile
  2900     0279  3003               	movlw	3
  2901     027A  00F1               	movwf	rx_wait@count+1	;volatile
  2902     027B                     l1558:
  2903     027B  0870               	movf	rx_wait@count,w	;volatile
  2904     027C  0471               	iorwf	rx_wait@count+1,w	;volatile
  2905     027D  1D03               	btfss	3,2
  2906     027E  2A80               	goto	u951
  2907     027F  2A81               	goto	u950
  2908     0280                     u951:
  2909     0280  2A82               	goto	l89
  2910     0281                     u950:
  2911     0281  2A8E               	goto	l1570
  2912     0282                     l89:
  2913                           
  2914                           ;./Commands.h: 53:     ANSELCbits.ANSC6 = 0;;./Commands.h: 54:     ANSELCbits.ANSC7 = 0;
  2915     0282  002E               	movlb	14	; select bank14
  2916     0283  1E8F               	btfss	15,5	;volatile
  2917     0284  2A86               	goto	u961
  2918     0285  2A87               	goto	u960
  2919     0286                     u961:
  2920     0286  2A89               	goto	l1566
  2921     0287                     u960:
  2922     0287                     l1562:
  2923                           
  2924                           ;./Commands.h: 55: ;./Commands.h: 56:     TX1STAbits.SYNC = 0;
  2925     0287  3001               	movlw	1
  2926     0288  2A8F               	goto	l92
  2927     0289                     l1566:
  2928                           
  2929                           ;./Commands.h: 58:     RC1STAbits.SPEN = 1;
  2930     0289  3001               	movlw	1
  2931     028A  02F0               	subwf	rx_wait@count,f	;volatile
  2932     028B  3000               	movlw	0
  2933     028C  3BF1               	subwfb	rx_wait@count+1,f	;volatile
  2934     028D  2A7B               	goto	l1558
  2935     028E                     l1570:
  2936                           
  2937                           ;./Commands.h: 59:     RC1STAbits.CREN = 1;
  2938     028E  3000               	movlw	0
  2939     028F                     l92:
  2940     028F  0008               	return
  2941     0290                     __end_of_rx_wait:
  2942                           
  2943                           	psect	text7
  2944     0396                     __ptext7:	
  2945 ;; *************** function ___lwdiv *****************
  2946 ;; Defined at:
  2947 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  divisor         2    0[COMMON] unsigned int 
  2950 ;;  dividend        2    2[COMMON] unsigned int 
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;  quotient        2    5[COMMON] unsigned int 
  2953 ;;  counter         1    7[COMMON] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  2    0[COMMON] unsigned int 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2963 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2964 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2965 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2966 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2967 ;;Total ram usage:        8 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_user_data_receive
  2973 ;; This function uses a non-reentrant model
  2974 ;;
  2975                           
  2976     0396                     ___lwdiv:	
  2977                           ;psect for function ___lwdiv
  2978                           
  2979     0396                     l1592:	
  2980                           ;incstack = 0
  2981                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2982                           
  2983     0396  01F5               	clrf	___lwdiv@quotient
  2984     0397  01F6               	clrf	___lwdiv@quotient+1
  2985     0398                     l1594:
  2986     0398  0870               	movf	___lwdiv@divisor,w
  2987     0399  0471               	iorwf	___lwdiv@divisor+1,w
  2988     039A  1903               	btfsc	3,2
  2989     039B  2B9D               	goto	u991
  2990     039C  2B9E               	goto	u990
  2991     039D                     u991:
  2992     039D  2BCD               	goto	l1614
  2993     039E                     u990:
  2994     039E                     l1596:
  2995     039E  01F7               	clrf	___lwdiv@counter
  2996     039F  0AF7               	incf	___lwdiv@counter,f
  2997     03A0  2BAA               	goto	l1602
  2998     03A1                     l1598:
  2999     03A1  3001               	movlw	1
  3000     03A2                     u1005:
  3001     03A2  35F0               	lslf	___lwdiv@divisor,f
  3002     03A3  0DF1               	rlf	___lwdiv@divisor+1,f
  3003     03A4  0B89               	decfsz	9,f
  3004     03A5  2BA2               	goto	u1005
  3005     03A6                     l1600:
  3006     03A6  3001               	movlw	1
  3007     03A7  00F4               	movwf	??___lwdiv
  3008     03A8  0874               	movf	??___lwdiv,w
  3009     03A9  07F7               	addwf	___lwdiv@counter,f
  3010     03AA                     l1602:
  3011     03AA  1FF1               	btfss	___lwdiv@divisor+1,7
  3012     03AB  2BAD               	goto	u1011
  3013     03AC  2BAE               	goto	u1010
  3014     03AD                     u1011:
  3015     03AD  2BA1               	goto	l1598
  3016     03AE                     u1010:
  3017     03AE                     l1604:
  3018     03AE  3001               	movlw	1
  3019     03AF                     u1025:
  3020     03AF  35F5               	lslf	___lwdiv@quotient,f
  3021     03B0  0DF6               	rlf	___lwdiv@quotient+1,f
  3022     03B1  0B89               	decfsz	9,f
  3023     03B2  2BAF               	goto	u1025
  3024     03B3  0871               	movf	___lwdiv@divisor+1,w
  3025     03B4  0273               	subwf	___lwdiv@dividend+1,w
  3026     03B5  1D03               	skipz
  3027     03B6  2BB9               	goto	u1035
  3028     03B7  0870               	movf	___lwdiv@divisor,w
  3029     03B8  0272               	subwf	___lwdiv@dividend,w
  3030     03B9                     u1035:
  3031     03B9  1C03               	skipc
  3032     03BA  2BBC               	goto	u1031
  3033     03BB  2BBD               	goto	u1030
  3034     03BC                     u1031:
  3035     03BC  2BC2               	goto	l1610
  3036     03BD                     u1030:
  3037     03BD                     l1606:
  3038     03BD  0870               	movf	___lwdiv@divisor,w
  3039     03BE  02F2               	subwf	___lwdiv@dividend,f
  3040     03BF  0871               	movf	___lwdiv@divisor+1,w
  3041     03C0  3BF3               	subwfb	___lwdiv@dividend+1,f
  3042     03C1                     l1608:
  3043     03C1  1475               	bsf	___lwdiv@quotient,0
  3044     03C2                     l1610:
  3045     03C2  3001               	movlw	1
  3046     03C3                     u1045:
  3047     03C3  36F1               	lsrf	___lwdiv@divisor+1,f
  3048     03C4  0CF0               	rrf	___lwdiv@divisor,f
  3049     03C5  0B89               	decfsz	9,f
  3050     03C6  2BC3               	goto	u1045
  3051     03C7                     l1612:
  3052     03C7  3001               	movlw	1
  3053     03C8  02F7               	subwf	___lwdiv@counter,f
  3054     03C9  1D03               	btfss	3,2
  3055     03CA  2BCC               	goto	u1051
  3056     03CB  2BCD               	goto	u1050
  3057     03CC                     u1051:
  3058     03CC  2BAE               	goto	l1604
  3059     03CD                     u1050:
  3060     03CD                     l1614:
  3061     03CD  0876               	movf	___lwdiv@quotient+1,w
  3062     03CE  00F1               	movwf	?___lwdiv+1
  3063     03CF  0875               	movf	___lwdiv@quotient,w
  3064     03D0  00F0               	movwf	?___lwdiv
  3065     03D1                     l765:
  3066     03D1  0008               	return
  3067     03D2                     __end_of___lwdiv:
  3068                           
  3069                           	psect	text8
  3070     0535                     __ptext8:	
  3071 ;; *************** function _Vdrive *****************
  3072 ;; Defined at:
  3073 ;;		line 10 in file "./Driving.h"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  y               2   11[BANK0 ] int 
  3076 ;;  x               2   13[BANK0 ] int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  r_motor         2   21[BANK0 ] volatile int 
  3079 ;;  l_motor         2   19[BANK0 ] volatile int 
  3080 ;;  right_dir       1   18[BANK0 ] volatile unsigned char 
  3081 ;;  left_dir        1   17[BANK0 ] volatile unsigned char 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3091 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3094 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;Total ram usage:       12 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 3
  3098 ;; This function calls:
  3099 ;;		___awdiv
  3100 ;;		___wmul
  3101 ;;		_abs
  3102 ;;		_motor
  3103 ;; This function is called by:
  3104 ;;		_drive
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108     0535                     _Vdrive:	
  3109                           ;psect for function _Vdrive
  3110                           
  3111     0535                     l1788:	
  3112                           ;incstack = 0
  3113                           ; Regs used in _Vdrive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3114                           
  3115                           
  3116                           ;./Driving.h: 10:         r_motor = y + x;;./Driving.h: 11:     };./Driving.h: 12:     e
      +                          lse{if(x < 0 && y > 0);./Driving.h: 13:     {;./Driving.h: 15:         r_motor = y + (x*
      +                          2);
  3117     0535  0020               	movlb	0	; select bank0
  3118     0536  082E               	movf	Vdrive@x+1,w
  3119     0537  3A80               	xorlw	128
  3120     0538  00AF               	movwf	??_Vdrive
  3121     0539  3080               	movlw	128
  3122     053A  022F               	subwf	??_Vdrive,w
  3123     053B  1D03               	skipz
  3124     053C  2D3F               	goto	u1365
  3125     053D  3001               	movlw	1
  3126     053E  022D               	subwf	Vdrive@x,w
  3127     053F                     u1365:
  3128     053F  1C03               	skipc
  3129     0540  2D42               	goto	u1361
  3130     0541  2D43               	goto	u1360
  3131     0542                     u1361:
  3132     0542  2D65               	goto	l236
  3133     0543                     u1360:
  3134     0543                     l1790:
  3135     0543  0020               	movlb	0	; select bank0
  3136     0544  082C               	movf	Vdrive@y+1,w
  3137     0545  3A80               	xorlw	128
  3138     0546  00AF               	movwf	??_Vdrive
  3139     0547  3080               	movlw	128
  3140     0548  022F               	subwf	??_Vdrive,w
  3141     0549  1D03               	skipz
  3142     054A  2D4D               	goto	u1375
  3143     054B  3001               	movlw	1
  3144     054C  022B               	subwf	Vdrive@y,w
  3145     054D                     u1375:
  3146     054D  1C03               	skipc
  3147     054E  2D50               	goto	u1371
  3148     054F  2D51               	goto	u1370
  3149     0550                     u1371:
  3150     0550  2D65               	goto	l236
  3151     0551                     u1370:
  3152     0551                     l1792:
  3153                           
  3154                           ;./Driving.h: 16:     };./Driving.h: 17:     else
  3155     0551  0020               	movlb	0	; select bank0
  3156     0552  082E               	movf	Vdrive@x+1,w
  3157     0553  00B0               	movwf	??_Vdrive+1
  3158     0554  082D               	movf	Vdrive@x,w
  3159     0555  00AF               	movwf	??_Vdrive
  3160     0556  35AF               	lslf	??_Vdrive,f
  3161     0557  0DB0               	rlf	??_Vdrive+1,f
  3162     0558  082F               	movf	??_Vdrive,w
  3163     0559  022B               	subwf	Vdrive@y,w
  3164     055A  00B3               	movwf	Vdrive@l_motor	;volatile
  3165     055B  0830               	movf	??_Vdrive+1,w
  3166     055C  3B2C               	subwfb	Vdrive@y+1,w
  3167     055D  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3168                           
  3169                           ;./Driving.h: 18:     {
  3170     055E  082D               	movf	Vdrive@x,w
  3171     055F  072B               	addwf	Vdrive@y,w
  3172     0560  00B5               	movwf	Vdrive@r_motor	;volatile
  3173     0561  082E               	movf	Vdrive@x+1,w
  3174     0562  3D2C               	addwfc	Vdrive@y+1,w
  3175     0563  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3176                           
  3177                           ;./Driving.h: 19:         l_motor = y - x;
  3178     0564  2D98               	goto	l1800
  3179     0565                     l236:	
  3180                           ;./Driving.h: 20:         r_motor = y + x;
  3181                           
  3182     0565  0020               	movlb	0	; select bank0
  3183     0566  1FAE               	btfss	Vdrive@x+1,7
  3184     0567  2D69               	goto	u1381
  3185     0568  2D6A               	goto	u1380
  3186     0569                     u1381:
  3187     0569  2D8B               	goto	l1798
  3188     056A                     u1380:
  3189     056A                     l1794:
  3190     056A  082C               	movf	Vdrive@y+1,w
  3191     056B  3A80               	xorlw	128
  3192     056C  00AF               	movwf	??_Vdrive
  3193     056D  3080               	movlw	128
  3194     056E  022F               	subwf	??_Vdrive,w
  3195     056F  1D03               	skipz
  3196     0570  2D73               	goto	u1395
  3197     0571  3001               	movlw	1
  3198     0572  022B               	subwf	Vdrive@y,w
  3199     0573                     u1395:
  3200     0573  1C03               	skipc
  3201     0574  2D76               	goto	u1391
  3202     0575  2D77               	goto	u1390
  3203     0576                     u1391:
  3204     0576  2D8B               	goto	l1798
  3205     0577                     u1390:
  3206     0577                     l1796:
  3207                           
  3208                           ;./Driving.h: 21:     }};./Driving.h: 22: 
  3209     0577  0020               	movlb	0	; select bank0
  3210     0578  082D               	movf	Vdrive@x,w
  3211     0579  022B               	subwf	Vdrive@y,w
  3212     057A  00B3               	movwf	Vdrive@l_motor	;volatile
  3213     057B  082E               	movf	Vdrive@x+1,w
  3214     057C  3B2C               	subwfb	Vdrive@y+1,w
  3215     057D  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3216                           
  3217                           ;./Driving.h: 23: 
  3218     057E  082E               	movf	Vdrive@x+1,w
  3219     057F  00B0               	movwf	??_Vdrive+1
  3220     0580  082D               	movf	Vdrive@x,w
  3221     0581  00AF               	movwf	??_Vdrive
  3222     0582  35AF               	lslf	??_Vdrive,f
  3223     0583  0DB0               	rlf	??_Vdrive+1,f
  3224     0584  082B               	movf	Vdrive@y,w
  3225     0585  072F               	addwf	??_Vdrive,w
  3226     0586  00B5               	movwf	Vdrive@r_motor	;volatile
  3227     0587  082C               	movf	Vdrive@y+1,w
  3228     0588  3D30               	addwfc	??_Vdrive+1,w
  3229     0589  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3230                           
  3231                           ;./Driving.h: 24:     if (l_motor > 100 || l_motor < -100)
  3232     058A  2D98               	goto	l1800
  3233     058B                     l1798:
  3234                           
  3235                           ;./Driving.h: 26:         l_motor = (l_motor/abs(l_motor)) * 100;;./Driving.h: 27:     }
  3236     058B  0020               	movlb	0	; select bank0
  3237     058C  082D               	movf	Vdrive@x,w
  3238     058D  022B               	subwf	Vdrive@y,w
  3239     058E  00B3               	movwf	Vdrive@l_motor	;volatile
  3240     058F  082E               	movf	Vdrive@x+1,w
  3241     0590  3B2C               	subwfb	Vdrive@y+1,w
  3242     0591  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3243                           
  3244                           ;./Driving.h: 28:     if (r_motor > 100 || r_motor < -100)
  3245     0592  082D               	movf	Vdrive@x,w
  3246     0593  072B               	addwf	Vdrive@y,w
  3247     0594  00B5               	movwf	Vdrive@r_motor	;volatile
  3248     0595  082E               	movf	Vdrive@x+1,w
  3249     0596  3D2C               	addwfc	Vdrive@y+1,w
  3250     0597  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3251     0598                     l1800:
  3252                           
  3253                           ;./Driving.h: 32: 
  3254     0598  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3255     0599  3A80               	xorlw	128
  3256     059A  00AF               	movwf	??_Vdrive
  3257     059B  3080               	movlw	128
  3258     059C  022F               	subwf	??_Vdrive,w
  3259     059D  1D03               	skipz
  3260     059E  2DA1               	goto	u1405
  3261     059F  3065               	movlw	101
  3262     05A0  0233               	subwf	Vdrive@l_motor,w	;volatile
  3263     05A1                     u1405:
  3264     05A1  1803               	skipnc
  3265     05A2  2DA4               	goto	u1401
  3266     05A3  2DA5               	goto	u1400
  3267     05A4                     u1401:
  3268     05A4  2DB3               	goto	l1804
  3269     05A5                     u1400:
  3270     05A5                     l1802:
  3271     05A5  0020               	movlb	0	; select bank0
  3272     05A6  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3273     05A7  3A80               	xorlw	128
  3274     05A8  00AF               	movwf	??_Vdrive
  3275     05A9  307F               	movlw	127
  3276     05AA  022F               	subwf	??_Vdrive,w
  3277     05AB  1D03               	skipz
  3278     05AC  2DAF               	goto	u1415
  3279     05AD  309C               	movlw	156
  3280     05AE  0233               	subwf	Vdrive@l_motor,w	;volatile
  3281     05AF                     u1415:
  3282     05AF  1803               	skipnc
  3283     05B0  2DB2               	goto	u1411
  3284     05B1  2DB3               	goto	u1410
  3285     05B2                     u1411:
  3286     05B2  2DD8               	goto	l1806
  3287     05B3                     u1410:
  3288     05B3                     l1804:
  3289                           
  3290                           ;./Driving.h: 33:     if (l_motor > 0);./Driving.h: 34:     {
  3291     05B3  0020               	movlb	0	; select bank0
  3292     05B4  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3293     05B5  00F1               	movwf	abs@a+1
  3294     05B6  0833               	movf	Vdrive@l_motor,w	;volatile
  3295     05B7  00F0               	movwf	abs@a
  3296     05B8  3182  223A  3185   	fcall	_abs
  3297     05BB  0871               	movf	?_abs+1,w
  3298     05BC  00F5               	movwf	___awdiv@divisor+1
  3299     05BD  0870               	movf	?_abs,w
  3300     05BE  00F4               	movwf	___awdiv@divisor
  3301     05BF  0020               	movlb	0	; select bank0
  3302     05C0  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3303     05C1  00F7               	movwf	___awdiv@dividend+1
  3304     05C2  0833               	movf	Vdrive@l_motor,w	;volatile
  3305     05C3  00F6               	movwf	___awdiv@dividend
  3306     05C4  3184  246B  3185   	fcall	___awdiv
  3307     05C7  0875               	movf	?___awdiv+1,w
  3308     05C8  0020               	movlb	0	; select bank0
  3309     05C9  00A1               	movwf	___wmul@multiplier+1
  3310     05CA  0874               	movf	?___awdiv,w
  3311     05CB  00A0               	movwf	___wmul@multiplier
  3312     05CC  3064               	movlw	100
  3313     05CD  00A2               	movwf	___wmul@multiplicand
  3314     05CE  3000               	movlw	0
  3315     05CF  00A3               	movwf	___wmul@multiplicand+1
  3316     05D0  3182  22AC  3185   	fcall	___wmul
  3317     05D3  0020               	movlb	0	; select bank0
  3318     05D4  0821               	movf	?___wmul+1,w
  3319     05D5  00B4               	movwf	Vdrive@l_motor+1	;volatile
  3320     05D6  0820               	movf	?___wmul,w
  3321     05D7  00B3               	movwf	Vdrive@l_motor	;volatile
  3322     05D8                     l1806:
  3323                           
  3324                           ;./Driving.h: 36:     }
  3325     05D8  0020               	movlb	0	; select bank0
  3326     05D9  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3327     05DA  3A80               	xorlw	128
  3328     05DB  00AF               	movwf	??_Vdrive
  3329     05DC  3080               	movlw	128
  3330     05DD  022F               	subwf	??_Vdrive,w
  3331     05DE  1D03               	skipz
  3332     05DF  2DE2               	goto	u1425
  3333     05E0  3065               	movlw	101
  3334     05E1  0235               	subwf	Vdrive@r_motor,w	;volatile
  3335     05E2                     u1425:
  3336     05E2  1803               	skipnc
  3337     05E3  2DE5               	goto	u1421
  3338     05E4  2DE6               	goto	u1420
  3339     05E5                     u1421:
  3340     05E5  2DF4               	goto	l1810
  3341     05E6                     u1420:
  3342     05E6                     l1808:
  3343     05E6  0020               	movlb	0	; select bank0
  3344     05E7  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3345     05E8  3A80               	xorlw	128
  3346     05E9  00AF               	movwf	??_Vdrive
  3347     05EA  307F               	movlw	127
  3348     05EB  022F               	subwf	??_Vdrive,w
  3349     05EC  1D03               	skipz
  3350     05ED  2DF0               	goto	u1435
  3351     05EE  309C               	movlw	156
  3352     05EF  0235               	subwf	Vdrive@r_motor,w	;volatile
  3353     05F0                     u1435:
  3354     05F0  1803               	skipnc
  3355     05F1  2DF3               	goto	u1431
  3356     05F2  2DF4               	goto	u1430
  3357     05F3                     u1431:
  3358     05F3  2E19               	goto	l1812
  3359     05F4                     u1430:
  3360     05F4                     l1810:
  3361                           
  3362                           ;./Driving.h: 37:     else;./Driving.h: 38:     {
  3363     05F4  0020               	movlb	0	; select bank0
  3364     05F5  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3365     05F6  00F1               	movwf	abs@a+1
  3366     05F7  0835               	movf	Vdrive@r_motor,w	;volatile
  3367     05F8  00F0               	movwf	abs@a
  3368     05F9  3182  223A  3185   	fcall	_abs
  3369     05FC  0871               	movf	?_abs+1,w
  3370     05FD  00F5               	movwf	___awdiv@divisor+1
  3371     05FE  0870               	movf	?_abs,w
  3372     05FF  00F4               	movwf	___awdiv@divisor
  3373     0600  0020               	movlb	0	; select bank0
  3374     0601  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3375     0602  00F7               	movwf	___awdiv@dividend+1
  3376     0603  0835               	movf	Vdrive@r_motor,w	;volatile
  3377     0604  00F6               	movwf	___awdiv@dividend
  3378     0605  3184  246B  3185   	fcall	___awdiv
  3379     0608  0875               	movf	?___awdiv+1,w
  3380     0609  0020               	movlb	0	; select bank0
  3381     060A  00A1               	movwf	___wmul@multiplier+1
  3382     060B  0874               	movf	?___awdiv,w
  3383     060C  00A0               	movwf	___wmul@multiplier
  3384     060D  3064               	movlw	100
  3385     060E  00A2               	movwf	___wmul@multiplicand
  3386     060F  3000               	movlw	0
  3387     0610  00A3               	movwf	___wmul@multiplicand+1
  3388     0611  3182  22AC  3185   	fcall	___wmul
  3389     0614  0020               	movlb	0	; select bank0
  3390     0615  0821               	movf	?___wmul+1,w
  3391     0616  00B6               	movwf	Vdrive@r_motor+1	;volatile
  3392     0617  0820               	movf	?___wmul,w
  3393     0618  00B5               	movwf	Vdrive@r_motor	;volatile
  3394     0619                     l1812:
  3395                           
  3396                           ;./Driving.h: 41: 
  3397     0619  0020               	movlb	0	; select bank0
  3398     061A  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3399     061B  3A80               	xorlw	128
  3400     061C  00AF               	movwf	??_Vdrive
  3401     061D  3080               	movlw	128
  3402     061E  022F               	subwf	??_Vdrive,w
  3403     061F  1D03               	skipz
  3404     0620  2E23               	goto	u1445
  3405     0621  3001               	movlw	1
  3406     0622  0233               	subwf	Vdrive@l_motor,w	;volatile
  3407     0623                     u1445:
  3408     0623  1C03               	skipc
  3409     0624  2E26               	goto	u1441
  3410     0625  2E27               	goto	u1440
  3411     0626                     u1441:
  3412     0626  2E2B               	goto	l1816
  3413     0627                     u1440:
  3414     0627                     l1814:
  3415                           
  3416                           ;./Driving.h: 42:     if (r_motor > 0);./Driving.h: 43:     {
  3417     0627  3001               	movlw	1
  3418     0628  0020               	movlb	0	; select bank0
  3419     0629  00B1               	movwf	Vdrive@left_dir	;volatile
  3420                           
  3421                           ;./Driving.h: 44:         right_dir = 1;
  3422     062A  2E2E               	goto	l247
  3423     062B                     l1816:
  3424                           
  3425                           ;./Driving.h: 46:     else;./Driving.h: 47:     {
  3426     062B  3002               	movlw	2
  3427     062C  0020               	movlb	0	; select bank0
  3428     062D  00B1               	movwf	Vdrive@left_dir	;volatile
  3429     062E                     l247:	
  3430                           ;./Driving.h: 48:         right_dir = 2;
  3431                           
  3432                           
  3433                           ;./Driving.h: 50: 
  3434     062E  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3435     062F  3A80               	xorlw	128
  3436     0630  00AF               	movwf	??_Vdrive
  3437     0631  3080               	movlw	128
  3438     0632  022F               	subwf	??_Vdrive,w
  3439     0633  1D03               	skipz
  3440     0634  2E37               	goto	u1455
  3441     0635  3001               	movlw	1
  3442     0636  0235               	subwf	Vdrive@r_motor,w	;volatile
  3443     0637                     u1455:
  3444     0637  1C03               	skipc
  3445     0638  2E3A               	goto	u1451
  3446     0639  2E3B               	goto	u1450
  3447     063A                     u1451:
  3448     063A  2E3F               	goto	l1820
  3449     063B                     u1450:
  3450     063B                     l1818:
  3451                           
  3452                           ;./Driving.h: 51:     motor(left_dir, abs(l_motor), right_dir, abs(r_motor));;./Driving.
      +                          h: 52: }
  3453     063B  3001               	movlw	1
  3454     063C  0020               	movlb	0	; select bank0
  3455     063D  00B2               	movwf	Vdrive@right_dir	;volatile
  3456                           
  3457                           ;./Driving.h: 53: 
  3458     063E  2E42               	goto	l1822
  3459     063F                     l1820:
  3460                           
  3461                           ;./Driving.h: 55: {;./Driving.h: 56:     volatile int dir;
  3462     063F  3002               	movlw	2
  3463     0640  0020               	movlb	0	; select bank0
  3464     0641  00B2               	movwf	Vdrive@right_dir	;volatile
  3465     0642                     l1822:
  3466                           
  3467                           ;./Driving.h: 59:     user_data();
  3468     0642  0834               	movf	Vdrive@l_motor+1,w	;volatile
  3469     0643  00F1               	movwf	abs@a+1
  3470     0644  0833               	movf	Vdrive@l_motor,w	;volatile
  3471     0645  00F0               	movwf	abs@a
  3472     0646  3182  223A  3185   	fcall	_abs
  3473     0649  0870               	movf	?_abs,w
  3474     064A  00F8               	movwf	motor@pwmA
  3475     064B  0020               	movlb	0	; select bank0
  3476     064C  0832               	movf	Vdrive@right_dir,w	;volatile
  3477     064D  00F9               	movwf	motor@dirB
  3478     064E  0836               	movf	Vdrive@r_motor+1,w	;volatile
  3479     064F  00F1               	movwf	abs@a+1
  3480     0650  0835               	movf	Vdrive@r_motor,w	;volatile
  3481     0651  00F0               	movwf	abs@a
  3482     0652  3182  223A  3185   	fcall	_abs
  3483     0655  0870               	movf	?_abs,w
  3484     0656  00FA               	movwf	motor@pwmB
  3485     0657  0020               	movlb	0	; select bank0
  3486     0658  0831               	movf	Vdrive@left_dir,w	;volatile
  3487     0659  3183  2364  3185   	fcall	_motor
  3488     065C                     l250:
  3489     065C  0008               	return
  3490     065D                     __end_of_Vdrive:
  3491                           
  3492                           	psect	text9
  3493     0364                     __ptext9:	
  3494 ;; *************** function _motor *****************
  3495 ;; Defined at:
  3496 ;;		line 208 in file "./Commands.h"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  dirA            1    wreg     unsigned char 
  3499 ;;  pwmA            1    8[COMMON] unsigned char 
  3500 ;;  dirB            1    9[COMMON] unsigned char 
  3501 ;;  pwmB            1   10[COMMON] unsigned char 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  dirA            1    0[BANK0 ] unsigned char 
  3504 ;;  11745          10    1[BANK0 ] volatile unsigned char [
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3514 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;Total ram usage:       15 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 2
  3521 ;; This function calls:
  3522 ;;		_UART_send
  3523 ;; This function is called by:
  3524 ;;		_Vdrive
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528     0364                     _motor:	
  3529                           ;psect for function _motor
  3530                           
  3531                           
  3532                           ;incstack = 0
  3533                           ; Regs used in _motor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3534                           ;motor@dirA stored from wreg
  3535     0364  0020               	movlb	0	; select bank0
  3536     0365  00A0               	movwf	motor@dirA
  3537     0366                     l1688:
  3538     0366                     l1690:	
  3539                           ;./Commands.h: 208:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x03, 0
      +                          x09, 0x00, 0x00}, 6)){};./Commands.h: 209: };./Commands.h: 210: 
  3540                           
  3541     0366  30A0               	movlw	low motor@F11744
  3542     0367  0086               	movwf	6
  3543     0368  3000               	movlw	high motor@F11744
  3544     0369  0087               	movwf	7
  3545     036A  3021               	movlw	low motor@11745
  3546     036B  0084               	movwf	4
  3547     036C  3000               	movlw	high motor@11745
  3548     036D  0085               	movwf	5
  3549     036E  300A               	movlw	10
  3550     036F  00FB               	movwf	??_motor
  3551     0370                     u1180:
  3552     0370  0016               	moviw fsr1++
  3553     0371  001A               	movwi fsr0++
  3554     0372  0BFB               	decfsz	??_motor,f
  3555     0373  2B70               	goto	u1180
  3556     0374                     l1692:
  3557     0374  30FE               	movlw	254
  3558     0375  0020               	movlb	0	; select bank0
  3559     0376  00A1               	movwf	motor@11745	;volatile
  3560     0377                     l1694:
  3561     0377  3019               	movlw	25
  3562     0378  00A2               	movwf	motor@11745+1	;volatile
  3563     0379                     l1696:
  3564     0379  3001               	movlw	1
  3565     037A  00A3               	movwf	motor@11745+2	;volatile
  3566     037B                     l1698:
  3567     037B  3006               	movlw	6
  3568     037C  00A4               	movwf	motor@11745+3	;volatile
  3569     037D                     l1700:
  3570     037D  3004               	movlw	4
  3571     037E  00A5               	movwf	motor@11745+4	;volatile
  3572     037F                     l1702:
  3573     037F  01A6               	clrf	motor@11745+5	;volatile
  3574     0380                     l1704:
  3575     0380  0820               	movf	motor@dirA,w
  3576     0381  00A7               	movwf	motor@11745+6	;volatile
  3577     0382                     l1706:
  3578     0382  0878               	movf	motor@pwmA,w
  3579     0383  00A8               	movwf	motor@11745+7	;volatile
  3580     0384                     l1708:
  3581     0384  0879               	movf	motor@dirB,w
  3582     0385  00A9               	movwf	motor@11745+8	;volatile
  3583     0386                     l1710:
  3584     0386  087A               	movf	motor@pwmB,w
  3585     0387  00AA               	movwf	motor@11745+9	;volatile
  3586     0388                     l1712:
  3587     0388  300A               	movlw	10
  3588     0389  00F2               	movwf	UART_send@size
  3589     038A  3000               	movlw	0
  3590     038B  00F3               	movwf	UART_send@size+1
  3591     038C  3021               	movlw	(low (motor@11745| 0))& (0+255)
  3592     038D  3183  233B  3183   	fcall	_UART_send
  3593     0390  3A00               	xorlw	0
  3594     0391  1903               	skipnz
  3595     0392  2B94               	goto	u1191
  3596     0393  2B95               	goto	u1190
  3597     0394                     u1191:
  3598     0394  2B66               	goto	l1690
  3599     0395                     u1190:
  3600     0395                     l158:
  3601     0395  0008               	return
  3602     0396                     __end_of_motor:
  3603                           
  3604                           	psect	text10
  3605     033B                     __ptext10:	
  3606 ;; *************** function _UART_send *****************
  3607 ;; Defined at:
  3608 ;;		line 62 in file "./Commands.h"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  message         1    wreg     PTR volatile unsigned ch
  3611 ;;		 -> ore_type@11787(7), surface_exploration@11783(10), custom_laser@11775(6), transmit_repair@11769(6), 
  3612 ;;		 -> request_repair@11766(6), transmit_shield_code@11763(6), shoot_laser@11760(7), set_laser@11756(7), 
  3613 ;;		 -> servo@11752(10), motor@11745(10), user_data_send@11733(6), PCLS_info_send@11725(6), 
  3614 ;;  size            2    2[COMMON] unsigned int 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  message         1    6[COMMON] PTR volatile unsigned ch
  3617 ;;		 -> ore_type@11787(7), surface_exploration@11783(10), custom_laser@11775(6), transmit_repair@11769(6), 
  3618 ;;		 -> request_repair@11766(6), transmit_shield_code@11763(6), shoot_laser@11760(7), set_laser@11756(7), 
  3619 ;;		 -> servo@11752(10), motor@11745(10), user_data_send@11733(6), PCLS_info_send@11725(6), 
  3620 ;;  i               1    7[COMMON] volatile unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      unsigned char 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3633 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3634 ;;Total ram usage:        6 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 1
  3637 ;; This function calls:
  3638 ;;		_tx_wait
  3639 ;; This function is called by:
  3640 ;;		_user_data_send
  3641 ;;		_motor
  3642 ;;		_PCLS_info_send
  3643 ;;		_servo
  3644 ;;		_set_laser
  3645 ;;		_shoot_laser
  3646 ;;		_transmit_shield_code
  3647 ;;		_request_repair
  3648 ;;		_transmit_repair
  3649 ;;		_custom_laser
  3650 ;;		_surface_exploration
  3651 ;;		_ore_type
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655     033B                     _UART_send:	
  3656                           ;psect for function _UART_send
  3657                           
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _UART_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3661                           ;UART_send@message stored from wreg
  3662     033B  00F6               	movwf	UART_send@message
  3663     033C                     l1574:
  3664                           
  3665                           ;./Commands.h: 62: ;./Commands.h: 63:     BAUD1CONbits.BRG16 = 1;;./Commands.h: 64:     
      +                          SP1BRGLbits.SP1BRGL = 0x44;;./Commands.h: 66:     RC6PPS = 0x10;
  3666     033C  01F7               	clrf	UART_send@i	;volatile
  3667     033D  2B55               	goto	l1586
  3668     033E                     l1576:
  3669                           
  3670                           ;./Commands.h: 67: };./Commands.h: 68: 
  3671     033E  3182  225E  3183   	fcall	_tx_wait
  3672     0341  3A00               	xorlw	0
  3673     0342  1D03               	skipz
  3674     0343  2B45               	goto	u971
  3675     0344  2B46               	goto	u970
  3676     0345                     u971:
  3677     0345  2B48               	goto	l1582
  3678     0346                     u970:
  3679     0346                     l1578:
  3680                           
  3681                           ;./Commands.h: 69: void PCLS_info_send();./Commands.h: 70: {
  3682     0346  3000               	movlw	0
  3683     0347  2B63               	goto	l98
  3684     0348                     l1582:
  3685                           
  3686                           ;./Commands.h: 72: }
  3687     0348  0877               	movf	UART_send@i,w
  3688     0349  0776               	addwf	UART_send@message,w
  3689     034A  00F4               	movwf	??_UART_send
  3690     034B  0874               	movf	??_UART_send,w
  3691     034C  0086               	movwf	6
  3692     034D  0187               	clrf	7
  3693     034E  0801               	movf	1,w
  3694     034F  0022               	movlb	2	; select bank2
  3695     0350  009A               	movwf	26	;volatile
  3696     0351                     l1584:
  3697                           
  3698                           ;./Commands.h: 73: 
  3699     0351  3001               	movlw	1
  3700     0352  00F4               	movwf	??_UART_send
  3701     0353  0874               	movf	??_UART_send,w
  3702     0354  07F7               	addwf	UART_send@i,f	;volatile
  3703     0355                     l1586:
  3704     0355  0877               	movf	UART_send@i,w	;volatile
  3705     0356  00F4               	movwf	??_UART_send
  3706     0357  01F5               	clrf	??_UART_send+1
  3707     0358  0873               	movf	UART_send@size+1,w
  3708     0359  0275               	subwf	??_UART_send+1,w
  3709     035A  1D03               	skipz
  3710     035B  2B5E               	goto	u985
  3711     035C  0872               	movf	UART_send@size,w
  3712     035D  0274               	subwf	??_UART_send,w
  3713     035E                     u985:
  3714     035E  1C03               	skipc
  3715     035F  2B61               	goto	u981
  3716     0360  2B62               	goto	u980
  3717     0361                     u981:
  3718     0361  2B3E               	goto	l1576
  3719     0362                     u980:
  3720     0362                     l1588:
  3721                           
  3722                           ;./Commands.h: 75: {
  3723     0362  3001               	movlw	1
  3724     0363                     l98:
  3725     0363  0008               	return
  3726     0364                     __end_of_UART_send:
  3727                           
  3728                           	psect	text11
  3729     025E                     __ptext11:	
  3730 ;; *************** function _tx_wait *****************
  3731 ;; Defined at:
  3732 ;;		line 36 in file "./Commands.h"
  3733 ;; Parameters:    Size  Location     Type
  3734 ;;		None
  3735 ;; Auto vars:     Size  Location     Type
  3736 ;;  count           2    0[COMMON] volatile unsigned int 
  3737 ;; Return value:  Size  Location     Type
  3738 ;;                  1    wreg      unsigned char 
  3739 ;; Registers used:
  3740 ;;		wreg, status,2, status,0
  3741 ;; Tracked objects:
  3742 ;;		On entry : 0/0
  3743 ;;		On exit  : 0/0
  3744 ;;		Unchanged: 0/0
  3745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;Total ram usage:        2 bytes
  3751 ;; Hardware stack levels used: 1
  3752 ;; This function calls:
  3753 ;;		Nothing
  3754 ;; This function is called by:
  3755 ;;		_UART_send
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759     025E                     _tx_wait:	
  3760                           ;psect for function _tx_wait
  3761                           
  3762     025E                     l1538:	
  3763                           ;incstack = 0
  3764                           ; Regs used in _tx_wait: [wreg+status,2+status,0]
  3765                           
  3766                           
  3767                           ;./Commands.h: 38: ;./Commands.h: 39:     for (i=0; i < size; i++)
  3768     025E  30E8               	movlw	232
  3769     025F  00F0               	movwf	tx_wait@count	;volatile
  3770     0260  3003               	movlw	3
  3771     0261  00F1               	movwf	tx_wait@count+1	;volatile
  3772     0262                     l1540:
  3773     0262  0870               	movf	tx_wait@count,w	;volatile
  3774     0263  0471               	iorwf	tx_wait@count+1,w	;volatile
  3775     0264  1D03               	btfss	3,2
  3776     0265  2A67               	goto	u931
  3777     0266  2A68               	goto	u930
  3778     0267                     u931:
  3779     0267  2A69               	goto	l83
  3780     0268                     u930:
  3781     0268  2A75               	goto	l1552
  3782     0269                     l83:
  3783                           
  3784                           ;./Commands.h: 40:     {;./Commands.h: 41:         if(!tx_wait())
  3785     0269  002E               	movlb	14	; select bank14
  3786     026A  1E0F               	btfss	15,4	;volatile
  3787     026B  2A6D               	goto	u941
  3788     026C  2A6E               	goto	u940
  3789     026D                     u941:
  3790     026D  2A70               	goto	l1548
  3791     026E                     u940:
  3792     026E                     l1544:
  3793                           
  3794                           ;./Commands.h: 42:         {;./Commands.h: 43:             return 0;
  3795     026E  3001               	movlw	1
  3796     026F  2A76               	goto	l86
  3797     0270                     l1548:
  3798                           
  3799                           ;./Commands.h: 45:         TXREG = message[i];
  3800     0270  3001               	movlw	1
  3801     0271  02F0               	subwf	tx_wait@count,f	;volatile
  3802     0272  3000               	movlw	0
  3803     0273  3BF1               	subwfb	tx_wait@count+1,f	;volatile
  3804     0274  2A62               	goto	l1540
  3805     0275                     l1552:
  3806                           
  3807                           ;./Commands.h: 46:     }
  3808     0275  3000               	movlw	0
  3809     0276                     l86:
  3810     0276  0008               	return
  3811     0277                     __end_of_tx_wait:
  3812                           
  3813                           	psect	text12
  3814     023A                     __ptext12:	
  3815 ;; *************** function _abs *****************
  3816 ;; Defined at:
  3817 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  a               2    0[COMMON] int 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  2    0[COMMON] int 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3831 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3834 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;Total ram usage:        4 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_Vdrive
  3841 ;; This function uses a non-reentrant model
  3842 ;;
  3843                           
  3844     023A                     _abs:	
  3845                           ;psect for function _abs
  3846                           
  3847     023A                     l1714:	
  3848                           ;incstack = 0
  3849                           ; Regs used in _abs: [wreg+status,2+status,0]
  3850                           
  3851     023A  1BF1               	btfsc	abs@a+1,7
  3852     023B  2A3D               	goto	u1201
  3853     023C  2A3E               	goto	u1200
  3854     023D                     u1201:
  3855     023D  2A3F               	goto	l1718
  3856     023E                     u1200:
  3857     023E                     l1716:
  3858     023E  2A4A               	goto	l948
  3859     023F                     l1718:
  3860     023F  0970               	comf	abs@a,w
  3861     0240  00F2               	movwf	??_abs
  3862     0241  0971               	comf	abs@a+1,w
  3863     0242  00F3               	movwf	??_abs+1
  3864     0243  0AF2               	incf	??_abs,f
  3865     0244  1903               	skipnz
  3866     0245  0AF3               	incf	??_abs+1,f
  3867     0246  0872               	movf	??_abs,w
  3868     0247  00F0               	movwf	?_abs
  3869     0248  0873               	movf	??_abs+1,w
  3870     0249  00F1               	movwf	?_abs+1
  3871     024A                     l948:
  3872     024A  0008               	return
  3873     024B                     __end_of_abs:
  3874                           
  3875                           	psect	text13
  3876     02AC                     __ptext13:	
  3877 ;; *************** function ___wmul *****************
  3878 ;; Defined at:
  3879 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3882 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;  product         2    4[BANK0 ] unsigned int 
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  2    0[BANK0 ] unsigned int 
  3887 ;; Registers used:
  3888 ;;		wreg, status,2, status,0
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3897 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3898 ;;Total ram usage:        6 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_Vdrive
  3904 ;;		_drive
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908     02AC                     ___wmul:	
  3909                           ;psect for function ___wmul
  3910                           
  3911     02AC                     l1722:	
  3912                           ;incstack = 0
  3913                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3914                           
  3915     02AC  0020               	movlb	0	; select bank0
  3916     02AD  01A4               	clrf	___wmul@product
  3917     02AE  01A5               	clrf	___wmul@product+1
  3918     02AF                     l1724:
  3919     02AF  1C20               	btfss	___wmul@multiplier,0
  3920     02B0  2AB2               	goto	u1211
  3921     02B1  2AB3               	goto	u1210
  3922     02B2                     u1211:
  3923     02B2  2AB7               	goto	l485
  3924     02B3                     u1210:
  3925     02B3                     l1726:
  3926     02B3  0822               	movf	___wmul@multiplicand,w
  3927     02B4  07A4               	addwf	___wmul@product,f
  3928     02B5  0823               	movf	___wmul@multiplicand+1,w
  3929     02B6  3DA5               	addwfc	___wmul@product+1,f
  3930     02B7                     l485:
  3931     02B7  3001               	movlw	1
  3932     02B8                     u1225:
  3933     02B8  35A2               	lslf	___wmul@multiplicand,f
  3934     02B9  0DA3               	rlf	___wmul@multiplicand+1,f
  3935     02BA  0B89               	decfsz	9,f
  3936     02BB  2AB8               	goto	u1225
  3937     02BC                     l1728:
  3938     02BC  3001               	movlw	1
  3939     02BD                     u1235:
  3940     02BD  36A1               	lsrf	___wmul@multiplier+1,f
  3941     02BE  0CA0               	rrf	___wmul@multiplier,f
  3942     02BF  0B89               	decfsz	9,f
  3943     02C0  2ABD               	goto	u1235
  3944     02C1                     l1730:
  3945     02C1  0820               	movf	___wmul@multiplier,w
  3946     02C2  0421               	iorwf	___wmul@multiplier+1,w
  3947     02C3  1D03               	btfss	3,2
  3948     02C4  2AC6               	goto	u1241
  3949     02C5  2AC7               	goto	u1240
  3950     02C6                     u1241:
  3951     02C6  2AAF               	goto	l1724
  3952     02C7                     u1240:
  3953     02C7                     l1732:
  3954     02C7  0825               	movf	___wmul@product+1,w
  3955     02C8  00A1               	movwf	?___wmul+1
  3956     02C9  0824               	movf	___wmul@product,w
  3957     02CA  00A0               	movwf	?___wmul
  3958     02CB                     l487:
  3959     02CB  0008               	return
  3960     02CC                     __end_of___wmul:
  3961                           
  3962                           	psect	text14
  3963     046B                     __ptext14:	
  3964 ;; *************** function ___awdiv *****************
  3965 ;; Defined at:
  3966 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  divisor         2    4[COMMON] int 
  3969 ;;  dividend        2    6[COMMON] int 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  quotient        2   11[COMMON] int 
  3972 ;;  sign            1   10[COMMON] unsigned char 
  3973 ;;  counter         1    9[COMMON] unsigned char 
  3974 ;; Return value:  Size  Location     Type
  3975 ;;                  2    4[COMMON] int 
  3976 ;; Registers used:
  3977 ;;		wreg, status,2, status,0
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3984 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;Total ram usage:        9 bytes
  3988 ;; Hardware stack levels used: 1
  3989 ;; This function calls:
  3990 ;;		Nothing
  3991 ;; This function is called by:
  3992 ;;		_Vdrive
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996     046B                     ___awdiv:	
  3997                           ;psect for function ___awdiv
  3998                           
  3999     046B                     l1736:	
  4000                           ;incstack = 0
  4001                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4002                           
  4003     046B  01FA               	clrf	___awdiv@sign
  4004     046C                     l1738:
  4005     046C  1FF5               	btfss	___awdiv@divisor+1,7
  4006     046D  2C6F               	goto	u1251
  4007     046E  2C70               	goto	u1250
  4008     046F                     u1251:
  4009     046F  2C77               	goto	l1744
  4010     0470                     u1250:
  4011     0470                     l1740:
  4012     0470  09F4               	comf	___awdiv@divisor,f
  4013     0471  09F5               	comf	___awdiv@divisor+1,f
  4014     0472  0AF4               	incf	___awdiv@divisor,f
  4015     0473  1903               	skipnz
  4016     0474  0AF5               	incf	___awdiv@divisor+1,f
  4017     0475                     l1742:
  4018     0475  01FA               	clrf	___awdiv@sign
  4019     0476  0AFA               	incf	___awdiv@sign,f
  4020     0477                     l1744:
  4021     0477  1FF7               	btfss	___awdiv@dividend+1,7
  4022     0478  2C7A               	goto	u1261
  4023     0479  2C7B               	goto	u1260
  4024     047A                     u1261:
  4025     047A  2C84               	goto	l1750
  4026     047B                     u1260:
  4027     047B                     l1746:
  4028     047B  09F6               	comf	___awdiv@dividend,f
  4029     047C  09F7               	comf	___awdiv@dividend+1,f
  4030     047D  0AF6               	incf	___awdiv@dividend,f
  4031     047E  1903               	skipnz
  4032     047F  0AF7               	incf	___awdiv@dividend+1,f
  4033     0480                     l1748:
  4034     0480  3001               	movlw	1
  4035     0481  00F8               	movwf	??___awdiv
  4036     0482  0878               	movf	??___awdiv,w
  4037     0483  06FA               	xorwf	___awdiv@sign,f
  4038     0484                     l1750:
  4039     0484  01FB               	clrf	___awdiv@quotient
  4040     0485  01FC               	clrf	___awdiv@quotient+1
  4041     0486                     l1752:
  4042     0486  0874               	movf	___awdiv@divisor,w
  4043     0487  0475               	iorwf	___awdiv@divisor+1,w
  4044     0488  1903               	btfsc	3,2
  4045     0489  2C8B               	goto	u1271
  4046     048A  2C8C               	goto	u1270
  4047     048B                     u1271:
  4048     048B  2CBB               	goto	l1772
  4049     048C                     u1270:
  4050     048C                     l1754:
  4051     048C  01F9               	clrf	___awdiv@counter
  4052     048D  0AF9               	incf	___awdiv@counter,f
  4053     048E  2C98               	goto	l1760
  4054     048F                     l1756:
  4055     048F  3001               	movlw	1
  4056     0490                     u1285:
  4057     0490  35F4               	lslf	___awdiv@divisor,f
  4058     0491  0DF5               	rlf	___awdiv@divisor+1,f
  4059     0492  0B89               	decfsz	9,f
  4060     0493  2C90               	goto	u1285
  4061     0494                     l1758:
  4062     0494  3001               	movlw	1
  4063     0495  00F8               	movwf	??___awdiv
  4064     0496  0878               	movf	??___awdiv,w
  4065     0497  07F9               	addwf	___awdiv@counter,f
  4066     0498                     l1760:
  4067     0498  1FF5               	btfss	___awdiv@divisor+1,7
  4068     0499  2C9B               	goto	u1291
  4069     049A  2C9C               	goto	u1290
  4070     049B                     u1291:
  4071     049B  2C8F               	goto	l1756
  4072     049C                     u1290:
  4073     049C                     l1762:
  4074     049C  3001               	movlw	1
  4075     049D                     u1305:
  4076     049D  35FB               	lslf	___awdiv@quotient,f
  4077     049E  0DFC               	rlf	___awdiv@quotient+1,f
  4078     049F  0B89               	decfsz	9,f
  4079     04A0  2C9D               	goto	u1305
  4080     04A1  0875               	movf	___awdiv@divisor+1,w
  4081     04A2  0277               	subwf	___awdiv@dividend+1,w
  4082     04A3  1D03               	skipz
  4083     04A4  2CA7               	goto	u1315
  4084     04A5  0874               	movf	___awdiv@divisor,w
  4085     04A6  0276               	subwf	___awdiv@dividend,w
  4086     04A7                     u1315:
  4087     04A7  1C03               	skipc
  4088     04A8  2CAA               	goto	u1311
  4089     04A9  2CAB               	goto	u1310
  4090     04AA                     u1311:
  4091     04AA  2CB0               	goto	l1768
  4092     04AB                     u1310:
  4093     04AB                     l1764:
  4094     04AB  0874               	movf	___awdiv@divisor,w
  4095     04AC  02F6               	subwf	___awdiv@dividend,f
  4096     04AD  0875               	movf	___awdiv@divisor+1,w
  4097     04AE  3BF7               	subwfb	___awdiv@dividend+1,f
  4098     04AF                     l1766:
  4099     04AF  147B               	bsf	___awdiv@quotient,0
  4100     04B0                     l1768:
  4101     04B0  3001               	movlw	1
  4102     04B1                     u1325:
  4103     04B1  36F5               	lsrf	___awdiv@divisor+1,f
  4104     04B2  0CF4               	rrf	___awdiv@divisor,f
  4105     04B3  0B89               	decfsz	9,f
  4106     04B4  2CB1               	goto	u1325
  4107     04B5                     l1770:
  4108     04B5  3001               	movlw	1
  4109     04B6  02F9               	subwf	___awdiv@counter,f
  4110     04B7  1D03               	btfss	3,2
  4111     04B8  2CBA               	goto	u1331
  4112     04B9  2CBB               	goto	u1330
  4113     04BA                     u1331:
  4114     04BA  2C9C               	goto	l1762
  4115     04BB                     u1330:
  4116     04BB                     l1772:
  4117     04BB  087A               	movf	___awdiv@sign,w
  4118     04BC  1903               	btfsc	3,2
  4119     04BD  2CBF               	goto	u1341
  4120     04BE  2CC0               	goto	u1340
  4121     04BF                     u1341:
  4122     04BF  2CC5               	goto	l1776
  4123     04C0                     u1340:
  4124     04C0                     l1774:
  4125     04C0  09FB               	comf	___awdiv@quotient,f
  4126     04C1  09FC               	comf	___awdiv@quotient+1,f
  4127     04C2  0AFB               	incf	___awdiv@quotient,f
  4128     04C3  1903               	skipnz
  4129     04C4  0AFC               	incf	___awdiv@quotient+1,f
  4130     04C5                     l1776:
  4131     04C5  087C               	movf	___awdiv@quotient+1,w
  4132     04C6  00F5               	movwf	?___awdiv+1
  4133     04C7  087B               	movf	___awdiv@quotient,w
  4134     04C8  00F4               	movwf	?___awdiv
  4135     04C9                     l638:
  4136     04C9  0008               	return
  4137     04CA                     __end_of___awdiv:
  4138                           
  4139                           	psect	text15
  4140     022A                     __ptext15:	
  4141 ;; *************** function _UART_init *****************
  4142 ;; Defined at:
  4143 ;;		line 78 in file "./Commands.h"
  4144 ;; Parameters:    Size  Location     Type
  4145 ;;		None
  4146 ;; Auto vars:     Size  Location     Type
  4147 ;;		None
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  1    wreg      void 
  4150 ;; Registers used:
  4151 ;;		wreg
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;Total ram usage:        0 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; This function calls:
  4164 ;;		Nothing
  4165 ;; This function is called by:
  4166 ;;		_main
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170     022A                     _UART_init:	
  4171                           ;psect for function _UART_init
  4172                           
  4173     022A                     l1832:	
  4174                           ;incstack = 0
  4175                           ; Regs used in _UART_init: [wreg]
  4176                           
  4177                           
  4178                           ;./Commands.h: 80:         if (rx_wait())
  4179     022A  003E               	movlb	30	; select bank30
  4180     022B  134E               	bcf	78,6	;volatile
  4181                           
  4182                           ;./Commands.h: 81:         {
  4183     022C  13CE               	bcf	78,7	;volatile
  4184                           
  4185                           ;./Commands.h: 83:         }
  4186     022D  0022               	movlb	2	; select bank2
  4187     022E  121E               	bcf	30,4	;volatile
  4188                           
  4189                           ;./Commands.h: 84:         else
  4190     022F  169E               	bsf	30,5	;volatile
  4191                           
  4192                           ;./Commands.h: 85:         {
  4193     0230  179D               	bsf	29,7	;volatile
  4194                           
  4195                           ;./Commands.h: 86:             return 0;
  4196     0231  161D               	bsf	29,4	;volatile
  4197                           
  4198                           ;./Commands.h: 88:     }
  4199     0232  151E               	bsf	30,2	;volatile
  4200                           
  4201                           ;./Commands.h: 90:     teamID = r[6];
  4202     0233  159F               	bsf	31,3	;volatile
  4203     0234                     l1834:
  4204                           
  4205                           ;./Commands.h: 91:     playerID = r[7];
  4206     0234  3044               	movlw	68
  4207     0235  009B               	movwf	27	;volatile
  4208                           
  4209                           ;./Commands.h: 93:     health += r[9] << 8;
  4210     0236  3010               	movlw	16
  4211     0237  003E               	movlb	30	; select bank30
  4212     0238  00A6               	movwf	38	;volatile
  4213     0239                     l102:
  4214     0239  0008               	return
  4215     023A                     __end_of_UART_init:
  4216                           
  4217                           	psect	text16
  4218     0200                     __ptext16:	
  4219 ;; *************** function _IR_init *****************
  4220 ;; Defined at:
  4221 ;;		line 11 in file "./IR.h"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;		None
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;		None
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  1    wreg      void 
  4228 ;; Registers used:
  4229 ;;		wreg, status,2, status,0, pclath, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4239 ;;Total ram usage:        0 bytes
  4240 ;; Hardware stack levels used: 1
  4241 ;; Hardware stack levels required when called: 1
  4242 ;; This function calls:
  4243 ;;		_read_adc
  4244 ;; This function is called by:
  4245 ;;		_main
  4246 ;; This function uses a non-reentrant model
  4247 ;;
  4248                           
  4249     0200                     _IR_init:	
  4250                           ;psect for function _IR_init
  4251                           
  4252     0200                     l1916:	
  4253                           ;incstack = 0
  4254                           ; Regs used in _IR_init: [wreg+status,2+status,0+pclath+cstack]
  4255                           
  4256                           
  4257                           ;./IR.h: 13:     volatile unsigned int ADC_val;
  4258     0200  300C               	movlw	12
  4259     0201  3182  22EC  3182   	fcall	_read_adc
  4260     0204  0870               	movf	?_read_adc,w
  4261     0205  3E80               	addlw	128
  4262     0206  0020               	movlb	0	; select bank0
  4263     0207  00E1               	movwf	_IR_base	;volatile
  4264     0208  30FF               	movlw	255
  4265     0209  3D71               	addwfc	?_read_adc+1,w
  4266     020A  00E2               	movwf	_IR_base+1	;volatile
  4267     020B                     l311:
  4268     020B  0008               	return
  4269     020C                     __end_of_IR_init:
  4270                           
  4271                           	psect	text17
  4272     0313                     __ptext17:	
  4273 ;; *************** function _IR *****************
  4274 ;; Defined at:
  4275 ;;		line 18 in file "./IR.h"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;  ADC_val         2    9[COMMON] volatile unsigned int 
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		wreg, pclath, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4292 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4293 ;;Total ram usage:        3 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 1
  4296 ;; This function calls:
  4297 ;;		_read_adc
  4298 ;; This function is called by:
  4299 ;;		_main
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303     0313                     _IR:	
  4304                           ;psect for function _IR
  4305                           
  4306     0313                     l1918:	
  4307                           ;incstack = 0
  4308                           ; Regs used in _IR: [wreg+pclath+cstack]
  4309                           
  4310                           
  4311                           ;./IR.h: 20:         LATAbits.LATA1 = 1;;./IR.h: 21:     }
  4312     0313  0020               	movlb	0	; select bank0
  4313     0314  1793               	bsf	19,7	;volatile
  4314     0315                     l1920:
  4315                           
  4316                           ;./IR.h: 23:     {
  4317     0315  300C               	movlw	12
  4318     0316  3182  22EC  3183   	fcall	_read_adc
  4319     0319  0871               	movf	?_read_adc+1,w
  4320     031A  00FA               	movwf	IR@ADC_val+1	;volatile
  4321     031B  0870               	movf	?_read_adc,w
  4322     031C  00F9               	movwf	IR@ADC_val	;volatile
  4323     031D                     l1922:
  4324                           
  4325                           ;./IR.h: 25:         LATAbits.LATA1 = 0;
  4326     031D  087A               	movf	IR@ADC_val+1,w	;volatile
  4327     031E  0020               	movlb	0	; select bank0
  4328     031F  0262               	subwf	_IR_base+1,w	;volatile
  4329     0320  1D03               	skipz
  4330     0321  2B24               	goto	u1585
  4331     0322  0879               	movf	IR@ADC_val,w	;volatile
  4332     0323  0261               	subwf	_IR_base,w	;volatile
  4333     0324                     u1585:
  4334     0324  1803               	skipnc
  4335     0325  2B27               	goto	u1581
  4336     0326  2B28               	goto	u1580
  4337     0327                     u1581:
  4338     0327  2B2A               	goto	l1926
  4339     0328                     u1580:
  4340     0328                     l1924:
  4341                           
  4342                           ;./IR.h: 26:         _delay((unsigned long)((100)*(400000/4000.0)));;./IR.h: 27:     }
  4343     0328  1496               	bsf	22,1	;volatile
  4344                           
  4345                           ;./IR.h: 28: }
  4346     0329  2B3A               	goto	l316
  4347     032A                     l1926:
  4348     032A  300D               	movlw	13
  4349     032B  00F8               	movwf	??_IR
  4350     032C  30FC               	movlw	252
  4351     032D                     u1867:
  4352     032D  0B89               	decfsz	9,f
  4353     032E  2B2D               	goto	u1867
  4354     032F  0BF8               	decfsz	??_IR,f
  4355     0330  2B2D               	goto	u1867
  4356     0331                     l1928:
  4357     0331  0020               	movlb	0	; select bank0
  4358     0332  1096               	bcf	22,1	;volatile
  4359     0333  300D               	movlw	13
  4360     0334  00F8               	movwf	??_IR
  4361     0335  30FC               	movlw	252
  4362     0336                     u1877:
  4363     0336  0B89               	decfsz	9,f
  4364     0337  2B36               	goto	u1877
  4365     0338  0BF8               	decfsz	??_IR,f
  4366     0339  2B36               	goto	u1877
  4367     033A                     l316:
  4368     033A  0008               	return
  4369     033B                     __end_of_IR:
  4370                           
  4371                           	psect	text18
  4372     02EC                     __ptext18:	
  4373 ;; *************** function _read_adc *****************
  4374 ;; Defined at:
  4375 ;;		line 32 in file "./Line Follower.h"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  sensor          1    wreg     unsigned char 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  sensor          1    5[COMMON] unsigned char 
  4380 ;;  ADC_val         2    6[COMMON] volatile unsigned int 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  2    0[COMMON] int 
  4383 ;; Registers used:
  4384 ;;		wreg
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;Total ram usage:        8 bytes
  4395 ;; Hardware stack levels used: 1
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_line_follower
  4400 ;;		_IR_init
  4401 ;;		_IR
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406     02EC                     _read_adc:	
  4407                           ;psect for function _read_adc
  4408                           
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in _read_adc: [wreg]
  4412                           ;read_adc@sensor stored from wreg
  4413     02EC  00F5               	movwf	read_adc@sensor
  4414     02ED                     l1824:
  4415                           
  4416                           ;./Line Follower.h: 32:  while(ADCON0bits.ADGO){};./Line Follower.h: 33:     ADC_val = A
      +                          DRESH << 8;;./Line Follower.h: 34:     ADC_val += ADRESL;;./Line Follower.h: 36: }
  4417     02ED  0875               	movf	read_adc@sensor,w
  4418     02EE  0021               	movlb	1	; select bank1
  4419     02EF  009E               	movwf	30	;volatile
  4420     02F0                     l1826:
  4421                           
  4422                           ;./Line Follower.h: 37: 
  4423     02F0  1413               	bsf	19,0	;volatile
  4424                           
  4425                           ;./Line Follower.h: 38: void line_follower()
  4426     02F1  300D               	movlw	13
  4427     02F2  00F2               	movwf	??_read_adc
  4428     02F3  30FC               	movlw	252
  4429     02F4                     u1887:
  4430     02F4  0B89               	decfsz	9,f
  4431     02F5  2AF4               	goto	u1887
  4432     02F6  0BF2               	decfsz	??_read_adc,f
  4433     02F7  2AF4               	goto	u1887
  4434     02F8                     l285:	
  4435                           ;./Line Follower.h: 40:     volatile unsigned int l_val, m_val, r_val;
  4436                           
  4437     02F8  0021               	movlb	1	; select bank1
  4438     02F9  1813               	btfsc	19,0	;volatile
  4439     02FA  2AFC               	goto	u1461
  4440     02FB  2AFD               	goto	u1460
  4441     02FC                     u1461:
  4442     02FC  2AF8               	goto	l285
  4443     02FD                     u1460:
  4444     02FD                     l1828:
  4445                           
  4446                           ;./Line Follower.h: 41: 
  4447     02FD  080D               	movf	13,w	;volatile
  4448     02FE  00F2               	movwf	??_read_adc
  4449     02FF  01F3               	clrf	??_read_adc+1
  4450     0300  0872               	movf	??_read_adc,w
  4451     0301  00F3               	movwf	??_read_adc+1
  4452     0302  01F2               	clrf	??_read_adc
  4453     0303  0872               	movf	??_read_adc,w
  4454     0304  00F6               	movwf	read_adc@ADC_val	;volatile
  4455     0305  0873               	movf	??_read_adc+1,w
  4456     0306  00F7               	movwf	read_adc@ADC_val+1	;volatile
  4457                           
  4458                           ;./Line Follower.h: 42:     TRISAbits.TRISA0 = 0;
  4459     0307  080C               	movf	12,w	;volatile
  4460     0308  00F2               	movwf	??_read_adc
  4461     0309  01F3               	clrf	??_read_adc+1
  4462     030A  0872               	movf	??_read_adc,w
  4463     030B  07F6               	addwf	read_adc@ADC_val,f	;volatile
  4464     030C  0873               	movf	??_read_adc+1,w
  4465     030D  3DF7               	addwfc	read_adc@ADC_val+1,f	;volatile
  4466                           
  4467                           ;./Line Follower.h: 43:     TRISAbits.TRISA1 = 0;
  4468     030E  0877               	movf	read_adc@ADC_val+1,w	;volatile
  4469     030F  00F1               	movwf	?_read_adc+1
  4470     0310  0876               	movf	read_adc@ADC_val,w	;volatile
  4471     0311  00F0               	movwf	?_read_adc
  4472     0312                     l288:
  4473     0312  0008               	return
  4474     0313                     __end_of_read_adc:
  4475                           
  4476                           	psect	text19
  4477     021A                     __ptext19:	
  4478 ;; *************** function _ADC_init *****************
  4479 ;; Defined at:
  4480 ;;		line 18 in file "./Line Follower.h"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; This function calls:
  4501 ;;		Nothing
  4502 ;; This function is called by:
  4503 ;;		_main
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507     021A                     _ADC_init:	
  4508                           ;psect for function _ADC_init
  4509                           
  4510     021A                     l1876:	
  4511                           ;incstack = 0
  4512                           ; Regs used in _ADC_init: [wreg+status,2]
  4513                           
  4514                           
  4515                           ;./Line Follower.h: 20: 
  4516     021A  0020               	movlb	0	; select bank0
  4517     021B  1091               	bcf	17,1	;volatile
  4518                           
  4519                           ;./Line Follower.h: 21:     ADPCH = 0b1011;
  4520     021C  003E               	movlb	30	; select bank30
  4521     021D  1438               	bsf	56,0	;volatile
  4522     021E                     l1878:
  4523                           
  4524                           ;./Line Follower.h: 23: 
  4525     021E  3091               	movlw	145
  4526     021F  0021               	movlb	1	; select bank1
  4527     0220  0093               	movwf	19	;volatile
  4528                           
  4529                           ;./Line Follower.h: 24: int read_adc(char sensor)
  4530     0221  30FF               	movlw	255
  4531     0222  0098               	movwf	24	;volatile
  4532     0223                     l1880:
  4533                           
  4534                           ;./Line Follower.h: 25: {
  4535     0223  019A               	clrf	26	;volatile
  4536     0224                     l1882:
  4537                           
  4538                           ;./Line Follower.h: 26:  volatile unsigned int ADC_val;
  4539     0224  019C               	clrf	28	;volatile
  4540                           
  4541                           ;./Line Follower.h: 27: 
  4542     0225  303F               	movlw	63
  4543     0226  009D               	movwf	29	;volatile
  4544                           
  4545                           ;./Line Follower.h: 29:  ADCON0bits.ADGO = 1;
  4546     0227  300B               	movlw	11
  4547     0228  009E               	movwf	30	;volatile
  4548     0229                     l282:
  4549     0229  0008               	return
  4550     022A                     __end_of_ADC_init:
  4551     007E                     btemp	set	126	;btemp
  4552     007E                     wtemp0	set	126
  4553                           
  4554                           	psect	config
  4555                           
  4556                           ;Config register CONFIG1 @ 0x8007
  4557                           ;	External Oscillator mode selection bits
  4558                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  4559                           ;	Power-up default value for COSC bits
  4560                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  4561                           ;	Clock Out Enable bit
  4562                           ;	CLKOUTEN = ON, CLKOUT function is enabled; FOSC/4 clock appears at OSC2
  4563                           ;	Clock Switch Enable bit
  4564                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4565                           ;	Fail-Safe Clock Monitor Enable bit
  4566                           ;	FCMEN = ON, FSCM timer enabled
  4567     8007                     	org	32775
  4568     8007  3E8F               	dw	16015
  4569                           
  4570                           ;Config register CONFIG3 @ 0x8009
  4571                           ;	WDT Period Select bits
  4572                           ;	WDTCPS = 0x1F, unprogrammed default
  4573                           ;	WDT operating mode
  4574                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  4575                           ;	WDT Window Select bits
  4576                           ;	WDTCWS = 0x7, unprogrammed default
  4577                           ;	WDT input clock selector
  4578                           ;	WDTCCS = 0x7, unprogrammed default
  4579     8009                     	org	32777
  4580     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        46
    BSS         88
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      79
    BANK1            80      0      71
    BANK2            80      0      20
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send@message	PTR volatile unsigned char  size(1) Largest target is 10
		 -> custom_laser@11775(COMMON[6]), motor@11745(BANK0[10]), ore_type@11787(COMMON[7]), PCLS_info_send@11725(COMMON[6]), 
		 -> request_repair@11766(COMMON[6]), servo@11752(COMMON[10]), set_laser@11756(COMMON[7]), shoot_laser@11760(COMMON[7]), 
		 -> surface_exploration@11783(COMMON[10]), transmit_repair@11769(COMMON[6]), transmit_shield_code@11763(COMMON[6]), user_data_send@11733(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_line_follower
    _line_follower->_read_adc
    _user_data->_user_data_receive
    _user_data_send->_UART_send
    _user_data_receive->___lwdiv
    _Vdrive->___awdiv
    _motor->_UART_send
    _UART_send->_tx_wait
    ___wmul->___awdiv
    ___awdiv->_abs
    _IR_init->_read_adc
    _IR->_read_adc

Critical Paths under _main in BANK0

    _main->_drive
    _user_data->_user_data_receive
    _Vdrive->_motor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11242
                           _ADC_init
                                 _IR
                            _IR_init
                          _UART_init
                              _drive
                      _line_follower
                           _read_adc
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _line_follower                                        6     6      0     115
                                              8 COMMON     6     6      0
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _drive                                                8     8      0    8020
                                             28 BANK0      8     8      0
                             _Vdrive
                             ___wmul
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _user_data                                            1     1      0    2946
                                             11 COMMON     1     1      0
                  _user_data_receive
                     _user_data_send
 ---------------------------------------------------------------------------------
 (2) _user_data_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _user_data_receive                                   31    31      0    1369
                                              8 COMMON     3     3      0
                                              0 BANK0     28    28      0
                            ___lwdiv
                            _rx_wait
 ---------------------------------------------------------------------------------
 (3) _rx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Vdrive                                              12     8      4    4456
                                             11 BANK0     12     8      4
                            ___awdiv
                             ___wmul
                                _abs
                              _motor
 ---------------------------------------------------------------------------------
 (3) _motor                                               15    12      3    2110
                                              8 COMMON     4     1      3
                                              0 BANK0     11    11      0
                          _UART_send
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_send                                            6     4      2    1553
                                              2 COMMON     6     4      2
                            _tx_wait
 ---------------------------------------------------------------------------------
 (4) _tx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     370
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              4 COMMON     9     5      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_init                                              0     0      0      46
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _IR                                                   3     3      0      69
                                              8 COMMON     3     3      0
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             8     6      2      46
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _IR
     _read_adc
   _IR_init
     _read_adc
   _UART_init
   _drive
     _Vdrive
       ___awdiv
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
         _abs (ARG)
       _abs
       _motor
         _UART_send
           _tx_wait
         _abs (ARG)
     ___wmul
     _user_data
       _user_data_receive
         ___lwdiv
         _rx_wait
       _user_data_send
         _UART_send
   _line_follower
     _read_adc
   _read_adc
   _user_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      14       9       25.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B8      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B8      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Apr 05 00:31:45 2024

                        l83 0269                          l92 028F                          l86 0276  
                        l89 0282                          l98 0363                          _IR 0313  
              ___awdiv@sign 007A         ___wmul@multiplicand 0022   __end_of_user_data_receive 07CD  
                       ?_IR 0070                         l102 0239                         l132 02AB  
                       l301 050E                         l142 0787                         l150 025D  
                       l302 051E                         l311 020B                         l304 052F  
                       l305 0530                         l250 065C                         l306 0534  
                       l139 07CC                         l316 033A                         l236 0565  
                       l333 0469                         l158 0395                         l247 062E  
                       l255 040F                         l282 0229                         l291 04D0  
                       l285 02F8                         l294 04DE                         l288 0312  
                       l297 04EC                         l485 02B7                         l638 04C9  
                       l487 02CB                         l765 03D1                         l948 024A  
                       u930 0268                         u931 0267                         u940 026E  
                       u941 026D                         u950 0281                         u951 0280  
                       u960 0287                         u961 0286                         u970 0346  
                       u971 0345                         u980 0362                         u981 0361  
                       u990 039E                         u991 039D                         u985 035E  
                       _abs 023A                         _swA 0052                         _swB 0050  
                       _swC 004E                         _swD 004C                         wreg 0009  
                      ??_IR 0078                _BAUD1CONbits 011F                        ?_abs 0070  
                      l2100 0432                        l2110 044A                        l2102 0439  
                      l2120 045F                        l2104 0440                        l2112 0451  
                      l2122 0466                        l2114 0454                        l2106 0444  
                      l2108 0447                        l2118 045C                        l1600 03A6  
                      l1610 03C2                        l1602 03AA                        l2090 0416  
                      l1540 0262                        l1700 037D                        l1612 03C7  
                      l1604 03AE                        l1620 0290                        l2092 0419  
                      l1710 0386                        l1702 037F                        l1606 03BD  
                      l1614 03CD                        l1630 066A                        l1622 029E  
                      l2094 0420                        l2086 0410                        l1544 026E  
                      l1552 0275                        l1712 0388                        l1704 0380  
                      l1800 0598                        l1608 03C1                        l1640 0680  
                      l1632 0673                        l1624 065D                        l2096 042C  
                      l2088 0413                        l1730 02C1                        l1722 02AC  
                      l1714 023A                        l1538 025E                        l1706 0382  
                      l1810 05F4                        l1802 05A5                        l1562 0287  
                      l1570 028E                        l1650 06CA                        l1642 0695  
                      l1626 0660                        l1618 0290                        l2098 042F  
                      l1740 0470                        l1732 02C7                        l1724 02AF  
                      l1716 023E                        l1548 0270                        l1708 0384  
                      l1820 063F                        l1812 0619                        l1804 05B3  
                      l1556 0277                        l1660 0714                        l1652 06D1  
                      l1644 06A5                        l1636 0675                        l1628 0662  
                      l1900 0507                        l1750 0484                        l1742 0475  
                      l1726 02B3                        l1718 023F                        l1582 0348  
                      l1574 033C                        l1822 0642                        l1814 0627  
                      l1806 05D8                        l1566 0289                        l1558 027B  
                      l1670 0747                        l1662 071B                        l1654 06DB  
                      l1646 06AC                        l1638 067A                        l1910 051F  
                      l1902 0509                        l1824 02ED                        l1920 0315  
                      l1832 022A                        l1760 0498                        l1752 0486  
                      l1744 0477                        l1736 046B                        l1728 02BC  
                      l1584 0351                        l1576 033E                        l1816 062B  
                      l1808 05E6                        l1592 0396                        l1680 0775  
                      l1672 0758                        l1664 0725                        l1656 06DF  
                      l1648 06B6                        l1912 0529                        l1904 050D  
                      l1826 02F0                        l1922 031D                        l1834 0234  
                      l1770 04B5                        l1762 049C                        l1754 048C  
                      l1746 047B                        l1738 046C                        l1578 0346  
                      l1586 0355                        l1690 0366                        l1818 063B  
                      l1594 0398                        l1682 077E                        l1674 075F  
                      l1666 0736                        l1658 0704                        l1914 052D  
                      l1906 0518                        l1828 02FD                        l1924 0328  
                      l1916 0200                        l1764 04AB                        l1756 048F  
                      l1772 04BB                        l1748 0480                        l1588 0362  
                      l1692 0374                        l1596 039E                        l1684 0783  
                      l1676 0769                        l1668 073D                        l1780 024B  
                      l1908 051C                        l1926 032A                        l1918 0313  
                      l1774 04C0                        l1766 04AF                        l1758 0494  
                      l1694 0377                        l1790 0543                        l1598 03A1  
                      l1678 0772                        l1870 03E8                        l1862 03D2  
                      l1880 0223                        l1928 0331                        l1776 04C5  
                      l1768 04B0                        l1696 0379                        l1688 0366  
                      l1792 0551                        l1784 024E                        l1872 03F4  
                      l1864 03D5                        l1882 0224                        l1698 037B  
                      l1794 056A                        l1786 0256                        l1874 0404  
                      l1866 03DF                        l1890 04E2                        l1876 021A  
                      l1796 0577                        l1788 0535                        l1868 03E4  
                      l1892 04EA                        l1884 04CA                        l1878 021E  
                      l1798 058B                        l1894 04F0                        l1886 04D4  
                      l1896 04F8                        l1888 04DC                        l1898 0503  
                      u1010 03AE                        u1011 03AD                        u1100 072F  
                      u1005 03A2                        u1101 072D                        u1030 03BD  
                      u1110 0730                        u1031 03BC                        u1200 023E  
                      u1120 0751                        u1201 023D                        u1025 03AF  
                      u1121 074F                        u1210 02B3                        u1050 03CD  
                      u1130 0752                        u1211 02B2                        u1051 03CC  
                      u1035 03B9                        u1140 0772                        u1060 029A  
                      u1045 03C3                        u1141 0771                        u1310 04AB  
                      u1150 077E                        u1070 02AB                        u1311 04AA  
                      u1151 077D                        u1071 02AA                        u1240 02C7  
                      u1400 05A5                        u1160 07A2                        u1080 066A  
                      u1305 049D                        u1241 02C6                        u1225 02B8  
                      u1401 05A4                        u1161 07A0                        u1081 0669  
                      u1330 04BB                        u1250 0470                        u1410 05B3  
                      u1170 07A3                        u1090 0680                        u1331 04BA  
                      u1315 04A7                        u1251 046F                        u1235 02BD  
                      u1411 05B2                        u1091 067F                        u1340 04C0  
                      u1260 047B                        u1180 0370                        u1420 05E6  
                      u1341 04BF                        u1325 04B1                        u1261 047A  
                      u1421 05E5                        u1405 05A1                        u1270 048C  
                      u1190 0395                        u1430 05F4                        u1350 0256  
                      u1510 03DF                        u1271 048B                        u1191 0394  
                      u1431 05F3                        u1415 05AF                        u1351 0255  
                      u1511 03DE                        u1440 0627                        u1360 0543  
                      u1520 04D4                        u1441 0626                        u1425 05E2  
                      u1361 0542                        u1521 04D3                        u1290 049C  
                      u1450 063B                        u1370 0551                        u1530 04E2  
                      u1291 049B                        u1451 063A                        u1435 05F0  
                      u1371 0550                        u1531 04E1                        u1460 02FD  
                      u1380 056A                        u1540 04F0                        u1461 02FC  
                      u1285 0490                        u1445 0623                        u1381 0569  
                      u1365 053F                        u1541 04EF                        u1390 0577  
                      u1550 0503                        u1455 0637                        u1391 0576  
                      u1375 054D                        u1551 0502                        u1560 0518  
                      u1800 0439                        u1561 0517                        u1801 0438  
                      u1570 0529                        u1810 0440                        u1395 0573  
                      u1571 0528                        u1555 04FF                        u1811 043F  
                      u1580 0328                        u1820 0451                        u1581 0327  
                      u1565 0514                        u1821 0450                        u1830 045B  
                      u1575 0525                        u1831 045A                        u1840 0466  
                      u1585 0324                        u1841 0465                        u1790 0420  
                      u1791 041F                        u1857 0259                        u1867 032D  
                      u1877 0336                        u1887 02F4                        abs@a 0070  
                      _fast 0067                        _main 0410                        _lpin 006D  
                      _potA 004A                        _potB 0048                        _mpin 006C  
                      _rpin 006B                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        _slow 0065  
                      indf1 0001                        fsr1l 0006                        btemp 007E  
           __end_of_IR_init 020C                        start 0002            __end_of_ADC_init 022A  
                     ??_abs 0072   surface_exploration@F11782 0120                       _ADACQ 009D  
                     ?_main 0070                       _ADCLK 0098                       _ADPCH 009E  
                     _ADREF 009A             __end_of___awdiv 04CA                       _ADPRE 009C  
           ___awdiv@divisor 0074             __end_of___lwdiv 03D2             ___awdiv@counter 0079  
                     _RCREG 0119                       _TXREG 011A                       _drive 03D2  
                     _motor 0364                       _x_vec 00C5                       _y_vec 0044  
                     status 0003             __end_of_rx_wait 0290                       wtemp0 007E  
           __end_of_tx_wait 0277             __initialization 07CD                __end_of_main 046B  
                    ??_main 007E                      _ADCON0 0093                      ?_drive 0070  
                    _ADRESH 008D                      _ADRESL 008C                   ??_IR_init 0078  
          ___awdiv@dividend 0076                      ?_motor 0078                      _RC6PPS 0F26  
                    _Vdrive 0535                      ___wmul 02AC           __end_of_UART_init 023A  
                 ??___awdiv 0078           __end_of_UART_send 0364                      _health 0046  
                 ??___lwdiv 0074            __end_of_read_adc 0313                      _teamID 0060  
          ___awdiv@quotient 007B                      _joy_lx 0054                      _joy_ly 0056  
                    _joy_rx 005A                      _joy_ry 0058                      drive@x 003E  
                    drive@y 0040                   ?_ADC_init 0070                   ??_rx_wait 0070  
                 ??_tx_wait 0070                rx_wait@count 0070           shoot_laser@F11759 00B1  
                 IR@ADC_val 0079     __end_of__initialization 07FD              __pcstackCOMMON 0070  
        custom_laser@F11774 00BF                __pidataBANK0 020C                __pidataBANK1 02CC  
      request_repair@F11765 00CD               __end_of_drive 0410               __end_of_motor 0396  
                __end_of_IR 033B               _line_follower 04CA                  ??_ADC_init 0070  
                   ??_drive 003C                     ??_motor 007B                  __pbssBANK0 0044  
                __pbssBANK1 00A0                  __pbssBANK2 0120        PCLS_info_send@F11724 00DF  
                __pmaintext 0410                     ?_Vdrive 002B                     ?___wmul 0020  
            ?_line_follower 0070              ore_type@F11786 00AA              _user_data_send 0290  
                   _IR_base 0061                     _IR_init 0200                tx_wait@count 0070  
                 ?_read_adc 0070             Vdrive@right_dir 0032                 motor@F11744 00A0  
                   Vdrive@x 002D                     Vdrive@y 002B                     ___awdiv 046B  
                   ___lwdiv 0396                     __ptext1 04CA                     __ptext2 03D2  
                   __ptext3 024B                     __ptext4 0290                     __ptext5 065D  
                   __ptext6 0277                     __ptext7 0396                     __ptext8 0535  
                   __ptext9 0364             read_adc@ADC_val 0076      __end_of_user_data_send 02AC  
               servo@F11751 012A                     _rx_wait 0277                     clrloop0 01F5  
                   _tx_wait 025E        end_of_initialization 07FD                     init_ram 01FA  
                ??_read_adc 0072                     initloop 01FB  transmit_shield_code@F11762 00D3  
         __end_of_user_data 025E          user_data_receive@j 003B          user_data_receive@r 0020  
        user_data_receive@s 003A                   _UART_init 022A                   _UART_send 033B  
           ??_line_follower 0078             ?_user_data_send 0070                   _TRISAbits 0011  
                 _TRISCbits 0013              __end_of_Vdrive 065D              __end_of___wmul 02CC  
                ?_UART_init 0070                  ?_UART_send 0072         start_initialization 07CD  
               __end_of_abs 024B                    ??_Vdrive 002F                    ??___wmul 007D  
               __pdataBANK0 0061                 __pdataBANK1 00C7                   ___latbits 0002  
             __pcstackBANK0 0020            UART_send@message 0076                    ?_IR_init 0070  
          ___lwdiv@dividend 0072                    ?___awdiv 0074                    ?___lwdiv 0070  
            Vdrive@left_dir 0031                 ??_UART_init 0070                 ??_UART_send 0074  
                motor@11745 0021                    _ADC_init 021A            ___lwdiv@quotient 0075  
                  ?_rx_wait 0070                    ?_tx_wait 0070              ___wmul@product 0024  
                  _LATAbits 0016                   clear_ram0 01F4                  UART_send@i 0077  
                  _PIR1bits 070D                    _PIR3bits 070F                   _speed_dec 00E5  
                 _speed_inc 0063            ??_user_data_send 0078                  _ADCON0bits 0093  
            read_adc@sensor 0075           ___wmul@multiplier 0020                   _user_data 024B  
               _auto_switch 005C          line_follower@l_val 0078          line_follower@m_val 007A  
        line_follower@r_val 007C                 _SP1BRGLbits 011B                  _ANSELAbits 0F38  
                _ANSELCbits 0F4E                 _line_colour 0069                  ?_user_data 0070  
     __end_of_line_follower 0535               UART_send@size 0072             ___lwdiv@divisor 0070  
           ___lwdiv@counter 0077                    __ptext10 033B                    __ptext11 025E  
                  __ptext12 023A                    __ptext13 02AC                    __ptext14 046B  
                  __ptext15 022A                    __ptext16 0200                    __ptext17 0313  
                  __ptext18 02EC                    __ptext19 021A               Vdrive@l_motor 0033  
             Vdrive@r_motor 0035                    _read_adc 02EC                   motor@dirA 0020  
                 motor@dirB 0079                   motor@pwmA 0078                   motor@pwmB 007A  
           set_laser@F11755 00B8                    _playerID 005F                  _RC1STAbits 011D  
                  _starting 006E                    drive@dir 0042                 _repair_flag 005D  
      user_data_send@F11732 00D9                 _shield_flag 005E         user_data_send@11733 0020  
         _user_data_receive 065D                 ??_user_data 007B          ?_user_data_receive 0070  
                _TX1STAbits 011E       transmit_repair@F11768 00C7         ??_user_data_receive 0078  
