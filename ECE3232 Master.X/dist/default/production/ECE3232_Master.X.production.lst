

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Apr 05 17:16:07 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F18855
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Version 2.40
    47                           ; Generated 04/07/2022 GMT
    48                           ; 
    49                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F18855 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0016                     	;# 
   101     0017                     	;# 
   102     0018                     	;# 
   103     001C                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     008C                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008E                     	;# 
   114     008F                     	;# 
   115     0090                     	;# 
   116     0090                     	;# 
   117     0091                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     010C                     	;# 
   131     010D                     	;# 
   132     010E                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0110                     	;# 
   136     0110                     	;# 
   137     0111                     	;# 
   138     0112                     	;# 
   139     0112                     	;# 
   140     0113                     	;# 
   141     0114                     	;# 
   142     0114                     	;# 
   143     0115                     	;# 
   144     0116                     	;# 
   145     0116                     	;# 
   146     0117                     	;# 
   147     0119                     	;# 
   148     0119                     	;# 
   149     0119                     	;# 
   150     011A                     	;# 
   151     011A                     	;# 
   152     011A                     	;# 
   153     011B                     	;# 
   154     011B                     	;# 
   155     011B                     	;# 
   156     011B                     	;# 
   157     011B                     	;# 
   158     011C                     	;# 
   159     011C                     	;# 
   160     011C                     	;# 
   161     011D                     	;# 
   162     011D                     	;# 
   163     011D                     	;# 
   164     011E                     	;# 
   165     011E                     	;# 
   166     011E                     	;# 
   167     011F                     	;# 
   168     011F                     	;# 
   169     011F                     	;# 
   170     011F                     	;# 
   171     011F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174     018E                     	;# 
   175     018F                     	;# 
   176     0190                     	;# 
   177     0191                     	;# 
   178     0192                     	;# 
   179     0196                     	;# 
   180     0197                     	;# 
   181     0198                     	;# 
   182     0199                     	;# 
   183     019A                     	;# 
   184     019B                     	;# 
   185     019C                     	;# 
   186     020C                     	;# 
   187     020C                     	;# 
   188     020D                     	;# 
   189     020E                     	;# 
   190     020F                     	;# 
   191     020F                     	;# 
   192     0210                     	;# 
   193     0210                     	;# 
   194     0211                     	;# 
   195     0211                     	;# 
   196     0212                     	;# 
   197     0212                     	;# 
   198     0213                     	;# 
   199     0214                     	;# 
   200     0215                     	;# 
   201     0215                     	;# 
   202     0216                     	;# 
   203     0216                     	;# 
   204     0217                     	;# 
   205     0217                     	;# 
   206     0218                     	;# 
   207     0218                     	;# 
   208     0219                     	;# 
   209     021A                     	;# 
   210     021B                     	;# 
   211     021B                     	;# 
   212     021C                     	;# 
   213     021C                     	;# 
   214     021D                     	;# 
   215     021D                     	;# 
   216     021E                     	;# 
   217     021F                     	;# 
   218     028C                     	;# 
   219     028C                     	;# 
   220     028D                     	;# 
   221     028D                     	;# 
   222     028E                     	;# 
   223     028F                     	;# 
   224     0290                     	;# 
   225     0290                     	;# 
   226     0291                     	;# 
   227     0292                     	;# 
   228     0292                     	;# 
   229     0293                     	;# 
   230     0293                     	;# 
   231     0294                     	;# 
   232     0295                     	;# 
   233     0296                     	;# 
   234     0296                     	;# 
   235     0297                     	;# 
   236     0298                     	;# 
   237     0298                     	;# 
   238     0299                     	;# 
   239     0299                     	;# 
   240     029A                     	;# 
   241     029B                     	;# 
   242     029C                     	;# 
   243     029C                     	;# 
   244     029D                     	;# 
   245     030C                     	;# 
   246     030C                     	;# 
   247     030D                     	;# 
   248     030E                     	;# 
   249     030F                     	;# 
   250     0310                     	;# 
   251     0310                     	;# 
   252     0311                     	;# 
   253     0312                     	;# 
   254     0313                     	;# 
   255     0314                     	;# 
   256     0314                     	;# 
   257     0315                     	;# 
   258     0316                     	;# 
   259     0317                     	;# 
   260     0318                     	;# 
   261     0318                     	;# 
   262     0319                     	;# 
   263     031A                     	;# 
   264     031B                     	;# 
   265     031C                     	;# 
   266     031C                     	;# 
   267     031D                     	;# 
   268     031E                     	;# 
   269     031F                     	;# 
   270     038C                     	;# 
   271     038C                     	;# 
   272     038D                     	;# 
   273     038E                     	;# 
   274     0390                     	;# 
   275     0390                     	;# 
   276     0391                     	;# 
   277     0392                     	;# 
   278     040C                     	;# 
   279     040D                     	;# 
   280     040E                     	;# 
   281     040F                     	;# 
   282     0410                     	;# 
   283     0411                     	;# 
   284     0416                     	;# 
   285     0416                     	;# 
   286     0417                     	;# 
   287     0418                     	;# 
   288     0418                     	;# 
   289     0419                     	;# 
   290     041A                     	;# 
   291     041A                     	;# 
   292     041B                     	;# 
   293     041C                     	;# 
   294     041C                     	;# 
   295     041D                     	;# 
   296     041E                     	;# 
   297     041F                     	;# 
   298     048C                     	;# 
   299     048C                     	;# 
   300     048D                     	;# 
   301     048E                     	;# 
   302     048F                     	;# 
   303     048F                     	;# 
   304     0490                     	;# 
   305     0491                     	;# 
   306     0492                     	;# 
   307     0492                     	;# 
   308     0493                     	;# 
   309     0494                     	;# 
   310     0495                     	;# 
   311     0495                     	;# 
   312     0496                     	;# 
   313     0497                     	;# 
   314     0498                     	;# 
   315     0499                     	;# 
   316     049A                     	;# 
   317     049B                     	;# 
   318     049C                     	;# 
   319     049D                     	;# 
   320     050C                     	;# 
   321     050C                     	;# 
   322     050D                     	;# 
   323     050E                     	;# 
   324     050F                     	;# 
   325     050F                     	;# 
   326     0510                     	;# 
   327     0511                     	;# 
   328     0512                     	;# 
   329     0512                     	;# 
   330     0513                     	;# 
   331     0514                     	;# 
   332     0515                     	;# 
   333     0515                     	;# 
   334     0516                     	;# 
   335     0517                     	;# 
   336     0518                     	;# 
   337     0519                     	;# 
   338     051A                     	;# 
   339     051B                     	;# 
   340     051C                     	;# 
   341     051D                     	;# 
   342     058C                     	;# 
   343     058C                     	;# 
   344     058D                     	;# 
   345     058E                     	;# 
   346     058F                     	;# 
   347     058F                     	;# 
   348     0590                     	;# 
   349     0591                     	;# 
   350     0592                     	;# 
   351     0593                     	;# 
   352     060C                     	;# 
   353     060D                     	;# 
   354     060E                     	;# 
   355     060F                     	;# 
   356     0610                     	;# 
   357     0611                     	;# 
   358     0612                     	;# 
   359     0613                     	;# 
   360     0614                     	;# 
   361     0616                     	;# 
   362     0617                     	;# 
   363     0618                     	;# 
   364     0619                     	;# 
   365     061A                     	;# 
   366     061B                     	;# 
   367     061C                     	;# 
   368     061D                     	;# 
   369     061E                     	;# 
   370     068C                     	;# 
   371     068D                     	;# 
   372     068E                     	;# 
   373     068F                     	;# 
   374     0690                     	;# 
   375     0691                     	;# 
   376     0692                     	;# 
   377     0693                     	;# 
   378     0694                     	;# 
   379     070C                     	;# 
   380     070D                     	;# 
   381     070E                     	;# 
   382     070F                     	;# 
   383     0710                     	;# 
   384     0711                     	;# 
   385     0712                     	;# 
   386     0713                     	;# 
   387     0714                     	;# 
   388     0716                     	;# 
   389     0717                     	;# 
   390     0718                     	;# 
   391     0719                     	;# 
   392     071A                     	;# 
   393     071B                     	;# 
   394     071C                     	;# 
   395     071D                     	;# 
   396     071E                     	;# 
   397     0796                     	;# 
   398     0797                     	;# 
   399     0798                     	;# 
   400     0799                     	;# 
   401     079A                     	;# 
   402     079B                     	;# 
   403     080C                     	;# 
   404     080D                     	;# 
   405     080E                     	;# 
   406     080F                     	;# 
   407     0810                     	;# 
   408     0811                     	;# 
   409     0812                     	;# 
   410     0813                     	;# 
   411     0814                     	;# 
   412     081A                     	;# 
   413     081B                     	;# 
   414     081C                     	;# 
   415     081D                     	;# 
   416     081E                     	;# 
   417     081F                     	;# 
   418     088C                     	;# 
   419     088D                     	;# 
   420     088E                     	;# 
   421     088F                     	;# 
   422     0890                     	;# 
   423     0891                     	;# 
   424     0892                     	;# 
   425     0893                     	;# 
   426     0895                     	;# 
   427     0896                     	;# 
   428     0897                     	;# 
   429     0898                     	;# 
   430     0899                     	;# 
   431     089A                     	;# 
   432     089B                     	;# 
   433     090C                     	;# 
   434     090E                     	;# 
   435     090F                     	;# 
   436     091F                     	;# 
   437     091F                     	;# 
   438     098F                     	;# 
   439     098F                     	;# 
   440     0990                     	;# 
   441     0991                     	;# 
   442     0992                     	;# 
   443     0993                     	;# 
   444     0994                     	;# 
   445     0995                     	;# 
   446     0996                     	;# 
   447     0997                     	;# 
   448     0E0F                     	;# 
   449     0E10                     	;# 
   450     0E11                     	;# 
   451     0E12                     	;# 
   452     0E13                     	;# 
   453     0E14                     	;# 
   454     0E15                     	;# 
   455     0E16                     	;# 
   456     0E17                     	;# 
   457     0E18                     	;# 
   458     0E19                     	;# 
   459     0E1A                     	;# 
   460     0E1B                     	;# 
   461     0E1C                     	;# 
   462     0E1D                     	;# 
   463     0E1E                     	;# 
   464     0E1F                     	;# 
   465     0E20                     	;# 
   466     0E21                     	;# 
   467     0E22                     	;# 
   468     0E23                     	;# 
   469     0E24                     	;# 
   470     0E25                     	;# 
   471     0E26                     	;# 
   472     0E27                     	;# 
   473     0E28                     	;# 
   474     0E29                     	;# 
   475     0E2A                     	;# 
   476     0E2B                     	;# 
   477     0E2C                     	;# 
   478     0E2D                     	;# 
   479     0E2E                     	;# 
   480     0E2F                     	;# 
   481     0E30                     	;# 
   482     0E31                     	;# 
   483     0E32                     	;# 
   484     0E33                     	;# 
   485     0E34                     	;# 
   486     0E35                     	;# 
   487     0E36                     	;# 
   488     0E37                     	;# 
   489     0E8F                     	;# 
   490     0E90                     	;# 
   491     0E91                     	;# 
   492     0E92                     	;# 
   493     0E93                     	;# 
   494     0E94                     	;# 
   495     0E95                     	;# 
   496     0E96                     	;# 
   497     0E97                     	;# 
   498     0E9C                     	;# 
   499     0E9D                     	;# 
   500     0E9E                     	;# 
   501     0EA1                     	;# 
   502     0EA2                     	;# 
   503     0EA3                     	;# 
   504     0EA4                     	;# 
   505     0EA5                     	;# 
   506     0EA9                     	;# 
   507     0EAA                     	;# 
   508     0EAB                     	;# 
   509     0EAC                     	;# 
   510     0EB1                     	;# 
   511     0EB2                     	;# 
   512     0EB3                     	;# 
   513     0EB8                     	;# 
   514     0EB9                     	;# 
   515     0EBA                     	;# 
   516     0EBB                     	;# 
   517     0EBC                     	;# 
   518     0EBD                     	;# 
   519     0EBE                     	;# 
   520     0EC3                     	;# 
   521     0EC5                     	;# 
   522     0EC6                     	;# 
   523     0EC7                     	;# 
   524     0EC8                     	;# 
   525     0EC9                     	;# 
   526     0ECA                     	;# 
   527     0ECB                     	;# 
   528     0ECC                     	;# 
   529     0F10                     	;# 
   530     0F11                     	;# 
   531     0F12                     	;# 
   532     0F13                     	;# 
   533     0F14                     	;# 
   534     0F15                     	;# 
   535     0F16                     	;# 
   536     0F17                     	;# 
   537     0F18                     	;# 
   538     0F19                     	;# 
   539     0F1A                     	;# 
   540     0F1B                     	;# 
   541     0F1C                     	;# 
   542     0F1D                     	;# 
   543     0F1E                     	;# 
   544     0F1F                     	;# 
   545     0F20                     	;# 
   546     0F21                     	;# 
   547     0F22                     	;# 
   548     0F23                     	;# 
   549     0F24                     	;# 
   550     0F25                     	;# 
   551     0F26                     	;# 
   552     0F27                     	;# 
   553     0F38                     	;# 
   554     0F39                     	;# 
   555     0F3A                     	;# 
   556     0F3B                     	;# 
   557     0F3C                     	;# 
   558     0F3D                     	;# 
   559     0F3E                     	;# 
   560     0F3F                     	;# 
   561     0F40                     	;# 
   562     0F41                     	;# 
   563     0F43                     	;# 
   564     0F44                     	;# 
   565     0F45                     	;# 
   566     0F46                     	;# 
   567     0F47                     	;# 
   568     0F48                     	;# 
   569     0F49                     	;# 
   570     0F4A                     	;# 
   571     0F4B                     	;# 
   572     0F4C                     	;# 
   573     0F4E                     	;# 
   574     0F4F                     	;# 
   575     0F50                     	;# 
   576     0F51                     	;# 
   577     0F52                     	;# 
   578     0F53                     	;# 
   579     0F54                     	;# 
   580     0F55                     	;# 
   581     0F56                     	;# 
   582     0F57                     	;# 
   583     0F65                     	;# 
   584     0F68                     	;# 
   585     0F69                     	;# 
   586     0F6A                     	;# 
   587     0F6B                     	;# 
   588     0FE4                     	;# 
   589     0FE5                     	;# 
   590     0FE6                     	;# 
   591     0FE7                     	;# 
   592     0FE8                     	;# 
   593     0FE9                     	;# 
   594     0FEA                     	;# 
   595     0FEB                     	;# 
   596     0FED                     	;# 
   597     0FEE                     	;# 
   598     0FEF                     	;# 
   599     0000                     	;# 
   600     0001                     	;# 
   601     0002                     	;# 
   602     0003                     	;# 
   603     0004                     	;# 
   604     0005                     	;# 
   605     0006                     	;# 
   606     0007                     	;# 
   607     0008                     	;# 
   608     0009                     	;# 
   609     000A                     	;# 
   610     000B                     	;# 
   611     000C                     	;# 
   612     000D                     	;# 
   613     000E                     	;# 
   614     0010                     	;# 
   615     0011                     	;# 
   616     0012                     	;# 
   617     0013                     	;# 
   618     0016                     	;# 
   619     0017                     	;# 
   620     0018                     	;# 
   621     001C                     	;# 
   622     001C                     	;# 
   623     001D                     	;# 
   624     001D                     	;# 
   625     001E                     	;# 
   626     001F                     	;# 
   627     008C                     	;# 
   628     008C                     	;# 
   629     008D                     	;# 
   630     008E                     	;# 
   631     008E                     	;# 
   632     008F                     	;# 
   633     0090                     	;# 
   634     0090                     	;# 
   635     0091                     	;# 
   636     0093                     	;# 
   637     0094                     	;# 
   638     0095                     	;# 
   639     0096                     	;# 
   640     0097                     	;# 
   641     0098                     	;# 
   642     0099                     	;# 
   643     009A                     	;# 
   644     009B                     	;# 
   645     009C                     	;# 
   646     009D                     	;# 
   647     009E                     	;# 
   648     010C                     	;# 
   649     010D                     	;# 
   650     010E                     	;# 
   651     010E                     	;# 
   652     010F                     	;# 
   653     0110                     	;# 
   654     0110                     	;# 
   655     0111                     	;# 
   656     0112                     	;# 
   657     0112                     	;# 
   658     0113                     	;# 
   659     0114                     	;# 
   660     0114                     	;# 
   661     0115                     	;# 
   662     0116                     	;# 
   663     0116                     	;# 
   664     0117                     	;# 
   665     0119                     	;# 
   666     0119                     	;# 
   667     0119                     	;# 
   668     011A                     	;# 
   669     011A                     	;# 
   670     011A                     	;# 
   671     011B                     	;# 
   672     011B                     	;# 
   673     011B                     	;# 
   674     011B                     	;# 
   675     011B                     	;# 
   676     011C                     	;# 
   677     011C                     	;# 
   678     011C                     	;# 
   679     011D                     	;# 
   680     011D                     	;# 
   681     011D                     	;# 
   682     011E                     	;# 
   683     011E                     	;# 
   684     011E                     	;# 
   685     011F                     	;# 
   686     011F                     	;# 
   687     011F                     	;# 
   688     011F                     	;# 
   689     011F                     	;# 
   690     018C                     	;# 
   691     018D                     	;# 
   692     018E                     	;# 
   693     018F                     	;# 
   694     0190                     	;# 
   695     0191                     	;# 
   696     0192                     	;# 
   697     0196                     	;# 
   698     0197                     	;# 
   699     0198                     	;# 
   700     0199                     	;# 
   701     019A                     	;# 
   702     019B                     	;# 
   703     019C                     	;# 
   704     020C                     	;# 
   705     020C                     	;# 
   706     020D                     	;# 
   707     020E                     	;# 
   708     020F                     	;# 
   709     020F                     	;# 
   710     0210                     	;# 
   711     0210                     	;# 
   712     0211                     	;# 
   713     0211                     	;# 
   714     0212                     	;# 
   715     0212                     	;# 
   716     0213                     	;# 
   717     0214                     	;# 
   718     0215                     	;# 
   719     0215                     	;# 
   720     0216                     	;# 
   721     0216                     	;# 
   722     0217                     	;# 
   723     0217                     	;# 
   724     0218                     	;# 
   725     0218                     	;# 
   726     0219                     	;# 
   727     021A                     	;# 
   728     021B                     	;# 
   729     021B                     	;# 
   730     021C                     	;# 
   731     021C                     	;# 
   732     021D                     	;# 
   733     021D                     	;# 
   734     021E                     	;# 
   735     021F                     	;# 
   736     028C                     	;# 
   737     028C                     	;# 
   738     028D                     	;# 
   739     028D                     	;# 
   740     028E                     	;# 
   741     028F                     	;# 
   742     0290                     	;# 
   743     0290                     	;# 
   744     0291                     	;# 
   745     0292                     	;# 
   746     0292                     	;# 
   747     0293                     	;# 
   748     0293                     	;# 
   749     0294                     	;# 
   750     0295                     	;# 
   751     0296                     	;# 
   752     0296                     	;# 
   753     0297                     	;# 
   754     0298                     	;# 
   755     0298                     	;# 
   756     0299                     	;# 
   757     0299                     	;# 
   758     029A                     	;# 
   759     029B                     	;# 
   760     029C                     	;# 
   761     029C                     	;# 
   762     029D                     	;# 
   763     030C                     	;# 
   764     030C                     	;# 
   765     030D                     	;# 
   766     030E                     	;# 
   767     030F                     	;# 
   768     0310                     	;# 
   769     0310                     	;# 
   770     0311                     	;# 
   771     0312                     	;# 
   772     0313                     	;# 
   773     0314                     	;# 
   774     0314                     	;# 
   775     0315                     	;# 
   776     0316                     	;# 
   777     0317                     	;# 
   778     0318                     	;# 
   779     0318                     	;# 
   780     0319                     	;# 
   781     031A                     	;# 
   782     031B                     	;# 
   783     031C                     	;# 
   784     031C                     	;# 
   785     031D                     	;# 
   786     031E                     	;# 
   787     031F                     	;# 
   788     038C                     	;# 
   789     038C                     	;# 
   790     038D                     	;# 
   791     038E                     	;# 
   792     0390                     	;# 
   793     0390                     	;# 
   794     0391                     	;# 
   795     0392                     	;# 
   796     040C                     	;# 
   797     040D                     	;# 
   798     040E                     	;# 
   799     040F                     	;# 
   800     0410                     	;# 
   801     0411                     	;# 
   802     0416                     	;# 
   803     0416                     	;# 
   804     0417                     	;# 
   805     0418                     	;# 
   806     0418                     	;# 
   807     0419                     	;# 
   808     041A                     	;# 
   809     041A                     	;# 
   810     041B                     	;# 
   811     041C                     	;# 
   812     041C                     	;# 
   813     041D                     	;# 
   814     041E                     	;# 
   815     041F                     	;# 
   816     048C                     	;# 
   817     048C                     	;# 
   818     048D                     	;# 
   819     048E                     	;# 
   820     048F                     	;# 
   821     048F                     	;# 
   822     0490                     	;# 
   823     0491                     	;# 
   824     0492                     	;# 
   825     0492                     	;# 
   826     0493                     	;# 
   827     0494                     	;# 
   828     0495                     	;# 
   829     0495                     	;# 
   830     0496                     	;# 
   831     0497                     	;# 
   832     0498                     	;# 
   833     0499                     	;# 
   834     049A                     	;# 
   835     049B                     	;# 
   836     049C                     	;# 
   837     049D                     	;# 
   838     050C                     	;# 
   839     050C                     	;# 
   840     050D                     	;# 
   841     050E                     	;# 
   842     050F                     	;# 
   843     050F                     	;# 
   844     0510                     	;# 
   845     0511                     	;# 
   846     0512                     	;# 
   847     0512                     	;# 
   848     0513                     	;# 
   849     0514                     	;# 
   850     0515                     	;# 
   851     0515                     	;# 
   852     0516                     	;# 
   853     0517                     	;# 
   854     0518                     	;# 
   855     0519                     	;# 
   856     051A                     	;# 
   857     051B                     	;# 
   858     051C                     	;# 
   859     051D                     	;# 
   860     058C                     	;# 
   861     058C                     	;# 
   862     058D                     	;# 
   863     058E                     	;# 
   864     058F                     	;# 
   865     058F                     	;# 
   866     0590                     	;# 
   867     0591                     	;# 
   868     0592                     	;# 
   869     0593                     	;# 
   870     060C                     	;# 
   871     060D                     	;# 
   872     060E                     	;# 
   873     060F                     	;# 
   874     0610                     	;# 
   875     0611                     	;# 
   876     0612                     	;# 
   877     0613                     	;# 
   878     0614                     	;# 
   879     0616                     	;# 
   880     0617                     	;# 
   881     0618                     	;# 
   882     0619                     	;# 
   883     061A                     	;# 
   884     061B                     	;# 
   885     061C                     	;# 
   886     061D                     	;# 
   887     061E                     	;# 
   888     068C                     	;# 
   889     068D                     	;# 
   890     068E                     	;# 
   891     068F                     	;# 
   892     0690                     	;# 
   893     0691                     	;# 
   894     0692                     	;# 
   895     0693                     	;# 
   896     0694                     	;# 
   897     070C                     	;# 
   898     070D                     	;# 
   899     070E                     	;# 
   900     070F                     	;# 
   901     0710                     	;# 
   902     0711                     	;# 
   903     0712                     	;# 
   904     0713                     	;# 
   905     0714                     	;# 
   906     0716                     	;# 
   907     0717                     	;# 
   908     0718                     	;# 
   909     0719                     	;# 
   910     071A                     	;# 
   911     071B                     	;# 
   912     071C                     	;# 
   913     071D                     	;# 
   914     071E                     	;# 
   915     0796                     	;# 
   916     0797                     	;# 
   917     0798                     	;# 
   918     0799                     	;# 
   919     079A                     	;# 
   920     079B                     	;# 
   921     080C                     	;# 
   922     080D                     	;# 
   923     080E                     	;# 
   924     080F                     	;# 
   925     0810                     	;# 
   926     0811                     	;# 
   927     0812                     	;# 
   928     0813                     	;# 
   929     0814                     	;# 
   930     081A                     	;# 
   931     081B                     	;# 
   932     081C                     	;# 
   933     081D                     	;# 
   934     081E                     	;# 
   935     081F                     	;# 
   936     088C                     	;# 
   937     088D                     	;# 
   938     088E                     	;# 
   939     088F                     	;# 
   940     0890                     	;# 
   941     0891                     	;# 
   942     0892                     	;# 
   943     0893                     	;# 
   944     0895                     	;# 
   945     0896                     	;# 
   946     0897                     	;# 
   947     0898                     	;# 
   948     0899                     	;# 
   949     089A                     	;# 
   950     089B                     	;# 
   951     090C                     	;# 
   952     090E                     	;# 
   953     090F                     	;# 
   954     091F                     	;# 
   955     091F                     	;# 
   956     098F                     	;# 
   957     098F                     	;# 
   958     0990                     	;# 
   959     0991                     	;# 
   960     0992                     	;# 
   961     0993                     	;# 
   962     0994                     	;# 
   963     0995                     	;# 
   964     0996                     	;# 
   965     0997                     	;# 
   966     0E0F                     	;# 
   967     0E10                     	;# 
   968     0E11                     	;# 
   969     0E12                     	;# 
   970     0E13                     	;# 
   971     0E14                     	;# 
   972     0E15                     	;# 
   973     0E16                     	;# 
   974     0E17                     	;# 
   975     0E18                     	;# 
   976     0E19                     	;# 
   977     0E1A                     	;# 
   978     0E1B                     	;# 
   979     0E1C                     	;# 
   980     0E1D                     	;# 
   981     0E1E                     	;# 
   982     0E1F                     	;# 
   983     0E20                     	;# 
   984     0E21                     	;# 
   985     0E22                     	;# 
   986     0E23                     	;# 
   987     0E24                     	;# 
   988     0E25                     	;# 
   989     0E26                     	;# 
   990     0E27                     	;# 
   991     0E28                     	;# 
   992     0E29                     	;# 
   993     0E2A                     	;# 
   994     0E2B                     	;# 
   995     0E2C                     	;# 
   996     0E2D                     	;# 
   997     0E2E                     	;# 
   998     0E2F                     	;# 
   999     0E30                     	;# 
  1000     0E31                     	;# 
  1001     0E32                     	;# 
  1002     0E33                     	;# 
  1003     0E34                     	;# 
  1004     0E35                     	;# 
  1005     0E36                     	;# 
  1006     0E37                     	;# 
  1007     0E8F                     	;# 
  1008     0E90                     	;# 
  1009     0E91                     	;# 
  1010     0E92                     	;# 
  1011     0E93                     	;# 
  1012     0E94                     	;# 
  1013     0E95                     	;# 
  1014     0E96                     	;# 
  1015     0E97                     	;# 
  1016     0E9C                     	;# 
  1017     0E9D                     	;# 
  1018     0E9E                     	;# 
  1019     0EA1                     	;# 
  1020     0EA2                     	;# 
  1021     0EA3                     	;# 
  1022     0EA4                     	;# 
  1023     0EA5                     	;# 
  1024     0EA9                     	;# 
  1025     0EAA                     	;# 
  1026     0EAB                     	;# 
  1027     0EAC                     	;# 
  1028     0EB1                     	;# 
  1029     0EB2                     	;# 
  1030     0EB3                     	;# 
  1031     0EB8                     	;# 
  1032     0EB9                     	;# 
  1033     0EBA                     	;# 
  1034     0EBB                     	;# 
  1035     0EBC                     	;# 
  1036     0EBD                     	;# 
  1037     0EBE                     	;# 
  1038     0EC3                     	;# 
  1039     0EC5                     	;# 
  1040     0EC6                     	;# 
  1041     0EC7                     	;# 
  1042     0EC8                     	;# 
  1043     0EC9                     	;# 
  1044     0ECA                     	;# 
  1045     0ECB                     	;# 
  1046     0ECC                     	;# 
  1047     0F10                     	;# 
  1048     0F11                     	;# 
  1049     0F12                     	;# 
  1050     0F13                     	;# 
  1051     0F14                     	;# 
  1052     0F15                     	;# 
  1053     0F16                     	;# 
  1054     0F17                     	;# 
  1055     0F18                     	;# 
  1056     0F19                     	;# 
  1057     0F1A                     	;# 
  1058     0F1B                     	;# 
  1059     0F1C                     	;# 
  1060     0F1D                     	;# 
  1061     0F1E                     	;# 
  1062     0F1F                     	;# 
  1063     0F20                     	;# 
  1064     0F21                     	;# 
  1065     0F22                     	;# 
  1066     0F23                     	;# 
  1067     0F24                     	;# 
  1068     0F25                     	;# 
  1069     0F26                     	;# 
  1070     0F27                     	;# 
  1071     0F38                     	;# 
  1072     0F39                     	;# 
  1073     0F3A                     	;# 
  1074     0F3B                     	;# 
  1075     0F3C                     	;# 
  1076     0F3D                     	;# 
  1077     0F3E                     	;# 
  1078     0F3F                     	;# 
  1079     0F40                     	;# 
  1080     0F41                     	;# 
  1081     0F43                     	;# 
  1082     0F44                     	;# 
  1083     0F45                     	;# 
  1084     0F46                     	;# 
  1085     0F47                     	;# 
  1086     0F48                     	;# 
  1087     0F49                     	;# 
  1088     0F4A                     	;# 
  1089     0F4B                     	;# 
  1090     0F4C                     	;# 
  1091     0F4E                     	;# 
  1092     0F4F                     	;# 
  1093     0F50                     	;# 
  1094     0F51                     	;# 
  1095     0F52                     	;# 
  1096     0F53                     	;# 
  1097     0F54                     	;# 
  1098     0F55                     	;# 
  1099     0F56                     	;# 
  1100     0F57                     	;# 
  1101     0F65                     	;# 
  1102     0F68                     	;# 
  1103     0F69                     	;# 
  1104     0F6A                     	;# 
  1105     0F6B                     	;# 
  1106     0FE4                     	;# 
  1107     0FE5                     	;# 
  1108     0FE6                     	;# 
  1109     0FE7                     	;# 
  1110     0FE8                     	;# 
  1111     0FE9                     	;# 
  1112     0FEA                     	;# 
  1113     0FEB                     	;# 
  1114     0FED                     	;# 
  1115     0FEE                     	;# 
  1116     0FEF                     	;# 
  1117                           
  1118                           	psect	idataBANK0
  1119     0075                     __pidataBANK0:
  1120                           
  1121                           ;initializer for _IR_base
  1122     0075  3400               	retlw	0
  1123     0076  34B2               	retlw	178
  1124                           
  1125                           ;initializer for _speed_inc
  1126     0077  3432               	retlw	50
  1127     0078  3400               	retlw	0
  1128                           
  1129                           ;initializer for _slow
  1130     0079  3496               	retlw	150
  1131     007A  3400               	retlw	0
  1132                           
  1133                           ;initializer for _fast
  1134     007B  34AF               	retlw	175
  1135     007C  3400               	retlw	0
  1136                           
  1137                           ;initializer for _line_colour
  1138     007D  34C0               	retlw	192
  1139     007E  348E               	retlw	142
  1140                           
  1141                           ;initializer for _r_vec
  1142     007F  3464               	retlw	100
  1143     0080  3400               	retlw	0
  1144                           
  1145                           ;initializer for _l_vec
  1146     0081  3464               	retlw	100
  1147     0082  3400               	retlw	0
  1148                           
  1149                           ;initializer for _rpin
  1150     0083  340A               	retlw	10
  1151                           
  1152                           ;initializer for _mpin
  1153     0084  3409               	retlw	9
  1154                           
  1155                           ;initializer for _lpin
  1156     0085  340B               	retlw	11
  1157                           
  1158                           ;initializer for _starting
  1159     0086  3401               	retlw	1
  1160                           
  1161                           	psect	idataBANK1
  1162     013A                     __pidataBANK1:
  1163                           
  1164                           ;initializer for transmit_repair@F11764
  1165     013A  34FE               	retlw	254
  1166     013B  3419               	retlw	25
  1167     013C  3401               	retlw	1
  1168     013D  3409               	retlw	9
  1169     013E  3401               	retlw	1
  1170     013F  3400               	retlw	0
  1171                           
  1172                           ;initializer for request_repair@F11761
  1173     0140  34FE               	retlw	254
  1174     0141  3419               	retlw	25
  1175     0142  3403               	retlw	3
  1176     0143  3409               	retlw	9
  1177     0144  3400               	retlw	0
  1178     0145  3400               	retlw	0
  1179                           
  1180                           ;initializer for transmit_shield_code@F11758
  1181     0146  34FE               	retlw	254
  1182     0147  3419               	retlw	25
  1183     0148  3402               	retlw	2
  1184     0149  3409               	retlw	9
  1185     014A  3400               	retlw	0
  1186     014B  3400               	retlw	0
  1187                           
  1188                           ;initializer for user_data_send@F11728
  1189     014C  34FE               	retlw	254
  1190     014D  3419               	retlw	25
  1191     014E  3401               	retlw	1
  1192     014F  3405               	retlw	5
  1193     0150  3400               	retlw	0
  1194     0151  3400               	retlw	0
  1195                           
  1196                           ;initializer for PCLS_info_send@F11720
  1197     0152  34FE               	retlw	254
  1198     0153  3419               	retlw	25
  1199     0154  3401               	retlw	1
  1200     0155  3404               	retlw	4
  1201     0156  3400               	retlw	0
  1202     0157  3400               	retlw	0
  1203     0016                     _LATAbits	set	22
  1204     0011                     _TRISAbits	set	17
  1205     008C                     _ADRESL	set	140
  1206     008D                     _ADRESH	set	141
  1207     0093                     _ADCON0bits	set	147
  1208     009E                     _ADPCH	set	158
  1209     009D                     _ADACQ	set	157
  1210     009C                     _ADPRE	set	156
  1211     009A                     _ADREF	set	154
  1212     0098                     _ADCLK	set	152
  1213     0093                     _ADCON0	set	147
  1214     0119                     _RCREG	set	281
  1215     011B                     _SP1BRGLbits	set	283
  1216     011F                     _BAUD1CONbits	set	287
  1217     011D                     _RC1STAbits	set	285
  1218     011E                     _TX1STAbits	set	286
  1219     011A                     _TXREG	set	282
  1220     070D                     _PIR1bits	set	1805
  1221     070F                     _PIR3bits	set	1807
  1222     0F38                     _ANSELAbits	set	3896
  1223     0F26                     _RC6PPS	set	3878
  1224     0F4E                     _ANSELCbits	set	3918
  1225                           
  1226                           	psect	cinit
  1227     07CD                     start_initialization:	
  1228                           ; #config settings
  1229                           
  1230     07CD                     __initialization:
  1231                           
  1232                           ; Initialize objects allocated to BANK0
  1233     07CD  3075               	movlw	low __pidataBANK0
  1234     07CE  0084               	movwf	4
  1235     07CF  3080               	movlw	(high __pidataBANK0)| (0+128)
  1236     07D0  0085               	movwf	5
  1237     07D1  305E               	movlw	low __pdataBANK0
  1238     07D2  0086               	movwf	6
  1239     07D3  3000               	movlw	high __pdataBANK0
  1240     07D4  0087               	movwf	7
  1241     07D5  3012               	movlw	18
  1242     07D6  3180  2037  3187   	fcall	init_ram
  1243                           
  1244                           ; Initialize objects allocated to BANK1
  1245     07D9  303A               	movlw	low __pidataBANK1
  1246     07DA  0084               	movwf	4
  1247     07DB  3081               	movlw	(high __pidataBANK1)| (0+128)
  1248     07DC  0085               	movwf	5
  1249     07DD  30C9               	movlw	low __pdataBANK1
  1250     07DE  0086               	movwf	6
  1251     07DF  3000               	movlw	high __pdataBANK1
  1252     07E0  0087               	movwf	7
  1253     07E1  301E               	movlw	30
  1254     07E2  3180  2037  3187   	fcall	init_ram
  1255                           
  1256                           ; Clear objects allocated to BANK0
  1257     07E5  3044               	movlw	low __pbssBANK0
  1258     07E6  0084               	movwf	4
  1259     07E7  3000               	movlw	high __pbssBANK0
  1260     07E8  0085               	movwf	5
  1261     07E9  301A               	movlw	26
  1262     07EA  3180  2031  3187   	fcall	clear_ram0
  1263                           
  1264                           ; Clear objects allocated to BANK1
  1265     07ED  30A0               	movlw	low __pbssBANK1
  1266     07EE  0084               	movwf	4
  1267     07EF  3000               	movlw	high __pbssBANK1
  1268     07F0  0085               	movwf	5
  1269     07F1  3029               	movlw	41
  1270     07F2  3180  2031  3187   	fcall	clear_ram0
  1271                           
  1272                           ; Clear objects allocated to BANK2
  1273     07F5  3020               	movlw	low __pbssBANK2
  1274     07F6  0084               	movwf	4
  1275     07F7  3001               	movlw	high __pbssBANK2
  1276     07F8  0085               	movwf	5
  1277     07F9  3014               	movlw	20
  1278     07FA  3180  2031  3187   	fcall	clear_ram0
  1279     07FD                     end_of_initialization:	
  1280                           ;End of C runtime variable initialization code
  1281                           
  1282     07FD                     __end_of__initialization:
  1283     07FD  0020               	movlb	0
  1284     07FE  3183  2B7A         	ljmp	_main	;jump to C main() function
  1285                           
  1286                           	psect	bssBANK0
  1287     0044                     __pbssBANK0:
  1288     0044                     _potA:
  1289     0044                     	ds	2
  1290     0046                     _swD:
  1291     0046                     	ds	2
  1292     0048                     _swC:
  1293     0048                     	ds	2
  1294     004A                     _swB:
  1295     004A                     	ds	2
  1296     004C                     _swA:
  1297     004C                     	ds	2
  1298     004E                     _joy_lx:
  1299     004E                     	ds	2
  1300     0050                     _joy_ly:
  1301     0050                     	ds	2
  1302     0052                     _joy_ry:
  1303     0052                     	ds	2
  1304     0054                     _joy_rx:
  1305     0054                     	ds	2
  1306     0056                     _serA:
  1307     0056                     	ds	1
  1308     0057                     _auto_switch:
  1309     0057                     	ds	1
  1310     0058                     _r_dir:
  1311     0058                     	ds	1
  1312     0059                     _l_dir:
  1313     0059                     	ds	1
  1314     005A                     _repair_flag:
  1315     005A                     	ds	1
  1316     005B                     _shield_flag:
  1317     005B                     	ds	1
  1318     005C                     _playerID:
  1319     005C                     	ds	1
  1320     005D                     _teamID:
  1321     005D                     	ds	1
  1322                           
  1323                           	psect	dataBANK0
  1324     005E                     __pdataBANK0:
  1325     005E                     _IR_base:
  1326     005E                     	ds	2
  1327     0060                     _speed_inc:
  1328     0060                     	ds	2
  1329     0062                     _slow:
  1330     0062                     	ds	2
  1331     0064                     _fast:
  1332     0064                     	ds	2
  1333     0066                     _line_colour:
  1334     0066                     	ds	2
  1335     0068                     _r_vec:
  1336     0068                     	ds	2
  1337     006A                     _l_vec:
  1338     006A                     	ds	2
  1339     006C                     _rpin:
  1340     006C                     	ds	1
  1341     006D                     _mpin:
  1342     006D                     	ds	1
  1343     006E                     _lpin:
  1344     006E                     	ds	1
  1345     006F                     _starting:
  1346     006F                     	ds	1
  1347                           
  1348                           	psect	bssBANK1
  1349     00A0                     __pbssBANK1:
  1350     00A0                     motor@F11740:
  1351     00A0                     	ds	10
  1352     00AA                     ore_type@F11782:
  1353     00AA                     	ds	7
  1354     00B1                     shoot_laser@F11755:
  1355     00B1                     	ds	7
  1356     00B8                     set_laser@F11751:
  1357     00B8                     	ds	7
  1358     00BF                     custom_laser@F11770:
  1359     00BF                     	ds	6
  1360     00C5                     _health:
  1361     00C5                     	ds	2
  1362     00C7                     _potB:
  1363     00C7                     	ds	2
  1364                           
  1365                           	psect	dataBANK1
  1366     00C9                     __pdataBANK1:
  1367     00C9                     transmit_repair@F11764:
  1368     00C9                     	ds	6
  1369     00CF                     request_repair@F11761:
  1370     00CF                     	ds	6
  1371     00D5                     transmit_shield_code@F11758:
  1372     00D5                     	ds	6
  1373     00DB                     user_data_send@F11728:
  1374     00DB                     	ds	6
  1375     00E1                     PCLS_info_send@F11720:
  1376     00E1                     	ds	6
  1377                           
  1378                           	psect	bssBANK2
  1379     0120                     __pbssBANK2:
  1380     0120                     surface_exploration@F11778:
  1381     0120                     	ds	10
  1382     012A                     servo@F11747:
  1383     012A                     	ds	10
  1384                           
  1385                           	psect	inittext
  1386     0037                     init_ram:
  1387     0037  00FE               	movwf	btemp
  1388     0038                     initloop:
  1389     0038  0012               	moviw fsr0++
  1390     0039  001E               	movwi fsr1++
  1391     003A  0BFE               	decfsz	btemp,f
  1392     003B  2838               	goto	initloop
  1393     003C  3400               	retlw	0
  1394                           
  1395                           	psect	clrtext
  1396     0031                     clear_ram0:	
  1397                           ;	Called with FSR0 containing the base address, and
  1398                           ;	WREG with the size to clear
  1399                           
  1400     0031  0064               	clrwdt	;clear the watchdog before getting into this loop
  1401     0032                     clrloop0:
  1402     0032  0180               	clrf	0	;clear RAM location pointed to by FSR
  1403     0033  3101               	addfsr 0,1
  1404     0034  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1405     0035  2832               	goto	clrloop0	;have we reached the end yet?
  1406     0036  3400               	retlw	0	;all done for this memory range, return
  1407                           
  1408                           	psect	cstackCOMMON
  1409     0070                     __pcstackCOMMON:
  1410     0070                     ?_tx_wait:
  1411     0070                     ??_tx_wait:	
  1412                           ; 1 bytes @ 0x0
  1413                           
  1414     0070                     ?_rx_wait:	
  1415                           ; 1 bytes @ 0x0
  1416                           
  1417     0070                     ??_rx_wait:	
  1418                           ; 1 bytes @ 0x0
  1419                           
  1420     0070                     ?_UART_init:	
  1421                           ; 1 bytes @ 0x0
  1422                           
  1423     0070                     ??_UART_init:	
  1424                           ; 1 bytes @ 0x0
  1425                           
  1426     0070                     ?_PCLS_info_send:	
  1427                           ; 1 bytes @ 0x0
  1428                           
  1429     0070                     ?_PCLS_info_receive:	
  1430                           ; 1 bytes @ 0x0
  1431                           
  1432     0070                     ?_PCLS_info:	
  1433                           ; 1 bytes @ 0x0
  1434                           
  1435     0070                     ?_user_data_send:	
  1436                           ; 1 bytes @ 0x0
  1437                           
  1438     0070                     ?_user_data_receive:	
  1439                           ; 1 bytes @ 0x0
  1440                           
  1441     0070                     ?_user_data:	
  1442                           ; 1 bytes @ 0x0
  1443                           
  1444     0070                     ?_set_laser:	
  1445                           ; 1 bytes @ 0x0
  1446                           
  1447     0070                     ?_shoot_laser:	
  1448                           ; 1 bytes @ 0x0
  1449                           
  1450     0070                     ?_transmit_shield_code:	
  1451                           ; 1 bytes @ 0x0
  1452                           
  1453     0070                     ?_drive:	
  1454                           ; 1 bytes @ 0x0
  1455                           
  1456     0070                     ?_ADC_init:	
  1457                           ; 1 bytes @ 0x0
  1458                           
  1459     0070                     ??_ADC_init:	
  1460                           ; 1 bytes @ 0x0
  1461                           
  1462     0070                     ?_line_follower:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465     0070                     ?_IR_init:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468     0070                     ?_IR:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471     0070                     ?_shield_code:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474     0070                     ?_main:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477     0070                     ?_abs:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480     0070                     ?_read_adc:	
  1481                           ; 2 bytes @ 0x0
  1482                           
  1483     0070                     ?___lwdiv:	
  1484                           ; 2 bytes @ 0x0
  1485                           
  1486     0070                     tx_wait@count:	
  1487                           ; 2 bytes @ 0x0
  1488                           
  1489     0070                     rx_wait@count:	
  1490                           ; 2 bytes @ 0x0
  1491                           
  1492     0070                     ___lwdiv@divisor:	
  1493                           ; 2 bytes @ 0x0
  1494                           
  1495     0070                     abs@a:	
  1496                           ; 2 bytes @ 0x0
  1497                           
  1498                           
  1499                           ; 2 bytes @ 0x0
  1500     0070                     	ds	2
  1501     0072                     ??_abs:
  1502     0072                     ?_UART_send:	
  1503                           ; 1 bytes @ 0x2
  1504                           
  1505     0072                     ??_PCLS_info_receive:	
  1506                           ; 1 bytes @ 0x2
  1507                           
  1508     0072                     ??_read_adc:	
  1509                           ; 1 bytes @ 0x2
  1510                           
  1511     0072                     UART_send@size:	
  1512                           ; 1 bytes @ 0x2
  1513                           
  1514     0072                     ___lwdiv@dividend:	
  1515                           ; 2 bytes @ 0x2
  1516                           
  1517                           
  1518                           ; 2 bytes @ 0x2
  1519     0072                     	ds	2
  1520     0074                     ??_UART_send:
  1521     0074                     ??___lwdiv:	
  1522                           ; 1 bytes @ 0x4
  1523                           
  1524     0074                     ?___awdiv:	
  1525                           ; 1 bytes @ 0x4
  1526                           
  1527     0074                     ___awdiv@divisor:	
  1528                           ; 2 bytes @ 0x4
  1529                           
  1530                           
  1531                           ; 2 bytes @ 0x4
  1532     0074                     	ds	1
  1533     0075                     read_adc@sensor:
  1534     0075                     ___lwdiv@quotient:	
  1535                           ; 1 bytes @ 0x5
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x5
  1539     0075                     	ds	1
  1540     0076                     UART_send@message:
  1541     0076                     read_adc@ADC_val:	
  1542                           ; 1 bytes @ 0x6
  1543                           
  1544     0076                     ___awdiv@dividend:	
  1545                           ; 2 bytes @ 0x6
  1546                           
  1547                           
  1548                           ; 2 bytes @ 0x6
  1549     0076                     	ds	1
  1550     0077                     UART_send@i:
  1551     0077                     ___lwdiv@counter:	
  1552                           ; 1 bytes @ 0x7
  1553                           
  1554                           
  1555                           ; 1 bytes @ 0x7
  1556     0077                     	ds	1
  1557     0078                     ??_PCLS_info_send:
  1558     0078                     ??_user_data_send:	
  1559                           ; 1 bytes @ 0x8
  1560                           
  1561     0078                     ??_user_data_receive:	
  1562                           ; 1 bytes @ 0x8
  1563                           
  1564     0078                     ?_motor:	
  1565                           ; 1 bytes @ 0x8
  1566                           
  1567     0078                     ??_set_laser:	
  1568                           ; 1 bytes @ 0x8
  1569                           
  1570     0078                     ??_shoot_laser:	
  1571                           ; 1 bytes @ 0x8
  1572                           
  1573     0078                     ??_transmit_shield_code:	
  1574                           ; 1 bytes @ 0x8
  1575                           
  1576     0078                     ??_IR_init:	
  1577                           ; 1 bytes @ 0x8
  1578                           
  1579     0078                     ??_IR:	
  1580                           ; 1 bytes @ 0x8
  1581                           
  1582     0078                     ??___awdiv:	
  1583                           ; 1 bytes @ 0x8
  1584                           
  1585     0078                     motor@pwmA:	
  1586                           ; 1 bytes @ 0x8
  1587                           
  1588                           
  1589                           ; 1 bytes @ 0x8
  1590     0078                     	ds	1
  1591     0079                     ??_PCLS_info:
  1592     0079                     motor@dirB:	
  1593                           ; 1 bytes @ 0x9
  1594                           
  1595     0079                     ___awdiv@counter:	
  1596                           ; 1 bytes @ 0x9
  1597                           
  1598                           
  1599                           ; 1 bytes @ 0x9
  1600     0079                     	ds	1
  1601     007A                     motor@pwmB:
  1602     007A                     ___awdiv@sign:	
  1603                           ; 1 bytes @ 0xA
  1604                           
  1605     007A                     IR@ADC_val:	
  1606                           ; 1 bytes @ 0xA
  1607                           
  1608                           
  1609                           ; 2 bytes @ 0xA
  1610     007A                     	ds	1
  1611     007B                     ??_user_data:
  1612     007B                     ??_motor:	
  1613                           ; 1 bytes @ 0xB
  1614                           
  1615     007B                     ___awdiv@quotient:	
  1616                           ; 1 bytes @ 0xB
  1617                           
  1618                           
  1619                           ; 2 bytes @ 0xB
  1620     007B                     	ds	1
  1621     007C                     ??_line_follower:
  1622     007C                     ??_shield_code:	
  1623                           ; 1 bytes @ 0xC
  1624                           
  1625                           
  1626                           ; 1 bytes @ 0xC
  1627     007C                     	ds	1
  1628     007D                     ??___wmul:
  1629                           
  1630                           ; 1 bytes @ 0xD
  1631     007D                     	ds	1
  1632     007E                     ??_main:
  1633                           
  1634                           	psect	cstackBANK0
  1635     0020                     __pcstackBANK0:	
  1636                           ; 1 bytes @ 0xE
  1637                           
  1638     0020                     ?___wmul:
  1639     0020                     motor@dirA:	
  1640                           ; 2 bytes @ 0x0
  1641                           
  1642     0020                     set_laser@en:	
  1643                           ; 1 bytes @ 0x0
  1644                           
  1645     0020                     shoot_laser@en:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648     0020                     ___wmul@multiplier:	
  1649                           ; 1 bytes @ 0x0
  1650                           
  1651     0020                     PCLS_info_send@11721:	
  1652                           ; 2 bytes @ 0x0
  1653                           
  1654     0020                     user_data_send@11729:	
  1655                           ; 6 bytes @ 0x0
  1656                           
  1657     0020                     transmit_shield_code@11759:	
  1658                           ; 6 bytes @ 0x0
  1659                           
  1660     0020                     PCLS_info_receive@r:	
  1661                           ; 6 bytes @ 0x0
  1662                           
  1663     0020                     user_data_receive@r:	
  1664                           ; 12 bytes @ 0x0
  1665                           
  1666                           
  1667                           ; 26 bytes @ 0x0
  1668     0020                     	ds	1
  1669     0021                     set_laser@11752:
  1670     0021                     shoot_laser@11756:	
  1671                           ; 7 bytes @ 0x1
  1672                           
  1673     0021                     motor@11741:	
  1674                           ; 7 bytes @ 0x1
  1675                           
  1676                           
  1677                           ; 10 bytes @ 0x1
  1678     0021                     	ds	1
  1679     0022                     ___wmul@multiplicand:
  1680                           
  1681                           ; 2 bytes @ 0x2
  1682     0022                     	ds	2
  1683     0024                     ___wmul@product:
  1684                           
  1685                           ; 2 bytes @ 0x4
  1686     0024                     	ds	7
  1687     002B                     ?_Vdrive:
  1688     002B                     Vdrive@y:	
  1689                           ; 1 bytes @ 0xB
  1690                           
  1691     002B                     line_follower@l_val:	
  1692                           ; 2 bytes @ 0xB
  1693                           
  1694                           
  1695                           ; 2 bytes @ 0xB
  1696     002B                     	ds	1
  1697     002C                     PCLS_info_receive@s:
  1698                           
  1699                           ; 1 bytes @ 0xC
  1700     002C                     	ds	1
  1701     002D                     PCLS_info_receive@j:
  1702     002D                     Vdrive@x:	
  1703                           ; 1 bytes @ 0xD
  1704                           
  1705     002D                     line_follower@m_val:	
  1706                           ; 2 bytes @ 0xD
  1707                           
  1708                           
  1709                           ; 2 bytes @ 0xD
  1710     002D                     	ds	2
  1711     002F                     ??_Vdrive:
  1712     002F                     line_follower@r_val:	
  1713                           ; 1 bytes @ 0xF
  1714                           
  1715                           
  1716                           ; 2 bytes @ 0xF
  1717     002F                     	ds	2
  1718     0031                     Vdrive@left_dir:
  1719                           
  1720                           ; 1 bytes @ 0x11
  1721     0031                     	ds	1
  1722     0032                     Vdrive@right_dir:
  1723                           
  1724                           ; 1 bytes @ 0x12
  1725     0032                     	ds	1
  1726     0033                     Vdrive@l_motor:
  1727                           
  1728                           ; 2 bytes @ 0x13
  1729     0033                     	ds	2
  1730     0035                     Vdrive@r_motor:
  1731                           
  1732                           ; 2 bytes @ 0x15
  1733     0035                     	ds	5
  1734     003A                     user_data_receive@s:
  1735                           
  1736                           ; 1 bytes @ 0x1A
  1737     003A                     	ds	1
  1738     003B                     user_data_receive@j:
  1739                           
  1740                           ; 1 bytes @ 0x1B
  1741     003B                     	ds	1
  1742     003C                     ??_drive:
  1743                           
  1744                           ; 1 bytes @ 0x1C
  1745     003C                     	ds	2
  1746     003E                     drive@x:
  1747                           
  1748                           ; 2 bytes @ 0x1E
  1749     003E                     	ds	2
  1750     0040                     drive@y:
  1751                           
  1752                           ; 2 bytes @ 0x20
  1753     0040                     	ds	2
  1754     0042                     drive@dir:
  1755                           
  1756                           ; 2 bytes @ 0x22
  1757     0042                     	ds	2
  1758                           
  1759                           	psect	maintext
  1760     037A                     __pmaintext:	
  1761 ;;
  1762 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1763 ;;
  1764 ;; *************** function _main *****************
  1765 ;; Defined at:
  1766 ;;		line 37 in file "Master.c"
  1767 ;; Parameters:    Size  Location     Type
  1768 ;;		None
  1769 ;; Auto vars:     Size  Location     Type
  1770 ;;		None
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : B1F/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1784 ;;Total ram usage:        0 bytes
  1785 ;; Hardware stack levels required when called: 5
  1786 ;; This function calls:
  1787 ;;		_ADC_init
  1788 ;;		_IR
  1789 ;;		_IR_init
  1790 ;;		_UART_init
  1791 ;;		_drive
  1792 ;;		_line_follower
  1793 ;;		_read_adc
  1794 ;;		_shield_code
  1795 ;;		_user_data
  1796 ;; This function is called by:
  1797 ;;		Startup code after reset
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801     037A                     _main:	
  1802                           ;psect for function _main
  1803                           
  1804     037A                     l2174:	
  1805                           ;incstack = 0
  1806                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1807                           
  1808     037A  3180  2065  3183   	fcall	_UART_init
  1809     037D                     l2176:
  1810     037D  3180  2087  3183   	fcall	_user_data
  1811     0380                     l2178:
  1812     0380  3180  2055  3183   	fcall	_ADC_init
  1813     0383                     l2180:
  1814     0383  0020               	movlb	0	; select bank0
  1815     0384  084A               	movf	_swB,w	;volatile
  1816     0385  044B               	iorwf	_swB+1,w	;volatile
  1817     0386  1903               	btfsc	3,2
  1818     0387  2B89               	goto	u1891
  1819     0388  2B8A               	goto	u1890
  1820     0389                     u1891:
  1821     0389  2BB8               	goto	l2198
  1822     038A                     u1890:
  1823     038A                     l2182:
  1824     038A  3009               	movlw	9
  1825     038B  3181  2178  3183   	fcall	_read_adc
  1826     038E  0870               	movf	?_read_adc,w
  1827     038F  3E00               	addlw	0
  1828     0390  0020               	movlb	0	; select bank0
  1829     0391  00E6               	movwf	_line_colour	;volatile
  1830     0392  30FF               	movlw	255
  1831     0393  3D71               	addwfc	?_read_adc+1,w
  1832     0394  00E7               	movwf	_line_colour+1	;volatile
  1833     0395  2B9C               	goto	l2186
  1834     0396                     l2184:
  1835     0396  3184  2426  3183   	fcall	_line_follower
  1836     0399  3180  2087  3183   	fcall	_user_data
  1837     039C                     l2186:
  1838     039C  0020               	movlb	0	; select bank0
  1839     039D  084A               	movf	_swB,w	;volatile
  1840     039E  044B               	iorwf	_swB+1,w	;volatile
  1841     039F  1D03               	btfss	3,2
  1842     03A0  2BA2               	goto	u1901
  1843     03A1  2BA3               	goto	u1900
  1844     03A2                     u1901:
  1845     03A2  2B96               	goto	l2184
  1846     03A3                     u1900:
  1847     03A3  2BB8               	goto	l2198
  1848     03A4                     l2188:
  1849     03A4  3180  203D  3183   	fcall	_IR_init
  1850     03A7                     l2190:
  1851     03A7  3182  22BC  3183   	fcall	_drive
  1852     03AA  2BB1               	goto	l2196
  1853     03AB                     l2192:
  1854     03AB  3182  2220  3183   	fcall	_IR
  1855     03AE                     l2194:
  1856     03AE  3180  2087  3183   	fcall	_user_data
  1857     03B1                     l2196:
  1858     03B1  0020               	movlb	0	; select bank0
  1859     03B2  0846               	movf	_swD,w	;volatile
  1860     03B3  0447               	iorwf	_swD+1,w	;volatile
  1861     03B4  1D03               	btfss	3,2
  1862     03B5  2BB7               	goto	u1911
  1863     03B6  2BB8               	goto	u1910
  1864     03B7                     u1911:
  1865     03B7  2BAB               	goto	l2192
  1866     03B8                     u1910:
  1867     03B8                     l2198:
  1868     03B8  3002               	movlw	2
  1869     03B9  0648               	xorwf	_swC,w	;volatile
  1870     03BA  0449               	iorwf	_swC+1,w	;volatile
  1871     03BB  1903               	btfsc	3,2
  1872     03BC  2BBE               	goto	u1921
  1873     03BD  2BBF               	goto	u1920
  1874     03BE                     u1921:
  1875     03BE  2BA4               	goto	l2188
  1876     03BF                     u1920:
  1877     03BF                     l2200:
  1878     03BF  3182  22FA  3183   	fcall	_shield_code
  1879                           
  1880                           ;Master.c: 70:     drive();
  1881     03C2  3182  22BC  3183   	fcall	_drive
  1882     03C5                     l347:
  1883     03C5  3180  2802         	ljmp	start
  1884     03C7                     __end_of_main:
  1885                           
  1886                           	psect	text1
  1887     02FA                     __ptext1:	
  1888 ;; *************** function _shield_code *****************
  1889 ;; Defined at:
  1890 ;;		line 10 in file "./SheildCode.h"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 4
  1911 ;; This function calls:
  1912 ;;		_PCLS_info
  1913 ;;		_set_laser
  1914 ;;		_shoot_laser
  1915 ;;		_transmit_shield_code
  1916 ;;		_user_data
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922     02FA                     _shield_code:	
  1923                           ;psect for function _shield_code
  1924                           
  1925     02FA                     l2072:	
  1926                           ;incstack = 0
  1927                           ; Regs used in _shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1928                           
  1929                           
  1930                           ;./SheildCode.h: 11:    transmit_shield_code();
  1931     02FA  3180  2049  3182   	fcall	_PCLS_info
  1932     02FD                     l2074:
  1933                           
  1934                           ;./SheildCode.h: 12:             _delay((unsigned long)((100)*(400000/4000.0)));
  1935     02FD  3001               	movlw	1
  1936     02FE  0020               	movlb	0	; select bank0
  1937     02FF  00DB               	movwf	_shield_flag	;volatile
  1938     0300                     l2076:
  1939                           
  1940                           ;./SheildCode.h: 13:             set_laser(0);
  1941     0300  085B               	movf	_shield_flag,w	;volatile
  1942     0301  1903               	btfsc	3,2
  1943     0302  2B04               	goto	u1761
  1944     0303  2B05               	goto	u1760
  1945     0304                     u1761:
  1946     0304  2B37               	goto	l327
  1947     0305                     u1760:
  1948     0305                     l2078:
  1949                           
  1950                           ;./SheildCode.h: 14:             _delay((unsigned long)((6000)*(400000/4000.0)));
  1951     0305  3180  2087  3182   	fcall	_user_data
  1952     0308                     l2080:
  1953                           
  1954                           ;./SheildCode.h: 15:   }
  1955     0308  0020               	movlb	0	; select bank0
  1956     0309  084C               	movf	_swA,w	;volatile
  1957     030A  044D               	iorwf	_swA+1,w	;volatile
  1958     030B  1903               	btfsc	3,2
  1959     030C  2B0E               	goto	u1771
  1960     030D  2B0F               	goto	u1770
  1961     030E                     u1771:
  1962     030E  2B37               	goto	l327
  1963     030F                     u1770:
  1964     030F                     l2082:
  1965                           
  1966                           ;./SheildCode.h: 16:  }
  1967     030F  3001               	movlw	1
  1968     0310  3181  21C8  3182   	fcall	_set_laser
  1969     0313                     l2084:
  1970                           
  1971                           ;./SheildCode.h: 17: }
  1972     0313  300D               	movlw	13
  1973     0314  00FC               	movwf	??_shield_code
  1974     0315  30FC               	movlw	252
  1975     0316                     u1937:
  1976     0316  0B89               	decfsz	9,f
  1977     0317  2B16               	goto	u1937
  1978     0318  0BFC               	decfsz	??_shield_code,f
  1979     0319  2B16               	goto	u1937
  1980     031A                     l2086:
  1981     031A  3001               	movlw	1
  1982     031B  3181  21F4  3182   	fcall	_shoot_laser
  1983     031E                     l2088:
  1984     031E  3181  211E  3182   	fcall	_transmit_shield_code
  1985     0321                     l2090:
  1986     0321  300D               	movlw	13
  1987     0322  00FC               	movwf	??_shield_code
  1988     0323  30FC               	movlw	252
  1989     0324                     u1947:
  1990     0324  0B89               	decfsz	9,f
  1991     0325  2B24               	goto	u1947
  1992     0326  0BFC               	decfsz	??_shield_code,f
  1993     0327  2B24               	goto	u1947
  1994     0328  3000               	movlw	0
  1995     0329  3181  21C8  3182   	fcall	_set_laser
  1996     032C                     l2092:
  1997     032C  3004               	movlw	4
  1998     032D  00FD               	movwf	??_shield_code+1
  1999     032E  300C               	movlw	12
  2000     032F  00FC               	movwf	??_shield_code
  2001     0330  3034               	movlw	52
  2002     0331                     u1957:
  2003     0331  0B89               	decfsz	9,f
  2004     0332  2B31               	goto	u1957
  2005     0333  0BFC               	decfsz	??_shield_code,f
  2006     0334  2B31               	goto	u1957
  2007     0335  0BFD               	decfsz	??_shield_code+1,f
  2008     0336  2B31               	goto	u1957
  2009     0337                     l327:
  2010     0337  0008               	return
  2011     0338                     __end_of_shield_code:
  2012                           
  2013                           	psect	text2
  2014     011E                     __ptext2:	
  2015 ;; *************** function _transmit_shield_code *****************
  2016 ;; Defined at:
  2017 ;;		line 237 in file "./Commands.h"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  11759           6    0[BANK0 ] volatile unsigned char [
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2032 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2033 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2034 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2035 ;;Total ram usage:        7 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 2
  2038 ;; This function calls:
  2039 ;;		_UART_send
  2040 ;; This function is called by:
  2041 ;;		_shield_code
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045     011E                     _transmit_shield_code:	
  2046                           ;psect for function _transmit_shield_code
  2047                           
  2048     011E                     l1902:	
  2049                           ;incstack = 0
  2050                           ; Regs used in _transmit_shield_code: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2051                           
  2052     011E                     l1904:	
  2053                           ;./Commands.h: 239:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x02, 0
      +                          x09, 0x00, 0x00}, 6)){}
  2054                           
  2055     011E  30D5               	movlw	low transmit_shield_code@F11758
  2056     011F  0086               	movwf	6
  2057     0120  3000               	movlw	high transmit_shield_code@F11758
  2058     0121  0087               	movwf	7
  2059     0122  3020               	movlw	low transmit_shield_code@11759
  2060     0123  0084               	movwf	4
  2061     0124  3000               	movlw	high transmit_shield_code@11759
  2062     0125  0085               	movwf	5
  2063     0126  3006               	movlw	6
  2064     0127  00F8               	movwf	??_transmit_shield_code
  2065     0128                     u1490:
  2066     0128  0016               	moviw fsr1++
  2067     0129  001A               	movwi fsr0++
  2068     012A  0BF8               	decfsz	??_transmit_shield_code,f
  2069     012B  2928               	goto	u1490
  2070     012C                     l1906:
  2071     012C  3006               	movlw	6
  2072     012D  00F2               	movwf	UART_send@size
  2073     012E  3000               	movlw	0
  2074     012F  00F3               	movwf	UART_send@size+1
  2075     0130  3020               	movlw	(low (transmit_shield_code@11759| 0))& (0+255)
  2076     0131  3181  219F  3181   	fcall	_UART_send
  2077     0134  3A00               	xorlw	0
  2078     0135  1903               	skipnz
  2079     0136  2938               	goto	u1501
  2080     0137  2939               	goto	u1500
  2081     0138                     u1501:
  2082     0138  291E               	goto	l1904
  2083     0139                     u1500:
  2084     0139                     l188:
  2085     0139  0008               	return
  2086     013A                     __end_of_transmit_shield_code:
  2087                           
  2088                           	psect	text3
  2089     01F4                     __ptext3:	
  2090 ;; *************** function _shoot_laser *****************
  2091 ;; Defined at:
  2092 ;;		line 232 in file "./Commands.h"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  en              1    wreg     unsigned char 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  en              1    0[BANK0 ] unsigned char 
  2097 ;;  11756           7    1[BANK0 ] volatile unsigned char [
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  1    wreg      void 
  2100 ;; Registers used:
  2101 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2108 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2109 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2110 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;Total ram usage:        9 bytes
  2112 ;; Hardware stack levels used: 1
  2113 ;; Hardware stack levels required when called: 2
  2114 ;; This function calls:
  2115 ;;		_UART_send
  2116 ;; This function is called by:
  2117 ;;		_shield_code
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121     01F4                     _shoot_laser:	
  2122                           ;psect for function _shoot_laser
  2123                           
  2124                           
  2125                           ;incstack = 0
  2126                           ; Regs used in _shoot_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2127                           ;shoot_laser@en stored from wreg
  2128     01F4  0020               	movlb	0	; select bank0
  2129     01F5  00A0               	movwf	shoot_laser@en
  2130     01F6                     l1882:
  2131     01F6                     l1884:	
  2132                           ;./Commands.h: 232: void shoot_laser(unsigned char en);./Commands.h: 233: {;./Commands.h
      +                          : 234:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0x09, 0x01, 0x
      +                          00, en}, 7)){}
  2133                           
  2134     01F6  30B1               	movlw	low shoot_laser@F11755
  2135     01F7  0086               	movwf	6
  2136     01F8  3000               	movlw	high shoot_laser@F11755
  2137     01F9  0087               	movwf	7
  2138     01FA  3021               	movlw	low shoot_laser@11756
  2139     01FB  0084               	movwf	4
  2140     01FC  3000               	movlw	high shoot_laser@11756
  2141     01FD  0085               	movwf	5
  2142     01FE  3007               	movlw	7
  2143     01FF  00F8               	movwf	??_shoot_laser
  2144     0200                     u1470:
  2145     0200  0016               	moviw fsr1++
  2146     0201  001A               	movwi fsr0++
  2147     0202  0BF8               	decfsz	??_shoot_laser,f
  2148     0203  2A00               	goto	u1470
  2149     0204                     l1886:
  2150     0204  30FE               	movlw	254
  2151     0205  0020               	movlb	0	; select bank0
  2152     0206  00A1               	movwf	shoot_laser@11756	;volatile
  2153     0207                     l1888:
  2154     0207  3019               	movlw	25
  2155     0208  00A2               	movwf	shoot_laser@11756+1	;volatile
  2156     0209                     l1890:
  2157     0209  3001               	movlw	1
  2158     020A  00A3               	movwf	shoot_laser@11756+2	;volatile
  2159     020B                     l1892:
  2160     020B  3009               	movlw	9
  2161     020C  00A4               	movwf	shoot_laser@11756+3	;volatile
  2162     020D                     l1894:
  2163     020D  3001               	movlw	1
  2164     020E  00A5               	movwf	shoot_laser@11756+4	;volatile
  2165     020F                     l1896:
  2166     020F  01A6               	clrf	shoot_laser@11756+5	;volatile
  2167     0210                     l1898:
  2168     0210  0820               	movf	shoot_laser@en,w
  2169     0211  00A7               	movwf	shoot_laser@11756+6	;volatile
  2170     0212                     l1900:
  2171     0212  3007               	movlw	7
  2172     0213  00F2               	movwf	UART_send@size
  2173     0214  3000               	movlw	0
  2174     0215  00F3               	movwf	UART_send@size+1
  2175     0216  3021               	movlw	(low (shoot_laser@11756| 0))& (0+255)
  2176     0217  3181  219F  3181   	fcall	_UART_send
  2177     021A  3A00               	xorlw	0
  2178     021B  1903               	skipnz
  2179     021C  2A1E               	goto	u1481
  2180     021D  2A1F               	goto	u1480
  2181     021E                     u1481:
  2182     021E  29F6               	goto	l1884
  2183     021F                     u1480:
  2184     021F                     l180:
  2185     021F  0008               	return
  2186     0220                     __end_of_shoot_laser:
  2187                           
  2188                           	psect	text4
  2189     01C8                     __ptext4:	
  2190 ;; *************** function _set_laser *****************
  2191 ;; Defined at:
  2192 ;;		line 227 in file "./Commands.h"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  en              1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  en              1    0[BANK0 ] unsigned char 
  2197 ;;  11752           7    1[BANK0 ] volatile unsigned char [
  2198 ;; Return value:  Size  Location     Type
  2199 ;;                  1    wreg      void 
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 0/0
  2204 ;;		On exit  : 0/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2208 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2210 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2211 ;;Total ram usage:        9 bytes
  2212 ;; Hardware stack levels used: 1
  2213 ;; Hardware stack levels required when called: 2
  2214 ;; This function calls:
  2215 ;;		_UART_send
  2216 ;; This function is called by:
  2217 ;;		_shield_code
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221     01C8                     _set_laser:	
  2222                           ;psect for function _set_laser
  2223                           
  2224                           
  2225                           ;incstack = 0
  2226                           ; Regs used in _set_laser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2227                           ;set_laser@en stored from wreg
  2228     01C8  0020               	movlb	0	; select bank0
  2229     01C9  00A0               	movwf	set_laser@en
  2230     01CA                     l1862:
  2231     01CA                     l1864:	
  2232                           ;./Commands.h: 227: void set_laser(unsigned char en);./Commands.h: 228: {;./Commands.h: 
      +                          229:     while(!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 0x08, 0x01, 0x00
      +                          , en}, 7)){}
  2233                           
  2234     01CA  30B8               	movlw	low set_laser@F11751
  2235     01CB  0086               	movwf	6
  2236     01CC  3000               	movlw	high set_laser@F11751
  2237     01CD  0087               	movwf	7
  2238     01CE  3021               	movlw	low set_laser@11752
  2239     01CF  0084               	movwf	4
  2240     01D0  3000               	movlw	high set_laser@11752
  2241     01D1  0085               	movwf	5
  2242     01D2  3007               	movlw	7
  2243     01D3  00F8               	movwf	??_set_laser
  2244     01D4                     u1450:
  2245     01D4  0016               	moviw fsr1++
  2246     01D5  001A               	movwi fsr0++
  2247     01D6  0BF8               	decfsz	??_set_laser,f
  2248     01D7  29D4               	goto	u1450
  2249     01D8                     l1866:
  2250     01D8  30FE               	movlw	254
  2251     01D9  0020               	movlb	0	; select bank0
  2252     01DA  00A1               	movwf	set_laser@11752	;volatile
  2253     01DB                     l1868:
  2254     01DB  3019               	movlw	25
  2255     01DC  00A2               	movwf	set_laser@11752+1	;volatile
  2256     01DD                     l1870:
  2257     01DD  3001               	movlw	1
  2258     01DE  00A3               	movwf	set_laser@11752+2	;volatile
  2259     01DF                     l1872:
  2260     01DF  3008               	movlw	8
  2261     01E0  00A4               	movwf	set_laser@11752+3	;volatile
  2262     01E1                     l1874:
  2263     01E1  3001               	movlw	1
  2264     01E2  00A5               	movwf	set_laser@11752+4	;volatile
  2265     01E3                     l1876:
  2266     01E3  01A6               	clrf	set_laser@11752+5	;volatile
  2267     01E4                     l1878:
  2268     01E4  0820               	movf	set_laser@en,w
  2269     01E5  00A7               	movwf	set_laser@11752+6	;volatile
  2270     01E6                     l1880:
  2271     01E6  3007               	movlw	7
  2272     01E7  00F2               	movwf	UART_send@size
  2273     01E8  3000               	movlw	0
  2274     01E9  00F3               	movwf	UART_send@size+1
  2275     01EA  3021               	movlw	(low (set_laser@11752| 0))& (0+255)
  2276     01EB  3181  219F  3181   	fcall	_UART_send
  2277     01EE  3A00               	xorlw	0
  2278     01EF  1903               	skipnz
  2279     01F0  29F2               	goto	u1461
  2280     01F1  29F3               	goto	u1460
  2281     01F2                     u1461:
  2282     01F2  29CA               	goto	l1864
  2283     01F3                     u1460:
  2284     01F3                     l172:
  2285     01F3  0008               	return
  2286     01F4                     __end_of_set_laser:
  2287                           
  2288                           	psect	text5
  2289     0049                     __ptext5:	
  2290 ;; *************** function _PCLS_info *****************
  2291 ;; Defined at:
  2292 ;;		line 135 in file "./Commands.h"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;		None
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;Total ram usage:        0 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 3
  2313 ;; This function calls:
  2314 ;;		_PCLS_info_receive
  2315 ;;		_PCLS_info_send
  2316 ;; This function is called by:
  2317 ;;		_shield_code
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321     0049                     _PCLS_info:	
  2322                           ;psect for function _PCLS_info
  2323                           
  2324     0049                     l1848:	
  2325                           ;incstack = 0
  2326                           ; Regs used in _PCLS_info: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2327                           
  2328                           
  2329                           ;./Commands.h: 137:     PCLS_info_send();
  2330     0049  3181  2102  3180   	fcall	_PCLS_info_send
  2331     004C                     l1852:	
  2332                           ;./Commands.h: 138:     while(!PCLS_info_receive())
  2333                           
  2334                           
  2335                           ;./Commands.h: 138:     while(!PCLS_info_receive())
  2336     004C  3183  2338  3180   	fcall	_PCLS_info_receive
  2337     004F  3A00               	xorlw	0
  2338     0050  1903               	skipnz
  2339     0051  2853               	goto	u1431
  2340     0052  2854               	goto	u1430
  2341     0053                     u1431:
  2342     0053  2849               	goto	l1848
  2343     0054                     u1430:
  2344     0054                     l122:
  2345     0054  0008               	return
  2346     0055                     __end_of_PCLS_info:
  2347                           
  2348                           	psect	text6
  2349     0102                     __ptext6:	
  2350 ;; *************** function _PCLS_info_send *****************
  2351 ;; Defined at:
  2352 ;;		line 105 in file "./Commands.h"
  2353 ;; Parameters:    Size  Location     Type
  2354 ;;		None
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  11721           6    0[BANK0 ] volatile unsigned char [
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  1    wreg      void 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2367 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2368 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2369 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2370 ;;Total ram usage:        7 bytes
  2371 ;; Hardware stack levels used: 1
  2372 ;; Hardware stack levels required when called: 2
  2373 ;; This function calls:
  2374 ;;		_UART_send
  2375 ;; This function is called by:
  2376 ;;		_PCLS_info
  2377 ;; This function uses a non-reentrant model
  2378 ;;
  2379                           
  2380     0102                     _PCLS_info_send:	
  2381                           ;psect for function _PCLS_info_send
  2382                           
  2383     0102                     l1664:	
  2384                           ;incstack = 0
  2385                           ; Regs used in _PCLS_info_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2386                           
  2387     0102                     l1666:	
  2388                           ;./Commands.h: 107:     while (!UART_send((volatile unsigned char []){0xFE, 0x19, 0x01, 
      +                          0x04, 0x00, 0x00}, 6)) {}
  2389                           
  2390     0102  30E1               	movlw	low PCLS_info_send@F11720
  2391     0103  0086               	movwf	6
  2392     0104  3000               	movlw	high PCLS_info_send@F11720
  2393     0105  0087               	movwf	7
  2394     0106  3020               	movlw	low PCLS_info_send@11721
  2395     0107  0084               	movwf	4
  2396     0108  3000               	movlw	high PCLS_info_send@11721
  2397     0109  0085               	movwf	5
  2398     010A  3006               	movlw	6
  2399     010B  00F8               	movwf	??_PCLS_info_send
  2400     010C                     u1100:
  2401     010C  0016               	moviw fsr1++
  2402     010D  001A               	movwi fsr0++
  2403     010E  0BF8               	decfsz	??_PCLS_info_send,f
  2404     010F  290C               	goto	u1100
  2405     0110                     l1668:
  2406     0110  3006               	movlw	6
  2407     0111  00F2               	movwf	UART_send@size
  2408     0112  3000               	movlw	0
  2409     0113  00F3               	movwf	UART_send@size+1
  2410     0114  3020               	movlw	(low (PCLS_info_send@11721| 0))& (0+255)
  2411     0115  3181  219F  3181   	fcall	_UART_send
  2412     0118  3A00               	xorlw	0
  2413     0119  1903               	skipnz
  2414     011A  291C               	goto	u1111
  2415     011B  291D               	goto	u1110
  2416     011C                     u1111:
  2417     011C  2902               	goto	l1666
  2418     011D                     u1110:
  2419     011D                     l108:
  2420     011D  0008               	return
  2421     011E                     __end_of_PCLS_info_send:
  2422                           
  2423                           	psect	text7
  2424     0338                     __ptext7:	
  2425 ;; *************** function _PCLS_info_receive *****************
  2426 ;; Defined at:
  2427 ;;		line 110 in file "./Commands.h"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  r              12    0[BANK0 ] volatile unsigned char [
  2432 ;;  j               1   13[BANK0 ] volatile unsigned char 
  2433 ;;  s               1   12[BANK0 ] volatile unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      unsigned char 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2445 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2446 ;;      Totals:         3      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2447 ;;Total ram usage:       17 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 1
  2450 ;; This function calls:
  2451 ;;		_rx_wait
  2452 ;; This function is called by:
  2453 ;;		_PCLS_info
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457     0338                     _PCLS_info_receive:	
  2458                           ;psect for function _PCLS_info_receive
  2459                           
  2460     0338                     l1670:	
  2461                           ;incstack = 0
  2462                           ; Regs used in _PCLS_info_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2463                           
  2464                           
  2465                           ;./Commands.h: 112:     volatile char s=12, j, r[12];
  2466     0338  300C               	movlw	12
  2467     0339  0020               	movlb	0	; select bank0
  2468     033A  00AC               	movwf	PCLS_info_receive@s	;volatile
  2469     033B                     l1672:
  2470                           
  2471                           ;./Commands.h: 114:     for (j=0; j < s; j++)
  2472     033B  01AD               	clrf	PCLS_info_receive@j	;volatile
  2473     033C  2B55               	goto	l1684
  2474     033D                     l1674:
  2475                           
  2476                           ;./Commands.h: 115:     {;./Commands.h: 116:         if (rx_wait())
  2477     033D  3180  20B3  3183   	fcall	_rx_wait
  2478     0340  3A00               	xorlw	0
  2479     0341  1903               	skipnz
  2480     0342  2B44               	goto	u1121
  2481     0343  2B45               	goto	u1120
  2482     0344                     u1121:
  2483     0344  2B4E               	goto	l1678
  2484     0345                     u1120:
  2485     0345                     l1676:
  2486                           
  2487                           ;./Commands.h: 117:         {;./Commands.h: 118:             r[j] = RCREG;
  2488     0345  0020               	movlb	0	; select bank0
  2489     0346  082D               	movf	PCLS_info_receive@j,w
  2490     0347  3E20               	addlw	(low (PCLS_info_receive@r| 0))& (0+255)
  2491     0348  0086               	movwf	6
  2492     0349  0187               	clrf	7
  2493     034A  0022               	movlb	2	; select bank2
  2494     034B  0819               	movf	25,w	;volatile
  2495     034C  0081               	movwf	1
  2496                           
  2497                           ;./Commands.h: 119:         }
  2498     034D  2B50               	goto	l1682
  2499     034E                     l1678:
  2500                           
  2501                           ;./Commands.h: 121:         {;./Commands.h: 122:             return 0;
  2502     034E  3000               	movlw	0
  2503     034F  2B79               	goto	l115
  2504     0350                     l1682:
  2505                           
  2506                           ;./Commands.h: 124:     }
  2507     0350  3001               	movlw	1
  2508     0351  00F2               	movwf	??_PCLS_info_receive
  2509     0352  0872               	movf	??_PCLS_info_receive,w
  2510     0353  0020               	movlb	0	; select bank0
  2511     0354  07AD               	addwf	PCLS_info_receive@j,f	;volatile
  2512     0355                     l1684:
  2513     0355  082C               	movf	PCLS_info_receive@s,w	;volatile
  2514     0356  022D               	subwf	PCLS_info_receive@j,w	;volatile
  2515     0357  1C03               	skipc
  2516     0358  2B5A               	goto	u1131
  2517     0359  2B5B               	goto	u1130
  2518     035A                     u1131:
  2519     035A  2B3D               	goto	l1674
  2520     035B                     u1130:
  2521     035B                     l1686:
  2522                           
  2523                           ;./Commands.h: 126:     teamID = r[6];
  2524     035B  0826               	movf	PCLS_info_receive@r+6,w	;volatile
  2525     035C  00DD               	movwf	_teamID	;volatile
  2526                           
  2527                           ;./Commands.h: 127:     playerID = r[7];
  2528     035D  0827               	movf	PCLS_info_receive@r+7,w	;volatile
  2529     035E  00DC               	movwf	_playerID	;volatile
  2530                           
  2531                           ;./Commands.h: 128:     health = r[8];
  2532     035F  0828               	movf	PCLS_info_receive@r+8,w	;volatile
  2533     0360  00F2               	movwf	??_PCLS_info_receive
  2534     0361  01F3               	clrf	??_PCLS_info_receive+1
  2535     0362  0872               	movf	??_PCLS_info_receive,w
  2536     0363  0021               	movlb	1	; select bank1
  2537     0364  00C5               	movwf	_health^(0+128)	;volatile
  2538     0365  0873               	movf	??_PCLS_info_receive+1,w
  2539     0366  00C6               	movwf	(_health+1)^(0+128)	;volatile
  2540                           
  2541                           ;./Commands.h: 129:     health += r[9] << 8;
  2542     0367  0020               	movlb	0	; select bank0
  2543     0368  0829               	movf	PCLS_info_receive@r+9,w	;volatile
  2544     0369  00F2               	movwf	??_PCLS_info_receive
  2545     036A  01F3               	clrf	??_PCLS_info_receive+1
  2546     036B  0872               	movf	??_PCLS_info_receive,w
  2547     036C  00F3               	movwf	??_PCLS_info_receive+1
  2548     036D  01F2               	clrf	??_PCLS_info_receive
  2549     036E  0872               	movf	??_PCLS_info_receive,w
  2550     036F  0021               	movlb	1	; select bank1
  2551     0370  07C5               	addwf	_health^(0+128),f	;volatile
  2552     0371  0873               	movf	??_PCLS_info_receive+1,w
  2553     0372  3DC6               	addwfc	(_health+1)^(0+128),f	;volatile
  2554                           
  2555                           ;./Commands.h: 130:     shield_flag = r[10];
  2556     0373  0020               	movlb	0	; select bank0
  2557     0374  082A               	movf	PCLS_info_receive@r+10,w	;volatile
  2558     0375  00DB               	movwf	_shield_flag	;volatile
  2559                           
  2560                           ;./Commands.h: 131:     repair_flag = r[11];
  2561     0376  082B               	movf	PCLS_info_receive@r+11,w	;volatile
  2562     0377  00DA               	movwf	_repair_flag	;volatile
  2563                           
  2564                           ;./Commands.h: 132:     return 1;
  2565     0378  3001               	movlw	1
  2566     0379                     l115:
  2567     0379  0008               	return
  2568     037A                     __end_of_PCLS_info_receive:
  2569                           
  2570                           	psect	text8
  2571     0426                     __ptext8:	
  2572 ;; *************** function _line_follower *****************
  2573 ;; Defined at:
  2574 ;;		line 47 in file "./Line Follower.h"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;		None
  2577 ;; Auto vars:     Size  Location     Type
  2578 ;;  r_val           2   15[BANK0 ] volatile unsigned int 
  2579 ;;  m_val           2   13[BANK0 ] volatile unsigned int 
  2580 ;;  l_val           2   11[BANK0 ] volatile unsigned int 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2591 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2592 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2593 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2594 ;;Total ram usage:        8 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 3
  2597 ;; This function calls:
  2598 ;;		_abs
  2599 ;;		_motor
  2600 ;;		_read_adc
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606     0426                     _line_follower:	
  2607                           ;psect for function _line_follower
  2608                           
  2609     0426                     l2004:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _line_follower: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2612                           
  2613                           
  2614                           ;./Line Follower.h: 49:     ADCON0bits.ADGO = 1;;./Line Follower.h: 51:     l_val = read
      +                          _adc(lpin);
  2615     0426  0020               	movlb	0	; select bank0
  2616     0427  1011               	bcf	17,0	;volatile
  2617                           
  2618                           ;./Line Follower.h: 52:     ADCON0bits.ADGO = 1;
  2619     0428  1091               	bcf	17,1	;volatile
  2620                           
  2621                           ;./Line Follower.h: 53:     while(ADCON0bits.ADGO){}
  2622     0429  1111               	bcf	17,2	;volatile
  2623                           
  2624                           ;./Line Follower.h: 55:     ADCON0bits.ADGO = 1;
  2625     042A  1196               	bcf	22,3	;volatile
  2626                           
  2627                           ;./Line Follower.h: 57:     r_val = read_adc(rpin);
  2628     042B  0021               	movlb	1	; select bank1
  2629     042C  1413               	bsf	19,0	;volatile
  2630     042D                     l291:	
  2631                           ;./Line Follower.h: 58: 
  2632                           
  2633     042D  1813               	btfsc	19,0	;volatile
  2634     042E  2C30               	goto	u1651
  2635     042F  2C31               	goto	u1650
  2636     0430                     u1651:
  2637     0430  2C2D               	goto	l291
  2638     0431                     u1650:
  2639     0431                     l2006:
  2640                           
  2641                           ;./Line Follower.h: 59:     if(m_val > line_colour)
  2642     0431  300B               	movlw	11
  2643     0432  3181  2178  3184   	fcall	_read_adc
  2644     0435  0871               	movf	?_read_adc+1,w
  2645     0436  0020               	movlb	0	; select bank0
  2646     0437  00AC               	movwf	line_follower@l_val+1	;volatile
  2647     0438  0870               	movf	?_read_adc,w
  2648     0439  00AB               	movwf	line_follower@l_val	;volatile
  2649     043A                     l2008:
  2650                           
  2651                           ;./Line Follower.h: 60:     {
  2652     043A  0021               	movlb	1	; select bank1
  2653     043B  1413               	bsf	19,0	;volatile
  2654     043C                     l294:	
  2655                           ;./Line Follower.h: 61:   l_vec = fast;
  2656                           
  2657     043C  1813               	btfsc	19,0	;volatile
  2658     043D  2C3F               	goto	u1661
  2659     043E  2C40               	goto	u1660
  2660     043F                     u1661:
  2661     043F  2C3C               	goto	l294
  2662     0440                     u1660:
  2663     0440                     l2010:
  2664                           
  2665                           ;./Line Follower.h: 62:   r_vec = fast;
  2666     0440  3009               	movlw	9
  2667     0441  3181  2178  3184   	fcall	_read_adc
  2668     0444  0871               	movf	?_read_adc+1,w
  2669     0445  0020               	movlb	0	; select bank0
  2670     0446  00AE               	movwf	line_follower@m_val+1	;volatile
  2671     0447  0870               	movf	?_read_adc,w
  2672     0448  00AD               	movwf	line_follower@m_val	;volatile
  2673     0449                     l2012:
  2674                           
  2675                           ;./Line Follower.h: 63:         LATAbits.LATA1 = 1;
  2676     0449  0021               	movlb	1	; select bank1
  2677     044A  1413               	bsf	19,0	;volatile
  2678     044B                     l297:	
  2679                           ;./Line Follower.h: 64:     }
  2680                           
  2681     044B  1813               	btfsc	19,0	;volatile
  2682     044C  2C4E               	goto	u1671
  2683     044D  2C4F               	goto	u1670
  2684     044E                     u1671:
  2685     044E  2C4B               	goto	l297
  2686     044F                     u1670:
  2687     044F                     l2014:
  2688                           
  2689                           ;./Line Follower.h: 65:     else
  2690     044F  300A               	movlw	10
  2691     0450  3181  2178  3184   	fcall	_read_adc
  2692     0453  0871               	movf	?_read_adc+1,w
  2693     0454  0020               	movlb	0	; select bank0
  2694     0455  00B0               	movwf	line_follower@r_val+1	;volatile
  2695     0456  0870               	movf	?_read_adc,w
  2696     0457  00AF               	movwf	line_follower@r_val	;volatile
  2697     0458                     l2016:
  2698                           
  2699                           ;./Line Follower.h: 67:   l_vec = slow;
  2700     0458  082E               	movf	line_follower@m_val+1,w	;volatile
  2701     0459  0267               	subwf	_line_colour+1,w	;volatile
  2702     045A  1D03               	skipz
  2703     045B  2C5E               	goto	u1685
  2704     045C  082D               	movf	line_follower@m_val,w	;volatile
  2705     045D  0266               	subwf	_line_colour,w	;volatile
  2706     045E                     u1685:
  2707     045E  1803               	skipnc
  2708     045F  2C61               	goto	u1681
  2709     0460  2C62               	goto	u1680
  2710     0461                     u1681:
  2711     0461  2C6C               	goto	l2022
  2712     0462                     u1680:
  2713     0462                     l2018:
  2714                           
  2715                           ;./Line Follower.h: 68:   r_vec = slow;;./Line Follower.h: 69:         LATAbits.LATA1 = 
      +                          0;
  2716     0462  0865               	movf	_fast+1,w	;volatile
  2717     0463  00EB               	movwf	_l_vec+1	;volatile
  2718     0464  0864               	movf	_fast,w	;volatile
  2719     0465  00EA               	movwf	_l_vec	;volatile
  2720                           
  2721                           ;./Line Follower.h: 70:     }
  2722     0466  0865               	movf	_fast+1,w	;volatile
  2723     0467  00E9               	movwf	_r_vec+1	;volatile
  2724     0468  0864               	movf	_fast,w	;volatile
  2725     0469  00E8               	movwf	_r_vec	;volatile
  2726     046A                     l2020:
  2727                           
  2728                           ;./Line Follower.h: 71: 
  2729     046A  1496               	bsf	22,1	;volatile
  2730                           
  2731                           ;./Line Follower.h: 72:     if(l_val > line_colour)
  2732     046B  2C75               	goto	l301
  2733     046C                     l2022:
  2734                           
  2735                           ;./Line Follower.h: 74:   l_vec += speed_inc;;./Line Follower.h: 75:   r_vec -= speed_in
      +                          c*2;
  2736     046C  0863               	movf	_slow+1,w	;volatile
  2737     046D  00EB               	movwf	_l_vec+1	;volatile
  2738     046E  0862               	movf	_slow,w	;volatile
  2739     046F  00EA               	movwf	_l_vec	;volatile
  2740                           
  2741                           ;./Line Follower.h: 76:         LATAbits.LATA2 = 1;
  2742     0470  0863               	movf	_slow+1,w	;volatile
  2743     0471  00E9               	movwf	_r_vec+1	;volatile
  2744     0472  0862               	movf	_slow,w	;volatile
  2745     0473  00E8               	movwf	_r_vec	;volatile
  2746     0474                     l2024:
  2747                           
  2748                           ;./Line Follower.h: 77:     }
  2749     0474  1096               	bcf	22,1	;volatile
  2750     0475                     l301:	
  2751                           ;./Line Follower.h: 78:     else {LATAbits.LATA2 = 0;}
  2752                           
  2753                           
  2754                           ;./Line Follower.h: 80:     if(r_val > line_colour)
  2755     0475  082C               	movf	line_follower@l_val+1,w	;volatile
  2756     0476  0267               	subwf	_line_colour+1,w	;volatile
  2757     0477  1D03               	skipz
  2758     0478  2C7B               	goto	u1695
  2759     0479  082B               	movf	line_follower@l_val,w	;volatile
  2760     047A  0266               	subwf	_line_colour,w	;volatile
  2761     047B                     u1695:
  2762     047B  1803               	skipnc
  2763     047C  2C7E               	goto	u1691
  2764     047D  2C7F               	goto	u1690
  2765     047E                     u1691:
  2766     047E  2C8F               	goto	l302
  2767     047F                     u1690:
  2768     047F                     l2026:
  2769                           
  2770                           ;./Line Follower.h: 81:     {;./Line Follower.h: 82:   l_vec -= speed_inc*2;
  2771     047F  0860               	movf	_speed_inc,w	;volatile
  2772     0480  07EA               	addwf	_l_vec,f	;volatile
  2773     0481  0861               	movf	_speed_inc+1,w	;volatile
  2774     0482  3DEB               	addwfc	_l_vec+1,f	;volatile
  2775     0483                     l2028:
  2776                           
  2777                           ;./Line Follower.h: 83:   r_vec += speed_inc;
  2778     0483  0861               	movf	_speed_inc+1,w	;volatile
  2779     0484  00FD               	movwf	??_line_follower+1
  2780     0485  0860               	movf	_speed_inc,w	;volatile
  2781     0486  00FC               	movwf	??_line_follower
  2782     0487  35FC               	lslf	??_line_follower,f
  2783     0488  0DFD               	rlf	??_line_follower+1,f
  2784     0489  087C               	movf	??_line_follower,w
  2785     048A  02E8               	subwf	_r_vec,f	;volatile
  2786     048B  087D               	movf	??_line_follower+1,w
  2787     048C  3BE9               	subwfb	_r_vec+1,f	;volatile
  2788     048D                     l2030:
  2789                           
  2790                           ;./Line Follower.h: 84:         LATAbits.LATA0 = 1;
  2791     048D  1516               	bsf	22,2	;volatile
  2792                           
  2793                           ;./Line Follower.h: 85:     }
  2794     048E  2C90               	goto	l2032
  2795     048F                     l302:	
  2796                           ;./Line Follower.h: 86:     else {LATAbits.LATA0 = 0;}
  2797                           
  2798     048F  1116               	bcf	22,2	;volatile
  2799     0490                     l2032:
  2800                           
  2801                           ;./Line Follower.h: 88:     if(l_vec >= 100)
  2802     0490  0830               	movf	line_follower@r_val+1,w	;volatile
  2803     0491  0267               	subwf	_line_colour+1,w	;volatile
  2804     0492  1D03               	skipz
  2805     0493  2C96               	goto	u1705
  2806     0494  082F               	movf	line_follower@r_val,w	;volatile
  2807     0495  0266               	subwf	_line_colour,w	;volatile
  2808     0496                     u1705:
  2809     0496  1803               	skipnc
  2810     0497  2C99               	goto	u1701
  2811     0498  2C9A               	goto	u1700
  2812     0499                     u1701:
  2813     0499  2CAA               	goto	l304
  2814     049A                     u1700:
  2815     049A                     l2034:
  2816                           
  2817                           ;./Line Follower.h: 89:     {;./Line Follower.h: 90:         l_dir = 1;
  2818     049A  0861               	movf	_speed_inc+1,w	;volatile
  2819     049B  00FD               	movwf	??_line_follower+1
  2820     049C  0860               	movf	_speed_inc,w	;volatile
  2821     049D  00FC               	movwf	??_line_follower
  2822     049E  35FC               	lslf	??_line_follower,f
  2823     049F  0DFD               	rlf	??_line_follower+1,f
  2824     04A0  087C               	movf	??_line_follower,w
  2825     04A1  02EA               	subwf	_l_vec,f	;volatile
  2826     04A2  087D               	movf	??_line_follower+1,w
  2827     04A3  3BEB               	subwfb	_l_vec+1,f	;volatile
  2828     04A4                     l2036:
  2829                           
  2830                           ;./Line Follower.h: 91:         l_vec -= 100;
  2831     04A4  0860               	movf	_speed_inc,w	;volatile
  2832     04A5  07E8               	addwf	_r_vec,f	;volatile
  2833     04A6  0861               	movf	_speed_inc+1,w	;volatile
  2834     04A7  3DE9               	addwfc	_r_vec+1,f	;volatile
  2835     04A8                     l2038:
  2836                           
  2837                           ;./Line Follower.h: 92:     }
  2838     04A8  1416               	bsf	22,0	;volatile
  2839                           
  2840                           ;./Line Follower.h: 93:     else
  2841     04A9  2CAB               	goto	l2040
  2842     04AA                     l304:	
  2843                           ;./Line Follower.h: 94:     {
  2844                           
  2845     04AA  1016               	bcf	22,0	;volatile
  2846     04AB                     l2040:
  2847                           
  2848                           ;./Line Follower.h: 96:         l_vec = 100 - l_vec;
  2849     04AB  086B               	movf	_l_vec+1,w	;volatile
  2850     04AC  3A80               	xorlw	128
  2851     04AD  00FC               	movwf	??_line_follower
  2852     04AE  3080               	movlw	128
  2853     04AF  027C               	subwf	??_line_follower,w
  2854     04B0  1D03               	skipz
  2855     04B1  2CB4               	goto	u1715
  2856     04B2  3064               	movlw	100
  2857     04B3  026A               	subwf	_l_vec,w	;volatile
  2858     04B4                     u1715:
  2859     04B4  1C03               	skipc
  2860     04B5  2CB7               	goto	u1711
  2861     04B6  2CB8               	goto	u1710
  2862     04B7                     u1711:
  2863     04B7  2CC0               	goto	l2044
  2864     04B8                     u1710:
  2865     04B8                     l2042:
  2866                           
  2867                           ;./Line Follower.h: 97:     };./Line Follower.h: 98: 
  2868     04B8  3001               	movlw	1
  2869     04B9  0020               	movlb	0	; select bank0
  2870     04BA  00D9               	movwf	_l_dir	;volatile
  2871                           
  2872                           ;./Line Follower.h: 99:     if(r_vec >= 100)
  2873     04BB  309C               	movlw	156
  2874     04BC  07EA               	addwf	_l_vec,f	;volatile
  2875     04BD  30FF               	movlw	255
  2876     04BE  3DEB               	addwfc	_l_vec+1,f	;volatile
  2877                           
  2878                           ;./Line Follower.h: 100:     {
  2879     04BF  2CCC               	goto	l307
  2880     04C0                     l2044:
  2881                           
  2882                           ;./Line Follower.h: 102: ;./Line Follower.h: 103:         r_vec -= 100;
  2883     04C0  3002               	movlw	2
  2884     04C1  0020               	movlb	0	; select bank0
  2885     04C2  00D9               	movwf	_l_dir	;volatile
  2886                           
  2887                           ;./Line Follower.h: 104:     }
  2888     04C3  3064               	movlw	100
  2889     04C4  00FC               	movwf	??_line_follower
  2890     04C5  086A               	movf	_l_vec,w	;volatile
  2891     04C6  027C               	subwf	??_line_follower,w
  2892     04C7  00EA               	movwf	_l_vec	;volatile
  2893     04C8  096B               	comf	_l_vec+1,w	;volatile
  2894     04C9  1803               	skipnc
  2895     04CA  0A89               	incf	9,f
  2896     04CB  00EB               	movwf	_l_vec+1	;volatile
  2897     04CC                     l307:	
  2898                           ;./Line Follower.h: 105:     else
  2899                           
  2900                           
  2901                           ;./Line Follower.h: 107:         r_dir = 2;
  2902     04CC  0869               	movf	_r_vec+1,w	;volatile
  2903     04CD  3A80               	xorlw	128
  2904     04CE  00FC               	movwf	??_line_follower
  2905     04CF  3080               	movlw	128
  2906     04D0  027C               	subwf	??_line_follower,w
  2907     04D1  1D03               	skipz
  2908     04D2  2CD5               	goto	u1725
  2909     04D3  3064               	movlw	100
  2910     04D4  0268               	subwf	_r_vec,w	;volatile
  2911     04D5                     u1725:
  2912     04D5  1C03               	skipc
  2913     04D6  2CD8               	goto	u1721
  2914     04D7  2CD9               	goto	u1720
  2915     04D8                     u1721:
  2916     04D8  2CE1               	goto	l2048
  2917     04D9                     u1720:
  2918     04D9                     l2046:
  2919                           
  2920                           ;./Line Follower.h: 108:         r_vec = 100 - r_vec;;./Line Follower.h: 109:     }
  2921     04D9  3001               	movlw	1
  2922     04DA  0020               	movlb	0	; select bank0
  2923     04DB  00D8               	movwf	_r_dir	;volatile
  2924                           
  2925                           ;./Line Follower.h: 111:     if(l_vec > 200){l_vec = 200;}
  2926     04DC  309C               	movlw	156
  2927     04DD  07E8               	addwf	_r_vec,f	;volatile
  2928     04DE  30FF               	movlw	255
  2929     04DF  3DE9               	addwfc	_r_vec+1,f	;volatile
  2930                           
  2931                           ;./Line Follower.h: 112:     if(r_vec > 200){r_vec = 200;}
  2932     04E0  2CED               	goto	l309
  2933     04E1                     l2048:
  2934                           
  2935                           ;./Line Follower.h: 114:     PIR1bits.ADIF = 0;;./Line Follower.h: 115:     ADCON0bits.A
      +                          DGO = 1;
  2936     04E1  3002               	movlw	2
  2937     04E2  0020               	movlb	0	; select bank0
  2938     04E3  00D8               	movwf	_r_dir	;volatile
  2939                           
  2940                           ;./Line Follower.h: 116: }
  2941     04E4  3064               	movlw	100
  2942     04E5  00FC               	movwf	??_line_follower
  2943     04E6  0868               	movf	_r_vec,w	;volatile
  2944     04E7  027C               	subwf	??_line_follower,w
  2945     04E8  00E8               	movwf	_r_vec	;volatile
  2946     04E9  0969               	comf	_r_vec+1,w	;volatile
  2947     04EA  1803               	skipnc
  2948     04EB  0A89               	incf	9,f
  2949     04EC  00E9               	movwf	_r_vec+1	;volatile
  2950     04ED                     l309:
  2951     04ED  086B               	movf	_l_vec+1,w	;volatile
  2952     04EE  3A80               	xorlw	128
  2953     04EF  00FC               	movwf	??_line_follower
  2954     04F0  3080               	movlw	128
  2955     04F1  027C               	subwf	??_line_follower,w
  2956     04F2  1D03               	skipz
  2957     04F3  2CF6               	goto	u1735
  2958     04F4  30C9               	movlw	201
  2959     04F5  026A               	subwf	_l_vec,w	;volatile
  2960     04F6                     u1735:
  2961     04F6  1C03               	skipc
  2962     04F7  2CF9               	goto	u1731
  2963     04F8  2CFA               	goto	u1730
  2964     04F9                     u1731:
  2965     04F9  2CFF               	goto	l310
  2966     04FA                     u1730:
  2967     04FA                     l2050:
  2968     04FA  30C8               	movlw	200
  2969     04FB  0020               	movlb	0	; select bank0
  2970     04FC  00EA               	movwf	_l_vec	;volatile
  2971     04FD  3000               	movlw	0
  2972     04FE  00EB               	movwf	_l_vec+1	;volatile
  2973     04FF                     l310:
  2974     04FF  0020               	movlb	0	; select bank0
  2975     0500  0869               	movf	_r_vec+1,w	;volatile
  2976     0501  3A80               	xorlw	128
  2977     0502  00FC               	movwf	??_line_follower
  2978     0503  3080               	movlw	128
  2979     0504  027C               	subwf	??_line_follower,w
  2980     0505  1D03               	skipz
  2981     0506  2D09               	goto	u1745
  2982     0507  30C9               	movlw	201
  2983     0508  0268               	subwf	_r_vec,w	;volatile
  2984     0509                     u1745:
  2985     0509  1C03               	skipc
  2986     050A  2D0C               	goto	u1741
  2987     050B  2D0D               	goto	u1740
  2988     050C                     u1741:
  2989     050C  2D12               	goto	l2054
  2990     050D                     u1740:
  2991     050D                     l2052:
  2992     050D  30C8               	movlw	200
  2993     050E  0020               	movlb	0	; select bank0
  2994     050F  00E8               	movwf	_r_vec	;volatile
  2995     0510  3000               	movlw	0
  2996     0511  00E9               	movwf	_r_vec+1	;volatile
  2997     0512                     l2054:
  2998     0512  0020               	movlb	0	; select bank0
  2999     0513  086B               	movf	_l_vec+1,w	;volatile
  3000     0514  00F1               	movwf	abs@a+1
  3001     0515  086A               	movf	_l_vec,w	;volatile
  3002     0516  00F0               	movwf	abs@a
  3003     0517  3180  20CC  3184   	fcall	_abs
  3004     051A  0870               	movf	?_abs,w
  3005     051B  00F8               	movwf	motor@pwmA
  3006     051C  0020               	movlb	0	; select bank0
  3007     051D  0858               	movf	_r_dir,w	;volatile
  3008     051E  00F9               	movwf	motor@dirB
  3009     051F  0869               	movf	_r_vec+1,w	;volatile
  3010     0520  00F1               	movwf	abs@a+1
  3011     0521  0868               	movf	_r_vec,w	;volatile
  3012     0522  00F0               	movwf	abs@a
  3013     0523  3180  20CC  3184   	fcall	_abs
  3014     0526  0870               	movf	?_abs,w
  3015     0527  00FA               	movwf	motor@pwmB
  3016     0528  0020               	movlb	0	; select bank0
  3017     0529  0859               	movf	_l_dir,w	;volatile
  3018     052A  3182  224E  3184   	fcall	_motor
  3019     052D                     l2056:
  3020     052D  002E               	movlb	14	; select bank14
  3021     052E  100D               	bcf	13,0	;volatile
  3022     052F                     l2058:
  3023     052F  0021               	movlb	1	; select bank1
  3024     0530  1413               	bsf	19,0	;volatile
  3025     0531                     l312:
  3026     0531  0008               	return
  3027     0532                     __end_of_line_follower:
  3028                           
  3029                           	psect	text9
  3030     02BC                     __ptext9:	
  3031 ;; *************** function _drive *****************
  3032 ;; Defined at:
  3033 ;;		line 62 in file "./Driving.h"
  3034 ;; Parameters:    Size  Location     Type
  3035 ;;		None
  3036 ;; Auto vars:     Size  Location     Type
  3037 ;;  dir             2   34[BANK0 ] volatile int 
  3038 ;;  y               2   32[BANK0 ] volatile int 
  3039 ;;  x               2   30[BANK0 ] volatile int 
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      void 
  3042 ;; Registers used:
  3043 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3050 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3051 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3052 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3053 ;;Total ram usage:        8 bytes
  3054 ;; Hardware stack levels used: 1
  3055 ;; Hardware stack levels required when called: 4
  3056 ;; This function calls:
  3057 ;;		_Vdrive
  3058 ;;		___wmul
  3059 ;;		_user_data
  3060 ;; This function is called by:
  3061 ;;		_main
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065     02BC                     _drive:	
  3066                           ;psect for function _drive
  3067                           
  3068     02BC                     l1982:	
  3069                           ;incstack = 0
  3070                           ; Regs used in _drive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3071                           
  3072                           
  3073                           ;./Driving.h: 64:     x = (joy_rx - 50)*2;;./Driving.h: 65:     y = dir * (joy_ly);;./Dr
      +                          iving.h: 67:     Vdrive(y, x);
  3074     02BC  3180  2087  3182   	fcall	_user_data
  3075     02BF                     l1984:
  3076     02BF  3000               	movlw	0
  3077     02C0  0020               	movlb	0	; select bank0
  3078     02C1  0253               	subwf	_joy_ry+1,w	;volatile
  3079     02C2  301A               	movlw	26
  3080     02C3  1903               	skipnz
  3081     02C4  0252               	subwf	_joy_ry,w	;volatile
  3082     02C5  1C03               	skipc
  3083     02C6  2AC8               	goto	u1641
  3084     02C7  2AC9               	goto	u1640
  3085     02C8                     u1641:
  3086     02C8  2ACE               	goto	l1988
  3087     02C9                     u1640:
  3088     02C9                     l1986:
  3089     02C9  3001               	movlw	1
  3090     02CA  00C2               	movwf	drive@dir	;volatile
  3091     02CB  3000               	movlw	0
  3092     02CC  00C3               	movwf	drive@dir+1	;volatile
  3093     02CD  2AD2               	goto	l1990
  3094     02CE                     l1988:
  3095     02CE  30FF               	movlw	255
  3096     02CF  00C2               	movwf	drive@dir	;volatile
  3097     02D0  30FF               	movlw	255
  3098     02D1  00C3               	movwf	drive@dir+1	;volatile
  3099     02D2                     l1990:
  3100     02D2  0855               	movf	_joy_rx+1,w	;volatile
  3101     02D3  00BD               	movwf	??_drive+1
  3102     02D4  0854               	movf	_joy_rx,w	;volatile
  3103     02D5  00BC               	movwf	??_drive
  3104     02D6  35BC               	lslf	??_drive,f
  3105     02D7  0DBD               	rlf	??_drive+1,f
  3106     02D8  083C               	movf	??_drive,w
  3107     02D9  3E9C               	addlw	156
  3108     02DA  00BE               	movwf	drive@x	;volatile
  3109     02DB  30FF               	movlw	255
  3110     02DC  3D3D               	addwfc	??_drive+1,w
  3111     02DD  00BF               	movwf	drive@x+1	;volatile
  3112     02DE                     l1992:
  3113     02DE  0843               	movf	drive@dir+1,w	;volatile
  3114     02DF  00A1               	movwf	___wmul@multiplier+1
  3115     02E0  0842               	movf	drive@dir,w	;volatile
  3116     02E1  00A0               	movwf	___wmul@multiplier
  3117     02E2  0851               	movf	_joy_ly+1,w	;volatile
  3118     02E3  00A3               	movwf	___wmul@multiplicand+1
  3119     02E4  0850               	movf	_joy_ly,w	;volatile
  3120     02E5  00A2               	movwf	___wmul@multiplicand
  3121     02E6  3181  2158  3182   	fcall	___wmul
  3122     02E9  0020               	movlb	0	; select bank0
  3123     02EA  0821               	movf	?___wmul+1,w
  3124     02EB  00C1               	movwf	drive@y+1	;volatile
  3125     02EC  0820               	movf	?___wmul,w
  3126     02ED  00C0               	movwf	drive@y	;volatile
  3127     02EE                     l1994:
  3128     02EE  0841               	movf	drive@y+1,w	;volatile
  3129     02EF  00AC               	movwf	Vdrive@y+1
  3130     02F0  0840               	movf	drive@y,w	;volatile
  3131     02F1  00AB               	movwf	Vdrive@y
  3132     02F2  083F               	movf	drive@x+1,w	;volatile
  3133     02F3  00AE               	movwf	Vdrive@x+1
  3134     02F4  083E               	movf	drive@x,w	;volatile
  3135     02F5  00AD               	movwf	Vdrive@x
  3136     02F6  3185  2532  3182   	fcall	_Vdrive
  3137     02F9                     l253:
  3138     02F9  0008               	return
  3139     02FA                     __end_of_drive:
  3140                           
  3141                           	psect	text10
  3142     0087                     __ptext10:	
  3143 ;; *************** function _user_data *****************
  3144 ;; Defined at:
  3145 ;;		line 207 in file "./Commands.h"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;		None
  3148 ;; Auto vars:     Size  Location     Type
  3149 ;;		None
  3150 ;; Return value:  Size  Location     Type
  3151 ;;                  1    wreg      void 
  3152 ;; Registers used:
  3153 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3154 ;; Tracked objects:
  3155 ;;		On entry : 0/0
  3156 ;;		On exit  : 0/0
  3157 ;;		Unchanged: 0/0
  3158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3161 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3162 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3163 ;;Total ram usage:        1 bytes
  3164 ;; Hardware stack levels used: 1
  3165 ;; Hardware stack levels required when called: 3
  3166 ;; This function calls:
  3167 ;;		_user_data_receive
  3168 ;;		_user_data_send
  3169 ;; This function is called by:
  3170 ;;		_drive
  3171 ;;		_shield_code
  3172 ;;		_main
  3173 ;;		_claw
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177     0087                     _user_data:	
  3178                           ;psect for function _user_data
  3179                           
  3180     0087                     l1854:	
  3181                           ;incstack = 0
  3182                           ; Regs used in _user_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3183                           
  3184                           
  3185                           ;./Commands.h: 209:     user_data_send();
  3186     0087  3180  20E6  3180   	fcall	_user_data_send
  3187     008A                     l1858:	
  3188                           ;./Commands.h: 210:     while(!user_data_receive())
  3189                           
  3190                           
  3191                           ;./Commands.h: 210:     while(!user_data_receive())
  3192     008A  3186  265A  3180   	fcall	_user_data_receive
  3193     008D  3A00               	xorlw	0
  3194     008E  1903               	skipnz
  3195     008F  2891               	goto	u1441
  3196     0090  2892               	goto	u1440
  3197     0091                     u1441:
  3198     0091  2887               	goto	l1854
  3199     0092                     u1440:
  3200     0092                     l1860:
  3201                           
  3202                           ;./Commands.h: 214:     _delay((unsigned long)((100)*(400000/4000.0)));
  3203     0092  300D               	movlw	13
  3204     0093  00FB               	movwf	??_user_data
  3205     0094  30FC               	movlw	252
  3206     0095                     u1967:
  3207     0095  0B89               	decfsz	9,f
  3208     0096  2895               	goto	u1967
  3209     0097  0BFB               	decfsz	??_user_data,f
  3210     0098  2895               	goto	u1967
  3211     0099                     l148:
  3212     0099  0008               	return
  3213     009A                     __end_of_user_data:
  3214                           
  3215                           	psect	text11
  3216     00E6                     __ptext11:	
  3217 ;; *************** function _user_data_send *****************
  3218 ;; Defined at:
  3219 ;;		line 144 in file "./Commands.h"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;		None
  3222 ;; Auto vars:     Size  Location     Type
  3223 ;;  11729           6    0[BANK0 ] volatile unsigned char [
  3224 ;; Return value:  Size  Location     Type
  3225 ;;                  1    wreg      void 
  3226 ;; Registers used:
  3227 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3228 ;; Tracked objects:
  3229 ;;		On entry : 0/0
  3230 ;;		On exit  : 0/0
  3231 ;;		Unchanged: 0/0
  3232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3234 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3235 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3236 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3237 ;;Total ram usage:        7 bytes
  3238 ;; Hardware stack levels used: 1
  3239 ;; Hardware stack levels required when called: 2
  3240 ;; This function calls:
  3241 ;;		_UART_send
  3242 ;; This function is called by:
  3243 ;;		_user_data
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247     00E6                     _user_data_send:	
  3248                           ;psect for function _user_data_send
  3249                           
  3250     00E6                     l1690:	
  3251                           ;incstack = 0
  3252                           ; Regs used in _user_data_send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3253                           
  3254     00E6                     l1692:	
  3255                           ;./Commands.h: 146:     while(!UART_send((volatile unsigned char []) {0xFE, 0x19, 0x01, 
      +                          0x05, 0x00, 0x00}, 6)){}
  3256                           
  3257     00E6  30DB               	movlw	low user_data_send@F11728
  3258     00E7  0086               	movwf	6
  3259     00E8  3000               	movlw	high user_data_send@F11728
  3260     00E9  0087               	movwf	7
  3261     00EA  3020               	movlw	low user_data_send@11729
  3262     00EB  0084               	movwf	4
  3263     00EC  3000               	movlw	high user_data_send@11729
  3264     00ED  0085               	movwf	5
  3265     00EE  3006               	movlw	6
  3266     00EF  00F8               	movwf	??_user_data_send
  3267     00F0                     u1140:
  3268     00F0  0016               	moviw fsr1++
  3269     00F1  001A               	movwi fsr0++
  3270     00F2  0BF8               	decfsz	??_user_data_send,f
  3271     00F3  28F0               	goto	u1140
  3272     00F4                     l1694:
  3273     00F4  3006               	movlw	6
  3274     00F5  00F2               	movwf	UART_send@size
  3275     00F6  3000               	movlw	0
  3276     00F7  00F3               	movwf	UART_send@size+1
  3277     00F8  3020               	movlw	(low (user_data_send@11729| 0))& (0+255)
  3278     00F9  3181  219F  3180   	fcall	_UART_send
  3279     00FC  3A00               	xorlw	0
  3280     00FD  1903               	skipnz
  3281     00FE  2900               	goto	u1151
  3282     00FF  2901               	goto	u1150
  3283     0100                     u1151:
  3284     0100  28E6               	goto	l1692
  3285     0101                     u1150:
  3286     0101                     l130:
  3287     0101  0008               	return
  3288     0102                     __end_of_user_data_send:
  3289                           
  3290                           	psect	text12
  3291     065A                     __ptext12:	
  3292 ;; *************** function _user_data_receive *****************
  3293 ;; Defined at:
  3294 ;;		line 149 in file "./Commands.h"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;  r              26    0[BANK0 ] volatile unsigned char [
  3299 ;;  j               1   27[BANK0 ] volatile unsigned char 
  3300 ;;  s               1   26[BANK0 ] volatile unsigned char 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      unsigned char 
  3303 ;; Registers used:
  3304 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3313 ;;      Totals:         3      28       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3314 ;;Total ram usage:       31 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 1
  3317 ;; This function calls:
  3318 ;;		___lwdiv
  3319 ;;		_rx_wait
  3320 ;; This function is called by:
  3321 ;;		_user_data
  3322 ;; This function uses a non-reentrant model
  3323 ;;
  3324                           
  3325     065A                     _user_data_receive:	
  3326                           ;psect for function _user_data_receive
  3327                           
  3328     065A                     l1696:	
  3329                           ;incstack = 0
  3330                           ; Regs used in _user_data_receive: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3331                           
  3332                           
  3333                           ;./Commands.h: 151:     volatile char s=26, j, r[26];
  3334     065A  301A               	movlw	26
  3335     065B  0020               	movlb	0	; select bank0
  3336     065C  00BA               	movwf	user_data_receive@s	;volatile
  3337     065D                     l1698:
  3338                           
  3339                           ;./Commands.h: 153:     for (j=0; j < s; j++)
  3340     065D  01BB               	clrf	user_data_receive@j	;volatile
  3341     065E  2E77               	goto	l1710
  3342     065F                     l1700:
  3343                           
  3344                           ;./Commands.h: 154:     {;./Commands.h: 155:         if (rx_wait())
  3345     065F  3180  20B3  3186   	fcall	_rx_wait
  3346     0662  3A00               	xorlw	0
  3347     0663  1903               	skipnz
  3348     0664  2E66               	goto	u1161
  3349     0665  2E67               	goto	u1160
  3350     0666                     u1161:
  3351     0666  2E70               	goto	l1704
  3352     0667                     u1160:
  3353     0667                     l1702:
  3354                           
  3355                           ;./Commands.h: 156:         {;./Commands.h: 157:             r[j] = RCREG;
  3356     0667  0020               	movlb	0	; select bank0
  3357     0668  083B               	movf	user_data_receive@j,w
  3358     0669  3E20               	addlw	(low (user_data_receive@r| 0))& (0+255)
  3359     066A  0086               	movwf	6
  3360     066B  0187               	clrf	7
  3361     066C  0022               	movlb	2	; select bank2
  3362     066D  0819               	movf	25,w	;volatile
  3363     066E  0081               	movwf	1
  3364                           
  3365                           ;./Commands.h: 158:         }
  3366     066F  2E72               	goto	l1708
  3367     0670                     l1704:
  3368                           
  3369                           ;./Commands.h: 160:         {;./Commands.h: 161:             return 0;
  3370     0670  3000               	movlw	0
  3371     0671  2FCC               	goto	l137
  3372     0672                     l1708:
  3373                           
  3374                           ;./Commands.h: 163:     }
  3375     0672  3001               	movlw	1
  3376     0673  00F8               	movwf	??_user_data_receive
  3377     0674  0878               	movf	??_user_data_receive,w
  3378     0675  0020               	movlb	0	; select bank0
  3379     0676  07BB               	addwf	user_data_receive@j,f	;volatile
  3380     0677                     l1710:
  3381     0677  083A               	movf	user_data_receive@s,w	;volatile
  3382     0678  023B               	subwf	user_data_receive@j,w	;volatile
  3383     0679  1C03               	skipc
  3384     067A  2E7C               	goto	u1171
  3385     067B  2E7D               	goto	u1170
  3386     067C                     u1171:
  3387     067C  2E5F               	goto	l1700
  3388     067D                     u1170:
  3389     067D                     l1712:
  3390                           
  3391                           ;./Commands.h: 165:     joy_rx = r[6];
  3392     067D  0826               	movf	user_data_receive@r+6,w	;volatile
  3393     067E  00F8               	movwf	??_user_data_receive
  3394     067F  01F9               	clrf	??_user_data_receive+1
  3395     0680  0878               	movf	??_user_data_receive,w
  3396     0681  00D4               	movwf	_joy_rx	;volatile
  3397     0682  0879               	movf	??_user_data_receive+1,w
  3398     0683  00D5               	movwf	_joy_rx+1	;volatile
  3399                           
  3400                           ;./Commands.h: 166:     joy_rx += r[7] << 8;
  3401     0684  0827               	movf	user_data_receive@r+7,w	;volatile
  3402     0685  00F8               	movwf	??_user_data_receive
  3403     0686  01F9               	clrf	??_user_data_receive+1
  3404     0687  0878               	movf	??_user_data_receive,w
  3405     0688  00F9               	movwf	??_user_data_receive+1
  3406     0689  01F8               	clrf	??_user_data_receive
  3407     068A  0878               	movf	??_user_data_receive,w
  3408     068B  07D4               	addwf	_joy_rx,f	;volatile
  3409     068C  0879               	movf	??_user_data_receive+1,w
  3410     068D  3DD5               	addwfc	_joy_rx+1,f	;volatile
  3411                           
  3412                           ;./Commands.h: 167:     joy_rx -= 1000;
  3413     068E  30E8               	movlw	232
  3414     068F  02D4               	subwf	_joy_rx,f	;volatile
  3415     0690  3003               	movlw	3
  3416     0691  3BD5               	subwfb	_joy_rx+1,f	;volatile
  3417     0692                     l1714:
  3418                           
  3419                           ;./Commands.h: 168:     joy_rx /= 10;
  3420     0692  300A               	movlw	10
  3421     0693  00F0               	movwf	___lwdiv@divisor
  3422     0694  3000               	movlw	0
  3423     0695  00F1               	movwf	___lwdiv@divisor+1
  3424     0696  0855               	movf	_joy_rx+1,w	;volatile
  3425     0697  00F3               	movwf	___lwdiv@dividend+1
  3426     0698  0854               	movf	_joy_rx,w	;volatile
  3427     0699  00F2               	movwf	___lwdiv@dividend
  3428     069A  3182  2280  3186   	fcall	___lwdiv
  3429     069D  0871               	movf	?___lwdiv+1,w
  3430     069E  0020               	movlb	0	; select bank0
  3431     069F  00D5               	movwf	_joy_rx+1	;volatile
  3432     06A0  0870               	movf	?___lwdiv,w
  3433     06A1  00D4               	movwf	_joy_rx	;volatile
  3434     06A2                     l1716:
  3435                           
  3436                           ;./Commands.h: 170:     joy_ry = r[8];
  3437     06A2  0828               	movf	user_data_receive@r+8,w	;volatile
  3438     06A3  00F8               	movwf	??_user_data_receive
  3439     06A4  01F9               	clrf	??_user_data_receive+1
  3440     06A5  0878               	movf	??_user_data_receive,w
  3441     06A6  00D2               	movwf	_joy_ry	;volatile
  3442     06A7  0879               	movf	??_user_data_receive+1,w
  3443     06A8  00D3               	movwf	_joy_ry+1	;volatile
  3444     06A9                     l1718:
  3445                           
  3446                           ;./Commands.h: 171:     joy_ry += r[9] << 8;
  3447     06A9  0829               	movf	user_data_receive@r+9,w	;volatile
  3448     06AA  00F8               	movwf	??_user_data_receive
  3449     06AB  01F9               	clrf	??_user_data_receive+1
  3450     06AC  0878               	movf	??_user_data_receive,w
  3451     06AD  00F9               	movwf	??_user_data_receive+1
  3452     06AE  01F8               	clrf	??_user_data_receive
  3453     06AF  0878               	movf	??_user_data_receive,w
  3454     06B0  07D2               	addwf	_joy_ry,f	;volatile
  3455     06B1  0879               	movf	??_user_data_receive+1,w
  3456     06B2  3DD3               	addwfc	_joy_ry+1,f	;volatile
  3457     06B3                     l1720:
  3458                           
  3459                           ;./Commands.h: 172:     joy_ry -= 1000;
  3460     06B3  30E8               	movlw	232
  3461     06B4  02D2               	subwf	_joy_ry,f	;volatile
  3462     06B5  3003               	movlw	3
  3463     06B6  3BD3               	subwfb	_joy_ry+1,f	;volatile
  3464                           
  3465                           ;./Commands.h: 173:     joy_ry /= 10;
  3466     06B7  300A               	movlw	10
  3467     06B8  00F0               	movwf	___lwdiv@divisor
  3468     06B9  3000               	movlw	0
  3469     06BA  00F1               	movwf	___lwdiv@divisor+1
  3470     06BB  0853               	movf	_joy_ry+1,w	;volatile
  3471     06BC  00F3               	movwf	___lwdiv@dividend+1
  3472     06BD  0852               	movf	_joy_ry,w	;volatile
  3473     06BE  00F2               	movwf	___lwdiv@dividend
  3474     06BF  3182  2280  3186   	fcall	___lwdiv
  3475     06C2  0871               	movf	?___lwdiv+1,w
  3476     06C3  0020               	movlb	0	; select bank0
  3477     06C4  00D3               	movwf	_joy_ry+1	;volatile
  3478     06C5  0870               	movf	?___lwdiv,w
  3479     06C6  00D2               	movwf	_joy_ry	;volatile
  3480     06C7                     l1722:
  3481                           
  3482                           ;./Commands.h: 175:     joy_ly = r[10];
  3483     06C7  082A               	movf	user_data_receive@r+10,w	;volatile
  3484     06C8  00F8               	movwf	??_user_data_receive
  3485     06C9  01F9               	clrf	??_user_data_receive+1
  3486     06CA  0878               	movf	??_user_data_receive,w
  3487     06CB  00D0               	movwf	_joy_ly	;volatile
  3488     06CC  0879               	movf	??_user_data_receive+1,w
  3489     06CD  00D1               	movwf	_joy_ly+1	;volatile
  3490     06CE                     l1724:
  3491                           
  3492                           ;./Commands.h: 176:     joy_ly += r[11] << 8;
  3493     06CE  082B               	movf	user_data_receive@r+11,w	;volatile
  3494     06CF  00F8               	movwf	??_user_data_receive
  3495     06D0  01F9               	clrf	??_user_data_receive+1
  3496     06D1  0878               	movf	??_user_data_receive,w
  3497     06D2  00F9               	movwf	??_user_data_receive+1
  3498     06D3  01F8               	clrf	??_user_data_receive
  3499     06D4  0878               	movf	??_user_data_receive,w
  3500     06D5  07D0               	addwf	_joy_ly,f	;volatile
  3501     06D6  0879               	movf	??_user_data_receive+1,w
  3502     06D7  3DD1               	addwfc	_joy_ly+1,f	;volatile
  3503     06D8                     l1726:
  3504                           
  3505                           ;./Commands.h: 177:     joy_ly -= 1000;
  3506     06D8  30E8               	movlw	232
  3507     06D9  02D0               	subwf	_joy_ly,f	;volatile
  3508     06DA  3003               	movlw	3
  3509     06DB  3BD1               	subwfb	_joy_ly+1,f	;volatile
  3510     06DC                     l1728:
  3511                           
  3512                           ;./Commands.h: 178:     joy_ly /= 10;
  3513     06DC  300A               	movlw	10
  3514     06DD  00F0               	movwf	___lwdiv@divisor
  3515     06DE  3000               	movlw	0
  3516     06DF  00F1               	movwf	___lwdiv@divisor+1
  3517     06E0  0851               	movf	_joy_ly+1,w	;volatile
  3518     06E1  00F3               	movwf	___lwdiv@dividend+1
  3519     06E2  0850               	movf	_joy_ly,w	;volatile
  3520     06E3  00F2               	movwf	___lwdiv@dividend
  3521     06E4  3182  2280  3186   	fcall	___lwdiv
  3522     06E7  0871               	movf	?___lwdiv+1,w
  3523     06E8  0020               	movlb	0	; select bank0
  3524     06E9  00D1               	movwf	_joy_ly+1	;volatile
  3525     06EA  0870               	movf	?___lwdiv,w
  3526     06EB  00D0               	movwf	_joy_ly	;volatile
  3527                           
  3528                           ;./Commands.h: 180:     joy_lx = r[12];
  3529     06EC  082C               	movf	user_data_receive@r+12,w	;volatile
  3530     06ED  00F8               	movwf	??_user_data_receive
  3531     06EE  01F9               	clrf	??_user_data_receive+1
  3532     06EF  0878               	movf	??_user_data_receive,w
  3533     06F0  00CE               	movwf	_joy_lx	;volatile
  3534     06F1  0879               	movf	??_user_data_receive+1,w
  3535     06F2  00CF               	movwf	_joy_lx+1	;volatile
  3536                           
  3537                           ;./Commands.h: 181:     joy_lx += r[13] << 8;
  3538     06F3  082D               	movf	user_data_receive@r+13,w	;volatile
  3539     06F4  00F8               	movwf	??_user_data_receive
  3540     06F5  01F9               	clrf	??_user_data_receive+1
  3541     06F6  0878               	movf	??_user_data_receive,w
  3542     06F7  00F9               	movwf	??_user_data_receive+1
  3543     06F8  01F8               	clrf	??_user_data_receive
  3544     06F9  0878               	movf	??_user_data_receive,w
  3545     06FA  07CE               	addwf	_joy_lx,f	;volatile
  3546     06FB  0879               	movf	??_user_data_receive+1,w
  3547     06FC  3DCF               	addwfc	_joy_lx+1,f	;volatile
  3548                           
  3549                           ;./Commands.h: 182:     joy_lx -= 1000;
  3550     06FD  30E8               	movlw	232
  3551     06FE  02CE               	subwf	_joy_lx,f	;volatile
  3552     06FF  3003               	movlw	3
  3553     0700  3BCF               	subwfb	_joy_lx+1,f	;volatile
  3554     0701                     l1730:
  3555                           
  3556                           ;./Commands.h: 183:     joy_lx /= 10;
  3557     0701  300A               	movlw	10
  3558     0702  00F0               	movwf	___lwdiv@divisor
  3559     0703  3000               	movlw	0
  3560     0704  00F1               	movwf	___lwdiv@divisor+1
  3561     0705  084F               	movf	_joy_lx+1,w	;volatile
  3562     0706  00F3               	movwf	___lwdiv@dividend+1
  3563     0707  084E               	movf	_joy_lx,w	;volatile
  3564     0708  00F2               	movwf	___lwdiv@dividend
  3565     0709  3182  2280  3186   	fcall	___lwdiv
  3566     070C  0871               	movf	?___lwdiv+1,w
  3567     070D  0020               	movlb	0	; select bank0
  3568     070E  00CF               	movwf	_joy_lx+1	;volatile
  3569     070F  0870               	movf	?___lwdiv,w
  3570     0710  00CE               	movwf	_joy_lx	;volatile
  3571     0711                     l1732:
  3572                           
  3573                           ;./Commands.h: 185:     swA = r[14];
  3574     0711  082E               	movf	user_data_receive@r+14,w	;volatile
  3575     0712  00F8               	movwf	??_user_data_receive
  3576     0713  01F9               	clrf	??_user_data_receive+1
  3577     0714  0878               	movf	??_user_data_receive,w
  3578     0715  00CC               	movwf	_swA	;volatile
  3579     0716  0879               	movf	??_user_data_receive+1,w
  3580     0717  00CD               	movwf	_swA+1	;volatile
  3581     0718                     l1734:
  3582                           
  3583                           ;./Commands.h: 186:     swA += r[15] << 8;
  3584     0718  082F               	movf	user_data_receive@r+15,w	;volatile
  3585     0719  00F8               	movwf	??_user_data_receive
  3586     071A  01F9               	clrf	??_user_data_receive+1
  3587     071B  0878               	movf	??_user_data_receive,w
  3588     071C  00F9               	movwf	??_user_data_receive+1
  3589     071D  01F8               	clrf	??_user_data_receive
  3590     071E  0878               	movf	??_user_data_receive,w
  3591     071F  07CC               	addwf	_swA,f	;volatile
  3592     0720  0879               	movf	??_user_data_receive+1,w
  3593     0721  3DCD               	addwfc	_swA+1,f	;volatile
  3594     0722                     l1736:
  3595                           
  3596                           ;./Commands.h: 187:     swA = swA > 1500;
  3597     0722  3005               	movlw	5
  3598     0723  024D               	subwf	_swA+1,w	;volatile
  3599     0724  30DD               	movlw	221
  3600     0725  1903               	skipnz
  3601     0726  024C               	subwf	_swA,w	;volatile
  3602     0727  1803               	skipnc
  3603     0728  2F2A               	goto	u1181
  3604     0729  2F2C               	goto	u1180
  3605     072A                     u1181:
  3606     072A  3001               	movlw	1
  3607     072B  2F2D               	goto	u1190
  3608     072C                     u1180:
  3609     072C  3000               	movlw	0
  3610     072D                     u1190:
  3611     072D  00F8               	movwf	??_user_data_receive
  3612     072E  01F9               	clrf	??_user_data_receive+1
  3613     072F  0878               	movf	??_user_data_receive,w
  3614     0730  00CC               	movwf	_swA	;volatile
  3615     0731  0879               	movf	??_user_data_receive+1,w
  3616     0732  00CD               	movwf	_swA+1	;volatile
  3617     0733                     l1738:
  3618                           
  3619                           ;./Commands.h: 188:     swB = r[16];
  3620     0733  0830               	movf	user_data_receive@r+16,w	;volatile
  3621     0734  00F8               	movwf	??_user_data_receive
  3622     0735  01F9               	clrf	??_user_data_receive+1
  3623     0736  0878               	movf	??_user_data_receive,w
  3624     0737  00CA               	movwf	_swB	;volatile
  3625     0738  0879               	movf	??_user_data_receive+1,w
  3626     0739  00CB               	movwf	_swB+1	;volatile
  3627     073A                     l1740:
  3628                           
  3629                           ;./Commands.h: 189:     swB += r[17] << 8;
  3630     073A  0831               	movf	user_data_receive@r+17,w	;volatile
  3631     073B  00F8               	movwf	??_user_data_receive
  3632     073C  01F9               	clrf	??_user_data_receive+1
  3633     073D  0878               	movf	??_user_data_receive,w
  3634     073E  00F9               	movwf	??_user_data_receive+1
  3635     073F  01F8               	clrf	??_user_data_receive
  3636     0740  0878               	movf	??_user_data_receive,w
  3637     0741  07CA               	addwf	_swB,f	;volatile
  3638     0742  0879               	movf	??_user_data_receive+1,w
  3639     0743  3DCB               	addwfc	_swB+1,f	;volatile
  3640     0744                     l1742:
  3641                           
  3642                           ;./Commands.h: 190:     swB = swB > 1500;
  3643     0744  3005               	movlw	5
  3644     0745  024B               	subwf	_swB+1,w	;volatile
  3645     0746  30DD               	movlw	221
  3646     0747  1903               	skipnz
  3647     0748  024A               	subwf	_swB,w	;volatile
  3648     0749  1803               	skipnc
  3649     074A  2F4C               	goto	u1201
  3650     074B  2F4E               	goto	u1200
  3651     074C                     u1201:
  3652     074C  3001               	movlw	1
  3653     074D  2F4F               	goto	u1210
  3654     074E                     u1200:
  3655     074E  3000               	movlw	0
  3656     074F                     u1210:
  3657     074F  00F8               	movwf	??_user_data_receive
  3658     0750  01F9               	clrf	??_user_data_receive+1
  3659     0751  0878               	movf	??_user_data_receive,w
  3660     0752  00CA               	movwf	_swB	;volatile
  3661     0753  0879               	movf	??_user_data_receive+1,w
  3662     0754  00CB               	movwf	_swB+1	;volatile
  3663     0755                     l1744:
  3664                           
  3665                           ;./Commands.h: 191:     swC = r[18];
  3666     0755  0832               	movf	user_data_receive@r+18,w	;volatile
  3667     0756  00F8               	movwf	??_user_data_receive
  3668     0757  01F9               	clrf	??_user_data_receive+1
  3669     0758  0878               	movf	??_user_data_receive,w
  3670     0759  00C8               	movwf	_swC	;volatile
  3671     075A  0879               	movf	??_user_data_receive+1,w
  3672     075B  00C9               	movwf	_swC+1	;volatile
  3673     075C                     l1746:
  3674                           
  3675                           ;./Commands.h: 192:     swC += r[19] << 8;
  3676     075C  0833               	movf	user_data_receive@r+19,w	;volatile
  3677     075D  00F8               	movwf	??_user_data_receive
  3678     075E  01F9               	clrf	??_user_data_receive+1
  3679     075F  0878               	movf	??_user_data_receive,w
  3680     0760  00F9               	movwf	??_user_data_receive+1
  3681     0761  01F8               	clrf	??_user_data_receive
  3682     0762  0878               	movf	??_user_data_receive,w
  3683     0763  07C8               	addwf	_swC,f	;volatile
  3684     0764  0879               	movf	??_user_data_receive+1,w
  3685     0765  3DC9               	addwfc	_swC+1,f	;volatile
  3686     0766                     l1748:
  3687                           
  3688                           ;./Commands.h: 193:     if(swC == 1000){swC = 0;}
  3689     0766  30E8               	movlw	232
  3690     0767  0648               	xorwf	_swC,w	;volatile
  3691     0768  3003               	movlw	3
  3692     0769  1903               	skipnz
  3693     076A  0649               	xorwf	_swC+1,w	;volatile
  3694     076B  1D03               	btfss	3,2
  3695     076C  2F6E               	goto	u1221
  3696     076D  2F6F               	goto	u1220
  3697     076E                     u1221:
  3698     076E  2F72               	goto	l1752
  3699     076F                     u1220:
  3700     076F                     l1750:
  3701     076F  01C8               	clrf	_swC	;volatile
  3702     0770  01C9               	clrf	_swC+1	;volatile
  3703     0771  2F84               	goto	l140
  3704     0772                     l1752:
  3705     0772  30DC               	movlw	220
  3706     0773  0648               	xorwf	_swC,w	;volatile
  3707     0774  3005               	movlw	5
  3708     0775  1903               	skipnz
  3709     0776  0649               	xorwf	_swC+1,w	;volatile
  3710     0777  1D03               	btfss	3,2
  3711     0778  2F7A               	goto	u1231
  3712     0779  2F7B               	goto	u1230
  3713     077A                     u1231:
  3714     077A  2F80               	goto	l1756
  3715     077B                     u1230:
  3716     077B                     l1754:
  3717     077B  3001               	movlw	1
  3718     077C  00C8               	movwf	_swC	;volatile
  3719     077D  3000               	movlw	0
  3720     077E  00C9               	movwf	_swC+1	;volatile
  3721     077F  2F84               	goto	l140
  3722     0780                     l1756:
  3723     0780  3002               	movlw	2
  3724     0781  00C8               	movwf	_swC	;volatile
  3725     0782  3000               	movlw	0
  3726     0783  00C9               	movwf	_swC+1	;volatile
  3727     0784                     l140:
  3728                           
  3729                           ;./Commands.h: 196:     swD = r[20];
  3730     0784  0834               	movf	user_data_receive@r+20,w	;volatile
  3731     0785  00F8               	movwf	??_user_data_receive
  3732     0786  01F9               	clrf	??_user_data_receive+1
  3733     0787  0878               	movf	??_user_data_receive,w
  3734     0788  00C6               	movwf	_swD	;volatile
  3735     0789  0879               	movf	??_user_data_receive+1,w
  3736     078A  00C7               	movwf	_swD+1	;volatile
  3737                           
  3738                           ;./Commands.h: 197:     swD += r[21] << 8;
  3739     078B  0835               	movf	user_data_receive@r+21,w	;volatile
  3740     078C  00F8               	movwf	??_user_data_receive
  3741     078D  01F9               	clrf	??_user_data_receive+1
  3742     078E  0878               	movf	??_user_data_receive,w
  3743     078F  00F9               	movwf	??_user_data_receive+1
  3744     0790  01F8               	clrf	??_user_data_receive
  3745     0791  0878               	movf	??_user_data_receive,w
  3746     0792  07C6               	addwf	_swD,f	;volatile
  3747     0793  0879               	movf	??_user_data_receive+1,w
  3748     0794  3DC7               	addwfc	_swD+1,f	;volatile
  3749                           
  3750                           ;./Commands.h: 198:     swD = swD > 1500;
  3751     0795  3005               	movlw	5
  3752     0796  0247               	subwf	_swD+1,w	;volatile
  3753     0797  30DD               	movlw	221
  3754     0798  1903               	skipnz
  3755     0799  0246               	subwf	_swD,w	;volatile
  3756     079A  1803               	skipnc
  3757     079B  2F9D               	goto	u1241
  3758     079C  2F9F               	goto	u1240
  3759     079D                     u1241:
  3760     079D  3001               	movlw	1
  3761     079E  2FA0               	goto	u1250
  3762     079F                     u1240:
  3763     079F  3000               	movlw	0
  3764     07A0                     u1250:
  3765     07A0  00F8               	movwf	??_user_data_receive
  3766     07A1  01F9               	clrf	??_user_data_receive+1
  3767     07A2  0878               	movf	??_user_data_receive,w
  3768     07A3  00C6               	movwf	_swD	;volatile
  3769     07A4  0879               	movf	??_user_data_receive+1,w
  3770     07A5  00C7               	movwf	_swD+1	;volatile
  3771                           
  3772                           ;./Commands.h: 200:     potA = r[22];
  3773     07A6  0836               	movf	user_data_receive@r+22,w	;volatile
  3774     07A7  00F8               	movwf	??_user_data_receive
  3775     07A8  01F9               	clrf	??_user_data_receive+1
  3776     07A9  0878               	movf	??_user_data_receive,w
  3777     07AA  00C4               	movwf	_potA	;volatile
  3778     07AB  0879               	movf	??_user_data_receive+1,w
  3779     07AC  00C5               	movwf	_potA+1	;volatile
  3780                           
  3781                           ;./Commands.h: 201:     potA += r[23] << 8;
  3782     07AD  0837               	movf	user_data_receive@r+23,w	;volatile
  3783     07AE  00F8               	movwf	??_user_data_receive
  3784     07AF  01F9               	clrf	??_user_data_receive+1
  3785     07B0  0878               	movf	??_user_data_receive,w
  3786     07B1  00F9               	movwf	??_user_data_receive+1
  3787     07B2  01F8               	clrf	??_user_data_receive
  3788     07B3  0878               	movf	??_user_data_receive,w
  3789     07B4  07C4               	addwf	_potA,f	;volatile
  3790     07B5  0879               	movf	??_user_data_receive+1,w
  3791     07B6  3DC5               	addwfc	_potA+1,f	;volatile
  3792                           
  3793                           ;./Commands.h: 202:     potB = r[24];
  3794     07B7  0838               	movf	user_data_receive@r+24,w	;volatile
  3795     07B8  00F8               	movwf	??_user_data_receive
  3796     07B9  01F9               	clrf	??_user_data_receive+1
  3797     07BA  0878               	movf	??_user_data_receive,w
  3798     07BB  0021               	movlb	1	; select bank1
  3799     07BC  00C7               	movwf	_potB^(0+128)	;volatile
  3800     07BD  0879               	movf	??_user_data_receive+1,w
  3801     07BE  00C8               	movwf	(_potB+1)^(0+128)	;volatile
  3802                           
  3803                           ;./Commands.h: 203:     potB += r[25] << 8;
  3804     07BF  0020               	movlb	0	; select bank0
  3805     07C0  0839               	movf	user_data_receive@r+25,w	;volatile
  3806     07C1  00F8               	movwf	??_user_data_receive
  3807     07C2  01F9               	clrf	??_user_data_receive+1
  3808     07C3  0878               	movf	??_user_data_receive,w
  3809     07C4  00F9               	movwf	??_user_data_receive+1
  3810     07C5  01F8               	clrf	??_user_data_receive
  3811     07C6  0878               	movf	??_user_data_receive,w
  3812     07C7  0021               	movlb	1	; select bank1
  3813     07C8  07C7               	addwf	_potB^(0+128),f	;volatile
  3814     07C9  0879               	movf	??_user_data_receive+1,w
  3815     07CA  3DC8               	addwfc	(_potB+1)^(0+128),f	;volatile
  3816                           
  3817                           ;./Commands.h: 204:     return 1;
  3818     07CB  3001               	movlw	1
  3819     07CC                     l137:
  3820     07CC  0008               	return
  3821     07CD                     __end_of_user_data_receive:
  3822                           
  3823                           	psect	text13
  3824     00B3                     __ptext13:	
  3825 ;; *************** function _rx_wait *****************
  3826 ;; Defined at:
  3827 ;;		line 49 in file "./Commands.h"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  count           2    0[COMMON] volatile unsigned int 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      unsigned char 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, status,0
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3845 ;;Total ram usage:        2 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; This function calls:
  3848 ;;		Nothing
  3849 ;; This function is called by:
  3850 ;;		_PCLS_info_receive
  3851 ;;		_user_data_receive
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855     00B3                     _rx_wait:	
  3856                           ;psect for function _rx_wait
  3857                           
  3858     00B3                     l1602:	
  3859                           ;incstack = 0
  3860                           ; Regs used in _rx_wait: [wreg+status,2+status,0]
  3861                           
  3862                           
  3863                           ;./Commands.h: 51: void UART_init();./Commands.h: 52: {
  3864     00B3  30E8               	movlw	232
  3865     00B4  00F0               	movwf	rx_wait@count	;volatile
  3866     00B5  3003               	movlw	3
  3867     00B6  00F1               	movwf	rx_wait@count+1	;volatile
  3868     00B7                     l1604:
  3869     00B7  0870               	movf	rx_wait@count,w	;volatile
  3870     00B8  0471               	iorwf	rx_wait@count+1,w	;volatile
  3871     00B9  1D03               	btfss	3,2
  3872     00BA  28BC               	goto	u991
  3873     00BB  28BD               	goto	u990
  3874     00BC                     u991:
  3875     00BC  28BE               	goto	l87
  3876     00BD                     u990:
  3877     00BD  28CA               	goto	l1616
  3878     00BE                     l87:
  3879                           
  3880                           ;./Commands.h: 53:     ANSELCbits.ANSC6 = 0;;./Commands.h: 54:     ANSELCbits.ANSC7 = 0;
  3881     00BE  002E               	movlb	14	; select bank14
  3882     00BF  1E8F               	btfss	15,5	;volatile
  3883     00C0  28C2               	goto	u1001
  3884     00C1  28C3               	goto	u1000
  3885     00C2                     u1001:
  3886     00C2  28C5               	goto	l1612
  3887     00C3                     u1000:
  3888     00C3                     l1608:
  3889     00C3  3001               	movlw	1
  3890     00C4  28CB               	goto	l90
  3891     00C5                     l1612:
  3892     00C5  3001               	movlw	1
  3893     00C6  02F0               	subwf	rx_wait@count,f	;volatile
  3894     00C7  3000               	movlw	0
  3895     00C8  3BF1               	subwfb	rx_wait@count+1,f	;volatile
  3896     00C9  28B7               	goto	l1604
  3897     00CA                     l1616:
  3898     00CA  3000               	movlw	0
  3899     00CB                     l90:
  3900     00CB  0008               	return
  3901     00CC                     __end_of_rx_wait:
  3902                           
  3903                           	psect	text14
  3904     0280                     __ptext14:	
  3905 ;; *************** function ___lwdiv *****************
  3906 ;; Defined at:
  3907 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  divisor         2    0[COMMON] unsigned int 
  3910 ;;  dividend        2    2[COMMON] unsigned int 
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;  quotient        2    5[COMMON] unsigned int 
  3913 ;;  counter         1    7[COMMON] unsigned char 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  2    0[COMMON] unsigned int 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3923 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;Total ram usage:        8 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_user_data_receive
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936     0280                     ___lwdiv:	
  3937                           ;psect for function ___lwdiv
  3938                           
  3939     0280                     l1638:	
  3940                           ;incstack = 0
  3941                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3942                           
  3943     0280  01F5               	clrf	___lwdiv@quotient
  3944     0281  01F6               	clrf	___lwdiv@quotient+1
  3945     0282                     l1640:
  3946     0282  0870               	movf	___lwdiv@divisor,w
  3947     0283  0471               	iorwf	___lwdiv@divisor+1,w
  3948     0284  1903               	btfsc	3,2
  3949     0285  2A87               	goto	u1031
  3950     0286  2A88               	goto	u1030
  3951     0287                     u1031:
  3952     0287  2AB7               	goto	l1660
  3953     0288                     u1030:
  3954     0288                     l1642:
  3955     0288  01F7               	clrf	___lwdiv@counter
  3956     0289  0AF7               	incf	___lwdiv@counter,f
  3957     028A  2A94               	goto	l1648
  3958     028B                     l1644:
  3959     028B  3001               	movlw	1
  3960     028C                     u1045:
  3961     028C  35F0               	lslf	___lwdiv@divisor,f
  3962     028D  0DF1               	rlf	___lwdiv@divisor+1,f
  3963     028E  0B89               	decfsz	9,f
  3964     028F  2A8C               	goto	u1045
  3965     0290                     l1646:
  3966     0290  3001               	movlw	1
  3967     0291  00F4               	movwf	??___lwdiv
  3968     0292  0874               	movf	??___lwdiv,w
  3969     0293  07F7               	addwf	___lwdiv@counter,f
  3970     0294                     l1648:
  3971     0294  1FF1               	btfss	___lwdiv@divisor+1,7
  3972     0295  2A97               	goto	u1051
  3973     0296  2A98               	goto	u1050
  3974     0297                     u1051:
  3975     0297  2A8B               	goto	l1644
  3976     0298                     u1050:
  3977     0298                     l1650:
  3978     0298  3001               	movlw	1
  3979     0299                     u1065:
  3980     0299  35F5               	lslf	___lwdiv@quotient,f
  3981     029A  0DF6               	rlf	___lwdiv@quotient+1,f
  3982     029B  0B89               	decfsz	9,f
  3983     029C  2A99               	goto	u1065
  3984     029D  0871               	movf	___lwdiv@divisor+1,w
  3985     029E  0273               	subwf	___lwdiv@dividend+1,w
  3986     029F  1D03               	skipz
  3987     02A0  2AA3               	goto	u1075
  3988     02A1  0870               	movf	___lwdiv@divisor,w
  3989     02A2  0272               	subwf	___lwdiv@dividend,w
  3990     02A3                     u1075:
  3991     02A3  1C03               	skipc
  3992     02A4  2AA6               	goto	u1071
  3993     02A5  2AA7               	goto	u1070
  3994     02A6                     u1071:
  3995     02A6  2AAC               	goto	l1656
  3996     02A7                     u1070:
  3997     02A7                     l1652:
  3998     02A7  0870               	movf	___lwdiv@divisor,w
  3999     02A8  02F2               	subwf	___lwdiv@dividend,f
  4000     02A9  0871               	movf	___lwdiv@divisor+1,w
  4001     02AA  3BF3               	subwfb	___lwdiv@dividend+1,f
  4002     02AB                     l1654:
  4003     02AB  1475               	bsf	___lwdiv@quotient,0
  4004     02AC                     l1656:
  4005     02AC  3001               	movlw	1
  4006     02AD                     u1085:
  4007     02AD  36F1               	lsrf	___lwdiv@divisor+1,f
  4008     02AE  0CF0               	rrf	___lwdiv@divisor,f
  4009     02AF  0B89               	decfsz	9,f
  4010     02B0  2AAD               	goto	u1085
  4011     02B1                     l1658:
  4012     02B1  3001               	movlw	1
  4013     02B2  02F7               	subwf	___lwdiv@counter,f
  4014     02B3  1D03               	btfss	3,2
  4015     02B4  2AB6               	goto	u1091
  4016     02B5  2AB7               	goto	u1090
  4017     02B6                     u1091:
  4018     02B6  2A98               	goto	l1650
  4019     02B7                     u1090:
  4020     02B7                     l1660:
  4021     02B7  0876               	movf	___lwdiv@quotient+1,w
  4022     02B8  00F1               	movwf	?___lwdiv+1
  4023     02B9  0875               	movf	___lwdiv@quotient,w
  4024     02BA  00F0               	movwf	?___lwdiv
  4025     02BB                     l779:
  4026     02BB  0008               	return
  4027     02BC                     __end_of___lwdiv:
  4028                           
  4029                           	psect	text15
  4030     0532                     __ptext15:	
  4031 ;; *************** function _Vdrive *****************
  4032 ;; Defined at:
  4033 ;;		line 10 in file "./Driving.h"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  y               2   11[BANK0 ] int 
  4036 ;;  x               2   13[BANK0 ] int 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  r_motor         2   21[BANK0 ] volatile int 
  4039 ;;  l_motor         2   19[BANK0 ] volatile int 
  4040 ;;  right_dir       1   18[BANK0 ] volatile unsigned char 
  4041 ;;  left_dir        1   17[BANK0 ] volatile unsigned char 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  1    wreg      void 
  4044 ;; Registers used:
  4045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4051 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4052 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4053 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4054 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4055 ;;Total ram usage:       12 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; Hardware stack levels required when called: 3
  4058 ;; This function calls:
  4059 ;;		___awdiv
  4060 ;;		___wmul
  4061 ;;		_abs
  4062 ;;		_motor
  4063 ;; This function is called by:
  4064 ;;		_drive
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068     0532                     _Vdrive:	
  4069                           ;psect for function _Vdrive
  4070                           
  4071     0532                     l1908:	
  4072                           ;incstack = 0
  4073                           ; Regs used in _Vdrive: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4074                           
  4075                           
  4076                           ;./Driving.h: 10:         r_motor = y + x;;./Driving.h: 11:     };./Driving.h: 12:     e
      +                          lse{if(x < 0 && y > 0);./Driving.h: 13:     {;./Driving.h: 15:         r_motor = y + (x*
      +                          2);
  4077     0532  0020               	movlb	0	; select bank0
  4078     0533  082E               	movf	Vdrive@x+1,w
  4079     0534  3A80               	xorlw	128
  4080     0535  00AF               	movwf	??_Vdrive
  4081     0536  3080               	movlw	128
  4082     0537  022F               	subwf	??_Vdrive,w
  4083     0538  1D03               	skipz
  4084     0539  2D3C               	goto	u1515
  4085     053A  3001               	movlw	1
  4086     053B  022D               	subwf	Vdrive@x,w
  4087     053C                     u1515:
  4088     053C  1C03               	skipc
  4089     053D  2D3F               	goto	u1511
  4090     053E  2D40               	goto	u1510
  4091     053F                     u1511:
  4092     053F  2D62               	goto	l234
  4093     0540                     u1510:
  4094     0540                     l1910:
  4095     0540  0020               	movlb	0	; select bank0
  4096     0541  082C               	movf	Vdrive@y+1,w
  4097     0542  3A80               	xorlw	128
  4098     0543  00AF               	movwf	??_Vdrive
  4099     0544  3080               	movlw	128
  4100     0545  022F               	subwf	??_Vdrive,w
  4101     0546  1D03               	skipz
  4102     0547  2D4A               	goto	u1525
  4103     0548  3001               	movlw	1
  4104     0549  022B               	subwf	Vdrive@y,w
  4105     054A                     u1525:
  4106     054A  1C03               	skipc
  4107     054B  2D4D               	goto	u1521
  4108     054C  2D4E               	goto	u1520
  4109     054D                     u1521:
  4110     054D  2D62               	goto	l234
  4111     054E                     u1520:
  4112     054E                     l1912:
  4113                           
  4114                           ;./Driving.h: 16:     };./Driving.h: 17:     else
  4115     054E  0020               	movlb	0	; select bank0
  4116     054F  082E               	movf	Vdrive@x+1,w
  4117     0550  00B0               	movwf	??_Vdrive+1
  4118     0551  082D               	movf	Vdrive@x,w
  4119     0552  00AF               	movwf	??_Vdrive
  4120     0553  35AF               	lslf	??_Vdrive,f
  4121     0554  0DB0               	rlf	??_Vdrive+1,f
  4122     0555  082F               	movf	??_Vdrive,w
  4123     0556  022B               	subwf	Vdrive@y,w
  4124     0557  00B3               	movwf	Vdrive@l_motor	;volatile
  4125     0558  0830               	movf	??_Vdrive+1,w
  4126     0559  3B2C               	subwfb	Vdrive@y+1,w
  4127     055A  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4128                           
  4129                           ;./Driving.h: 18:     {
  4130     055B  082D               	movf	Vdrive@x,w
  4131     055C  072B               	addwf	Vdrive@y,w
  4132     055D  00B5               	movwf	Vdrive@r_motor	;volatile
  4133     055E  082E               	movf	Vdrive@x+1,w
  4134     055F  3D2C               	addwfc	Vdrive@y+1,w
  4135     0560  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4136                           
  4137                           ;./Driving.h: 19:         l_motor = y - x;
  4138     0561  2D95               	goto	l1920
  4139     0562                     l234:	
  4140                           ;./Driving.h: 20:         r_motor = y + x;
  4141                           
  4142     0562  0020               	movlb	0	; select bank0
  4143     0563  1FAE               	btfss	Vdrive@x+1,7
  4144     0564  2D66               	goto	u1531
  4145     0565  2D67               	goto	u1530
  4146     0566                     u1531:
  4147     0566  2D88               	goto	l1918
  4148     0567                     u1530:
  4149     0567                     l1914:
  4150     0567  082C               	movf	Vdrive@y+1,w
  4151     0568  3A80               	xorlw	128
  4152     0569  00AF               	movwf	??_Vdrive
  4153     056A  3080               	movlw	128
  4154     056B  022F               	subwf	??_Vdrive,w
  4155     056C  1D03               	skipz
  4156     056D  2D70               	goto	u1545
  4157     056E  3001               	movlw	1
  4158     056F  022B               	subwf	Vdrive@y,w
  4159     0570                     u1545:
  4160     0570  1C03               	skipc
  4161     0571  2D73               	goto	u1541
  4162     0572  2D74               	goto	u1540
  4163     0573                     u1541:
  4164     0573  2D88               	goto	l1918
  4165     0574                     u1540:
  4166     0574                     l1916:
  4167                           
  4168                           ;./Driving.h: 21:     }};./Driving.h: 22: 
  4169     0574  0020               	movlb	0	; select bank0
  4170     0575  082D               	movf	Vdrive@x,w
  4171     0576  022B               	subwf	Vdrive@y,w
  4172     0577  00B3               	movwf	Vdrive@l_motor	;volatile
  4173     0578  082E               	movf	Vdrive@x+1,w
  4174     0579  3B2C               	subwfb	Vdrive@y+1,w
  4175     057A  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4176                           
  4177                           ;./Driving.h: 23: 
  4178     057B  082E               	movf	Vdrive@x+1,w
  4179     057C  00B0               	movwf	??_Vdrive+1
  4180     057D  082D               	movf	Vdrive@x,w
  4181     057E  00AF               	movwf	??_Vdrive
  4182     057F  35AF               	lslf	??_Vdrive,f
  4183     0580  0DB0               	rlf	??_Vdrive+1,f
  4184     0581  082B               	movf	Vdrive@y,w
  4185     0582  072F               	addwf	??_Vdrive,w
  4186     0583  00B5               	movwf	Vdrive@r_motor	;volatile
  4187     0584  082C               	movf	Vdrive@y+1,w
  4188     0585  3D30               	addwfc	??_Vdrive+1,w
  4189     0586  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4190                           
  4191                           ;./Driving.h: 24:     if (l_motor > 100 || l_motor < -100)
  4192     0587  2D95               	goto	l1920
  4193     0588                     l1918:
  4194                           
  4195                           ;./Driving.h: 26:         l_motor = (l_motor/abs(l_motor)) * 100;;./Driving.h: 27:     }
  4196     0588  0020               	movlb	0	; select bank0
  4197     0589  082D               	movf	Vdrive@x,w
  4198     058A  022B               	subwf	Vdrive@y,w
  4199     058B  00B3               	movwf	Vdrive@l_motor	;volatile
  4200     058C  082E               	movf	Vdrive@x+1,w
  4201     058D  3B2C               	subwfb	Vdrive@y+1,w
  4202     058E  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4203                           
  4204                           ;./Driving.h: 28:     if (r_motor > 100 || r_motor < -100)
  4205     058F  082D               	movf	Vdrive@x,w
  4206     0590  072B               	addwf	Vdrive@y,w
  4207     0591  00B5               	movwf	Vdrive@r_motor	;volatile
  4208     0592  082E               	movf	Vdrive@x+1,w
  4209     0593  3D2C               	addwfc	Vdrive@y+1,w
  4210     0594  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4211     0595                     l1920:
  4212                           
  4213                           ;./Driving.h: 32: 
  4214     0595  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4215     0596  3A80               	xorlw	128
  4216     0597  00AF               	movwf	??_Vdrive
  4217     0598  3080               	movlw	128
  4218     0599  022F               	subwf	??_Vdrive,w
  4219     059A  1D03               	skipz
  4220     059B  2D9E               	goto	u1555
  4221     059C  3065               	movlw	101
  4222     059D  0233               	subwf	Vdrive@l_motor,w	;volatile
  4223     059E                     u1555:
  4224     059E  1803               	skipnc
  4225     059F  2DA1               	goto	u1551
  4226     05A0  2DA2               	goto	u1550
  4227     05A1                     u1551:
  4228     05A1  2DB0               	goto	l1924
  4229     05A2                     u1550:
  4230     05A2                     l1922:
  4231     05A2  0020               	movlb	0	; select bank0
  4232     05A3  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4233     05A4  3A80               	xorlw	128
  4234     05A5  00AF               	movwf	??_Vdrive
  4235     05A6  307F               	movlw	127
  4236     05A7  022F               	subwf	??_Vdrive,w
  4237     05A8  1D03               	skipz
  4238     05A9  2DAC               	goto	u1565
  4239     05AA  309C               	movlw	156
  4240     05AB  0233               	subwf	Vdrive@l_motor,w	;volatile
  4241     05AC                     u1565:
  4242     05AC  1803               	skipnc
  4243     05AD  2DAF               	goto	u1561
  4244     05AE  2DB0               	goto	u1560
  4245     05AF                     u1561:
  4246     05AF  2DD5               	goto	l1926
  4247     05B0                     u1560:
  4248     05B0                     l1924:
  4249                           
  4250                           ;./Driving.h: 33:     if (l_motor > 0);./Driving.h: 34:     {
  4251     05B0  0020               	movlb	0	; select bank0
  4252     05B1  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4253     05B2  00F1               	movwf	abs@a+1
  4254     05B3  0833               	movf	Vdrive@l_motor,w	;volatile
  4255     05B4  00F0               	movwf	abs@a
  4256     05B5  3180  20CC  3185   	fcall	_abs
  4257     05B8  0871               	movf	?_abs+1,w
  4258     05B9  00F5               	movwf	___awdiv@divisor+1
  4259     05BA  0870               	movf	?_abs,w
  4260     05BB  00F4               	movwf	___awdiv@divisor
  4261     05BC  0020               	movlb	0	; select bank0
  4262     05BD  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4263     05BE  00F7               	movwf	___awdiv@dividend+1
  4264     05BF  0833               	movf	Vdrive@l_motor,w	;volatile
  4265     05C0  00F6               	movwf	___awdiv@dividend
  4266     05C1  3183  23C7  3185   	fcall	___awdiv
  4267     05C4  0875               	movf	?___awdiv+1,w
  4268     05C5  0020               	movlb	0	; select bank0
  4269     05C6  00A1               	movwf	___wmul@multiplier+1
  4270     05C7  0874               	movf	?___awdiv,w
  4271     05C8  00A0               	movwf	___wmul@multiplier
  4272     05C9  3064               	movlw	100
  4273     05CA  00A2               	movwf	___wmul@multiplicand
  4274     05CB  3000               	movlw	0
  4275     05CC  00A3               	movwf	___wmul@multiplicand+1
  4276     05CD  3181  2158  3185   	fcall	___wmul
  4277     05D0  0020               	movlb	0	; select bank0
  4278     05D1  0821               	movf	?___wmul+1,w
  4279     05D2  00B4               	movwf	Vdrive@l_motor+1	;volatile
  4280     05D3  0820               	movf	?___wmul,w
  4281     05D4  00B3               	movwf	Vdrive@l_motor	;volatile
  4282     05D5                     l1926:
  4283                           
  4284                           ;./Driving.h: 36:     }
  4285     05D5  0020               	movlb	0	; select bank0
  4286     05D6  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4287     05D7  3A80               	xorlw	128
  4288     05D8  00AF               	movwf	??_Vdrive
  4289     05D9  3080               	movlw	128
  4290     05DA  022F               	subwf	??_Vdrive,w
  4291     05DB  1D03               	skipz
  4292     05DC  2DDF               	goto	u1575
  4293     05DD  3065               	movlw	101
  4294     05DE  0235               	subwf	Vdrive@r_motor,w	;volatile
  4295     05DF                     u1575:
  4296     05DF  1803               	skipnc
  4297     05E0  2DE2               	goto	u1571
  4298     05E1  2DE3               	goto	u1570
  4299     05E2                     u1571:
  4300     05E2  2DF1               	goto	l1930
  4301     05E3                     u1570:
  4302     05E3                     l1928:
  4303     05E3  0020               	movlb	0	; select bank0
  4304     05E4  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4305     05E5  3A80               	xorlw	128
  4306     05E6  00AF               	movwf	??_Vdrive
  4307     05E7  307F               	movlw	127
  4308     05E8  022F               	subwf	??_Vdrive,w
  4309     05E9  1D03               	skipz
  4310     05EA  2DED               	goto	u1585
  4311     05EB  309C               	movlw	156
  4312     05EC  0235               	subwf	Vdrive@r_motor,w	;volatile
  4313     05ED                     u1585:
  4314     05ED  1803               	skipnc
  4315     05EE  2DF0               	goto	u1581
  4316     05EF  2DF1               	goto	u1580
  4317     05F0                     u1581:
  4318     05F0  2E16               	goto	l1932
  4319     05F1                     u1580:
  4320     05F1                     l1930:
  4321                           
  4322                           ;./Driving.h: 37:     else;./Driving.h: 38:     {
  4323     05F1  0020               	movlb	0	; select bank0
  4324     05F2  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4325     05F3  00F1               	movwf	abs@a+1
  4326     05F4  0835               	movf	Vdrive@r_motor,w	;volatile
  4327     05F5  00F0               	movwf	abs@a
  4328     05F6  3180  20CC  3185   	fcall	_abs
  4329     05F9  0871               	movf	?_abs+1,w
  4330     05FA  00F5               	movwf	___awdiv@divisor+1
  4331     05FB  0870               	movf	?_abs,w
  4332     05FC  00F4               	movwf	___awdiv@divisor
  4333     05FD  0020               	movlb	0	; select bank0
  4334     05FE  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4335     05FF  00F7               	movwf	___awdiv@dividend+1
  4336     0600  0835               	movf	Vdrive@r_motor,w	;volatile
  4337     0601  00F6               	movwf	___awdiv@dividend
  4338     0602  3183  23C7  3185   	fcall	___awdiv
  4339     0605  0875               	movf	?___awdiv+1,w
  4340     0606  0020               	movlb	0	; select bank0
  4341     0607  00A1               	movwf	___wmul@multiplier+1
  4342     0608  0874               	movf	?___awdiv,w
  4343     0609  00A0               	movwf	___wmul@multiplier
  4344     060A  3064               	movlw	100
  4345     060B  00A2               	movwf	___wmul@multiplicand
  4346     060C  3000               	movlw	0
  4347     060D  00A3               	movwf	___wmul@multiplicand+1
  4348     060E  3181  2158  3185   	fcall	___wmul
  4349     0611  0020               	movlb	0	; select bank0
  4350     0612  0821               	movf	?___wmul+1,w
  4351     0613  00B6               	movwf	Vdrive@r_motor+1	;volatile
  4352     0614  0820               	movf	?___wmul,w
  4353     0615  00B5               	movwf	Vdrive@r_motor	;volatile
  4354     0616                     l1932:
  4355                           
  4356                           ;./Driving.h: 41: 
  4357     0616  0020               	movlb	0	; select bank0
  4358     0617  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4359     0618  3A80               	xorlw	128
  4360     0619  00AF               	movwf	??_Vdrive
  4361     061A  3080               	movlw	128
  4362     061B  022F               	subwf	??_Vdrive,w
  4363     061C  1D03               	skipz
  4364     061D  2E20               	goto	u1595
  4365     061E  3001               	movlw	1
  4366     061F  0233               	subwf	Vdrive@l_motor,w	;volatile
  4367     0620                     u1595:
  4368     0620  1C03               	skipc
  4369     0621  2E23               	goto	u1591
  4370     0622  2E24               	goto	u1590
  4371     0623                     u1591:
  4372     0623  2E28               	goto	l1936
  4373     0624                     u1590:
  4374     0624                     l1934:
  4375                           
  4376                           ;./Driving.h: 42:     if (r_motor > 0);./Driving.h: 43:     {
  4377     0624  3001               	movlw	1
  4378     0625  0020               	movlb	0	; select bank0
  4379     0626  00B1               	movwf	Vdrive@left_dir	;volatile
  4380                           
  4381                           ;./Driving.h: 44:         right_dir = 1;
  4382     0627  2E2B               	goto	l245
  4383     0628                     l1936:
  4384                           
  4385                           ;./Driving.h: 46:     else;./Driving.h: 47:     {
  4386     0628  3002               	movlw	2
  4387     0629  0020               	movlb	0	; select bank0
  4388     062A  00B1               	movwf	Vdrive@left_dir	;volatile
  4389     062B                     l245:	
  4390                           ;./Driving.h: 48:         right_dir = 2;
  4391                           
  4392                           
  4393                           ;./Driving.h: 50: 
  4394     062B  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4395     062C  3A80               	xorlw	128
  4396     062D  00AF               	movwf	??_Vdrive
  4397     062E  3080               	movlw	128
  4398     062F  022F               	subwf	??_Vdrive,w
  4399     0630  1D03               	skipz
  4400     0631  2E34               	goto	u1605
  4401     0632  3001               	movlw	1
  4402     0633  0235               	subwf	Vdrive@r_motor,w	;volatile
  4403     0634                     u1605:
  4404     0634  1C03               	skipc
  4405     0635  2E37               	goto	u1601
  4406     0636  2E38               	goto	u1600
  4407     0637                     u1601:
  4408     0637  2E3C               	goto	l1940
  4409     0638                     u1600:
  4410     0638                     l1938:
  4411                           
  4412                           ;./Driving.h: 51:     motor(left_dir, abs(l_motor), right_dir, abs(r_motor));;./Driving.
      +                          h: 52: }
  4413     0638  3001               	movlw	1
  4414     0639  0020               	movlb	0	; select bank0
  4415     063A  00B2               	movwf	Vdrive@right_dir	;volatile
  4416                           
  4417                           ;./Driving.h: 53: 
  4418     063B  2E3F               	goto	l1942
  4419     063C                     l1940:
  4420                           
  4421                           ;./Driving.h: 55: {;./Driving.h: 56:     volatile int dir;
  4422     063C  3002               	movlw	2
  4423     063D  0020               	movlb	0	; select bank0
  4424     063E  00B2               	movwf	Vdrive@right_dir	;volatile
  4425     063F                     l1942:
  4426                           
  4427                           ;./Driving.h: 59:     user_data();
  4428     063F  0834               	movf	Vdrive@l_motor+1,w	;volatile
  4429     0640  00F1               	movwf	abs@a+1
  4430     0641  0833               	movf	Vdrive@l_motor,w	;volatile
  4431     0642  00F0               	movwf	abs@a
  4432     0643  3180  20CC  3185   	fcall	_abs
  4433     0646  0870               	movf	?_abs,w
  4434     0647  00F8               	movwf	motor@pwmA
  4435     0648  0020               	movlb	0	; select bank0
  4436     0649  0832               	movf	Vdrive@right_dir,w	;volatile
  4437     064A  00F9               	movwf	motor@dirB
  4438     064B  0836               	movf	Vdrive@r_motor+1,w	;volatile
  4439     064C  00F1               	movwf	abs@a+1
  4440     064D  0835               	movf	Vdrive@r_motor,w	;volatile
  4441     064E  00F0               	movwf	abs@a
  4442     064F  3180  20CC  3185   	fcall	_abs
  4443     0652  0870               	movf	?_abs,w
  4444     0653  00FA               	movwf	motor@pwmB
  4445     0654  0020               	movlb	0	; select bank0
  4446     0655  0831               	movf	Vdrive@left_dir,w	;volatile
  4447     0656  3182  224E  3185   	fcall	_motor
  4448     0659                     l248:
  4449     0659  0008               	return
  4450     065A                     __end_of_Vdrive:
  4451                           
  4452                           	psect	text16
  4453     024E                     __ptext16:	
  4454 ;; *************** function _motor *****************
  4455 ;; Defined at:
  4456 ;;		line 217 in file "./Commands.h"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  dirA            1    wreg     unsigned char 
  4459 ;;  pwmA            1    8[COMMON] unsigned char 
  4460 ;;  dirB            1    9[COMMON] unsigned char 
  4461 ;;  pwmB            1   10[COMMON] unsigned char 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  dirA            1    0[BANK0 ] unsigned char 
  4464 ;;  11741          10    1[BANK0 ] volatile unsigned char [
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4474 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;Total ram usage:       15 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; Hardware stack levels required when called: 2
  4481 ;; This function calls:
  4482 ;;		_UART_send
  4483 ;; This function is called by:
  4484 ;;		_Vdrive
  4485 ;;		_line_follower
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489     024E                     _motor:	
  4490                           ;psect for function _motor
  4491                           
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in _motor: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4495                           ;motor@dirA stored from wreg
  4496     024E  0020               	movlb	0	; select bank0
  4497     024F  00A0               	movwf	motor@dirA
  4498     0250                     l1760:
  4499     0250                     l1762:	
  4500                           ;./Commands.h: 217: void motor(unsigned char dirA, unsigned char pwmA, unsigned char dir
      +                          B, unsigned char pwmB);./Commands.h: 218: {;./Commands.h: 219:     while (!UART_send((vo
      +                          latile unsigned char []) {0xFE, 0x19, 0x01, 0x06, 0x04, 0x00, dirA, pwmA, dirB, pwmB}, 1
      +                          0)){}
  4501                           
  4502     0250  30A0               	movlw	low motor@F11740
  4503     0251  0086               	movwf	6
  4504     0252  3000               	movlw	high motor@F11740
  4505     0253  0087               	movwf	7
  4506     0254  3021               	movlw	low motor@11741
  4507     0255  0084               	movwf	4
  4508     0256  3000               	movlw	high motor@11741
  4509     0257  0085               	movwf	5
  4510     0258  300A               	movlw	10
  4511     0259  00FB               	movwf	??_motor
  4512     025A                     u1260:
  4513     025A  0016               	moviw fsr1++
  4514     025B  001A               	movwi fsr0++
  4515     025C  0BFB               	decfsz	??_motor,f
  4516     025D  2A5A               	goto	u1260
  4517     025E                     l1764:
  4518     025E  30FE               	movlw	254
  4519     025F  0020               	movlb	0	; select bank0
  4520     0260  00A1               	movwf	motor@11741	;volatile
  4521     0261                     l1766:
  4522     0261  3019               	movlw	25
  4523     0262  00A2               	movwf	motor@11741+1	;volatile
  4524     0263                     l1768:
  4525     0263  3001               	movlw	1
  4526     0264  00A3               	movwf	motor@11741+2	;volatile
  4527     0265                     l1770:
  4528     0265  3006               	movlw	6
  4529     0266  00A4               	movwf	motor@11741+3	;volatile
  4530     0267                     l1772:
  4531     0267  3004               	movlw	4
  4532     0268  00A5               	movwf	motor@11741+4	;volatile
  4533     0269                     l1774:
  4534     0269  01A6               	clrf	motor@11741+5	;volatile
  4535     026A                     l1776:
  4536     026A  0820               	movf	motor@dirA,w
  4537     026B  00A7               	movwf	motor@11741+6	;volatile
  4538     026C                     l1778:
  4539     026C  0878               	movf	motor@pwmA,w
  4540     026D  00A8               	movwf	motor@11741+7	;volatile
  4541     026E                     l1780:
  4542     026E  0879               	movf	motor@dirB,w
  4543     026F  00A9               	movwf	motor@11741+8	;volatile
  4544     0270                     l1782:
  4545     0270  087A               	movf	motor@pwmB,w
  4546     0271  00AA               	movwf	motor@11741+9	;volatile
  4547     0272                     l1784:
  4548     0272  300A               	movlw	10
  4549     0273  00F2               	movwf	UART_send@size
  4550     0274  3000               	movlw	0
  4551     0275  00F3               	movwf	UART_send@size+1
  4552     0276  3021               	movlw	(low (motor@11741| 0))& (0+255)
  4553     0277  3181  219F  3182   	fcall	_UART_send
  4554     027A  3A00               	xorlw	0
  4555     027B  1903               	skipnz
  4556     027C  2A7E               	goto	u1271
  4557     027D  2A7F               	goto	u1270
  4558     027E                     u1271:
  4559     027E  2A50               	goto	l1762
  4560     027F                     u1270:
  4561     027F                     l156:
  4562     027F  0008               	return
  4563     0280                     __end_of_motor:
  4564                           
  4565                           	psect	text17
  4566     019F                     __ptext17:	
  4567 ;; *************** function _UART_send *****************
  4568 ;; Defined at:
  4569 ;;		line 62 in file "./Commands.h"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  message         1    wreg     PTR volatile unsigned ch
  4572 ;;		 -> ore_type@11783(7), surface_exploration@11779(10), custom_laser@11771(6), transmit_repair@11765(6), 
  4573 ;;		 -> request_repair@11762(6), transmit_shield_code@11759(6), shoot_laser@11756(7), set_laser@11752(7), 
  4574 ;;		 -> servo@11748(10), motor@11741(10), user_data_send@11729(6), PCLS_info_send@11721(6), 
  4575 ;;  size            2    2[COMMON] unsigned int 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  message         1    6[COMMON] PTR volatile unsigned ch
  4578 ;;		 -> ore_type@11783(7), surface_exploration@11779(10), custom_laser@11771(6), transmit_repair@11765(6), 
  4579 ;;		 -> request_repair@11762(6), transmit_shield_code@11759(6), shoot_laser@11756(7), set_laser@11752(7), 
  4580 ;;		 -> servo@11748(10), motor@11741(10), user_data_send@11729(6), PCLS_info_send@11721(6), 
  4581 ;;  i               1    7[COMMON] volatile unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      unsigned char 
  4584 ;; Registers used:
  4585 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4591 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4595 ;;Total ram usage:        6 bytes
  4596 ;; Hardware stack levels used: 1
  4597 ;; Hardware stack levels required when called: 1
  4598 ;; This function calls:
  4599 ;;		_tx_wait
  4600 ;; This function is called by:
  4601 ;;		_PCLS_info_send
  4602 ;;		_user_data_send
  4603 ;;		_motor
  4604 ;;		_set_laser
  4605 ;;		_shoot_laser
  4606 ;;		_transmit_shield_code
  4607 ;;		_servo
  4608 ;;		_request_repair
  4609 ;;		_transmit_repair
  4610 ;;		_custom_laser
  4611 ;;		_surface_exploration
  4612 ;;		_ore_type
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616     019F                     _UART_send:	
  4617                           ;psect for function _UART_send
  4618                           
  4619                           
  4620                           ;incstack = 0
  4621                           ; Regs used in _UART_send: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4622                           ;UART_send@message stored from wreg
  4623     019F  00F6               	movwf	UART_send@message
  4624     01A0                     l1620:
  4625     01A0  01F7               	clrf	UART_send@i	;volatile
  4626     01A1  29B9               	goto	l1632
  4627     01A2                     l1622:
  4628     01A2  3180  209A  3181   	fcall	_tx_wait
  4629     01A5  3A00               	xorlw	0
  4630     01A6  1D03               	skipz
  4631     01A7  29A9               	goto	u1011
  4632     01A8  29AA               	goto	u1010
  4633     01A9                     u1011:
  4634     01A9  29AC               	goto	l1628
  4635     01AA                     u1010:
  4636     01AA                     l1624:
  4637     01AA  3000               	movlw	0
  4638     01AB  29C7               	goto	l96
  4639     01AC                     l1628:
  4640     01AC  0877               	movf	UART_send@i,w
  4641     01AD  0776               	addwf	UART_send@message,w
  4642     01AE  00F4               	movwf	??_UART_send
  4643     01AF  0874               	movf	??_UART_send,w
  4644     01B0  0086               	movwf	6
  4645     01B1  0187               	clrf	7
  4646     01B2  0801               	movf	1,w
  4647     01B3  0022               	movlb	2	; select bank2
  4648     01B4  009A               	movwf	26	;volatile
  4649     01B5                     l1630:
  4650     01B5  3001               	movlw	1
  4651     01B6  00F4               	movwf	??_UART_send
  4652     01B7  0874               	movf	??_UART_send,w
  4653     01B8  07F7               	addwf	UART_send@i,f	;volatile
  4654     01B9                     l1632:
  4655     01B9  0877               	movf	UART_send@i,w	;volatile
  4656     01BA  00F4               	movwf	??_UART_send
  4657     01BB  01F5               	clrf	??_UART_send+1
  4658     01BC  0873               	movf	UART_send@size+1,w
  4659     01BD  0275               	subwf	??_UART_send+1,w
  4660     01BE  1D03               	skipz
  4661     01BF  29C2               	goto	u1025
  4662     01C0  0872               	movf	UART_send@size,w
  4663     01C1  0274               	subwf	??_UART_send,w
  4664     01C2                     u1025:
  4665     01C2  1C03               	skipc
  4666     01C3  29C5               	goto	u1021
  4667     01C4  29C6               	goto	u1020
  4668     01C5                     u1021:
  4669     01C5  29A2               	goto	l1622
  4670     01C6                     u1020:
  4671     01C6                     l1634:
  4672     01C6  3001               	movlw	1
  4673     01C7                     l96:
  4674     01C7  0008               	return
  4675     01C8                     __end_of_UART_send:
  4676                           
  4677                           	psect	text18
  4678     009A                     __ptext18:	
  4679 ;; *************** function _tx_wait *****************
  4680 ;; Defined at:
  4681 ;;		line 36 in file "./Commands.h"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;		None
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;  count           2    0[COMMON] volatile unsigned int 
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  1    wreg      unsigned char 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4699 ;;Total ram usage:        2 bytes
  4700 ;; Hardware stack levels used: 1
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_UART_send
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708     009A                     _tx_wait:	
  4709                           ;psect for function _tx_wait
  4710                           
  4711     009A                     l1584:	
  4712                           ;incstack = 0
  4713                           ; Regs used in _tx_wait: [wreg+status,2+status,0]
  4714                           
  4715                           
  4716                           ;./Commands.h: 38: ;./Commands.h: 39:     for (i=0; i < size; i++)
  4717     009A  30E8               	movlw	232
  4718     009B  00F0               	movwf	tx_wait@count	;volatile
  4719     009C  3003               	movlw	3
  4720     009D  00F1               	movwf	tx_wait@count+1	;volatile
  4721     009E                     l1586:
  4722     009E  0870               	movf	tx_wait@count,w	;volatile
  4723     009F  0471               	iorwf	tx_wait@count+1,w	;volatile
  4724     00A0  1D03               	btfss	3,2
  4725     00A1  28A3               	goto	u971
  4726     00A2  28A4               	goto	u970
  4727     00A3                     u971:
  4728     00A3  28A5               	goto	l81
  4729     00A4                     u970:
  4730     00A4  28B1               	goto	l1598
  4731     00A5                     l81:
  4732                           
  4733                           ;./Commands.h: 40:     {;./Commands.h: 41:         if(!tx_wait())
  4734     00A5  002E               	movlb	14	; select bank14
  4735     00A6  1E0F               	btfss	15,4	;volatile
  4736     00A7  28A9               	goto	u981
  4737     00A8  28AA               	goto	u980
  4738     00A9                     u981:
  4739     00A9  28AC               	goto	l1594
  4740     00AA                     u980:
  4741     00AA                     l1590:
  4742                           
  4743                           ;./Commands.h: 42:         {;./Commands.h: 43:             return 0;
  4744     00AA  3001               	movlw	1
  4745     00AB  28B2               	goto	l84
  4746     00AC                     l1594:
  4747                           
  4748                           ;./Commands.h: 45:         TXREG = message[i];
  4749     00AC  3001               	movlw	1
  4750     00AD  02F0               	subwf	tx_wait@count,f	;volatile
  4751     00AE  3000               	movlw	0
  4752     00AF  3BF1               	subwfb	tx_wait@count+1,f	;volatile
  4753     00B0  289E               	goto	l1586
  4754     00B1                     l1598:
  4755                           
  4756                           ;./Commands.h: 46:     }
  4757     00B1  3000               	movlw	0
  4758     00B2                     l84:
  4759     00B2  0008               	return
  4760     00B3                     __end_of_tx_wait:
  4761                           
  4762                           	psect	text19
  4763     00CC                     __ptext19:	
  4764 ;; *************** function _abs *****************
  4765 ;; Defined at:
  4766 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  4767 ;; Parameters:    Size  Location     Type
  4768 ;;  a               2    0[COMMON] int 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  2    0[COMMON] int 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4780 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4784 ;;Total ram usage:        4 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_Vdrive
  4790 ;;		_line_follower
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794     00CC                     _abs:	
  4795                           ;psect for function _abs
  4796                           
  4797     00CC                     l1786:	
  4798                           ;incstack = 0
  4799                           ; Regs used in _abs: [wreg+status,2+status,0]
  4800                           
  4801     00CC  0871               	movf	abs@a+1,w
  4802     00CD  3A80               	xorlw	128
  4803     00CE  00F2               	movwf	??_abs
  4804     00CF  3080               	movlw	128
  4805     00D0  0272               	subwf	??_abs,w
  4806     00D1  1D03               	skipz
  4807     00D2  28D5               	goto	u1285
  4808     00D3  3001               	movlw	1
  4809     00D4  0270               	subwf	abs@a,w
  4810     00D5                     u1285:
  4811     00D5  1803               	skipnc
  4812     00D6  28D8               	goto	u1281
  4813     00D7  28D9               	goto	u1280
  4814     00D8                     u1281:
  4815     00D8  28E5               	goto	l959
  4816     00D9                     u1280:
  4817     00D9                     l1788:
  4818     00D9  0970               	comf	abs@a,w
  4819     00DA  00F2               	movwf	??_abs
  4820     00DB  0971               	comf	abs@a+1,w
  4821     00DC  00F3               	movwf	??_abs+1
  4822     00DD  0AF2               	incf	??_abs,f
  4823     00DE  1903               	skipnz
  4824     00DF  0AF3               	incf	??_abs+1,f
  4825     00E0  0872               	movf	??_abs,w
  4826     00E1  00F0               	movwf	?_abs
  4827     00E2  0873               	movf	??_abs+1,w
  4828     00E3  00F1               	movwf	?_abs+1
  4829     00E4  28E5               	goto	l962
  4830     00E5                     l959:
  4831     00E5                     l962:
  4832     00E5  0008               	return
  4833     00E6                     __end_of_abs:
  4834                           
  4835                           	psect	text20
  4836     0158                     __ptext20:	
  4837 ;; *************** function ___wmul *****************
  4838 ;; Defined at:
  4839 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4840 ;; Parameters:    Size  Location     Type
  4841 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4842 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4843 ;; Auto vars:     Size  Location     Type
  4844 ;;  product         2    4[BANK0 ] unsigned int 
  4845 ;; Return value:  Size  Location     Type
  4846 ;;                  2    0[BANK0 ] unsigned int 
  4847 ;; Registers used:
  4848 ;;		wreg, status,2, status,0
  4849 ;; Tracked objects:
  4850 ;;		On entry : 0/0
  4851 ;;		On exit  : 0/0
  4852 ;;		Unchanged: 0/0
  4853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4854 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4855 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4857 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4858 ;;Total ram usage:        6 bytes
  4859 ;; Hardware stack levels used: 1
  4860 ;; This function calls:
  4861 ;;		Nothing
  4862 ;; This function is called by:
  4863 ;;		_Vdrive
  4864 ;;		_drive
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868     0158                     ___wmul:	
  4869                           ;psect for function ___wmul
  4870                           
  4871     0158                     l1790:	
  4872                           ;incstack = 0
  4873                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4874                           
  4875     0158  0020               	movlb	0	; select bank0
  4876     0159  01A4               	clrf	___wmul@product
  4877     015A  01A5               	clrf	___wmul@product+1
  4878     015B                     l1792:
  4879     015B  1C20               	btfss	___wmul@multiplier,0
  4880     015C  295E               	goto	u1291
  4881     015D  295F               	goto	u1290
  4882     015E                     u1291:
  4883     015E  2963               	goto	l499
  4884     015F                     u1290:
  4885     015F                     l1794:
  4886     015F  0822               	movf	___wmul@multiplicand,w
  4887     0160  07A4               	addwf	___wmul@product,f
  4888     0161  0823               	movf	___wmul@multiplicand+1,w
  4889     0162  3DA5               	addwfc	___wmul@product+1,f
  4890     0163                     l499:
  4891     0163  3001               	movlw	1
  4892     0164                     u1305:
  4893     0164  35A2               	lslf	___wmul@multiplicand,f
  4894     0165  0DA3               	rlf	___wmul@multiplicand+1,f
  4895     0166  0B89               	decfsz	9,f
  4896     0167  2964               	goto	u1305
  4897     0168                     l1796:
  4898     0168  3001               	movlw	1
  4899     0169                     u1315:
  4900     0169  36A1               	lsrf	___wmul@multiplier+1,f
  4901     016A  0CA0               	rrf	___wmul@multiplier,f
  4902     016B  0B89               	decfsz	9,f
  4903     016C  2969               	goto	u1315
  4904     016D                     l1798:
  4905     016D  0820               	movf	___wmul@multiplier,w
  4906     016E  0421               	iorwf	___wmul@multiplier+1,w
  4907     016F  1D03               	btfss	3,2
  4908     0170  2972               	goto	u1321
  4909     0171  2973               	goto	u1320
  4910     0172                     u1321:
  4911     0172  295B               	goto	l1792
  4912     0173                     u1320:
  4913     0173                     l1800:
  4914     0173  0825               	movf	___wmul@product+1,w
  4915     0174  00A1               	movwf	?___wmul+1
  4916     0175  0824               	movf	___wmul@product,w
  4917     0176  00A0               	movwf	?___wmul
  4918     0177                     l501:
  4919     0177  0008               	return
  4920     0178                     __end_of___wmul:
  4921                           
  4922                           	psect	text21
  4923     03C7                     __ptext21:	
  4924 ;; *************** function ___awdiv *****************
  4925 ;; Defined at:
  4926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\awdiv.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  divisor         2    4[COMMON] int 
  4929 ;;  dividend        2    6[COMMON] int 
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;  quotient        2   11[COMMON] int 
  4932 ;;  sign            1   10[COMMON] unsigned char 
  4933 ;;  counter         1    9[COMMON] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  2    4[COMMON] int 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4943 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4944 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4946 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4947 ;;Total ram usage:        9 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; This function calls:
  4950 ;;		Nothing
  4951 ;; This function is called by:
  4952 ;;		_Vdrive
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956     03C7                     ___awdiv:	
  4957                           ;psect for function ___awdiv
  4958                           
  4959     03C7                     l1804:	
  4960                           ;incstack = 0
  4961                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4962                           
  4963     03C7  01FA               	clrf	___awdiv@sign
  4964     03C8                     l1806:
  4965     03C8  1FF5               	btfss	___awdiv@divisor+1,7
  4966     03C9  2BCB               	goto	u1331
  4967     03CA  2BCC               	goto	u1330
  4968     03CB                     u1331:
  4969     03CB  2BD3               	goto	l1812
  4970     03CC                     u1330:
  4971     03CC                     l1808:
  4972     03CC  09F4               	comf	___awdiv@divisor,f
  4973     03CD  09F5               	comf	___awdiv@divisor+1,f
  4974     03CE  0AF4               	incf	___awdiv@divisor,f
  4975     03CF  1903               	skipnz
  4976     03D0  0AF5               	incf	___awdiv@divisor+1,f
  4977     03D1                     l1810:
  4978     03D1  01FA               	clrf	___awdiv@sign
  4979     03D2  0AFA               	incf	___awdiv@sign,f
  4980     03D3                     l1812:
  4981     03D3  1FF7               	btfss	___awdiv@dividend+1,7
  4982     03D4  2BD6               	goto	u1341
  4983     03D5  2BD7               	goto	u1340
  4984     03D6                     u1341:
  4985     03D6  2BE0               	goto	l1818
  4986     03D7                     u1340:
  4987     03D7                     l1814:
  4988     03D7  09F6               	comf	___awdiv@dividend,f
  4989     03D8  09F7               	comf	___awdiv@dividend+1,f
  4990     03D9  0AF6               	incf	___awdiv@dividend,f
  4991     03DA  1903               	skipnz
  4992     03DB  0AF7               	incf	___awdiv@dividend+1,f
  4993     03DC                     l1816:
  4994     03DC  3001               	movlw	1
  4995     03DD  00F8               	movwf	??___awdiv
  4996     03DE  0878               	movf	??___awdiv,w
  4997     03DF  06FA               	xorwf	___awdiv@sign,f
  4998     03E0                     l1818:
  4999     03E0  01FB               	clrf	___awdiv@quotient
  5000     03E1  01FC               	clrf	___awdiv@quotient+1
  5001     03E2                     l1820:
  5002     03E2  0874               	movf	___awdiv@divisor,w
  5003     03E3  0475               	iorwf	___awdiv@divisor+1,w
  5004     03E4  1903               	btfsc	3,2
  5005     03E5  2BE7               	goto	u1351
  5006     03E6  2BE8               	goto	u1350
  5007     03E7                     u1351:
  5008     03E7  2C17               	goto	l1840
  5009     03E8                     u1350:
  5010     03E8                     l1822:
  5011     03E8  01F9               	clrf	___awdiv@counter
  5012     03E9  0AF9               	incf	___awdiv@counter,f
  5013     03EA  2BF4               	goto	l1828
  5014     03EB                     l1824:
  5015     03EB  3001               	movlw	1
  5016     03EC                     u1365:
  5017     03EC  35F4               	lslf	___awdiv@divisor,f
  5018     03ED  0DF5               	rlf	___awdiv@divisor+1,f
  5019     03EE  0B89               	decfsz	9,f
  5020     03EF  2BEC               	goto	u1365
  5021     03F0                     l1826:
  5022     03F0  3001               	movlw	1
  5023     03F1  00F8               	movwf	??___awdiv
  5024     03F2  0878               	movf	??___awdiv,w
  5025     03F3  07F9               	addwf	___awdiv@counter,f
  5026     03F4                     l1828:
  5027     03F4  1FF5               	btfss	___awdiv@divisor+1,7
  5028     03F5  2BF7               	goto	u1371
  5029     03F6  2BF8               	goto	u1370
  5030     03F7                     u1371:
  5031     03F7  2BEB               	goto	l1824
  5032     03F8                     u1370:
  5033     03F8                     l1830:
  5034     03F8  3001               	movlw	1
  5035     03F9                     u1385:
  5036     03F9  35FB               	lslf	___awdiv@quotient,f
  5037     03FA  0DFC               	rlf	___awdiv@quotient+1,f
  5038     03FB  0B89               	decfsz	9,f
  5039     03FC  2BF9               	goto	u1385
  5040     03FD  0875               	movf	___awdiv@divisor+1,w
  5041     03FE  0277               	subwf	___awdiv@dividend+1,w
  5042     03FF  1D03               	skipz
  5043     0400  2C03               	goto	u1395
  5044     0401  0874               	movf	___awdiv@divisor,w
  5045     0402  0276               	subwf	___awdiv@dividend,w
  5046     0403                     u1395:
  5047     0403  1C03               	skipc
  5048     0404  2C06               	goto	u1391
  5049     0405  2C07               	goto	u1390
  5050     0406                     u1391:
  5051     0406  2C0C               	goto	l1836
  5052     0407                     u1390:
  5053     0407                     l1832:
  5054     0407  0874               	movf	___awdiv@divisor,w
  5055     0408  02F6               	subwf	___awdiv@dividend,f
  5056     0409  0875               	movf	___awdiv@divisor+1,w
  5057     040A  3BF7               	subwfb	___awdiv@dividend+1,f
  5058     040B                     l1834:
  5059     040B  147B               	bsf	___awdiv@quotient,0
  5060     040C                     l1836:
  5061     040C  3001               	movlw	1
  5062     040D                     u1405:
  5063     040D  36F5               	lsrf	___awdiv@divisor+1,f
  5064     040E  0CF4               	rrf	___awdiv@divisor,f
  5065     040F  0B89               	decfsz	9,f
  5066     0410  2C0D               	goto	u1405
  5067     0411                     l1838:
  5068     0411  3001               	movlw	1
  5069     0412  02F9               	subwf	___awdiv@counter,f
  5070     0413  1D03               	btfss	3,2
  5071     0414  2C16               	goto	u1411
  5072     0415  2C17               	goto	u1410
  5073     0416                     u1411:
  5074     0416  2BF8               	goto	l1830
  5075     0417                     u1410:
  5076     0417                     l1840:
  5077     0417  087A               	movf	___awdiv@sign,w
  5078     0418  1903               	btfsc	3,2
  5079     0419  2C1B               	goto	u1421
  5080     041A  2C1C               	goto	u1420
  5081     041B                     u1421:
  5082     041B  2C21               	goto	l1844
  5083     041C                     u1420:
  5084     041C                     l1842:
  5085     041C  09FB               	comf	___awdiv@quotient,f
  5086     041D  09FC               	comf	___awdiv@quotient+1,f
  5087     041E  0AFB               	incf	___awdiv@quotient,f
  5088     041F  1903               	skipnz
  5089     0420  0AFC               	incf	___awdiv@quotient+1,f
  5090     0421                     l1844:
  5091     0421  087C               	movf	___awdiv@quotient+1,w
  5092     0422  00F5               	movwf	?___awdiv+1
  5093     0423  087B               	movf	___awdiv@quotient,w
  5094     0424  00F4               	movwf	?___awdiv
  5095     0425                     l652:
  5096     0425  0008               	return
  5097     0426                     __end_of___awdiv:
  5098                           
  5099                           	psect	text22
  5100     0065                     __ptext22:	
  5101 ;; *************** function _UART_init *****************
  5102 ;; Defined at:
  5103 ;;		line 78 in file "./Commands.h"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;		None
  5106 ;; Auto vars:     Size  Location     Type
  5107 ;;		None
  5108 ;; Return value:  Size  Location     Type
  5109 ;;                  1    wreg      void 
  5110 ;; Registers used:
  5111 ;;		wreg
  5112 ;; Tracked objects:
  5113 ;;		On entry : 0/0
  5114 ;;		On exit  : 0/0
  5115 ;;		Unchanged: 0/0
  5116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5121 ;;Total ram usage:        0 bytes
  5122 ;; Hardware stack levels used: 1
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		_main
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130     0065                     _UART_init:	
  5131                           ;psect for function _UART_init
  5132                           
  5133     0065                     l1952:	
  5134                           ;incstack = 0
  5135                           ; Regs used in _UART_init: [wreg]
  5136                           
  5137     0065  003E               	movlb	30	; select bank30
  5138     0066  134E               	bcf	78,6	;volatile
  5139     0067  13CE               	bcf	78,7	;volatile
  5140                           
  5141                           ;./Commands.h: 92:     TX1STAbits.SYNC = 0;
  5142     0068  0022               	movlb	2	; select bank2
  5143     0069  121E               	bcf	30,4	;volatile
  5144                           
  5145                           ;./Commands.h: 93:     TX1STAbits.TXEN = 1;
  5146     006A  169E               	bsf	30,5	;volatile
  5147                           
  5148                           ;./Commands.h: 94:     RC1STAbits.SPEN = 1;
  5149     006B  179D               	bsf	29,7	;volatile
  5150                           
  5151                           ;./Commands.h: 95:     RC1STAbits.CREN = 1;
  5152     006C  161D               	bsf	29,4	;volatile
  5153                           
  5154                           ;./Commands.h: 97:     TX1STAbits.BRGH = 1;
  5155     006D  151E               	bsf	30,2	;volatile
  5156                           
  5157                           ;./Commands.h: 99:     BAUD1CONbits.BRG16 = 1;
  5158     006E  159F               	bsf	31,3	;volatile
  5159     006F                     l1954:
  5160                           
  5161                           ;./Commands.h: 100:     SP1BRGLbits.SP1BRGL = 0x44;
  5162     006F  3044               	movlw	68
  5163     0070  009B               	movwf	27	;volatile
  5164                           
  5165                           ;./Commands.h: 102:     RC6PPS = 0x10;
  5166     0071  3010               	movlw	16
  5167     0072  003E               	movlb	30	; select bank30
  5168     0073  00A6               	movwf	38	;volatile
  5169     0074                     l100:
  5170     0074  0008               	return
  5171     0075                     __end_of_UART_init:
  5172                           
  5173                           	psect	text23
  5174     003D                     __ptext23:	
  5175 ;; *************** function _IR_init *****************
  5176 ;; Defined at:
  5177 ;;		line 12 in file "./IR.h"
  5178 ;; Parameters:    Size  Location     Type
  5179 ;;		None
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;		None
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0, pclath, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5195 ;;Total ram usage:        0 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; Hardware stack levels required when called: 1
  5198 ;; This function calls:
  5199 ;;		_read_adc
  5200 ;; This function is called by:
  5201 ;;		_main
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205     003D                     _IR_init:	
  5206                           ;psect for function _IR_init
  5207                           
  5208     003D                     l2060:	
  5209                           ;incstack = 0
  5210                           ; Regs used in _IR_init: [wreg+status,2+status,0+pclath+cstack]
  5211                           
  5212                           
  5213                           ;./IR.h: 14:     TRISAbits.TRISA1 = 0;
  5214     003D  300C               	movlw	12
  5215     003E  3181  2178  3180   	fcall	_read_adc
  5216     0041  0870               	movf	?_read_adc,w
  5217     0042  3EC0               	addlw	192
  5218     0043  0020               	movlb	0	; select bank0
  5219     0044  00DE               	movwf	_IR_base	;volatile
  5220     0045  30FF               	movlw	255
  5221     0046  3D71               	addwfc	?_read_adc+1,w
  5222     0047  00DF               	movwf	_IR_base+1	;volatile
  5223     0048                     l317:
  5224     0048  0008               	return
  5225     0049                     __end_of_IR_init:
  5226                           
  5227                           	psect	text24
  5228     0220                     __ptext24:	
  5229 ;; *************** function _IR *****************
  5230 ;; Defined at:
  5231 ;;		line 17 in file "./IR.h"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  ADC_val         2   10[COMMON] volatile unsigned int 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      void 
  5238 ;; Registers used:
  5239 ;;		wreg, pclath, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5249 ;;Total ram usage:        4 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; Hardware stack levels required when called: 1
  5252 ;; This function calls:
  5253 ;;		_read_adc
  5254 ;; This function is called by:
  5255 ;;		_main
  5256 ;; This function uses a non-reentrant model
  5257 ;;
  5258                           
  5259     0220                     _IR:	
  5260                           ;psect for function _IR
  5261                           
  5262     0220                     l2062:	
  5263                           ;incstack = 0
  5264                           ; Regs used in _IR: [wreg+pclath+cstack]
  5265                           
  5266                           
  5267                           ;./IR.h: 19:     if (ADC_val > IR_base);./IR.h: 21:         LATAbits.LATA1 = 1;
  5268     0220  0020               	movlb	0	; select bank0
  5269     0221  1011               	bcf	17,0	;volatile
  5270                           
  5271                           ;./IR.h: 22:         LATAbits.LATA1 = 1;
  5272     0222  1091               	bcf	17,1	;volatile
  5273                           
  5274                           ;./IR.h: 23:         LATAbits.LATA2 = 1;
  5275     0223  1111               	bcf	17,2	;volatile
  5276                           
  5277                           ;./IR.h: 24:         LATAbits.LATA3 = 1;
  5278     0224  1191               	bcf	17,3	;volatile
  5279     0225                     l2064:
  5280                           
  5281                           ;./IR.h: 26:     else
  5282     0225  300C               	movlw	12
  5283     0226  3181  2178  3182   	fcall	_read_adc
  5284     0229  0871               	movf	?_read_adc+1,w
  5285     022A  00FB               	movwf	IR@ADC_val+1	;volatile
  5286     022B  0870               	movf	?_read_adc,w
  5287     022C  00FA               	movwf	IR@ADC_val	;volatile
  5288     022D                     l2066:
  5289                           
  5290                           ;./IR.h: 27:     {
  5291     022D  087B               	movf	IR@ADC_val+1,w	;volatile
  5292     022E  0020               	movlb	0	; select bank0
  5293     022F  025F               	subwf	_IR_base+1,w	;volatile
  5294     0230  1D03               	skipz
  5295     0231  2A34               	goto	u1755
  5296     0232  087A               	movf	IR@ADC_val,w	;volatile
  5297     0233  025E               	subwf	_IR_base,w	;volatile
  5298     0234                     u1755:
  5299     0234  1803               	skipnc
  5300     0235  2A37               	goto	u1751
  5301     0236  2A38               	goto	u1750
  5302     0237                     u1751:
  5303     0237  2A3D               	goto	l320
  5304     0238                     u1750:
  5305     0238                     l2068:
  5306                           
  5307                           ;./IR.h: 28:         LATAbits.LATA0 = 0;;./IR.h: 29:         LATAbits.LATA1 = 0;
  5308     0238  1496               	bsf	22,1	;volatile
  5309                           
  5310                           ;./IR.h: 30:         LATAbits.LATA2 = 0;
  5311     0239  1496               	bsf	22,1	;volatile
  5312                           
  5313                           ;./IR.h: 31:         LATAbits.LATA3 = 0;
  5314     023A  1516               	bsf	22,2	;volatile
  5315                           
  5316                           ;./IR.h: 32:         _delay((unsigned long)((3000)*(400000/4000.0)));
  5317     023B  1596               	bsf	22,3	;volatile
  5318                           
  5319                           ;./IR.h: 33:     }
  5320     023C  2A4D               	goto	l322
  5321     023D                     l320:	
  5322                           ;./IR.h: 34: }
  5323                           
  5324     023D  1016               	bcf	22,0	;volatile
  5325     023E  1096               	bcf	22,1	;volatile
  5326     023F  1116               	bcf	22,2	;volatile
  5327     0240  1196               	bcf	22,3	;volatile
  5328     0241                     l2070:
  5329     0241  3002               	movlw	2
  5330     0242  00F9               	movwf	??_IR+1
  5331     0243  3086               	movlw	134
  5332     0244  00F8               	movwf	??_IR
  5333     0245  3099               	movlw	153
  5334     0246                     u1977:
  5335     0246  0B89               	decfsz	9,f
  5336     0247  2A46               	goto	u1977
  5337     0248  0BF8               	decfsz	??_IR,f
  5338     0249  2A46               	goto	u1977
  5339     024A  0BF9               	decfsz	??_IR+1,f
  5340     024B  2A46               	goto	u1977
  5341     024C  0000               	nop
  5342     024D                     l322:
  5343     024D  0008               	return
  5344     024E                     __end_of_IR:
  5345                           
  5346                           	psect	text25
  5347     0178                     __ptext25:	
  5348 ;; *************** function _read_adc *****************
  5349 ;; Defined at:
  5350 ;;		line 33 in file "./Line Follower.h"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  sensor          1    wreg     unsigned char 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  sensor          1    5[COMMON] unsigned char 
  5355 ;;  ADC_val         2    6[COMMON] volatile unsigned int 
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  2    0[COMMON] int 
  5358 ;; Registers used:
  5359 ;;		wreg
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;Total ram usage:        8 bytes
  5370 ;; Hardware stack levels used: 1
  5371 ;; This function calls:
  5372 ;;		Nothing
  5373 ;; This function is called by:
  5374 ;;		_line_follower
  5375 ;;		_IR_init
  5376 ;;		_IR
  5377 ;;		_main
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381     0178                     _read_adc:	
  5382                           ;psect for function _read_adc
  5383                           
  5384                           
  5385                           ;incstack = 0
  5386                           ; Regs used in _read_adc: [wreg]
  5387                           ;read_adc@sensor stored from wreg
  5388     0178  00F5               	movwf	read_adc@sensor
  5389     0179                     l1944:
  5390                           
  5391                           ;./Line Follower.h: 33:  while(ADCON0bits.ADGO){};./Line Follower.h: 34:     ADC_val = A
      +                          DRESH << 8;;./Line Follower.h: 35:     ADC_val += ADRESL;;./Line Follower.h: 37: }
  5392     0179  0875               	movf	read_adc@sensor,w
  5393     017A  0021               	movlb	1	; select bank1
  5394     017B  009E               	movwf	30	;volatile
  5395     017C                     l1946:
  5396                           
  5397                           ;./Line Follower.h: 38: 
  5398     017C  1413               	bsf	19,0	;volatile
  5399                           
  5400                           ;./Line Follower.h: 39: void line_follower()
  5401     017D  300D               	movlw	13
  5402     017E  00F2               	movwf	??_read_adc
  5403     017F  30FC               	movlw	252
  5404     0180                     u1987:
  5405     0180  0B89               	decfsz	9,f
  5406     0181  2980               	goto	u1987
  5407     0182  0BF2               	decfsz	??_read_adc,f
  5408     0183  2980               	goto	u1987
  5409     0184                     l285:	
  5410                           ;./Line Follower.h: 41:     volatile unsigned int l_val, m_val, r_val;
  5411                           
  5412     0184  0021               	movlb	1	; select bank1
  5413     0185  1813               	btfsc	19,0	;volatile
  5414     0186  2988               	goto	u1611
  5415     0187  2989               	goto	u1610
  5416     0188                     u1611:
  5417     0188  2984               	goto	l285
  5418     0189                     u1610:
  5419     0189                     l1948:
  5420                           
  5421                           ;./Line Follower.h: 42: 
  5422     0189  080D               	movf	13,w	;volatile
  5423     018A  00F2               	movwf	??_read_adc
  5424     018B  01F3               	clrf	??_read_adc+1
  5425     018C  0872               	movf	??_read_adc,w
  5426     018D  00F3               	movwf	??_read_adc+1
  5427     018E  01F2               	clrf	??_read_adc
  5428     018F  0872               	movf	??_read_adc,w
  5429     0190  00F6               	movwf	read_adc@ADC_val	;volatile
  5430     0191  0873               	movf	??_read_adc+1,w
  5431     0192  00F7               	movwf	read_adc@ADC_val+1	;volatile
  5432                           
  5433                           ;./Line Follower.h: 43:     TRISAbits.TRISA0 = 0;
  5434     0193  080C               	movf	12,w	;volatile
  5435     0194  00F2               	movwf	??_read_adc
  5436     0195  01F3               	clrf	??_read_adc+1
  5437     0196  0872               	movf	??_read_adc,w
  5438     0197  07F6               	addwf	read_adc@ADC_val,f	;volatile
  5439     0198  0873               	movf	??_read_adc+1,w
  5440     0199  3DF7               	addwfc	read_adc@ADC_val+1,f	;volatile
  5441                           
  5442                           ;./Line Follower.h: 44:     TRISAbits.TRISA1 = 0;
  5443     019A  0877               	movf	read_adc@ADC_val+1,w	;volatile
  5444     019B  00F1               	movwf	?_read_adc+1
  5445     019C  0876               	movf	read_adc@ADC_val,w	;volatile
  5446     019D  00F0               	movwf	?_read_adc
  5447     019E                     l288:
  5448     019E  0008               	return
  5449     019F                     __end_of_read_adc:
  5450                           
  5451                           	psect	text26
  5452     0055                     __ptext26:	
  5453 ;; *************** function _ADC_init *****************
  5454 ;; Defined at:
  5455 ;;		line 19 in file "./Line Follower.h"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;		None
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;		None
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      void 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5473 ;;Total ram usage:        0 bytes
  5474 ;; Hardware stack levels used: 1
  5475 ;; This function calls:
  5476 ;;		Nothing
  5477 ;; This function is called by:
  5478 ;;		_main
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482     0055                     _ADC_init:	
  5483                           ;psect for function _ADC_init
  5484                           
  5485     0055                     l1996:	
  5486                           ;incstack = 0
  5487                           ; Regs used in _ADC_init: [wreg+status,2]
  5488                           
  5489                           
  5490                           ;./Line Follower.h: 21: 
  5491     0055  0020               	movlb	0	; select bank0
  5492     0056  1091               	bcf	17,1	;volatile
  5493                           
  5494                           ;./Line Follower.h: 22:     ADPCH = 0b1011;
  5495     0057  003E               	movlb	30	; select bank30
  5496     0058  1438               	bsf	56,0	;volatile
  5497     0059                     l1998:
  5498                           
  5499                           ;./Line Follower.h: 24: 
  5500     0059  3091               	movlw	145
  5501     005A  0021               	movlb	1	; select bank1
  5502     005B  0093               	movwf	19	;volatile
  5503                           
  5504                           ;./Line Follower.h: 25: int read_adc(char sensor)
  5505     005C  30FF               	movlw	255
  5506     005D  0098               	movwf	24	;volatile
  5507     005E                     l2000:
  5508                           
  5509                           ;./Line Follower.h: 26: {
  5510     005E  019A               	clrf	26	;volatile
  5511     005F                     l2002:
  5512                           
  5513                           ;./Line Follower.h: 27:  volatile unsigned int ADC_val;
  5514     005F  019C               	clrf	28	;volatile
  5515                           
  5516                           ;./Line Follower.h: 28: 
  5517     0060  303F               	movlw	63
  5518     0061  009D               	movwf	29	;volatile
  5519                           
  5520                           ;./Line Follower.h: 30:  ADCON0bits.ADGO = 1;
  5521     0062  300B               	movlw	11
  5522     0063  009E               	movwf	30	;volatile
  5523     0064                     l282:
  5524     0064  0008               	return
  5525     0065                     __end_of_ADC_init:
  5526     007E                     btemp	set	126	;btemp
  5527     007E                     wtemp0	set	126
  5528                           
  5529                           	psect	config
  5530                           
  5531                           ;Config register CONFIG1 @ 0x8007
  5532                           ;	External Oscillator mode selection bits
  5533                           ;	FEXTOSC = ECH, EC above 8MHz; PFM set to high power
  5534                           ;	Power-up default value for COSC bits
  5535                           ;	RSTOSC = HFINT32, HFINTOSC with OSCFRQ= 32 MHz and CDIV = 1:1
  5536                           ;	Clock Out Enable bit
  5537                           ;	CLKOUTEN = ON, CLKOUT function is enabled; FOSC/4 clock appears at OSC2
  5538                           ;	Clock Switch Enable bit
  5539                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5540                           ;	Fail-Safe Clock Monitor Enable bit
  5541                           ;	FCMEN = ON, FSCM timer enabled
  5542     8007                     	org	32775
  5543     8007  3E8F               	dw	16015
  5544                           
  5545                           ;Config register CONFIG3 @ 0x8009
  5546                           ;	WDT Period Select bits
  5547                           ;	WDTCPS = 0x1F, unprogrammed default
  5548                           ;	WDT operating mode
  5549                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5550                           ;	WDT Window Select bits
  5551                           ;	WDTCWS = 0x7, unprogrammed default
  5552                           ;	WDT input clock selector
  5553                           ;	WDTCCS = 0x7, unprogrammed default
  5554     8009                     	org	32777
  5555     8009  3F9F               	dw	16287

Data Sizes:
    Strings     0
    Constant    0
    Data        48
    BSS         87
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      80
    BANK1            80      0      71
    BANK2            80      0      20
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    UART_send@message	PTR volatile unsigned char  size(1) Largest target is 10
		 -> ore_type@11783(COMMON[7]), surface_exploration@11779(COMMON[10]), custom_laser@11771(COMMON[6]), transmit_repair@11765(COMMON[6]), 
		 -> request_repair@11762(COMMON[6]), transmit_shield_code@11759(BANK0[6]), shoot_laser@11756(BANK0[7]), set_laser@11752(BANK0[7]), 
		 -> servo@11748(COMMON[10]), motor@11741(BANK0[10]), user_data_send@11729(BANK0[6]), PCLS_info_send@11721(BANK0[6]), 


Critical Paths under _main in COMMON

    _main->_line_follower
    _main->_shield_code
    _shield_code->_user_data
    _transmit_shield_code->_UART_send
    _shoot_laser->_UART_send
    _set_laser->_UART_send
    _PCLS_info->_PCLS_info_send
    _PCLS_info_send->_UART_send
    _PCLS_info_receive->_rx_wait
    _line_follower->_motor
    _user_data->_user_data_receive
    _user_data_send->_UART_send
    _user_data_receive->___lwdiv
    _Vdrive->___awdiv
    _motor->_UART_send
    _UART_send->_tx_wait
    ___wmul->___awdiv
    ___awdiv->_abs
    _IR_init->_read_adc
    _IR->_read_adc

Critical Paths under _main in BANK0

    _main->_drive
    _PCLS_info->_PCLS_info_receive
    _line_follower->_motor
    _user_data->_user_data_receive
    _Vdrive->_motor

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24347
                           _ADC_init
                                 _IR
                            _IR_init
                          _UART_init
                              _drive
                      _line_follower
                           _read_adc
                        _shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _shield_code                                          2     2      0    9865
                                             12 COMMON     2     2      0
                          _PCLS_info
                          _set_laser
                        _shoot_laser
               _transmit_shield_code
                          _user_data
 ---------------------------------------------------------------------------------
 (2) _transmit_shield_code                                 7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _shoot_laser                                          9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _set_laser                                            9     9      0    1744
                                              8 COMMON     1     1      0
                                              0 BANK0      8     8      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _PCLS_info                                            0     0      0    1854
                  _PCLS_info_receive
                     _PCLS_info_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (3) _PCLS_info_receive                                   17    17      0     277
                                              2 COMMON     3     3      0
                                              0 BANK0     14    14      0
                            _rx_wait
 ---------------------------------------------------------------------------------
 (1) _line_follower                                        8     8      0    2975
                                             12 COMMON     2     2      0
                                             11 BANK0      6     6      0
                                _abs
                              _motor
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _drive                                                8     8      0    8400
                                             28 BANK0      8     8      0
                             _Vdrive
                             ___wmul
                          _user_data
 ---------------------------------------------------------------------------------
 (1) _user_data                                            1     1      0    2946
                                             11 COMMON     1     1      0
                  _user_data_receive
                     _user_data_send
 ---------------------------------------------------------------------------------
 (2) _user_data_send                                       7     7      0    1577
                                              8 COMMON     1     1      0
                                              0 BANK0      6     6      0
                          _UART_send
 ---------------------------------------------------------------------------------
 (2) _user_data_receive                                   31    31      0    1369
                                              8 COMMON     3     3      0
                                              0 BANK0     28    28      0
                            ___lwdiv
                            _rx_wait
 ---------------------------------------------------------------------------------
 (3) _rx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     770
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Vdrive                                              12     8      4    4836
                                             11 BANK0     12     8      4
                            ___awdiv
                             ___wmul
                                _abs
                              _motor
 ---------------------------------------------------------------------------------
 (2) _motor                                               15    12      3    2338
                                              8 COMMON     4     1      3
                                              0 BANK0     11    11      0
                          _UART_send
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) _UART_send                                            6     4      2    1553
                                              2 COMMON     6     4      2
                            _tx_wait
 ---------------------------------------------------------------------------------
 (4) _tx_wait                                              2     2      0      46
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     522
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 BANK0      6     2      4
                            ___awdiv (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     604
                                              4 COMMON     9     5      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR_init                                              0     0      0      46
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _IR                                                   4     4      0      69
                                              8 COMMON     4     4      0
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             8     6      2      46
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _IR
     _read_adc
   _IR_init
     _read_adc
   _UART_init
   _drive
     _Vdrive
       ___awdiv
         _abs (ARG)
       ___wmul
         ___awdiv (ARG)
         _abs (ARG)
       _abs
       _motor
         _UART_send
           _tx_wait
         _abs (ARG)
     ___wmul
     _user_data
       _user_data_receive
         ___lwdiv
         _rx_wait
       _user_data_send
         _UART_send
   _line_follower
     _abs
     _motor
     _read_adc
   _read_adc
   _shield_code
     _PCLS_info
       _PCLS_info_receive
         _rx_wait
       _PCLS_info_send
         _UART_send
     _set_laser
       _UART_send
     _shoot_laser
       _UART_send
     _transmit_shield_code
       _UART_send
     _user_data
   _user_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      47       7       88.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      14       9       25.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Apr 05 17:16:07 2024

                          l81 00A5                            l90 00CB                            l84 00B2  
                          l87 00BE                            l96 01C7                            _IR 0220  
                ___awdiv@sign 007A           ___wmul@multiplicand 0022     __end_of_user_data_receive 07CD  
                         ?_IR 0070                           l100 0074                           l130 0101  
                         l122 0054                           l115 0379                           l140 0784  
                         l108 011D                           l301 0475                           l310 04FF  
                         l302 048F                           l320 023D                           l312 0531  
                         l304 04AA                           l137 07CC                           l322 024D  
                         l234 0562                           l307 04CC                           l156 027F  
                         l148 0099                           l172 01F3                           l180 021F  
                         l317 0048                           l501 0177                           l245 062B  
                         l253 02F9                           l309 04ED                           l327 0337  
                         l248 0659                           l282 0064                           l291 042D  
                         l347 03C5                           l188 0139                           l285 0184  
                         l294 043C                           l288 019E                           l297 044B  
                         l652 0425                           l499 0163                           l962 00E5  
                         l779 02BB                           l959 00E5                           u970 00A4  
                         u971 00A3                           u980 00AA                           u981 00A9  
                         u990 00BD                           u991 00BC                           _abs 00CC  
                         _swA 004C                           _swB 004A                           _swC 0048  
                         _swD 0046                           wreg 0009                          ??_IR 0078  
                _BAUD1CONbits 011F                          l2000 005E                          l2002 005F  
                        l2010 0440                          ?_abs 0070                          l2020 046A  
                        l2012 0449                          l2004 0426                          l2030 048D  
                        l2022 046C                          l2014 044F                          l2006 0431  
                        l2040 04AB                          l2032 0490                          l2024 0474  
                        l2016 0458                          l2008 043A                          l2200 03BF  
                        l2050 04FA                          l2042 04B8                          l2034 049A  
                        l2026 047F                          l2018 0462                          l2060 003D  
                        l2052 050D                          l2044 04C0                          l2036 04A4  
                        l2028 0483                          l2070 0241                          l2062 0220  
                        l2054 0512                          l2046 04D9                          l2038 04A8  
                        l2064 0225                          l2056 052D                          l2048 04E1  
                        l2080 0308                          l2072 02FA                          l2066 022D  
                        l1602 00B3                          l2058 052F                          l2090 0321  
                        l2082 030F                          l2074 02FD                          l2068 0238  
                        l1620 01A0                          l1612 00C5                          l1604 00B7  
                        l1700 065F                          l2092 032C                          l2084 0313  
                        l2076 0300                          l2180 0383                          l1630 01B5  
                        l1622 01A2                          l1702 0667                          l1710 0677  
                        l2086 031A                          l2078 0305                          l2190 03A7  
                        l2182 038A                          l2174 037A                          l1800 0173  
                        l1624 01AA                          l1632 01B9                          l1640 0282  
                        l1608 00C3                          l1616 00CA                          l1720 06B3  
                        l1712 067D                          l1704 0670                          l2088 031E  
                        l2192 03AB                          l2184 0396                          l2176 037D  
                        l1810 03D1                          l1634 01C6                          l1650 0298  
                        l1642 0288                          l1730 0701                          l1722 06C7  
                        l1714 0692                          l2194 03AE                          l2186 039C  
                        l2178 0380                          l1820 03E2                          l1812 03D3  
                        l1804 03C7                          l1628 01AC                          l1652 02A7  
                        l1644 028B                          l1660 02B7                          l1740 073A  
                        l1732 0711                          l1724 06CE                          l1716 06A2  
                        l1708 0672                          l1900 0212                          l2196 03B1  
                        l2188 03A4                          l1830 03F8                          l1822 03E8  
                        l1814 03D7                          l1806 03C8                          l1590 00AA  
                        l1910 0540                          l1654 02AB                          l1646 0290  
                        l1638 0280                          l1750 076F                          l1742 0744  
                        l1734 0718                          l1726 06D8                          l1718 06A9  
                        l1670 0338                          l1902 011E                          l2198 03B8  
                        l1832 0407                          l1824 03EB                          l1840 0417  
                        l1816 03DC                          l1808 03CC                          l1584 009A  
                        l1760 0250                          l1920 0595                          l1912 054E  
                        l1656 02AC                          l1648 0294                          l1752 0772  
                        l1744 0755                          l1736 0722                          l1728 06DC  
                        l1672 033B                          l1664 0102                          l1904 011E  
                        l1842 041C                          l1834 040B                          l1826 03F0  
                        l1818 03E0                          l1594 00AC                          l1586 009E  
                        l1770 0265                          l1762 0250                          l1930 05F1  
                        l1922 05A2                          l1914 0567                          l1658 02B1  
                        l1754 077B                          l1746 075C                          l1738 0733  
                        l1690 00E6                          l1682 0350                          l1674 033D  
                        l1666 0102                          l1906 012C                          l1844 0421  
                        l1836 040C                          l1828 03F4                          l1780 026E  
                        l1772 0267                          l1764 025E                          l1940 063C  
                        l1932 0616                          l1924 05B0                          l1916 0574  
                        l1908 0532                          l1756 0780                          l1748 0766  
                        l1692 00E6                          l1860 0092                          l1676 0345  
                        l1684 0355                          l1668 0110                          l1852 004C  
                        l1838 0411                          l1790 0158                          l1598 00B1  
                        l1782 0270                          l1774 0269                          l1766 0261  
                        l1942 063F                          l1934 0624                          l1926 05D5  
                        l1918 0588                          l1694 00F4                          l1854 0087  
                        l1686 035B                          l1678 034E                          l1870 01DD  
                        l1862 01CA                          l1944 0179                          l1952 0065  
                        l1792 015B                          l1784 0272                          l1776 026A  
                        l1768 0263                          l1936 0628                          l1928 05E3  
                        l1696 065A                          l1848 0049                          l1880 01E6  
                        l1872 01DF                          l1864 01CA                          l1946 017C  
                        l1954 006F                          l1794 015F                          l1786 00CC  
                        l1778 026C                          l1938 0638                          l1698 065D  
                        l1858 008A                          l1874 01E1                          l1866 01D8  
                        l1890 0209                          l1882 01F6                          l1948 0189  
                        l1796 0168                          l1788 00D9                          l1876 01E3  
                        l1868 01DB                          l1892 020B                          l1884 01F6  
                        l1798 016D                          l1990 02D2                          l1982 02BC  
                        l1878 01E4                          l1894 020D                          l1886 0204  
                        l1992 02DE                          l1984 02BF                          l1896 020F  
                        l1888 0207                          l1994 02EE                          l1986 02C9  
                        l1898 0210                          l1996 0055                          l1988 02CE  
                        l1998 0059                          u1000 00C3                          u1001 00C2  
                        u1010 01AA                          u1011 01A9                          u1020 01C6  
                        u1100 010C                          u1021 01C5                          u1030 0288  
                        u1110 011D                          u1031 0287                          u1111 011C  
                        u1200 074E                          u1120 0345                          u1025 01C2  
                        u1201 074C                          u1121 0344                          u1050 0298  
                        u1210 074F                          u1130 035B                          u1051 0297  
                        u1131 035A                          u1220 076F                          u1140 00F0  
                        u1045 028C                          u1221 076E                          u1070 02A7  
                        u1230 077B                          u1150 0101                          u1071 02A6  
                        u1231 077A                          u1151 0100                          u1320 0173  
                        u1240 079F                          u1160 0667                          u1321 0172  
                        u1305 0164                          u1065 0299                          u1241 079D  
                        u1161 0666                          u1410 0417                          u1330 03CC  
                        u1090 02B7                          u1250 07A0                          u1170 067D  
                        u1411 0416                          u1331 03CB                          u1315 0169  
                        u1091 02B6                          u1075 02A3                          u1171 067C  
                        u1420 041C                          u1340 03D7                          u1260 025A  
                        u1180 072C                          u1500 0139                          u1421 041B  
                        u1405 040D                          u1341 03D6                          u1085 02AD  
                        u1181 072A                          u1501 0138                          u1350 03E8  
                        u1270 027F                          u1510 0540                          u1190 072D  
                        u1430 0054                          u1351 03E7                          u1271 027E  
                        u1511 053F                          u1431 0053                          u1280 00D9  
                        u1600 0638                          u1520 054E                          u1440 0092  
                        u1281 00D8                          u1601 0637                          u1521 054D  
                        u1441 0091                          u1610 0189                          u1370 03F8  
                        u1290 015F                          u1530 0567                          u1450 01D4  
                        u1611 0188                          u1371 03F7                          u1291 015E  
                        u1531 0566                          u1515 053C                          u1540 0574  
                        u1700 049A                          u1460 01F3                          u1365 03EC  
                        u1285 00D5                          u1605 0634                          u1541 0573  
                        u1525 054A                          u1701 0499                          u1461 01F2  
                        u1390 0407                          u1550 05A2                          u1710 04B8  
                        u1470 0200                          u1391 0406                          u1551 05A1  
                        u1711 04B7                          u1560 05B0                          u1640 02C9  
                        u1720 04D9                          u1480 021F                          u1385 03F9  
                        u1561 05AF                          u1545 0570                          u1641 02C8  
                        u1721 04D8                          u1705 0496                          u1481 021E  
                        u1570 05E3                          u1730 04FA                          u1650 0431  
                        u1490 0128                          u1395 0403                          u1571 05E2  
                        u1555 059E                          u1731 04F9                          u1715 04B4  
                        u1651 0430                          u1580 05F1                          u1740 050D  
                        u1660 0440                          u1900 03A3                          u1581 05F0  
                        u1565 05AC                          u1741 050C                          u1725 04D5  
                        u1661 043F                          u1901 03A2                          u1750 0238  
                        u1590 0624                          u1670 044F                          u1910 03B8  
                        u1751 0237                          u1591 0623                          u1575 05DF  
                        u1735 04F6                          u1671 044E                          u1911 03B7  
                        u1680 0462                          u1760 0305                          u1920 03BF  
                        u1585 05ED                          u1745 0509                          u1681 0461  
                        u1761 0304                          u1921 03BE                          u1690 047F  
                        u1770 030F                          u1755 0234                          u1595 0620  
                        u1691 047E                          u1771 030E                          u1685 045E  
                        u1695 047B                          u1937 0316                          u1890 038A  
                        u1947 0324                          u1891 0389                          u1957 0331  
                        u1967 0095                          u1977 0246                          u1987 0180  
                        abs@a 0070                          _fast 0064                          _main 037A  
                        _serA 0056                          _lpin 006E                          _potA 0044  
                        _potB 00C7                          _mpin 006D                          _rpin 006C  
                        fsr0h 0005                          fsr1h 0007                          indf0 0000  
                        fsr0l 0004                          _slow 0062                          indf1 0001  
                        fsr1l 0006                          btemp 007E               __end_of_IR_init 0049  
                        start 0002              __end_of_ADC_init 0065  __end_of_transmit_shield_code 013A  
                       ??_abs 0072     surface_exploration@F11778 0120                 shoot_laser@en 0020  
                       _ADACQ 009D                         ?_main 0070                         _ADCLK 0098  
                       _ADPCH 009E                         _ADREF 009A               __end_of___awdiv 0426  
                       _ADPRE 009C               ___awdiv@divisor 0074               __end_of___lwdiv 02BC  
             ___awdiv@counter 0079                         _RCREG 0119                         _TXREG 011A  
                       _l_dir 0059                         _l_vec 006A                         _drive 02BC  
                       _r_dir 0058                         _r_vec 0068                         _motor 024E  
                       status 0003               __end_of_rx_wait 00CC                         wtemp0 007E  
             __end_of_tx_wait 00B3               __initialization 07CD                  __end_of_main 03C7  
                      ??_main 007E           PCLS_info_send@11721 0020              ??_PCLS_info_send 0078  
                      _ADCON0 0093                        ?_drive 0070                        _ADRESH 008D  
                      _ADRESL 008C                     ??_IR_init 0078              ___awdiv@dividend 0076  
                      ?_motor 0078                        _RC6PPS 0F26             __end_of_PCLS_info 0055  
                ?_shield_code 0070                        _Vdrive 0532                        ___wmul 0158  
           __end_of_UART_init 0075                     ??___awdiv 0078             __end_of_UART_send 01C8  
                      _health 00C5                     ??___lwdiv 0074              __end_of_read_adc 019F  
                      _teamID 005D              ___awdiv@quotient 007B                        _joy_lx 004E  
                      _joy_ly 0050                        _joy_rx 0054                        _joy_ry 0052  
                      drive@x 003E                        drive@y 0040                     ?_ADC_init 0070  
           _PCLS_info_receive 0338                     ??_rx_wait 0070                     ??_tx_wait 0070  
                rx_wait@count 0070                  ?_shoot_laser 0070            ?_PCLS_info_receive 0070  
        _transmit_shield_code 011E             shoot_laser@F11755 00B1                     IR@ADC_val 007A  
     __end_of__initialization 07FD           ??_PCLS_info_receive 0072                __pcstackCOMMON 0070  
          custom_laser@F11770 00BF                  __pidataBANK0 0075                  __pidataBANK1 013A  
        request_repair@F11761 00CF                 __end_of_drive 02FA                 __end_of_motor 0280  
                  __end_of_IR 024E     __end_of_PCLS_info_receive 037A                 _line_follower 0426  
                  ??_ADC_init 0070                       ??_drive 003C         ?_transmit_shield_code 0070  
                     ??_motor 007B                    __pbssBANK0 0044                    __pbssBANK1 00A0  
                  __pbssBANK2 0120          PCLS_info_send@F11720 00E1                    __pmaintext 037A  
                     ?_Vdrive 002B                       ?___wmul 0020                ?_line_follower 0070  
              ore_type@F11782 00AA                _user_data_send 00E6                       _IR_base 005E  
                     _IR_init 003D                  tx_wait@count 0070                     ?_read_adc 0070  
             Vdrive@right_dir 0032                   motor@F11740 00A0                       Vdrive@x 002D  
                     Vdrive@y 002B                       ___awdiv 03C7                       ___lwdiv 0280  
                     __ptext1 02FA                       __ptext2 011E                       __ptext3 01F4  
                     __ptext4 01C8                       __ptext5 0049                       __ptext6 0102  
                     __ptext7 0338                       __ptext8 0426                       __ptext9 02BC  
             read_adc@ADC_val 0076                set_laser@11752 0021        __end_of_user_data_send 0102  
   transmit_shield_code@11759 0020                   set_laser@en 0020                   servo@F11747 012A  
      ??_transmit_shield_code 0078                       _rx_wait 00B3                       clrloop0 0032  
                     _tx_wait 009A          end_of_initialization 07FD                       init_ram 0037  
                  ??_read_adc 0072                       initloop 0038             __end_of_set_laser 01F4  
  transmit_shield_code@F11758 00D5                     _PCLS_info 0049             __end_of_user_data 009A  
          user_data_receive@j 003B            user_data_receive@r 0020            user_data_receive@s 003A  
                   _UART_init 0065                     _UART_send 019F               ??_line_follower 007C  
             ?_user_data_send 0070                     _TRISAbits 0011                    ?_PCLS_info 0070  
              __end_of_Vdrive 065A                __end_of___wmul 0178                    ?_UART_init 0070  
                  ?_UART_send 0072           start_initialization 07CD                   __end_of_abs 00E6  
          PCLS_info_receive@j 002D            PCLS_info_receive@r 0020            PCLS_info_receive@s 002C  
                    ??_Vdrive 002F                      ??___wmul 007D                   __pdataBANK0 005E  
                 __pdataBANK1 00C9              shoot_laser@11756 0021                     ___latbits 0002  
               __pcstackBANK0 0020              UART_send@message 0076                      ?_IR_init 0070  
                 ??_PCLS_info 0079              ___lwdiv@dividend 0072                      ?___awdiv 0074  
                    ?___lwdiv 0070                Vdrive@left_dir 0031                   ??_UART_init 0070  
                 ??_UART_send 0074                    motor@11741 0021                      _ADC_init 0055  
            ___lwdiv@quotient 0075                      ?_rx_wait 0070                      ?_tx_wait 0070  
               ??_shield_code 007C                ___wmul@product 0024                      _LATAbits 0016  
                   clear_ram0 0031                    UART_send@i 0077                      _PIR1bits 070D  
                    _PIR3bits 070F                     _set_laser 01C8                     _speed_inc 0060  
            ??_user_data_send 0078                    _ADCON0bits 0093                read_adc@sensor 0075  
           ___wmul@multiplier 0020                     _user_data 0087                 ??_shoot_laser 0078  
              _PCLS_info_send 0102                   _auto_switch 0057                    ?_set_laser 0070  
         __end_of_shield_code 0338            line_follower@l_val 002B            line_follower@m_val 002D  
          line_follower@r_val 002F                   _SP1BRGLbits 011B                    _ANSELAbits 0F38  
                  _ANSELCbits 0F4E                   _line_colour 0066                    ?_user_data 0070  
       __end_of_line_follower 0532                 UART_send@size 0072               ___lwdiv@divisor 0070  
             ___lwdiv@counter 0077                      __ptext10 0087                      __ptext11 00E6  
                    __ptext20 0158                      __ptext12 065A                      __ptext21 03C7  
                    __ptext13 00B3                      __ptext22 0065                      __ptext14 0280  
                    __ptext23 003D                      __ptext15 0532                      __ptext24 0220  
                    __ptext16 024E                      __ptext25 0178                      __ptext17 019F  
                    __ptext26 0055                      __ptext18 009A                      __ptext19 00CC  
      __end_of_PCLS_info_send 011E                 Vdrive@l_motor 0033                 Vdrive@r_motor 0035  
                    _read_adc 0178           __end_of_shoot_laser 0220                     motor@dirA 0020  
                   motor@dirB 0079                     motor@pwmA 0078                     motor@pwmB 007A  
             set_laser@F11751 00B8                      _playerID 005C                    _RC1STAbits 011D  
                    _starting 006F                      drive@dir 0042                   _repair_flag 005A  
        user_data_send@F11728 00DB               ?_PCLS_info_send 0070                   _shield_code 02FA  
                 _shield_flag 005B                   ??_set_laser 0078           user_data_send@11729 0020  
           _user_data_receive 065A                   ??_user_data 007B            ?_user_data_receive 0070  
                  _TX1STAbits 011E         transmit_repair@F11764 00C9                   _shoot_laser 01F4  
         ??_user_data_receive 0078  
